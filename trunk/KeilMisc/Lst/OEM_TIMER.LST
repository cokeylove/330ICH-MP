C51 COMPILER V8.12   OEM_TIMER                                                             07/28/2018 12:03:58 PAGE 1   


C51 COMPILER V8.12, COMPILATION OF MODULE OEM_TIMER
OBJECT MODULE PLACED IN Code\Oem\OEM_TIMER.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE Code\Oem\OEM_TIMER.C LA WL(1) CD OT(9,SIZE) NOAREGS OR INCDIR(.\Code\CORE\I
                    -NCLUDE\;.\Code\OEM\INCLUDE\;.\Code\CHIP\INCLUDE\)

line level    source

   1          /*-----------------------------------------------------------------------------
   2           * TITLE: OEM_TIMER.C
   3           *
   4           * Author : Dino
   5           *
   6           * Note : These functions are reference only.
   7           *---------------------------------------------------------------------------*/
   8          
   9          #include <CORE_INCLUDE.H>
  10          #include <OEM_INCLUDE.H>
  11          
  12          //----------------------------------------------------------------------------
  13          // Enable internal watch dog and waiting EC reset
  14          //----------------------------------------------------------------------------
  15          void InternalWDTNow(void)
  16          {
  17   1              CKCON = 0x00;               // set 26 bit counter // bit7-6 00=14ms,01=113ms, 10=911ms, 11(1/9.2MHz)*2'26=7.2S
  18   1              WDTCON|=0x01;   // WDTRST = 1 Reset watch dog timer.
  19   1              WDTCON|=0x02;   // WDTEN  = 1 Enable watch dog.
  20   1              while(1);       // Wait for watch dog time-out
  21   1      }
  22          
  23          //----------------------------------------------------------------------------
  24          // Enable internal watch dog
  25          //----------------------------------------------------------------------------
  26          void EnableInternalWDT(void)
  27          {
  28   1              CKCON |= 0xC0;              // set 26 bit counter // bit7-6 00=14ms,01=113ms, 10=911ms, 11(1/9.2MHz)*2'26=7.2S
  29   1              WDTRST = 1;                             // reset internal watch dog
  30   1              WDTEB = 1;                              // enable internal watch dog
  31   1      }
  32          
  33          //----------------------------------------------------------------------------
  34          // Disable internal watch dog
  35          //----------------------------------------------------------------------------
  36          void DisableInternalWDT(void)
  37          {
  38   1              WDTEB = 0;                              // Disable internal watch dog
  39   1      }
  40          
  41          //----------------------------------------------------------------------------
  42          // Disable internal watch dog
  43          //----------------------------------------------------------------------------
  44          void ResetInternalWDT(void)
  45          {
  46   1              WDTRST = 1;                             // Reset internal watch dog counter
  47   1      }
  48          //Modify system auto on follow TBG project.
  49          void SystemAutoOn(void)
  50          {
  51   1              if( (AutoTimer&0x7F) == 0x01 )
  52   1              {
  53   2                      AutoTimer--;
  54   2                      if( IS_MASK_SET(AutoTimer,b7AutoBootTm) )
C51 COMPILER V8.12   OEM_TIMER                                                             07/28/2018 12:03:58 PAGE 2   

  55   2                      {
  56   3                              AutoTimer = 0;  // Clear Auto timer.
  57   3                              PWSeqStep = 1;
  58   3                      PowSeqDelay = 0x00;
  59   3                              SysPowState=SYSTEM_S5_S0;
  60   3                      }
  61   2                      else
  62   2                      {
  63   3                              if ( SystemIsS5 || SystemIsDSX )
  64   3                              { AutoTimer = 0x83; }
  65   3                              else
  66   3                              {
  67   4                                      SET_MASK(SysStatus,ERR_ShuntDownFlag);
  68   4                                      ProcessSID(BOOTFAIL_ID);
  69   4      #if !EN_PwrSeqTest        
  70   4                                      AutoTimer = 0x83;
  71   4                                      PWSeqStep = 1;
  72   4                                      PowSeqDelay = 0x00;
  73   4                                      SysPowState=SYSTEM_S0_S5;
  74   4      #endif        
  75   4                              }
  76   3                      }
  77   2              }
  78   1              else
  79   1              {
  80   2                      if( (AutoTimer&0x7F) > 0x01 )
  81   2                      {
  82   3                              if( IS_MASK_SET(AutoTimer,b7AutoBootTm) )
  83   3                              {
  84   4                                      if ( SystemIsS5 || SystemIsDSX )
  85   4                                      { AutoTimer--; }
  86   4                              }
  87   3                              else
  88   3                              { AutoTimer--; }
  89   3                      }
  90   2              }
  91   1      }
  92          // Modify system auto on follow TBG project for system on/off tool.
  93          /* ========================================================================
  94           * Function Name : ChkTimeScale
  95           * Time count for 1 byte,max 2.55 Second
  96           * Input : PORT_BYTE_PNTR countadr      Counter pointer
  97           *                 BYTE timeout                         Timer scale
  98           * Output: FLAG TRUE     Timer count to timer scale
  99           *                      FALSE    Timer don't count to timer scale
 100           * ======================================================================== */
 101          FLAG ChkTimeScale(PORT_BYTE_PNTR countadr, BYTE timeout)
 102          {
 103   1              #if SW_ChkTimeScale
 104   1              if( ( *countadr )++ >= timeout )
 105   1              {
 106   2                      ( *countadr ) = 0;
 107   2                      return(TRUE);
 108   2              }
 109   1              return(FALSE);
 110   1              #endif  // End of SW_ChkTimeScale
 111   1      }
 112          
 113          void EscScanCode(void)
 114          {
 115   1              if ( IS_MASK_SET(CombineKeyStatus, b1Win_Q_Esc) )
 116   1              {
C51 COMPILER V8.12   OEM_TIMER                                                             07/28/2018 12:03:58 PAGE 3   

 117   2                      EscScanCodeDelay--;
 118   2                      if (EscScanCodeDelay == 30)
 119   2                      {
 120   3                              e0_prefix_code(0x1F,MAKE_EVENT);        // Win key delay 150ms
 121   3                              simple_code(0x15,MAKE_EVENT);           // "Q" key
 122   3                              simple_code(0x15,BREAK_EVENT);
 123   3                              e0_prefix_code(0x1F,BREAK_EVENT);
 124   3                      }
 125   2                      if (EscScanCodeDelay == 0)
 126   2                      {
 127   3                              CLR_MASK(CombineKeyStatus, b1Win_Q_Esc);
 128   3                              simple_code(0x76,MAKE_EVENT);           // "ESC" key
 129   3                              simple_code(0x76,BREAK_EVENT);
 130   3                      }
 131   2              }
 132   1      }
 133          
C51 COMPILER V8.12   OEM_TIMER                                                             07/28/2018 12:03:58 PAGE 4   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION Com001B (BEGIN)
0000         L?0028:
0000 900000      E     MOV     DPTR,#PWSeqStep
0003 F0                MOVX    @DPTR,A
0004 E4                CLR     A
0005 900000      E     MOV     DPTR,#PowSeqDelay
0008 F0                MOVX    @DPTR,A
0009 A3                INC     DPTR
000A F0                MOVX    @DPTR,A
000B 900000      E     MOV     DPTR,#SysPowState
000E 22                RET     
             ; FUNCTION Com001B (END)

             ; FUNCTION InternalWDTNow (BEGIN)
                                           ; SOURCE LINE # 15
                                           ; SOURCE LINE # 16
                                           ; SOURCE LINE # 17
0000 E4                CLR     A
0001 F58E              MOV     CKCON,A
                                           ; SOURCE LINE # 18
0003 43D801            ORL     WDTCON,#01H
                                           ; SOURCE LINE # 19
0006 43D802            ORL     WDTCON,#02H
0009         ?C0001:
                                           ; SOURCE LINE # 20
0009 80FE              SJMP    ?C0001
             ; FUNCTION InternalWDTNow (END)

             ; FUNCTION EnableInternalWDT (BEGIN)
                                           ; SOURCE LINE # 26
                                           ; SOURCE LINE # 27
                                           ; SOURCE LINE # 28
0000 438EC0            ORL     CKCON,#0C0H
                                           ; SOURCE LINE # 29
0003 D2D8              SETB    WDTRST
                                           ; SOURCE LINE # 30
0005 D2D9              SETB    WDTEB
                                           ; SOURCE LINE # 31
0007 22                RET     
             ; FUNCTION EnableInternalWDT (END)

             ; FUNCTION DisableInternalWDT (BEGIN)
                                           ; SOURCE LINE # 36
                                           ; SOURCE LINE # 37
                                           ; SOURCE LINE # 38
0000 C2D9              CLR     WDTEB
                                           ; SOURCE LINE # 39
0002 22                RET     
             ; FUNCTION DisableInternalWDT (END)

             ; FUNCTION ResetInternalWDT (BEGIN)
                                           ; SOURCE LINE # 44
                                           ; SOURCE LINE # 45
                                           ; SOURCE LINE # 46
0000 D2D8              SETB    WDTRST
                                           ; SOURCE LINE # 47
0002 22                RET     
             ; FUNCTION ResetInternalWDT (END)

C51 COMPILER V8.12   OEM_TIMER                                                             07/28/2018 12:03:58 PAGE 5   

             ; FUNCTION SystemAutoOn (BEGIN)
                                           ; SOURCE LINE # 49
                                           ; SOURCE LINE # 50
                                           ; SOURCE LINE # 51
0000 900000      E     MOV     DPTR,#AutoTimer
0003 E0                MOVX    A,@DPTR
0004 547F              ANL     A,#07FH
0006 6401              XRL     A,#01H
0008 703F              JNZ     ?C0007
                                           ; SOURCE LINE # 52
                                           ; SOURCE LINE # 53
000A E0                MOVX    A,@DPTR
000B 14                DEC     A
000C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 54
000D E0                MOVX    A,@DPTR
000E 30E70A            JNB     ACC.7,?C0008
                                           ; SOURCE LINE # 55
                                           ; SOURCE LINE # 56
0011 E4                CLR     A
0012 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 57
0013 04                INC     A
                                           ; SOURCE LINE # 58
                                           ; SOURCE LINE # 59
0014 120000      R     LCALL   L?0028
0017 7450              MOV     A,#050H
0019 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 60
001A 22                RET     
001B         ?C0008:
                                           ; SOURCE LINE # 62
                                           ; SOURCE LINE # 63
001B 900000      E     MOV     DPTR,#SysPowState
001E E0                MOVX    A,@DPTR
001F 6455              XRL     A,#055H
0021 6004              JZ      ?C0011
0023 E0                MOVX    A,@DPTR
0024 B46607            CJNE    A,#066H,?C0010
0027         ?C0011:
                                           ; SOURCE LINE # 64
0027 900000      E     MOV     DPTR,#AutoTimer
002A 7483              MOV     A,#083H
002C F0                MOVX    @DPTR,A
002D 22                RET     
002E         ?C0010:
                                           ; SOURCE LINE # 66
                                           ; SOURCE LINE # 67
002E 900000      E     MOV     DPTR,#SysStatus
0031 E0                MOVX    A,@DPTR
0032 4402              ORL     A,#02H
0034 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 68
0035 7F08              MOV     R7,#08H
0037 120000      E     LCALL   _ProcessSID
                                           ; SOURCE LINE # 70
003A 900000      E     MOV     DPTR,#AutoTimer
003D 7483              MOV     A,#083H
003F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 71
0040 7401              MOV     A,#01H
                                           ; SOURCE LINE # 72
C51 COMPILER V8.12   OEM_TIMER                                                             07/28/2018 12:03:58 PAGE 6   

                                           ; SOURCE LINE # 73
0042 120000      R     LCALL   L?0028
0045 7405              MOV     A,#05H
0047 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 75
                                           ; SOURCE LINE # 76
                                           ; SOURCE LINE # 77
0048 22                RET     
0049         ?C0007:
                                           ; SOURCE LINE # 79
                                           ; SOURCE LINE # 80
0049 900000      E     MOV     DPTR,#AutoTimer
004C E0                MOVX    A,@DPTR
004D 547F              ANL     A,#07FH
004F D3                SETB    C
0050 9401              SUBB    A,#01H
0052 4018              JC      ?C0019
                                           ; SOURCE LINE # 81
                                           ; SOURCE LINE # 82
0054 E0                MOVX    A,@DPTR
0055 30E70E            JNB     ACC.7,?C0015
                                           ; SOURCE LINE # 83
                                           ; SOURCE LINE # 84
0058 900000      E     MOV     DPTR,#SysPowState
005B E0                MOVX    A,@DPTR
005C 6455              XRL     A,#055H
005E 6006              JZ      ?C0026
0060 E0                MOVX    A,@DPTR
0061 B46608            CJNE    A,#066H,?C0019
0064         ?C0017:
                                           ; SOURCE LINE # 85
                                           ; SOURCE LINE # 86
0064 8000              SJMP    ?C0026
0066         ?C0015:
                                           ; SOURCE LINE # 88
0066         ?C0026:
0066 900000      E     MOV     DPTR,#AutoTimer
0069 E0                MOVX    A,@DPTR
006A 14                DEC     A
006B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 89
                                           ; SOURCE LINE # 90
                                           ; SOURCE LINE # 91
006C         ?C0019:
006C 22                RET     
             ; FUNCTION SystemAutoOn (END)

             ; FUNCTION _ChkTimeScale (BEGIN)
                                           ; SOURCE LINE # 101
;---- Variable 'countadr' assigned to Register 'DPTR' ----
0000 8F82              MOV     DPL,R7
0002 8E83              MOV     DPH,R6
;---- Variable 'timeout' assigned to Register 'R5' ----
                                           ; SOURCE LINE # 102
                                           ; SOURCE LINE # 104
0004 E0                MOVX    A,@DPTR
0005 FF                MOV     R7,A
0006 04                INC     A
0007 F0                MOVX    @DPTR,A
0008 EF                MOV     A,R7
0009 C3                CLR     C
000A 9D                SUBB    A,R5
C51 COMPILER V8.12   OEM_TIMER                                                             07/28/2018 12:03:58 PAGE 7   

000B 4005              JC      ?C0020
                                           ; SOURCE LINE # 105
                                           ; SOURCE LINE # 106
000D E4                CLR     A
000E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 107
000F 7F01              MOV     R7,#01H
0011 22                RET     
                                           ; SOURCE LINE # 108
0012         ?C0020:
                                           ; SOURCE LINE # 109
0012 7F00              MOV     R7,#00H
                                           ; SOURCE LINE # 111
0014         ?C0021:
0014 22                RET     
             ; FUNCTION _ChkTimeScale (END)

             ; FUNCTION EscScanCode (BEGIN)
                                           ; SOURCE LINE # 113
                                           ; SOURCE LINE # 114
                                           ; SOURCE LINE # 115
0000 900000      E     MOV     DPTR,#CombineKeyStatus
0003 E0                MOVX    A,@DPTR
0004 30E139            JNB     ACC.1,?C0025
                                           ; SOURCE LINE # 116
                                           ; SOURCE LINE # 117
0007 900000      E     MOV     DPTR,#EscScanCodeDelay
000A E0                MOVX    A,@DPTR
000B 14                DEC     A
000C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 118
000D E0                MOVX    A,@DPTR
000E B41E14            CJNE    A,#01EH,?C0023
                                           ; SOURCE LINE # 119
                                           ; SOURCE LINE # 120
0011 E4                CLR     A
0012 FD                MOV     R5,A
0013 7F1F              MOV     R7,#01FH
0015 120000      E     LCALL   _e0_prefix_code
                                           ; SOURCE LINE # 121
0018 E4                CLR     A
0019 FD                MOV     R5,A
                                           ; SOURCE LINE # 122
001A 120000      R     LCALL   L?0029
                                           ; SOURCE LINE # 123
001D 120000      R     LCALL   L?0029
0020 7F1F              MOV     R7,#01FH
0022 120000      E     LCALL   _e0_prefix_code
                                           ; SOURCE LINE # 124
0025         ?C0023:
                                           ; SOURCE LINE # 125
0025 900000      E     MOV     DPTR,#EscScanCodeDelay
0028 E0                MOVX    A,@DPTR
0029 7015              JNZ     ?C0025
                                           ; SOURCE LINE # 126
                                           ; SOURCE LINE # 127
002B 900000      E     MOV     DPTR,#CombineKeyStatus
002E E0                MOVX    A,@DPTR
002F 54FD              ANL     A,#0FDH
0031 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 128
0032 E4                CLR     A
C51 COMPILER V8.12   OEM_TIMER                                                             07/28/2018 12:03:58 PAGE 8   

0033 FD                MOV     R5,A
0034 7F76              MOV     R7,#076H
0036 120000      E     LCALL   _simple_code
                                           ; SOURCE LINE # 129
0039 7D01              MOV     R5,#01H
003B 7F76              MOV     R7,#076H
003D 120000      E     LCALL   _simple_code
                                           ; SOURCE LINE # 130
                                           ; SOURCE LINE # 131
                                           ; SOURCE LINE # 132
0040         ?C0025:
0040 22                RET     
0041         L?0029:
0041 7F15              MOV     R7,#015H
0043 120000      E     LCALL   _simple_code
0046 7D01              MOV     R5,#01H
0048 22                RET     
             ; FUNCTION EscScanCode (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    243    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)

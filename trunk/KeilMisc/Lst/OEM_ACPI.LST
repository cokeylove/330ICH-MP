C51 COMPILER V8.12   OEM_ACPI                                                              07/28/2018 12:03:49 PAGE 1   


C51 COMPILER V8.12, COMPILATION OF MODULE OEM_ACPI
OBJECT MODULE PLACED IN Code\OEM\OEM_ACPI.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE Code\OEM\OEM_ACPI.C LA WL(1) CD OT(9,SIZE) NOAREGS OR INCDIR(.\Code\CORE\IN
                    -CLUDE\;.\Code\OEM\INCLUDE\;.\Code\CHIP\INCLUDE\)

line level    source

   1          /*-----------------------------------------------------------------------------
   2           * TITLE: OEM_ACPI.C
   3           *
   4           * Author : Dino
   5           *
   6           * Note : These functions are reference only.
   7           *        Please follow your project software specification to do some modification.
   8           *---------------------------------------------------------------------------*/
   9          
  10          #include <CORE_INCLUDE.H>
  11          #include <OEM_INCLUDE.H>
  12          
  13          //----------------------------------------------------------------------------
  14          // The hook function of 62 port data
  15          //  Note :
  16          //  PM1Step != 0x00 is necessary.
  17          //----------------------------------------------------------------------------
  18          #pragma ot(8, speed)    
  19          void Hook_62Port(BYTE PM1Cmd)
  20          {
  21   1              BYTE i;
  22   1      
  23   1              switch(PM1Cmd)
  24   1              {
  25   2              case 0x40:
  26   2                      Cmd_40(PM1Data);
  27   2                      break;
  28   2              case 0x41:
  29   2                      if(PM1Data==0xA1) Cmd_41_A1(0x62);
  30   2                      break;
  31   2              case 0x42:
  32   2                      Cmd_42(PM1Data);
  33   2                      break;
  34   2              case 0x43:
  35   2                      Cmd_43(0x62,PM1Data);
  36   2                      break;
  37   2              case 0x45:
  38   2                      Cmd_45(0x62,PM1Data);
  39   2                      break;
  40   2              case 0x46:
  41   2                      Cmd_46(0x62,PM1Data); //Add 68/6C interface.
  42   2                      break;
  43   2              case 0x47:
  44   2                      Cmd_47(0x62,PM1Data);
  45   2                      break;
  46   2              case 0x49:
  47   2                      break;
  48   2              case 0x4B:
  49   2                      if (PM1Step == 0x04)
  50   2                      {
  51   3                              i = PM1Data;
  52   3                              break;
  53   3                      }
  54   2                      if (PM1Step == 0x03)
C51 COMPILER V8.12   OEM_ACPI                                                              07/28/2018 12:03:49 PAGE 2   

  55   2                      {
  56   3                              eEEPROMAddrsss = PM1Data;
  57   3                              break;
  58   3                      }
  59   2                      if (PM1Step == 0x02)
  60   2                      {
  61   3                              eEEPROMBank = PM1Data;
  62   3                              break;
  63   3                      }
  64   2                      if (PM1Step == 0x01)
  65   2                      {
  66   3                              eEEPROMData     = PM1Data;
  67   3                  SET_MASK(LENOVOPMFW_Temp,EEPROM_Token);
  68   3                              Update_EEPROMMark();
  69   3                  CLEAR_MASK(LENOVOPMFW_Temp,EEPROM_Token);
  70   3                              Data2PortDirect(0x62, 0x00);  
  71   3                      }
  72   2                      break;
  73   2      
  74   2              case 0x4C:
  75   2                      if (PM1Step == 0x03)
  76   2                      {
  77   3                              i = PM1Data;
  78   3                              break;
  79   3                      }
  80   2                      if (PM1Step == 0x02)
  81   2                      {
  82   3                              eEEPROMAddrsss = PM1Data;
  83   3                              break;
  84   3                      }
  85   2                      if (PM1Step == 0x01)
  86   2                      {
  87   3                              eEEPROMBank = PM1Data;
  88   3                              Cmd_4E(0x62,eEEPROMAddrsss);
  89   3                      }
  90   2                      break;
  91   2      
  92   2              case 0x4D:
  93   2                      if (PM1Step == 0x02)
  94   2                      {
  95   3                              eEEPROMAddrsss = PM1Data;
  96   3                              break;
  97   3                      }
  98   2                      if (PM1Step == 0x01)
  99   2                      {
 100   3                              eEEPROMData     = PM1Data;
 101   3                  SET_MASK(LENOVOPMFW_Temp,EEPROM_Token);
 102   3                              Update_EEPROMMark();
 103   3                  CLEAR_MASK(LENOVOPMFW_Temp,EEPROM_Token);
 104   3                              Data2PortDirect(0x62, 0x00);  
 105   3                      }
 106   2                      break;
 107   2      
 108   2              case 0x4E:
 109   2                      eEEPROMAddrsss = PM1Data;
 110   2                      Cmd_4E(0x62,eEEPROMAddrsss);
 111   2                      break;
 112   2      
 113   2              case 0x51:
 114   2                      break;
 115   2      
 116   2              case 0x52:
C51 COMPILER V8.12   OEM_ACPI                                                              07/28/2018 12:03:49 PAGE 3   

 117   2                      if(PM1Data==0xA0) Cmd_52_A0(0x62);
 118   2                      if(PM1Data==0xA3) Cmd_52_A3(0x62);
 119   2                      if(PM1Data==0xA4) Cmd_52_A4(0x62);
 120   2                      if(PM1Data==0xA5) Cmd_52_A5(0x62);
 121   2                      if(PM1Data==0xA6) Cmd_52_A6(0x62); //LMLKBL0018:add.
 122   2                      if(PM1Data==0xA7) Cmd_52_A7(0x62); //LMLKBL0018:add.
 123   2                      break;
 124   2      
 125   2              case 0x53:
 126   2                      if (PM1Step == 0x01)
 127   2                      {
 128   3                              Cmd_53(0x62,PM1Data2,PM1Data1,PM1Data);
 129   3                      }
 130   2                      break;
 131   2              case 0x56:
 132   2                      break;
 133   2              case 0x58:
 134   2                      Cmd_58(PM1Data);
 135   2                      break;
 136   2              case 0x59:
 137   2                      Cmd_59(0x62,PM1Data,0);
 138   2                      break;
 139   2              case 0x5C:
 140   2                      Cmd_5C(0x62);
 141   2                      break;
 142   2              case 0x5D:
 143   2                      Cmd_5D(PM1Data);
 144   2                      break;
 145   2          case 0x71:
 146   2                      //LMLKBL0001:modify cmd 0x71 have one data.
 147   2              /*if (PM1Step == 0x01)
 148   2                      {
 149   2                              Cmd_71(PM1Data1,PM1Data);//Add 60/64 71cmd follow new EC common SPEC. G60:Add 62/66 71cmd
 150   2                      }*/
 151   2              Cmd_71(PM1Data);
 152   2              //LMLKBL0001:modify cmd 0x71 have one data.
 153   2                      break;
 154   2              case 0x72:
 155   2                      Cmd_72(PM1Data);//add flag for  tool to keep the battery at 60% //G61:Add 62/66 72cmd.
 156   2                      break;
 157   2              //ANGELAS033:Add start                  
 158   2              case 0x7A:
 159   2                      Cmd_7A(0x62,PM1Data);
 160   2                      break;
 161   2              case 0x7B:
 162   2                      if( PM1Step == 0x01 )
 163   2                      {
 164   3                              Cmd_7B(0x62,PM1Data1,PM1Data);;
 165   3                      }
 166   2                      break;                  
 167   2              //ANGELAS033:Add end
 168   2              //ANGELAG004:s+Add 7Eh Command to access all EC RAM.
 169   2              case 0x7E:
 170   2                      if( PM1Step == 0x01 )
 171   2                      {
 172   3                              Cmd_7E(0x62,PM1Data1,PM1Data);
 173   3                      }
 174   2                      break;
 175   2              //ANGELAG004:e+Add 7Eh Command to access all EC RAM.
 176   2              case 0xB0:
 177   2                      Cmd_B0(0x62,PM1Data);
 178   2                      break;
C51 COMPILER V8.12   OEM_ACPI                                                              07/28/2018 12:03:49 PAGE 4   

 179   2              case 0xB3:
 180   2                      if (PM1Step == 0x01)
 181   2                      {
 182   3                              Cmd_B3(0x62,PM1Data1,PM1Data);
 183   3                      }
 184   2                      break;
 185   2              }
 186   1      }
 187          
 188          //----------------------------------------------------------------------------
 189          // The hook function of 66 port command.
 190          //----------------------------------------------------------------------------
 191          #pragma ot(8, speed)    
 192          void Hook_66Port(BYTE PM1Cmd)
 193          {
 194   1              switch(PM1Cmd)
 195   1              {
 196   2              case 0x40:
 197   2                      PM1Step=0x01;
 198   2                      break;
 199   2              case 0x41:
 200   2                      PM1Step=0x01;
 201   2                      break;
 202   2              case 0x42:
 203   2                      PM1Step=0x01;
 204   2                      break;
 205   2              case 0x43:
 206   2                      PM1Step=0x01;
 207   2                      break;
 208   2              case 0x44:
 209   2                      Cmd_44(0x62);
 210   2                      break;
 211   2              case 0x45:
 212   2                      PM1Step=0x01;
 213   2                      break;
 214   2              case 0x46:
 215   2                      PM1Step=0x01;
 216   2                      break;
 217   2              case 0x47:
 218   2                      PM1Step=0x01;
 219   2                      break;
 220   2              case 0x49:
 221   2                      break;
 222   2              case 0x4B:
 223   2                      PM1Step=0x04;
 224   2                      break;
 225   2              case 0x4C:
 226   2                      PM1Step=0x03;
 227   2                      break;
 228   2              case 0x4D:
 229   2                      PM1Step=0x02;
 230   2                      break;
 231   2              case 0x4E:
 232   2                      PM1Step=0x01;
 233   2                      break;
 234   2      
 235   2              case 0x4F:
 236   2                      Erase_EEPROMAll();
 237   2                      break;
 238   2      //REJERRY093: Add CMD 0X50 for osAging S4 keep EC power.
 239   2                      case 0x50:
 240   2                              SET_MASK(ACPI_HOTKEY, b6Cmd_NoShut);//for osAging s4 keep EC power
C51 COMPILER V8.12   OEM_ACPI                                                              07/28/2018 12:03:49 PAGE 5   

 241   2                              break;
 242   2              //REJERRY093: Add CMD 0X50 for osAging S4 keep EC power.
 243   2              case 0x51:
 244   2                      Cmd_51(0x62);
 245   2                      break;
 246   2              case 0x52:
 247   2                      PM1Step=0x01;
 248   2                      break;
 249   2              case 0x53:
 250   2                      PM1Step=0x03; //change 2 to 3
 251   2                      break;
 252   2              case 0x56:
 253   2                      break;
 254   2              case 0x58:
 255   2                      PM1Step=0x01;
 256   2                      break;
 257   2              case 0x59:
 258   2                      PM1Step=0x01;
 259   2                      break;
 260   2              case 0x5C:
 261   2                      break;
 262   2              case 0x5D:
 263   2                      PM1Step=0x01;
 264   2                      break;
 265   2              //ANGELAS032:s+ add
 266   2              case 0x5E:                      // UNLOCK SHIP MODE 
 267   2                      #if shipmodesupport             //add ship mode judge
 268   2                      Unlock_ShipMode();
 269   2                      #endif
 270   2                      break;
 271   2              case 0x5F:      
 272   2                      #if shipmodesupport             //add ship mode judge// LOCK SHIP MODE 
 273   2                      ShipModeEn=0xA5;  
 274   2                      Data2PortDirect(0x62, 0x5A);
 275   2              RamDebug(0xA5);
 276   2                      #endif
 277   2                      break;
 278   2                      //ANGELAS032: e+add
 279   2          case 0x71:
 280   2                      PM1Step=0x01; //ANGELAG026: modify 02 to 01 //Add 62/66 71cmd
 281   2                      break;
 282   2              case 0x72:
 283   2                      PM1Step=0x01;//Add 62/66 72cmd.
 284   2                      break;
 285   2              //ANGELAG012:S+.
 286   2              case 0x75:
 287   2                      Cmd_75(); 
 288   2                      break;
 289   2              //ANGELAG012:E+
 290   2              //ANGELAS033:Add start
 291   2              case 0x7A:
 292   2                      PM1Step=0x01;
 293   2                      break;
 294   2              case 0x7B:
 295   2                      PM1Step=0x02;
 296   2                      break;
 297   2              //ANGELAS033:Add end    
 298   2              //ANGELAS094:s+Add workaround for hang bios.
 299   2              case 0x7C:
 300   2                      Bioswatchdog=1;
 301   2                      Bioswatchdogtime=0;//ANGELAS106:Optimize ANGELAS094 clear time.
 302   2                      Data2PortDirect(0x62, 0x55);////ANGELAS105:Optimize ANGELAS094 add return date for bios.
C51 COMPILER V8.12   OEM_ACPI                                                              07/28/2018 12:03:49 PAGE 6   

 303   2                      break;
 304   2              case 0x7D:
 305   2                      Bioswatchdog=0;
 306   2                      Data2PortDirect(0x62, 0x55);////ANGELAS105:Optimize ANGELAS094 add return date for bios.
 307   2                      break;
 308   2                      //ANGELAS094:e+Add workaround for hang bios.
 309   2              //ANGELAG004:s+Add 7Eh Command to access all EC RAM.
 310   2              case 0x7E:
 311   2                      PM1Step=0x02;
 312   2                      break;
 313   2              //ANGELAG004:e+Add 7Eh Command to access all EC RAM.
 314   2              case 0xB0:
 315   2                      PM1Step=0x01;
 316   2                      break;
 317   2              //start for save P80 code to setup. 
 318   2              case 0xB1:
 319   2                      Cmd_B1(0x62,0xB1);
 320   2                      break;
 321   2              case 0xB2:
 322   2                      Cmd_B2(0x62,0xB2);
 323   2                      break;
 324   2              //end for save P80 code to setup. 
 325   2              case 0xB3:
 326   2                      PM1Step=0x02;
 327   2                      break;
 328   2                      //Remove PECI workaround.
 329   2                      //when enter S3/S4/CB,BIOS sent B4 CMD to EC from 66port for peci fail.
 330   2              /*case 0xB4:
 331   2                      PECIBIOSTEST=0x01;
 332   2                      RamDebug(0x88);
 333   2                      RamDebug(0x99);
 334   2                      break;*/
 335   2                      //when enter S3/S4/CB,BIOS sent B4 CMD to EC from 66port for peci fail.
 336   2                      //Remove PECI workaround.
 337   2              }
 338   1      }
 339          
 340          
 341          #if ACPI_Smbus
 342          BYTE vOSSMbusWBlcok(void)
 343          {
 344   1              //return (bWSMBusBlock(SMbusCh1, SMbusRBK, SMB_ADDR, SMB_CMD, &SMB_DATA, SMB_BCNT, (SMB_PRTC & 0x80)));
 345   1          return (bWSMBusBlock(SMbusChB, SMbusRBK, SMB_ADDR, SMB_CMD, &SMB_DATA, SMB_BCNT,SMBus_NeedPEC));
 346   1      }
 347          
 348          BYTE vOSSMbusRBlcok(void)
 349          {
 350   1              return (bRSMBusBlock(SMbusChB, SMbusRBK, SMB_ADDR, SMB_CMD, &SMB_DATA));
 351   1      }
 352          
 353          BYTE vOSSMbusRByte(void)
 354          {
 355   1              return (bRWSMBus(SMbusChB, SMbusRB, SMB_ADDR, SMB_CMD, &SMB_DATA, SMBus_NeedPEC));
 356   1      }
 357          
 358          BYTE vOSSMbusRWord(void)
 359          {
 360   1              return (bRWSMBus(SMbusChB, SMbusRW, SMB_ADDR, SMB_CMD, &SMB_DATA, SMBus_NeedPEC));
 361   1      }
 362          
 363          BYTE vOSSMbusWBYTE(void)
 364          {
C51 COMPILER V8.12   OEM_ACPI                                                              07/28/2018 12:03:49 PAGE 7   

 365   1              return (bRWSMBus(SMbusChB, SMbusWB, SMB_ADDR, SMB_CMD, &SMB_DATA, SMBus_NeedPEC));
 366   1      }
 367          
 368          BYTE vOSSMbusWWord(void)
 369          {
 370   1              return (bRWSMBus(SMbusChB, SMbusWW, SMB_ADDR, SMB_CMD, &SMB_DATA, SMBus_NeedPEC));
 371   1      }
 372          
 373          void DummyFunction(void)
 374          {
 375   1      }
 376          
 377          const FUNCT_PTR_B_V code vOSSMbusComd_table[16] =
 378          {                                                               //the low nibble of SMB_PRTC
 379                  DummyFunction,          //0x00
 380                  DummyFunction,          //0x01
 381                  DummyFunction,          //0x02-Write Quick Command
 382                  DummyFunction,          //0x03-Read Quick Command
 383                  DummyFunction,          //0x04-Send Byte
 384                  DummyFunction,          //0x05-Receive Byte
 385                  vOSSMbusWBYTE,          //0x06-Write Byte
 386                  vOSSMbusRByte,          //0x07-Read Byte
 387                  vOSSMbusWWord,          //0x08-Write Word
 388                  vOSSMbusRWord,          //0x09-Read Word
 389                  vOSSMbusWBlcok,         //0x0A-Write Block
 390                  vOSSMbusRBlcok,         //0x0B-Read Block
 391                  DummyFunction,          //0x0C-Process Call
 392                  DummyFunction,          //0x0D-Write Block-Read Block Process Call
 393                  DummyFunction,          //0x0E
 394                  DummyFunction           //0x0F
 395          };
 396          
 397          // ACPI response to writes to SMBus Protocol register.
 398          void OSSMbusComd(void)
 399          {
 400   1              if( SMB_PRTC != 0x00 )
 401   1              {
 402   2                      SMB_STS = 0x00;
 403   2      
 404   2              if((vOSSMbusComd_table[(SMB_PRTC & 0x0F)])()) {
 405   3                      SMB_STS = 0x80;
 406   3              }
 407   2                      else 
 408   2                      {
 409   3                      if( IS_MASK_SET(HOSTA_A,BIT0) ) { SMB_STS = 0x1A; }
 410   3                      else if( IS_MASK_SET(HOSTA_A,BIT2) ) { SMB_STS = 0x17; }
 411   3                      else if( IS_MASK_SET(HOSTA_A,BIT3) ) { SMB_STS = 0x07; }
 412   3                      else if( IS_MASK_SET(HOSTA_A,BIT4) ) { SMB_STS = 0x19; }
 413   3                      else if( IS_MASK_SET(HOSTA_A,BIT5) ) { SMB_STS = 0x10; }
 414   3                      else if( IS_MASK_SET(HOSTA_A,BIT6) ) { SMB_STS = 0x18; }
 415   3                      }
 416   2              SMB_PRTC = 0x00;
 417   2      
 418   2                      //ECSMI_SCIEvent(ACPI_ACIN_SCI);        // toggle HOST
 419   2              }
 420   1      }
 421          
 422          #endif  // ACPI_Smbus
 423          
 424          //----------------------------------------------------------------------------
 425          // Hook function of ACPI command
 426          //----------------------------------------------------------------------------
C51 COMPILER V8.12   OEM_ACPI                                                              07/28/2018 12:03:49 PAGE 8   

 427          void Hook_ACPICommand(void)
 428          {
 429   1          #if ACPI_Smbus
 430   1          OSSMbusComd();              // ACPI SMBus command
 431   1          #endif
 432   1      }
 433          
 434          //-------------------------------------------------------------------------------
 435          // parameter "QeventSCI" only, For a pulsed SCI
 436          //------------------------------------------------------------------------------
 437          void OEM_ACPI_Gen_Int(void)
 438          {
 439   1          ACPI_Gen_Int(QeventSCI);
 440   1      }
 441          
 442          //-------------------------------------------------------------------------------
 443          //
 444          //-------------------------------------------------------------------------------
 445          void ResetSCIEvent(void)
 446          {
 447   1      
 448   1          CLEAR_MASK(PM1STS,SCIEVT);
 449   1          ECCheckBurstMode = 0;
 450   1      }
 451          
 452          /* ----------------------------------------------------------------------------
 453           * FUNCTION: ECQEvent -Setup cause flag for an SCI and start the ACPI_Timer.
 454           *
 455           * sci_number = 1 through 255.  The Host uses this number to determine the
 456           * cause of the SCI.
 457           * ------------------------------------------------------------------------- */
 458          void ECQEvent(BYTE sci_number)
 459          {
 460   1              if(IS_MASK_CLEAR(SYS_MISC1,ACPI_OS) || (SysPowState!=SYSTEM_S0))
 461   1              {
 462   2                      return;
 463   2              }
 464   1      
 465   1              ITempB05 = SCI_Event_In_Index;                  // Get the input index.
 466   1              SCI_Event_Buffer[ITempB05] = sci_number; // Put the SCI number in the buffer.
 467   1              ITempB05++;                                                     // Increment the index.
 468   1              if (ITempB05 >= EVENT_BUFFER_SIZE)
 469   1              {
 470   2              ITempB05 = 0;
 471   2              }
 472   1                                                                                              // If the buffer is not full, update the input index.
 473   1              if (ITempB05 != SCI_Event_Out_Index)
 474   1              {
 475   2                      SCI_Event_In_Index = ITempB05;
 476   2          }
 477   1              SET_MASK(PM1STS,SCIEVT);
 478   1          OEM_ACPI_Gen_Int();
 479   1      }
 480          //JERRYCH003:s+Enable SMI for hang debug.
 481          //Hang check
 482          void ECSMIEvent(void)
 483          {
 484   1               if(SysPowState!=SYSTEM_S0)
 485   1          {
 486   2              return;
 487   2          }
 488   1          SET_MASK(PM1STS,SMIEVT);
C51 COMPILER V8.12   OEM_ACPI                                                              07/28/2018 12:03:49 PAGE 9   

 489   1              DisableAllInterrupt();
 490   1          Hook_SMIOFF();
 491   1              Hook_SMION();
 492   1          /* Delay 15.26 us */
 493   1          WNCKR = 0x00;
 494   1              Hook_SMIOFF();
 495   1          EnableAllInterrupt();
 496   1      }
 497          //      Hang check
 498          //JERRYCH003:e+Enable SMI for hang debug.
 499          void ECSMI_SCIEvent(BYTE smi_number)
 500          {
 501   1              //if(IS_MASK_SET(SYS_MISC1,ACPI_OS))
 502   1                      ECQEvent(smi_number);
 503   1              //else
 504   1              //ECSMIEvent(smi_number);
 505   1      }
 506          
 507          //----------------------------------------------------------------------------
 508          // Read EC ram Space
 509          //----------------------------------------------------------------------------
 510          BYTE Hook_ReadMapECSpace(BYTE MapIndex)
 511          {
 512   1              return( *((XBYTE *)(ECRAM|MapIndex)) );
 513   1      }
 514          //ANGELAG008:add start
 515          void SetECSpaceAsRO(BYTE *formerByte,BYTE *writeByte,BYTE bitMask)
 516          {   
 517   1          BYTE index = 0x00;
 518   1              BYTE maskTemp = 0x00;
 519   1              BYTE indexTemp = 0x01;
 520   1              for(index=0x00;index<=0x07;index++)
 521   1              {
 522   2                  indexTemp = 0x01 << index;
 523   2                  maskTemp = bitMask & indexTemp;
 524   2                  if(maskTemp)
 525   2                  {
 526   3                      if(IS_MASK_SET(*formerByte,maskTemp))
 527   3                                SET_MASK(*writeByte,maskTemp);
 528   3                         else
 529   3                                CLEAR_MASK(*writeByte,maskTemp);
 530   3                  }
 531   2              }
 532   1      }
 533          //ANGELAG008:add end
 534          
 535          //----------------------------------------------------------------------------
 536          // Write EC ram Space
 537          //----------------------------------------------------------------------------
 538          void Hook_WriteMapECSpace(BYTE MapIndex, BYTE data1)
 539          {
 540   1              //*((XBYTE *)(ECRAM|MapIndex)) = data1; //ANGELAG008: REMOVE
 541   1      //ANGELAG008: ADD START
 542   1              BYTE *formerdate_XPntr;
 543   1              BYTE *writedate_XPntr;
 544   1              BYTE *Tmp_XPntr;
 545   1              Tmp_XPntr= (XBYTE *)(ECRAM|MapIndex);
 546   1          if(MapIndex == 0xA1)
 547   1              {
 548   2                 RamDebug(0xA1);
 549   2                 RamDebug(data1);
 550   2          }
C51 COMPILER V8.12   OEM_ACPI                                                              07/28/2018 12:03:49 PAGE 10  

 551   1          if(MapIndex == 0x43)
 552   1              {
 553   2                  if((IS_MASK_SET(data1,b5TPDRIVER_STATUS))&&(IS_MASK_CLEAR(pDevStatus1,b5TPDRIVER_STATUS)))
 554   2                      {
 555   3                        RamDebug(0xD2);
 556   3                        RamDebug(data1);
 557   3                        RamDebug(pDevStatus1);
 558   3                        if(IS_MASK_SET(pDevStatus1,b4LNVAPP_STATUS))  
 559   3                        {
 560   4                               if(IS_MASK_SET(pDevStatus1,b6MODE_STATUS))
 561   4                               {
 562   5                                  ECQEvent(0x3F);
 563   5                               }
 564   4                               else
 565   4                               {
 566   5                                  ECQEvent(0x3E);
 567   5                               }
 568   4                        }
 569   3                      } 
 570   2                      formerdate_XPntr = &pDevStatus1;
 571   2                      writedate_XPntr  = &data1;
 572   2                      SetECSpaceAsRO(formerdate_XPntr,writedate_XPntr,b0F6ScanCodeSend+b1F6DisableTP+b4LNVAPP_STATUS+b6MODE_ST
             -ATUS);           
 573   2          }   
 574   1              *Tmp_XPntr= data1;
 575   1      //ANGELAG008: ADD END
 576   1              VPC_interface();
 577   1              ThermalMailBox();
 578   1      }
 579          
 580          
 581          void Data_To_PM1_nWait(BYTE data_byte)
 582          {
 583   1          Data_To_PM1(data_byte);
 584   1      
 585   1          TR1 = 0;                    // Disable timer1
 586   1          ET1 = 0;                    // Disable timer1 interrupt
 587   1          _nop_();
 588   1          _nop_();
 589   1          _nop_();
 590   1          _nop_();
 591   1          TH1 = Timer_85ms>>8;        // Set timer1 counter 26ms
 592   1          TL1 = Timer_85ms;           // Set timer1 counter 26ms
 593   1          TF1 = 0;                    // Clear overflow flag
 594   1          TR1 = 1;                    // Enable timer1
 595   1      
 596   1              while (!TF1)
 597   1              {
 598   2                  if(IS_MASK_CLEAR(PM1STS, OBF))
 599   2              {
 600   3                  break;
 601   3              }
 602   2      //open below 4 line        
 603   2              if(IS_MASK_SET(PM1STS, IBF))
 604   2              {
 605   3                  break;
 606   3              }
 607   2              }
 608   1      
 609   1          TR1 = 0;                    // disable timer1
 610   1              TF1 = 0;                        // clear overflow flag
 611   1              ET1 = 1;                        // Enable timer1 interrupt
C51 COMPILER V8.12   OEM_ACPI                                                              07/28/2018 12:03:49 PAGE 11  

 612   1      }
 613          
 614          
 615          //T072+ s
 616          void Data2PortDirect(BYTE nPort, BYTE rData)
 617          {
 618   1              switch(nPort) 
 619   1              {
 620   2              case 0x60:
 621   2                      //Data_To_Host(rData); //BROOKE0000: remove
 622   2                      Data_To_Port(rData); //BROOKE0000: add
 623   2                      break;
 624   2              case 0x62:
 625   2                      Data_To_PM1(rData);
 626   2                      break;
 627   2              //G686C+s Add 68/6C interface.
 628   2              case 0x68:
 629   2                      //Data_To_Host(rData);
 630   2                      Data_To_PM2(rData);
 631   2                      break;
 632   2              //G686C+e                       
 633   2              case 0xFE://Mos: Add case for Mailbox
 634   2                      MMIO_rDATA[MMIO_rDATA_index] = rData;
 635   2                      MMIO_rDATA_index++;
 636   2                      break;
 637   2              }
 638   1      }
 639          
 640          
 641          //G686C+s Add 68/6C interface.
 642          void Data_To_PM2_nWait(BYTE data_byte)
 643          {
 644   1          Data_To_PM2(data_byte);
 645   1      
 646   1          TR1 = 0;                    // Disable timer1
 647   1          ET1 = 0;                    // Disable timer1 interrupt
 648   1          _nop_();
 649   1          _nop_();
 650   1          _nop_();
 651   1          _nop_();
 652   1          TH1 = Timer_85ms>>8;        // Set timer1 counter 26ms
 653   1          TL1 = Timer_85ms;           // Set timer1 counter 26ms
 654   1          TF1 = 0;                    // Clear overflow flag
 655   1          TR1 = 1;                    // Enable timer1
 656   1      
 657   1              while (!TF1)
 658   1              {
 659   2                  if(IS_MASK_CLEAR(PM2STS, OBF))
 660   2              {
 661   3                  break;
 662   3              }       
 663   2              if(IS_MASK_SET(PM2STS, IBF))
 664   2              {
 665   3                  break;
 666   3              }
 667   2              }
 668   1      
 669   1          TR1 = 0;                    // disable timer1
 670   1              TF1 = 0;                        // clear overflow flag
 671   1              ET1 = 1;                        // Enable timer1 interrupt
 672   1      }
 673          
C51 COMPILER V8.12   OEM_ACPI                                                              07/28/2018 12:03:49 PAGE 12  

 674          //G686C+e
 675          
 676          
 677          void Data2Port(BYTE nPort, BYTE rData)
 678          {
 679   1              switch(nPort) 
 680   1              {
 681   2              case 0x60:
 682   2                      //Data_To_Host(rData);
 683   2                      //Data_To_Host_nWait(rData); //BROOKE0000: remove
 684   2                      Data_To_Port_nWait(rData); //BROOKE0000: add
 685   2                      break;
 686   2              case 0x62:
 687   2                      //Data_To_PM1(rData);
 688   2                      Data_To_PM1_nWait(rData);
 689   2                      break;
 690   2              //G686C+s Add 68/6C interface.
 691   2              case 0x68:
 692   2                      Data_To_PM2_nWait(rData);
 693   2                      break;
 694   2              //G686C+e
 695   2              case 0xFE://Mos: Add case for Mailbox
 696   2                      MMIO_rDATA[MMIO_rDATA_index] = rData;
 697   2                      MMIO_rDATA_index++;
 698   2                      break;
 699   2              }
 700   1      }
 701          
 702          void MultiB2Port(BYTE nPort, BYTE rData)
 703          {
 704   1              switch(nPort) 
 705   1              {
 706   2              case 0x60:
 707   2                      //KBC_DataPending(rData);
 708   2                      //Data_To_Host_nWait(rData); //BROOKE0000: remove
 709   2                      Data_To_Port_nWait(rData); //BROOKE0000: add
 710   2                      break;
 711   2              case 0x62:
 712   2                      //PM1_DataPending(rData);
 713   2                      Data_To_PM1_nWait(rData);
 714   2                      break;
 715   2              //G686C+s Add 68/6C interface.
 716   2              case 0x68:
 717   2                      Data_To_PM2_nWait(rData);
 718   2                      break;
 719   2              //G686C+e                       
 720   2              case 0xFE://Mos: Add case for Mailbox
 721   2                      MMIO_rDATA[MMIO_rDATA_index] = rData;
 722   2                      MMIO_rDATA_index++;
 723   2                      break;
 724   2              }
 725   1      }
C51 COMPILER V8.12   OEM_ACPI                                                              07/28/2018 12:03:49 PAGE 13  

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION _Hook_62Port (BEGIN)
                                           ; SOURCE LINE # 19
;---- Variable 'PM1Cmd' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 20
                                           ; SOURCE LINE # 23
0000 EF                MOV     A,R7
0001 120000      E     LCALL   ?C?CCASE
0004 0000        R     DW      ?C0002
0006 40                DB      040H
0007 0000        R     DW      ?C0003
0009 41                DB      041H
000A 0000        R     DW      ?C0005
000C 42                DB      042H
000D 0000        R     DW      ?C0006
000F 43                DB      043H
0010 0000        R     DW      ?C0007
0012 45                DB      045H
0013 0000        R     DW      ?C0008
0015 46                DB      046H
0016 0000        R     DW      ?C0009
0018 47                DB      047H
0019 0000        R     DW      ?C0011
001B 4B                DB      04BH
001C 0000        R     DW      ?C0016
001E 4C                DB      04CH
001F 0000        R     DW      ?C0020
0021 4D                DB      04DH
0022 0000        R     DW      ?C0023
0024 4E                DB      04EH
0025 0000        R     DW      ?C0025
0027 52                DB      052H
0028 0000        R     DW      ?C0032
002A 53                DB      053H
002B 0000        R     DW      ?C0035
002D 58                DB      058H
002E 0000        R     DW      ?C0036
0030 59                DB      059H
0031 0000        R     DW      ?C0037
0033 5C                DB      05CH
0034 0000        R     DW      ?C0038
0036 5D                DB      05DH
0037 0000        R     DW      ?C0039
0039 71                DB      071H
003A 0000        R     DW      ?C0040
003C 72                DB      072H
003D 0000        R     DW      ?C0041
003F 7A                DB      07AH
0040 0000        R     DW      ?C0042
0042 7B                DB      07BH
0043 0000        R     DW      ?C0044
0045 7E                DB      07EH
0046 0000        R     DW      ?C0046
0048 B0                DB      0B0H
0049 0000        R     DW      ?C0047
004B B3                DB      0B3H
004C 0000              DW      00H
004E 0000        R     DW      ?C0049
                                           ; SOURCE LINE # 24
                                           ; SOURCE LINE # 25
C51 COMPILER V8.12   OEM_ACPI                                                              07/28/2018 12:03:49 PAGE 14  

0050         ?C0002:
                                           ; SOURCE LINE # 26
0050 AF00        E     MOV     R7,PM1Data
0052 020000      E     LJMP    _Cmd_40
                                           ; SOURCE LINE # 27
                                           ; SOURCE LINE # 28
0055         ?C0003:
                                           ; SOURCE LINE # 29
0055 E500        E     MOV     A,PM1Data
0057 64A1              XRL     A,#0A1H
0059 6003              JZ      $ + 5H
005B 020000      R     LJMP    ?C0049
005E 7F62              MOV     R7,#062H
0060 020000      E     LJMP    _Cmd_41_A1
                                           ; SOURCE LINE # 30
                                           ; SOURCE LINE # 31
0063         ?C0005:
                                           ; SOURCE LINE # 32
0063 AF00        E     MOV     R7,PM1Data
0065 020000      E     LJMP    _Cmd_42
                                           ; SOURCE LINE # 33
                                           ; SOURCE LINE # 34
0068         ?C0006:
                                           ; SOURCE LINE # 35
0068 AD00        E     MOV     R5,PM1Data
006A 7F62              MOV     R7,#062H
006C 020000      E     LJMP    _Cmd_43
                                           ; SOURCE LINE # 36
                                           ; SOURCE LINE # 37
006F         ?C0007:
                                           ; SOURCE LINE # 38
006F AD00        E     MOV     R5,PM1Data
0071 7F62              MOV     R7,#062H
0073 020000      E     LJMP    _Cmd_45
                                           ; SOURCE LINE # 39
                                           ; SOURCE LINE # 40
0076         ?C0008:
                                           ; SOURCE LINE # 41
0076 AD00        E     MOV     R5,PM1Data
0078 7F62              MOV     R7,#062H
007A 020000      E     LJMP    _Cmd_46
                                           ; SOURCE LINE # 42
                                           ; SOURCE LINE # 43
007D         ?C0009:
                                           ; SOURCE LINE # 44
007D AD00        E     MOV     R5,PM1Data
007F 7F62              MOV     R7,#062H
0081 020000      E     LJMP    _Cmd_47
                                           ; SOURCE LINE # 45
                                           ; SOURCE LINE # 46
                                           ; SOURCE LINE # 47
                                           ; SOURCE LINE # 48
0084         ?C0011:
                                           ; SOURCE LINE # 49
0084 E500        E     MOV     A,PM1Step
0086 B40402            CJNE    A,#04H,?C0012
                                           ; SOURCE LINE # 50
                                           ; SOURCE LINE # 51
                                           ; SOURCE LINE # 52
0089 8021              SJMP    ?C0167
                                           ; SOURCE LINE # 53
008B         ?C0012:
C51 COMPILER V8.12   OEM_ACPI                                                              07/28/2018 12:03:49 PAGE 15  

                                           ; SOURCE LINE # 54
008B E500        E     MOV     A,PM1Step
008D B40302            CJNE    A,#03H,?C0013
                                           ; SOURCE LINE # 55
                                           ; SOURCE LINE # 56
                                           ; SOURCE LINE # 57
0090 8024              SJMP    ?C0168
                                           ; SOURCE LINE # 58
0092         ?C0013:
                                           ; SOURCE LINE # 59
0092 E500        E     MOV     A,PM1Step
0094 B40205            CJNE    A,#02H,?C0014
                                           ; SOURCE LINE # 60
                                           ; SOURCE LINE # 61
0097 900000      E     MOV     DPTR,#eEEPROMBank
                                           ; SOURCE LINE # 62
009A 803B              SJMP    ?C0172
                                           ; SOURCE LINE # 63
009C         ?C0014:
                                           ; SOURCE LINE # 64
009C E500        E     MOV     A,PM1Step
009E 6401              XRL     A,#01H
00A0 6003              JZ      $ + 5H
00A2 020000      R     LJMP    ?C0049
                                           ; SOURCE LINE # 65
                                           ; SOURCE LINE # 66
                                           ; SOURCE LINE # 67
                                           ; SOURCE LINE # 68
                                           ; SOURCE LINE # 69
                                           ; SOURCE LINE # 70
                                           ; SOURCE LINE # 71
                                           ; SOURCE LINE # 72
00A5 803D              SJMP    ?C0170
                                           ; SOURCE LINE # 74
00A7         ?C0016:
                                           ; SOURCE LINE # 75
00A7 E500        E     MOV     A,PM1Step
00A9 B40305            CJNE    A,#03H,?C0017
                                           ; SOURCE LINE # 76
                                           ; SOURCE LINE # 77
00AC         ?C0167:
00AC 900000      R     MOV     DPTR,#i
00AF         ?C0169:
                                           ; SOURCE LINE # 78
00AF 8026              SJMP    ?C0172
                                           ; SOURCE LINE # 79
00B1         ?C0017:
                                           ; SOURCE LINE # 80
00B1 E500        E     MOV     A,PM1Step
00B3 B40205            CJNE    A,#02H,?C0018
                                           ; SOURCE LINE # 81
                                           ; SOURCE LINE # 82
00B6         ?C0168:
00B6 900000      E     MOV     DPTR,#eEEPROMAddrsss
00B9         ?C0171:
                                           ; SOURCE LINE # 83
00B9 801C              SJMP    ?C0172
                                           ; SOURCE LINE # 84
00BB         ?C0018:
                                           ; SOURCE LINE # 85
00BB E500        E     MOV     A,PM1Step
00BD 6401              XRL     A,#01H
C51 COMPILER V8.12   OEM_ACPI                                                              07/28/2018 12:03:49 PAGE 16  

00BF 6003              JZ      $ + 5H
00C1 020000      R     LJMP    ?C0049
                                           ; SOURCE LINE # 86
                                           ; SOURCE LINE # 87
00C4 900000      E     MOV     DPTR,#eEEPROMBank
00C7 E500        E     MOV     A,PM1Data
00C9 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 88
00CA 900000      E     MOV     DPTR,#eEEPROMAddrsss
                                           ; SOURCE LINE # 89
                                           ; SOURCE LINE # 90
00CD 8039              SJMP    ?C0173
                                           ; SOURCE LINE # 92
00CF         ?C0020:
                                           ; SOURCE LINE # 93
00CF E500        E     MOV     A,PM1Step
00D1 B40207            CJNE    A,#02H,?C0021
                                           ; SOURCE LINE # 94
                                           ; SOURCE LINE # 95
00D4 900000      E     MOV     DPTR,#eEEPROMAddrsss
00D7         ?C0172:
00D7 E500        E     MOV     A,PM1Data
00D9 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 96
00DA 22                RET     
                                           ; SOURCE LINE # 97
00DB         ?C0021:
                                           ; SOURCE LINE # 98
00DB E500        E     MOV     A,PM1Step
00DD 6401              XRL     A,#01H
00DF 6003              JZ      $ + 5H
00E1 020000      R     LJMP    ?C0049
                                           ; SOURCE LINE # 99
                                           ; SOURCE LINE # 100
00E4         ?C0170:
00E4 900000      E     MOV     DPTR,#eEEPROMData
00E7 E500        E     MOV     A,PM1Data
00E9 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 101
00EA 900000      E     MOV     DPTR,#LENOVOPMFW_Temp
00ED E0                MOVX    A,@DPTR
00EE 4410              ORL     A,#010H
00F0 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 102
00F1 120000      E     LCALL   Update_EEPROMMark
                                           ; SOURCE LINE # 103
00F4 900000      E     MOV     DPTR,#LENOVOPMFW_Temp
00F7 E0                MOVX    A,@DPTR
00F8 54EF              ANL     A,#0EFH
00FA F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 104
00FB E4                CLR     A
00FC FD                MOV     R5,A
00FD 7F62              MOV     R7,#062H
00FF 020000      R     LJMP    _Data2PortDirect
                                           ; SOURCE LINE # 105
                                           ; SOURCE LINE # 106
                                           ; SOURCE LINE # 108
0102         ?C0023:
                                           ; SOURCE LINE # 109
0102 900000      E     MOV     DPTR,#eEEPROMAddrsss
0105 E500        E     MOV     A,PM1Data
C51 COMPILER V8.12   OEM_ACPI                                                              07/28/2018 12:03:49 PAGE 17  

0107 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 110
0108         ?C0173:
0108 E0                MOVX    A,@DPTR
0109 FD                MOV     R5,A
010A 7F62              MOV     R7,#062H
010C 020000      E     LJMP    _Cmd_4E
                                           ; SOURCE LINE # 111
                                           ; SOURCE LINE # 113
                                           ; SOURCE LINE # 114
                                           ; SOURCE LINE # 116
010F         ?C0025:
                                           ; SOURCE LINE # 117
010F E500        E     MOV     A,PM1Data
0111 B4A005            CJNE    A,#0A0H,?C0026
0114 7F62              MOV     R7,#062H
0116 120000      E     LCALL   _Cmd_52_A0
0119         ?C0026:
                                           ; SOURCE LINE # 118
0119 E500        E     MOV     A,PM1Data
011B B4A305            CJNE    A,#0A3H,?C0027
011E 7F62              MOV     R7,#062H
0120 120000      E     LCALL   _Cmd_52_A3
0123         ?C0027:
                                           ; SOURCE LINE # 119
0123 E500        E     MOV     A,PM1Data
0125 B4A405            CJNE    A,#0A4H,?C0028
0128 7F62              MOV     R7,#062H
012A 120000      E     LCALL   _Cmd_52_A4
012D         ?C0028:
                                           ; SOURCE LINE # 120
012D E500        E     MOV     A,PM1Data
012F B4A505            CJNE    A,#0A5H,?C0029
0132 7F62              MOV     R7,#062H
0134 120000      E     LCALL   _Cmd_52_A5
0137         ?C0029:
                                           ; SOURCE LINE # 121
0137 E500        E     MOV     A,PM1Data
0139 B4A605            CJNE    A,#0A6H,?C0030
013C 7F62              MOV     R7,#062H
013E 120000      E     LCALL   _Cmd_52_A6
0141         ?C0030:
                                           ; SOURCE LINE # 122
0141 E500        E     MOV     A,PM1Data
0143 64A7              XRL     A,#0A7H
0145 7076              JNZ     ?C0049
0147 7F62              MOV     R7,#062H
0149 020000      E     LJMP    _Cmd_52_A7
                                           ; SOURCE LINE # 123
                                           ; SOURCE LINE # 125
014C         ?C0032:
                                           ; SOURCE LINE # 126
014C E500        E     MOV     A,PM1Step
014E 6401              XRL     A,#01H
0150 706B              JNZ     ?C0049
                                           ; SOURCE LINE # 127
                                           ; SOURCE LINE # 128
0152 900000      E     MOV     DPTR,#?_Cmd_53?BYTE+03H
0155 E500        E     MOV     A,PM1Data
0157 F0                MOVX    @DPTR,A
0158 AB00        E     MOV     R3,PM1Data1
015A AD00        E     MOV     R5,PM1Data2
C51 COMPILER V8.12   OEM_ACPI                                                              07/28/2018 12:03:49 PAGE 18  

015C 7F62              MOV     R7,#062H
015E 020000      E     LJMP    _Cmd_53
                                           ; SOURCE LINE # 129
                                           ; SOURCE LINE # 130
                                           ; SOURCE LINE # 131
                                           ; SOURCE LINE # 132
                                           ; SOURCE LINE # 133
0161         ?C0035:
                                           ; SOURCE LINE # 134
0161 AF00        E     MOV     R7,PM1Data
0163 020000      E     LJMP    _Cmd_58
                                           ; SOURCE LINE # 135
                                           ; SOURCE LINE # 136
0166         ?C0036:
                                           ; SOURCE LINE # 137
0166 E4                CLR     A
0167 FB                MOV     R3,A
0168 AD00        E     MOV     R5,PM1Data
016A 7F62              MOV     R7,#062H
016C 020000      E     LJMP    _Cmd_59
                                           ; SOURCE LINE # 138
                                           ; SOURCE LINE # 139
016F         ?C0037:
                                           ; SOURCE LINE # 140
016F 7F62              MOV     R7,#062H
0171 020000      E     LJMP    _Cmd_5C
                                           ; SOURCE LINE # 141
                                           ; SOURCE LINE # 142
0174         ?C0038:
                                           ; SOURCE LINE # 143
0174 AF00        E     MOV     R7,PM1Data
0176 020000      E     LJMP    _Cmd_5D
                                           ; SOURCE LINE # 144
                                           ; SOURCE LINE # 145
0179         ?C0039:
                                           ; SOURCE LINE # 151
0179 AF00        E     MOV     R7,PM1Data
017B 020000      E     LJMP    _Cmd_71
                                           ; SOURCE LINE # 153
                                           ; SOURCE LINE # 154
017E         ?C0040:
                                           ; SOURCE LINE # 155
017E AF00        E     MOV     R7,PM1Data
0180 020000      E     LJMP    _Cmd_72
                                           ; SOURCE LINE # 156
                                           ; SOURCE LINE # 158
0183         ?C0041:
                                           ; SOURCE LINE # 159
0183 AD00        E     MOV     R5,PM1Data
0185 7F62              MOV     R7,#062H
0187 020000      E     LJMP    _Cmd_7A
                                           ; SOURCE LINE # 160
                                           ; SOURCE LINE # 161
018A         ?C0042:
                                           ; SOURCE LINE # 162
018A E500        E     MOV     A,PM1Step
018C 6401              XRL     A,#01H
018E 702D              JNZ     ?C0049
                                           ; SOURCE LINE # 163
                                           ; SOURCE LINE # 164
0190 AB00        E     MOV     R3,PM1Data
0192 AD00        E     MOV     R5,PM1Data1
C51 COMPILER V8.12   OEM_ACPI                                                              07/28/2018 12:03:49 PAGE 19  

0194 7F62              MOV     R7,#062H
0196 020000      E     LJMP    _Cmd_7B
                                           ; SOURCE LINE # 165
                                           ; SOURCE LINE # 166
                                           ; SOURCE LINE # 169
0199         ?C0044:
                                           ; SOURCE LINE # 170
0199 E500        E     MOV     A,PM1Step
019B 6401              XRL     A,#01H
019D 701E              JNZ     ?C0049
                                           ; SOURCE LINE # 171
                                           ; SOURCE LINE # 172
019F AB00        E     MOV     R3,PM1Data
01A1 AD00        E     MOV     R5,PM1Data1
01A3 7F62              MOV     R7,#062H
01A5 020000      E     LJMP    _Cmd_7E
                                           ; SOURCE LINE # 173
                                           ; SOURCE LINE # 174
                                           ; SOURCE LINE # 176
01A8         ?C0046:
                                           ; SOURCE LINE # 177
01A8 AD00        E     MOV     R5,PM1Data
01AA 7F62              MOV     R7,#062H
01AC 020000      E     LJMP    _Cmd_B0
                                           ; SOURCE LINE # 178
                                           ; SOURCE LINE # 179
01AF         ?C0047:
                                           ; SOURCE LINE # 180
01AF E500        E     MOV     A,PM1Step
01B1 B40109            CJNE    A,#01H,?C0049
                                           ; SOURCE LINE # 181
                                           ; SOURCE LINE # 182
01B4 AB00        E     MOV     R3,PM1Data
01B6 AD00        E     MOV     R5,PM1Data1
01B8 7F62              MOV     R7,#062H
01BA 120000      E     LCALL   _Cmd_B3
                                           ; SOURCE LINE # 183
                                           ; SOURCE LINE # 184
                                           ; SOURCE LINE # 185
                                           ; SOURCE LINE # 186
01BD         ?C0049:
01BD 22                RET     
             ; FUNCTION _Hook_62Port (END)

             ; FUNCTION _Hook_66Port (BEGIN)
                                           ; SOURCE LINE # 192
;---- Variable 'PM1Cmd' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 193
                                           ; SOURCE LINE # 194
0000 EF                MOV     A,R7
0001 120000      E     LCALL   ?C?CCASE
0004 0000        R     DW      ?C0051
0006 40                DB      040H
0007 0000        R     DW      ?C0052
0009 41                DB      041H
000A 0000        R     DW      ?C0053
000C 42                DB      042H
000D 0000        R     DW      ?C0054
000F 43                DB      043H
0010 0000        R     DW      ?C0055
0012 44                DB      044H
0013 0000        R     DW      ?C0056
C51 COMPILER V8.12   OEM_ACPI                                                              07/28/2018 12:03:49 PAGE 20  

0015 45                DB      045H
0016 0000        R     DW      ?C0057
0018 46                DB      046H
0019 0000        R     DW      ?C0058
001B 47                DB      047H
001C 0000        R     DW      ?C0060
001E 4B                DB      04BH
001F 0000        R     DW      ?C0061
0021 4C                DB      04CH
0022 0000        R     DW      ?C0083
0024 4D                DB      04DH
0025 0000        R     DW      ?C0063
0027 4E                DB      04EH
0028 0000        R     DW      ?C0064
002A 4F                DB      04FH
002B 0000        R     DW      ?C0065
002D 50                DB      050H
002E 0000        R     DW      ?C0066
0030 51                DB      051H
0031 0000        R     DW      ?C0067
0033 52                DB      052H
0034 0000        R     DW      ?C0068
0036 53                DB      053H
0037 0000        R     DW      ?C0070
0039 58                DB      058H
003A 0000        R     DW      ?C0071
003C 59                DB      059H
003D 0000        R     DW      ?C0073
003F 5D                DB      05DH
0040 0000        R     DW      ?C0074
0042 5E                DB      05EH
0043 0000        R     DW      ?C0075
0045 5F                DB      05FH
0046 0000        R     DW      ?C0076
0048 71                DB      071H
0049 0000        R     DW      ?C0077
004B 72                DB      072H
004C 0000        R     DW      ?C0078
004E 75                DB      075H
004F 0000        R     DW      ?C0079
0051 7A                DB      07AH
0052 0000        R     DW      ?C0083
0054 7B                DB      07BH
0055 0000        R     DW      ?C0081
0057 7C                DB      07CH
0058 0000        R     DW      ?C0082
005A 7D                DB      07DH
005B 0000        R     DW      ?C0083
005D 7E                DB      07EH
005E 0000        R     DW      ?C0084
0060 B0                DB      0B0H
0061 0000        R     DW      ?C0085
0063 B1                DB      0B1H
0064 0000        R     DW      ?C0086
0066 B2                DB      0B2H
0067 0000        R     DW      ?C0083
0069 B3                DB      0B3H
006A 0000              DW      00H
006C 0000        R     DW      ?C0088
                                           ; SOURCE LINE # 195
                                           ; SOURCE LINE # 196
006E         ?C0051:
C51 COMPILER V8.12   OEM_ACPI                                                              07/28/2018 12:03:49 PAGE 21  

                                           ; SOURCE LINE # 197
                                           ; SOURCE LINE # 198
006E 806D              SJMP    ?C0190
                                           ; SOURCE LINE # 199
0070         ?C0052:
                                           ; SOURCE LINE # 200
0070         ?C0174:
                                           ; SOURCE LINE # 201
0070 806B              SJMP    ?C0190
                                           ; SOURCE LINE # 202
0072         ?C0053:
                                           ; SOURCE LINE # 203
0072         ?C0175:
                                           ; SOURCE LINE # 204
0072 8069              SJMP    ?C0190
                                           ; SOURCE LINE # 205
0074         ?C0054:
                                           ; SOURCE LINE # 206
0074         ?C0176:
                                           ; SOURCE LINE # 207
0074 8067              SJMP    ?C0190
                                           ; SOURCE LINE # 208
0076         ?C0055:
                                           ; SOURCE LINE # 209
0076 7F62              MOV     R7,#062H
0078 020000      E     LJMP    _Cmd_44
                                           ; SOURCE LINE # 210
                                           ; SOURCE LINE # 211
007B         ?C0056:
                                           ; SOURCE LINE # 212
007B         ?C0177:
                                           ; SOURCE LINE # 213
007B 8060              SJMP    ?C0190
                                           ; SOURCE LINE # 214
007D         ?C0057:
                                           ; SOURCE LINE # 215
007D         ?C0178:
                                           ; SOURCE LINE # 216
007D 805E              SJMP    ?C0190
                                           ; SOURCE LINE # 217
007F         ?C0058:
                                           ; SOURCE LINE # 218
007F         ?C0179:
                                           ; SOURCE LINE # 219
007F 805C              SJMP    ?C0190
                                           ; SOURCE LINE # 220
                                           ; SOURCE LINE # 221
                                           ; SOURCE LINE # 222
0081         ?C0060:
                                           ; SOURCE LINE # 223
0081 750004      E     MOV     PM1Step,#04H
                                           ; SOURCE LINE # 224
0084 22                RET     
                                           ; SOURCE LINE # 225
0085         ?C0061:
                                           ; SOURCE LINE # 226
                                           ; SOURCE LINE # 227
0085 8014              SJMP    ?C0181
                                           ; SOURCE LINE # 228
                                           ; SOURCE LINE # 231
0087         ?C0063:
                                           ; SOURCE LINE # 232
C51 COMPILER V8.12   OEM_ACPI                                                              07/28/2018 12:03:49 PAGE 22  

0087         ?C0180:
                                           ; SOURCE LINE # 233
0087 8054              SJMP    ?C0190
                                           ; SOURCE LINE # 235
0089         ?C0064:
                                           ; SOURCE LINE # 236
0089 020000      E     LJMP    Erase_EEPROMAll
                                           ; SOURCE LINE # 237
                                           ; SOURCE LINE # 239
008C         ?C0065:
                                           ; SOURCE LINE # 240
008C 900000      E     MOV     DPTR,#ACPI_HOTKEY
008F E0                MOVX    A,@DPTR
0090 4440              ORL     A,#040H
0092 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 241
0093 22                RET     
                                           ; SOURCE LINE # 243
0094         ?C0066:
                                           ; SOURCE LINE # 244
0094 7F62              MOV     R7,#062H
0096 020000      E     LJMP    _Cmd_51
                                           ; SOURCE LINE # 245
                                           ; SOURCE LINE # 246
0099         ?C0067:
                                           ; SOURCE LINE # 247
0099         ?C0183:
                                           ; SOURCE LINE # 248
0099 8042              SJMP    ?C0190
                                           ; SOURCE LINE # 249
009B         ?C0068:
                                           ; SOURCE LINE # 250
009B         ?C0181:
009B 750003      E     MOV     PM1Step,#03H
                                           ; SOURCE LINE # 251
009E 22                RET     
                                           ; SOURCE LINE # 252
                                           ; SOURCE LINE # 253
                                           ; SOURCE LINE # 254
009F         ?C0070:
                                           ; SOURCE LINE # 255
009F         ?C0184:
                                           ; SOURCE LINE # 256
009F 803C              SJMP    ?C0190
                                           ; SOURCE LINE # 257
00A1         ?C0071:
                                           ; SOURCE LINE # 258
00A1         ?C0185:
                                           ; SOURCE LINE # 259
00A1 803A              SJMP    ?C0190
                                           ; SOURCE LINE # 260
                                           ; SOURCE LINE # 261
                                           ; SOURCE LINE # 262
00A3         ?C0073:
                                           ; SOURCE LINE # 263
00A3         ?C0186:
                                           ; SOURCE LINE # 264
00A3 8038              SJMP    ?C0190
                                           ; SOURCE LINE # 266
00A5         ?C0074:
                                           ; SOURCE LINE # 268
00A5 020000      E     LJMP    Unlock_ShipMode
C51 COMPILER V8.12   OEM_ACPI                                                              07/28/2018 12:03:49 PAGE 23  

                                           ; SOURCE LINE # 270
                                           ; SOURCE LINE # 271
00A8         ?C0075:
                                           ; SOURCE LINE # 273
00A8 900000      E     MOV     DPTR,#ShipModeEn
00AB 74A5              MOV     A,#0A5H
00AD F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 274
00AE 7D5A              MOV     R5,#05AH
00B0 7F62              MOV     R7,#062H
00B2 120000      R     LCALL   _Data2PortDirect
                                           ; SOURCE LINE # 275
00B5 7FA5              MOV     R7,#0A5H
00B7 020000      E     LJMP    _RamDebug
                                           ; SOURCE LINE # 277
                                           ; SOURCE LINE # 279
00BA         ?C0076:
                                           ; SOURCE LINE # 280
00BA         ?C0187:
                                           ; SOURCE LINE # 281
00BA 8021              SJMP    ?C0190
                                           ; SOURCE LINE # 282
00BC         ?C0077:
                                           ; SOURCE LINE # 283
00BC         ?C0188:
                                           ; SOURCE LINE # 284
00BC 801F              SJMP    ?C0190
                                           ; SOURCE LINE # 286
00BE         ?C0078:
                                           ; SOURCE LINE # 287
00BE 020000      E     LJMP    Cmd_75
                                           ; SOURCE LINE # 288
                                           ; SOURCE LINE # 291
00C1         ?C0079:
                                           ; SOURCE LINE # 292
00C1         ?C0189:
                                           ; SOURCE LINE # 293
00C1 801A              SJMP    ?C0190
                                           ; SOURCE LINE # 294
                                           ; SOURCE LINE # 299
00C3         ?C0081:
                                           ; SOURCE LINE # 300
00C3 900000      E     MOV     DPTR,#Bioswatchdog
00C6 7401              MOV     A,#01H
00C8 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 301
00C9 E4                CLR     A
00CA 900000      E     MOV     DPTR,#Bioswatchdogtime
                                           ; SOURCE LINE # 302
                                           ; SOURCE LINE # 303
00CD 8004              SJMP    ?C0192
                                           ; SOURCE LINE # 304
00CF         ?C0082:
                                           ; SOURCE LINE # 305
00CF E4                CLR     A
00D0 900000      E     MOV     DPTR,#Bioswatchdog
00D3         ?C0192:
00D3 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 306
00D4 7D55              MOV     R5,#055H
00D6 7F62              MOV     R7,#062H
00D8 020000      R     LJMP    _Data2PortDirect
C51 COMPILER V8.12   OEM_ACPI                                                              07/28/2018 12:03:49 PAGE 24  

                                           ; SOURCE LINE # 307
                                           ; SOURCE LINE # 310
00DB         ?C0083:
                                           ; SOURCE LINE # 311
00DB         ?C0191:
                                           ; SOURCE LINE # 312
00DB 8012              SJMP    ?C0193
                                           ; SOURCE LINE # 314
00DD         ?C0084:
                                           ; SOURCE LINE # 315
00DD         ?C0190:
00DD 750001      E     MOV     PM1Step,#01H
                                           ; SOURCE LINE # 316
00E0 22                RET     
                                           ; SOURCE LINE # 318
00E1         ?C0085:
                                           ; SOURCE LINE # 319
00E1 7DB1              MOV     R5,#0B1H
00E3 7F62              MOV     R7,#062H
00E5 020000      E     LJMP    _Cmd_B1
                                           ; SOURCE LINE # 320
                                           ; SOURCE LINE # 321
00E8         ?C0086:
                                           ; SOURCE LINE # 322
00E8 7DB2              MOV     R5,#0B2H
00EA 7F62              MOV     R7,#062H
00EC 020000      E     LJMP    _Cmd_B2
                                           ; SOURCE LINE # 323
                                           ; SOURCE LINE # 325
00EF         ?C0193:
00EF 750002      E     MOV     PM1Step,#02H
                                           ; SOURCE LINE # 327
                                           ; SOURCE LINE # 337
                                           ; SOURCE LINE # 338
00F2         ?C0088:
00F2 22                RET     
             ; FUNCTION _Hook_66Port (END)

             ; FUNCTION vOSSMbusWBlcok (BEGIN)
                                           ; SOURCE LINE # 342
                                           ; SOURCE LINE # 343
                                           ; SOURCE LINE # 345
0000 900000      E     MOV     DPTR,#SMB_ADDR
0003 E0                MOVX    A,@DPTR
0004 FB                MOV     R3,A
0005 900000      E     MOV     DPTR,#SMB_CMD
0008 E0                MOVX    A,@DPTR
0009 900000      E     MOV     DPTR,#?_bWSMBusBlock?BYTE+03H
000C F0                MOVX    @DPTR,A
000D 7E00        E     MOV     R6,#HIGH SMB_DATA
000F A3                INC     DPTR
0010 7400        E     MOV     A,#HIGH SMB_DATA
0012 F0                MOVX    @DPTR,A
0013 A3                INC     DPTR
0014 7400        E     MOV     A,#LOW SMB_DATA
0016 F0                MOVX    @DPTR,A
0017 900000      E     MOV     DPTR,#SMB_BCNT
001A E0                MOVX    A,@DPTR
001B 900000      E     MOV     DPTR,#?_bWSMBusBlock?BYTE+06H
001E F0                MOVX    @DPTR,A
001F A3                INC     DPTR
0020 7401              MOV     A,#01H
C51 COMPILER V8.12   OEM_ACPI                                                              07/28/2018 12:03:49 PAGE 25  

0022 F0                MOVX    @DPTR,A
0023 7D14              MOV     R5,#014H
0025 FF                MOV     R7,A
0026 120000      E     LCALL   _bWSMBusBlock
                                           ; SOURCE LINE # 346
0029         ?C0089:
0029 22                RET     
             ; FUNCTION vOSSMbusWBlcok (END)

             ; FUNCTION vOSSMbusRBlcok (BEGIN)
                                           ; SOURCE LINE # 348
                                           ; SOURCE LINE # 349
                                           ; SOURCE LINE # 350
0000 900000      E     MOV     DPTR,#SMB_ADDR
0003 E0                MOVX    A,@DPTR
0004 FB                MOV     R3,A
0005 900000      E     MOV     DPTR,#SMB_CMD
0008 E0                MOVX    A,@DPTR
0009 900000      E     MOV     DPTR,#?_bRSMBusBlock?BYTE+03H
000C F0                MOVX    @DPTR,A
000D 7E00        E     MOV     R6,#HIGH SMB_DATA
000F A3                INC     DPTR
0010 7400        E     MOV     A,#HIGH SMB_DATA
0012 F0                MOVX    @DPTR,A
0013 A3                INC     DPTR
0014 7400        E     MOV     A,#LOW SMB_DATA
0016 F0                MOVX    @DPTR,A
0017 7D14              MOV     R5,#014H
0019 7F01              MOV     R7,#01H
001B 120000      E     LCALL   _bRSMBusBlock
                                           ; SOURCE LINE # 351
001E         ?C0090:
001E 22                RET     
             ; FUNCTION vOSSMbusRBlcok (END)

             ; FUNCTION vOSSMbusRByte (BEGIN)
                                           ; SOURCE LINE # 353
                                           ; SOURCE LINE # 354
                                           ; SOURCE LINE # 355
0000 900000      E     MOV     DPTR,#SMB_ADDR
0003 E0                MOVX    A,@DPTR
0004 FB                MOV     R3,A
0005 900000      E     MOV     DPTR,#SMB_CMD
0008 E0                MOVX    A,@DPTR
0009 900000      E     MOV     DPTR,#?_bRWSMBus?BYTE+03H
000C F0                MOVX    @DPTR,A
000D 7E00        E     MOV     R6,#HIGH SMB_DATA
000F A3                INC     DPTR
0010 7400        E     MOV     A,#HIGH SMB_DATA
0012 F0                MOVX    @DPTR,A
0013 A3                INC     DPTR
0014 7400        E     MOV     A,#LOW SMB_DATA
0016 F0                MOVX    @DPTR,A
0017 A3                INC     DPTR
0018 7401              MOV     A,#01H
001A F0                MOVX    @DPTR,A
001B 7D08              MOV     R5,#08H
001D FF                MOV     R7,A
001E 120000      E     LCALL   _bRWSMBus
                                           ; SOURCE LINE # 356
0021         ?C0091:
0021 22                RET     
C51 COMPILER V8.12   OEM_ACPI                                                              07/28/2018 12:03:49 PAGE 26  

             ; FUNCTION vOSSMbusRByte (END)

             ; FUNCTION vOSSMbusRWord (BEGIN)
                                           ; SOURCE LINE # 358
                                           ; SOURCE LINE # 359
                                           ; SOURCE LINE # 360
0000 900000      E     MOV     DPTR,#SMB_ADDR
0003 E0                MOVX    A,@DPTR
0004 FB                MOV     R3,A
0005 900000      E     MOV     DPTR,#SMB_CMD
0008 E0                MOVX    A,@DPTR
0009 900000      E     MOV     DPTR,#?_bRWSMBus?BYTE+03H
000C F0                MOVX    @DPTR,A
000D 7E00        E     MOV     R6,#HIGH SMB_DATA
000F A3                INC     DPTR
0010 7400        E     MOV     A,#HIGH SMB_DATA
0012 F0                MOVX    @DPTR,A
0013 A3                INC     DPTR
0014 7400        E     MOV     A,#LOW SMB_DATA
0016 F0                MOVX    @DPTR,A
0017 A3                INC     DPTR
0018 7401              MOV     A,#01H
001A F0                MOVX    @DPTR,A
001B 7D0C              MOV     R5,#0CH
001D FF                MOV     R7,A
001E 120000      E     LCALL   _bRWSMBus
                                           ; SOURCE LINE # 361
0021         ?C0092:
0021 22                RET     
             ; FUNCTION vOSSMbusRWord (END)

             ; FUNCTION vOSSMbusWBYTE (BEGIN)
                                           ; SOURCE LINE # 363
                                           ; SOURCE LINE # 364
                                           ; SOURCE LINE # 365
0000 900000      E     MOV     DPTR,#SMB_ADDR
0003 E0                MOVX    A,@DPTR
0004 FB                MOV     R3,A
0005 900000      E     MOV     DPTR,#SMB_CMD
0008 E0                MOVX    A,@DPTR
0009 900000      E     MOV     DPTR,#?_bRWSMBus?BYTE+03H
000C F0                MOVX    @DPTR,A
000D 7E00        E     MOV     R6,#HIGH SMB_DATA
000F A3                INC     DPTR
0010 7400        E     MOV     A,#HIGH SMB_DATA
0012 F0                MOVX    @DPTR,A
0013 A3                INC     DPTR
0014 7400        E     MOV     A,#LOW SMB_DATA
0016 F0                MOVX    @DPTR,A
0017 A3                INC     DPTR
0018 7401              MOV     A,#01H
001A F0                MOVX    @DPTR,A
001B 7D88              MOV     R5,#088H
001D FF                MOV     R7,A
001E 120000      E     LCALL   _bRWSMBus
                                           ; SOURCE LINE # 366
0021         ?C0093:
0021 22                RET     
             ; FUNCTION vOSSMbusWBYTE (END)

             ; FUNCTION vOSSMbusWWord (BEGIN)
                                           ; SOURCE LINE # 368
C51 COMPILER V8.12   OEM_ACPI                                                              07/28/2018 12:03:49 PAGE 27  

                                           ; SOURCE LINE # 369
                                           ; SOURCE LINE # 370
0000 900000      E     MOV     DPTR,#SMB_ADDR
0003 E0                MOVX    A,@DPTR
0004 FB                MOV     R3,A
0005 900000      E     MOV     DPTR,#SMB_CMD
0008 E0                MOVX    A,@DPTR
0009 900000      E     MOV     DPTR,#?_bRWSMBus?BYTE+03H
000C F0                MOVX    @DPTR,A
000D 7E00        E     MOV     R6,#HIGH SMB_DATA
000F A3                INC     DPTR
0010 7400        E     MOV     A,#HIGH SMB_DATA
0012 F0                MOVX    @DPTR,A
0013 A3                INC     DPTR
0014 7400        E     MOV     A,#LOW SMB_DATA
0016 F0                MOVX    @DPTR,A
0017 A3                INC     DPTR
0018 7401              MOV     A,#01H
001A F0                MOVX    @DPTR,A
001B 7D8C              MOV     R5,#08CH
001D FF                MOV     R7,A
001E 120000      E     LCALL   _bRWSMBus
                                           ; SOURCE LINE # 371
0021         ?C0094:
0021 22                RET     
             ; FUNCTION vOSSMbusWWord (END)

             ; FUNCTION DummyFunction (BEGIN)
                                           ; SOURCE LINE # 373
                                           ; SOURCE LINE # 374
                                           ; SOURCE LINE # 375
0000 22                RET     
             ; FUNCTION DummyFunction (END)

             ; FUNCTION OSSMbusComd (BEGIN)
                                           ; SOURCE LINE # 398
                                           ; SOURCE LINE # 399
                                           ; SOURCE LINE # 400
0000 900000      E     MOV     DPTR,#SMB_PRTC
0003 E0                MOVX    A,@DPTR
0004 7003              JNZ     $ + 5H
0006 020000      R     LJMP    ?C0110
                                           ; SOURCE LINE # 401
                                           ; SOURCE LINE # 402
0009 E4                CLR     A
000A 900000      E     MOV     DPTR,#SMB_STS
000D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 404
000E 900000      E     MOV     DPTR,#SMB_PRTC
0011 E0                MOVX    A,@DPTR
0012 540F              ANL     A,#0FH
0014 25E0              ADD     A,ACC
0016 2400        R     ADD     A,#LOW vOSSMbusComd_table
0018 F582              MOV     DPL,A
001A E4                CLR     A
001B 3400        R     ADDC    A,#HIGH vOSSMbusComd_table
001D F583              MOV     DPH,A
001F E4                CLR     A
0020 93                MOVC    A,@A+DPTR
0021 FE                MOV     R6,A
0022 7401              MOV     A,#01H
0024 93                MOVC    A,@A+DPTR
C51 COMPILER V8.12   OEM_ACPI                                                              07/28/2018 12:03:49 PAGE 28  

0025 CA                XCH     A,R2
0026 EE                MOV     A,R6
0027 CA                XCH     A,R2
0028 F9                MOV     R1,A
0029 120000      E     LCALL   ?C?ICALL
002C EF                MOV     A,R7
002D 6008              JZ      ?C0097
                                           ; SOURCE LINE # 405
002F 900000      E     MOV     DPTR,#SMB_STS
0032 7480              MOV     A,#080H
0034 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 406
0035 8058              SJMP    ?C0098
0037         ?C0097:
                                           ; SOURCE LINE # 408
                                           ; SOURCE LINE # 409
0037 900000      E     MOV     DPTR,#HOSTA_A
003A E0                MOVX    A,@DPTR
003B 30E008            JNB     ACC.0,?C0099
003E 900000      E     MOV     DPTR,#SMB_STS
0041 741A              MOV     A,#01AH
0043 F0                MOVX    @DPTR,A
0044 8049              SJMP    ?C0098
0046         ?C0099:
                                           ; SOURCE LINE # 410
0046 900000      E     MOV     DPTR,#HOSTA_A
0049 E0                MOVX    A,@DPTR
004A 30E208            JNB     ACC.2,?C0101
004D 900000      E     MOV     DPTR,#SMB_STS
0050 7417              MOV     A,#017H
0052 F0                MOVX    @DPTR,A
0053 803A              SJMP    ?C0098
0055         ?C0101:
                                           ; SOURCE LINE # 411
0055 900000      E     MOV     DPTR,#HOSTA_A
0058 E0                MOVX    A,@DPTR
0059 30E308            JNB     ACC.3,?C0103
005C 900000      E     MOV     DPTR,#SMB_STS
005F 7407              MOV     A,#07H
0061 F0                MOVX    @DPTR,A
0062 802B              SJMP    ?C0098
0064         ?C0103:
                                           ; SOURCE LINE # 412
0064 900000      E     MOV     DPTR,#HOSTA_A
0067 E0                MOVX    A,@DPTR
0068 30E408            JNB     ACC.4,?C0105
006B 900000      E     MOV     DPTR,#SMB_STS
006E 7419              MOV     A,#019H
0070 F0                MOVX    @DPTR,A
0071 801C              SJMP    ?C0098
0073         ?C0105:
                                           ; SOURCE LINE # 413
0073 900000      E     MOV     DPTR,#HOSTA_A
0076 E0                MOVX    A,@DPTR
0077 30E508            JNB     ACC.5,?C0107
007A 900000      E     MOV     DPTR,#SMB_STS
007D 7410              MOV     A,#010H
007F F0                MOVX    @DPTR,A
0080 800D              SJMP    ?C0098
0082         ?C0107:
                                           ; SOURCE LINE # 414
0082 900000      E     MOV     DPTR,#HOSTA_A
C51 COMPILER V8.12   OEM_ACPI                                                              07/28/2018 12:03:49 PAGE 29  

0085 E0                MOVX    A,@DPTR
0086 30E606            JNB     ACC.6,?C0098
0089 900000      E     MOV     DPTR,#SMB_STS
008C 7418              MOV     A,#018H
008E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 415
008F         ?C0098:
                                           ; SOURCE LINE # 416
008F E4                CLR     A
0090 900000      E     MOV     DPTR,#SMB_PRTC
0093 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 419
                                           ; SOURCE LINE # 420
0094         ?C0110:
0094 22                RET     
             ; FUNCTION OSSMbusComd (END)

             ; FUNCTION Hook_ACPICommand (BEGIN)
                                           ; SOURCE LINE # 427
                                           ; SOURCE LINE # 428
                                           ; SOURCE LINE # 430
0000 020000      R     LJMP    OSSMbusComd
             ; FUNCTION Hook_ACPICommand (END)

             ; FUNCTION OEM_ACPI_Gen_Int (BEGIN)
                                           ; SOURCE LINE # 437
                                           ; SOURCE LINE # 438
                                           ; SOURCE LINE # 439
0000 7F01              MOV     R7,#01H
0002 020000      E     LJMP    _ACPI_Gen_Int
             ; FUNCTION OEM_ACPI_Gen_Int (END)

             ; FUNCTION ResetSCIEvent (BEGIN)
                                           ; SOURCE LINE # 445
                                           ; SOURCE LINE # 446
                                           ; SOURCE LINE # 448
0000 900000      E     MOV     DPTR,#PM1STS
0003 E0                MOVX    A,@DPTR
0004 54DF              ANL     A,#0DFH
0006 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 449
0007 C200        E     CLR     ECCheckBurstMode
                                           ; SOURCE LINE # 450
0009 22                RET     
             ; FUNCTION ResetSCIEvent (END)

             ; FUNCTION _ECQEvent (BEGIN)
                                           ; SOURCE LINE # 458
;---- Variable 'sci_number' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 459
                                           ; SOURCE LINE # 460
0000 900000      E     MOV     DPTR,#SYS_MISC1
0003 E0                MOVX    A,@DPTR
0004 30E740            JNB     ACC.7,?C0116
0007 900000      E     MOV     DPTR,#SysPowState
000A E0                MOVX    A,@DPTR
000B 6411              XRL     A,#011H
000D 7038              JNZ     ?C0116
                                           ; SOURCE LINE # 461
                                           ; SOURCE LINE # 463
000F         ?C0114:
                                           ; SOURCE LINE # 465
C51 COMPILER V8.12   OEM_ACPI                                                              07/28/2018 12:03:49 PAGE 30  

000F 900000      E     MOV     DPTR,#SCI_Event_In_Index
0012 E0                MOVX    A,@DPTR
0013 F500        E     MOV     ITempB05,A
                                           ; SOURCE LINE # 466
0015 AE00        E     MOV     R6,ITempB05
0017 7400        E     MOV     A,#LOW SCI_Event_Buffer
0019 2E                ADD     A,R6
001A F582              MOV     DPL,A
001C E4                CLR     A
001D 3400        E     ADDC    A,#HIGH SCI_Event_Buffer
001F F583              MOV     DPH,A
0021 EF                MOV     A,R7
0022 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 467
0023 0500        E     INC     ITempB05
                                           ; SOURCE LINE # 468
0025 E500        E     MOV     A,ITempB05
0027 C3                CLR     C
0028 9408              SUBB    A,#08H
002A 4003              JC      ?C0117
                                           ; SOURCE LINE # 469
                                           ; SOURCE LINE # 470
002C E4                CLR     A
002D F500        E     MOV     ITempB05,A
                                           ; SOURCE LINE # 471
002F         ?C0117:
                                           ; SOURCE LINE # 473
002F 900000      E     MOV     DPTR,#SCI_Event_Out_Index
0032 E0                MOVX    A,@DPTR
0033 6500        E     XRL     A,ITempB05
0035 6006              JZ      ?C0118
                                           ; SOURCE LINE # 474
                                           ; SOURCE LINE # 475
0037 900000      E     MOV     DPTR,#SCI_Event_In_Index
003A E500        E     MOV     A,ITempB05
003C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 476
003D         ?C0118:
                                           ; SOURCE LINE # 477
003D 900000      E     MOV     DPTR,#PM1STS
0040 E0                MOVX    A,@DPTR
0041 4420              ORL     A,#020H
0043 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 478
0044 120000      R     LCALL   OEM_ACPI_Gen_Int
                                           ; SOURCE LINE # 479
0047         ?C0116:
0047 22                RET     
             ; FUNCTION _ECQEvent (END)

             ; FUNCTION ECSMIEvent (BEGIN)
                                           ; SOURCE LINE # 482
                                           ; SOURCE LINE # 483
                                           ; SOURCE LINE # 484
0000 900000      E     MOV     DPTR,#SysPowState
0003 E0                MOVX    A,@DPTR
0004 B4111B            CJNE    A,#011H,?C0120
                                           ; SOURCE LINE # 485
                                           ; SOURCE LINE # 487
0007         ?C0119:
                                           ; SOURCE LINE # 488
0007 900000      E     MOV     DPTR,#PM1STS
C51 COMPILER V8.12   OEM_ACPI                                                              07/28/2018 12:03:49 PAGE 31  

000A E0                MOVX    A,@DPTR
000B 4440              ORL     A,#040H
000D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 489
000E 120000      E     LCALL   DisableAllInterrupt
                                           ; SOURCE LINE # 490
0011 120000      E     LCALL   Hook_SMIOFF
                                           ; SOURCE LINE # 491
0014 120000      E     LCALL   Hook_SMION
                                           ; SOURCE LINE # 493
0017 E4                CLR     A
0018 900000      E     MOV     DPTR,#WNCKR
001B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 494
001C 120000      E     LCALL   Hook_SMIOFF
                                           ; SOURCE LINE # 495
001F 120000      E     LCALL   EnableAllInterrupt
                                           ; SOURCE LINE # 496
0022         ?C0120:
0022 22                RET     
             ; FUNCTION ECSMIEvent (END)

             ; FUNCTION _ECSMI_SCIEvent (BEGIN)
                                           ; SOURCE LINE # 499
;---- Variable 'smi_number' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 500
                                           ; SOURCE LINE # 502
0000 020000      R     LJMP    _ECQEvent
             ; FUNCTION _ECSMI_SCIEvent (END)

             ; FUNCTION _Hook_ReadMapECSpace (BEGIN)
                                           ; SOURCE LINE # 510
;---- Variable 'MapIndex' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 511
                                           ; SOURCE LINE # 512
0000 7404              MOV     A,#04H
0002 8F82              MOV     DPL,R7
0004 F583              MOV     DPH,A
0006 E0                MOVX    A,@DPTR
0007 FF                MOV     R7,A
                                           ; SOURCE LINE # 513
0008         ?C0122:
0008 22                RET     
             ; FUNCTION _Hook_ReadMapECSpace (END)

             ; FUNCTION _SetECSpaceAsRO (BEGIN)
                                           ; SOURCE LINE # 515
0000 900000      R     MOV     DPTR,#formerByte
0003 EB                MOV     A,R3
0004 F0                MOVX    @DPTR,A
0005 A3                INC     DPTR
0006 EA                MOV     A,R2
0007 F0                MOVX    @DPTR,A
0008 A3                INC     DPTR
0009 E9                MOV     A,R1
000A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 516
                                           ; SOURCE LINE # 517
;---- Variable 'index' assigned to Register 'R7' ----
000B E4                CLR     A
000C FF                MOV     R7,A
                                           ; SOURCE LINE # 518
C51 COMPILER V8.12   OEM_ACPI                                                              07/28/2018 12:03:49 PAGE 32  

;---- Variable 'maskTemp' assigned to Register 'R6' ----
000D FE                MOV     R6,A
                                           ; SOURCE LINE # 519
000E 900000      R     MOV     DPTR,#indexTemp
0011 04                INC     A
0012 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 520
0013         ?C0123:
                                           ; SOURCE LINE # 521
                                           ; SOURCE LINE # 522
0013 7401              MOV     A,#01H
0015 C8                XCH     A,R0
0016 EF                MOV     A,R7
0017 C8                XCH     A,R0
0018 08                INC     R0
0019 8002              SJMP    ?C0166
001B         ?C0165:
001B C3                CLR     C
001C 33                RLC     A
001D         ?C0166:
001D D8FC              DJNZ    R0,?C0165
001F FE                MOV     R6,A
0020 900000      R     MOV     DPTR,#indexTemp
0023 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 523
0024 900000      R     MOV     DPTR,#bitMask
0027 E0                MOVX    A,@DPTR
0028 5E                ANL     A,R6
0029 FE                MOV     R6,A
                                           ; SOURCE LINE # 524
002A 6034              JZ      ?C0125
                                           ; SOURCE LINE # 525
                                           ; SOURCE LINE # 526
002C 900000      R     MOV     DPTR,#formerByte
002F E0                MOVX    A,@DPTR
0030 FB                MOV     R3,A
0031 A3                INC     DPTR
0032 E0                MOVX    A,@DPTR
0033 FA                MOV     R2,A
0034 A3                INC     DPTR
0035 E0                MOVX    A,@DPTR
0036 F9                MOV     R1,A
0037 120000      E     LCALL   ?C?CLDPTR
003A 5E                ANL     A,R6
003B 900000      R     MOV     DPTR,#writeByte
003E 600E              JZ      ?C0127
                                           ; SOURCE LINE # 527
0040 E0                MOVX    A,@DPTR
0041 FB                MOV     R3,A
0042 A3                INC     DPTR
0043 E0                MOVX    A,@DPTR
0044 FA                MOV     R2,A
0045 A3                INC     DPTR
0046 E0                MOVX    A,@DPTR
0047 F9                MOV     R1,A
0048 120000      E     LCALL   ?C?CLDPTR
004B 4E                ORL     A,R6
004C 800F              SJMP    ?C0194
004E         ?C0127:
                                           ; SOURCE LINE # 529
004E E0                MOVX    A,@DPTR
004F FB                MOV     R3,A
C51 COMPILER V8.12   OEM_ACPI                                                              07/28/2018 12:03:49 PAGE 33  

0050 A3                INC     DPTR
0051 E0                MOVX    A,@DPTR
0052 FA                MOV     R2,A
0053 A3                INC     DPTR
0054 E0                MOVX    A,@DPTR
0055 F9                MOV     R1,A
0056 120000      E     LCALL   ?C?CLDPTR
0059 FD                MOV     R5,A
005A EE                MOV     A,R6
005B F4                CPL     A
005C 5D                ANL     A,R5
005D         ?C0194:
005D 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 530
                                           ; SOURCE LINE # 531
0060         ?C0125:
0060 0F                INC     R7
0061 EF                MOV     A,R7
0062 B408AE            CJNE    A,#08H,?C0123
                                           ; SOURCE LINE # 532
0065         ?C0129:
0065 22                RET     
             ; FUNCTION _SetECSpaceAsRO (END)

             ; FUNCTION _Hook_WriteMapECSpace (BEGIN)
                                           ; SOURCE LINE # 538
0000 900000      R     MOV     DPTR,#MapIndex
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
0005 A3                INC     DPTR
0006 ED                MOV     A,R5
0007 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 539
                                           ; SOURCE LINE # 545
0008 900000      R     MOV     DPTR,#MapIndex
000B E0                MOVX    A,@DPTR
000C FD                MOV     R5,A
000D 7404              MOV     A,#04H
000F C9                XCH     A,R1
0010 ED                MOV     A,R5
0011 C9                XCH     A,R1
0012 900000      R     MOV     DPTR,#Tmp_XPntr
0015 7401              MOV     A,#01H
0017 F0                MOVX    @DPTR,A
0018 A3                INC     DPTR
0019 7404              MOV     A,#04H
001B F0                MOVX    @DPTR,A
001C A3                INC     DPTR
001D E9                MOV     A,R1
001E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 546
001F B4A10D            CJNE    A,#0A1H,?C0130
                                           ; SOURCE LINE # 547
                                           ; SOURCE LINE # 548
0022 7FA1              MOV     R7,#0A1H
0024 120000      E     LCALL   _RamDebug
                                           ; SOURCE LINE # 549
0027 900000      R     MOV     DPTR,#data1
002A E0                MOVX    A,@DPTR
002B FF                MOV     R7,A
002C 120000      E     LCALL   _RamDebug
                                           ; SOURCE LINE # 550
C51 COMPILER V8.12   OEM_ACPI                                                              07/28/2018 12:03:49 PAGE 34  

002F         ?C0130:
                                           ; SOURCE LINE # 551
002F 900000      R     MOV     DPTR,#MapIndex
0032 E0                MOVX    A,@DPTR
0033 6443              XRL     A,#043H
0035 7076              JNZ     ?C0131
                                           ; SOURCE LINE # 552
                                           ; SOURCE LINE # 553
0037 A3                INC     DPTR
0038 E0                MOVX    A,@DPTR
0039 30E530            JNB     ACC.5,?C0132
003C 900000      E     MOV     DPTR,#pDevStatus1
003F E0                MOVX    A,@DPTR
0040 20E529            JB      ACC.5,?C0132
                                           ; SOURCE LINE # 554
                                           ; SOURCE LINE # 555
0043 7FD2              MOV     R7,#0D2H
0045 120000      E     LCALL   _RamDebug
                                           ; SOURCE LINE # 556
0048 900000      R     MOV     DPTR,#data1
004B E0                MOVX    A,@DPTR
004C FF                MOV     R7,A
004D 120000      E     LCALL   _RamDebug
                                           ; SOURCE LINE # 557
0050 900000      E     MOV     DPTR,#pDevStatus1
0053 E0                MOVX    A,@DPTR
0054 FF                MOV     R7,A
0055 120000      E     LCALL   _RamDebug
                                           ; SOURCE LINE # 558
0058 900000      E     MOV     DPTR,#pDevStatus1
005B E0                MOVX    A,@DPTR
005C 30E40D            JNB     ACC.4,?C0132
                                           ; SOURCE LINE # 559
                                           ; SOURCE LINE # 560
005F E0                MOVX    A,@DPTR
0060 30E604            JNB     ACC.6,?C0134
                                           ; SOURCE LINE # 561
                                           ; SOURCE LINE # 562
0063 7F3F              MOV     R7,#03FH
                                           ; SOURCE LINE # 563
0065 8002              SJMP    ?C0195
0067         ?C0134:
                                           ; SOURCE LINE # 565
                                           ; SOURCE LINE # 566
0067 7F3E              MOV     R7,#03EH
0069         ?C0195:
0069 120000      R     LCALL   _ECQEvent
                                           ; SOURCE LINE # 567
                                           ; SOURCE LINE # 568
                                           ; SOURCE LINE # 569
006C         ?C0132:
                                           ; SOURCE LINE # 570
006C 900000      R     MOV     DPTR,#formerdate_XPntr
006F 7401              MOV     A,#01H
0071 F0                MOVX    @DPTR,A
0072 A3                INC     DPTR
0073 7400        E     MOV     A,#HIGH pDevStatus1
0075 F0                MOVX    @DPTR,A
0076 A3                INC     DPTR
0077 7400        E     MOV     A,#LOW pDevStatus1
0079 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 571
C51 COMPILER V8.12   OEM_ACPI                                                              07/28/2018 12:03:49 PAGE 35  

007A A3                INC     DPTR
007B 7401              MOV     A,#01H
007D F0                MOVX    @DPTR,A
007E A3                INC     DPTR
007F 7400        R     MOV     A,#HIGH data1
0081 F0                MOVX    @DPTR,A
0082 A3                INC     DPTR
0083 7400        R     MOV     A,#LOW data1
0085 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 572
0086 900000      R     MOV     DPTR,#writedate_XPntr
0089 E0                MOVX    A,@DPTR
008A F9                MOV     R1,A
008B A3                INC     DPTR
008C E0                MOVX    A,@DPTR
008D FA                MOV     R2,A
008E A3                INC     DPTR
008F E0                MOVX    A,@DPTR
0090 900000      R     MOV     DPTR,#?_SetECSpaceAsRO?BYTE+03H
0093 C9                XCH     A,R1
0094 F0                MOVX    @DPTR,A
0095 A3                INC     DPTR
0096 EA                MOV     A,R2
0097 F0                MOVX    @DPTR,A
0098 A3                INC     DPTR
0099 E9                MOV     A,R1
009A F0                MOVX    @DPTR,A
009B A3                INC     DPTR
009C 7453              MOV     A,#053H
009E F0                MOVX    @DPTR,A
009F 900000      R     MOV     DPTR,#formerdate_XPntr
00A2 E0                MOVX    A,@DPTR
00A3 FB                MOV     R3,A
00A4 A3                INC     DPTR
00A5 E0                MOVX    A,@DPTR
00A6 FA                MOV     R2,A
00A7 A3                INC     DPTR
00A8 E0                MOVX    A,@DPTR
00A9 F9                MOV     R1,A
00AA 120000      R     LCALL   _SetECSpaceAsRO
                                           ; SOURCE LINE # 573
00AD         ?C0131:
                                           ; SOURCE LINE # 574
00AD 900000      R     MOV     DPTR,#data1
00B0 E0                MOVX    A,@DPTR
00B1 FF                MOV     R7,A
00B2 900000      R     MOV     DPTR,#Tmp_XPntr
00B5 E0                MOVX    A,@DPTR
00B6 FB                MOV     R3,A
00B7 A3                INC     DPTR
00B8 E0                MOVX    A,@DPTR
00B9 FA                MOV     R2,A
00BA A3                INC     DPTR
00BB E0                MOVX    A,@DPTR
00BC F9                MOV     R1,A
00BD EF                MOV     A,R7
00BE 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 576
00C1 120000      E     LCALL   VPC_interface
                                           ; SOURCE LINE # 577
00C4 020000      E     LJMP    ThermalMailBox
             ; FUNCTION _Hook_WriteMapECSpace (END)
C51 COMPILER V8.12   OEM_ACPI                                                              07/28/2018 12:03:49 PAGE 36  


             ; FUNCTION _Data_To_PM1_nWait (BEGIN)
                                           ; SOURCE LINE # 581
;---- Variable 'data_byte' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 582
                                           ; SOURCE LINE # 583
0000 120000      E     LCALL   _Data_To_PM1
                                           ; SOURCE LINE # 585
0003 C28E              CLR     TR1
                                           ; SOURCE LINE # 586
0005 C2AB              CLR     ET1
                                           ; SOURCE LINE # 587
0007 00                NOP     
                                           ; SOURCE LINE # 588
0008 00                NOP     
                                           ; SOURCE LINE # 589
0009 00                NOP     
                                           ; SOURCE LINE # 590
000A 00                NOP     
                                           ; SOURCE LINE # 591
000B E4                CLR     A
000C F58D              MOV     TH1,A
                                           ; SOURCE LINE # 592
000E 758B01            MOV     TL1,#01H
                                           ; SOURCE LINE # 593
0011 C28F              CLR     TF1
                                           ; SOURCE LINE # 594
0013 D28E              SETB    TR1
0015         ?C0137:
                                           ; SOURCE LINE # 596
0015 208F0E            JB      TF1,?C0138
                                           ; SOURCE LINE # 597
                                           ; SOURCE LINE # 598
0018 900000      E     MOV     DPTR,#PM1STS
001B E0                MOVX    A,@DPTR
001C 30E007            JNB     ACC.0,?C0138
                                           ; SOURCE LINE # 599
                                           ; SOURCE LINE # 600
                                           ; SOURCE LINE # 601
001F         ?C0139:
                                           ; SOURCE LINE # 603
001F 900000      E     MOV     DPTR,#PM1STS
0022 E0                MOVX    A,@DPTR
0023 30E1EF            JNB     ACC.1,?C0137
                                           ; SOURCE LINE # 604
                                           ; SOURCE LINE # 605
                                           ; SOURCE LINE # 606
                                           ; SOURCE LINE # 607
0026         ?C0138:
                                           ; SOURCE LINE # 609
0026 C28E              CLR     TR1
                                           ; SOURCE LINE # 610
0028 C28F              CLR     TF1
                                           ; SOURCE LINE # 611
002A D2AB              SETB    ET1
                                           ; SOURCE LINE # 612
002C 22                RET     
             ; FUNCTION _Data_To_PM1_nWait (END)

             ; FUNCTION _Data2PortDirect (BEGIN)
                                           ; SOURCE LINE # 616
0000 900000      R     MOV     DPTR,#rData
C51 COMPILER V8.12   OEM_ACPI                                                              07/28/2018 12:03:49 PAGE 37  

0003 ED                MOV     A,R5
0004 F0                MOVX    @DPTR,A
;---- Variable 'nPort' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 617
                                           ; SOURCE LINE # 618
0005 EF                MOV     A,R7
0006 249E              ADD     A,#09EH
0008 6014              JZ      ?C0144
000A 24FA              ADD     A,#0FAH
000C 6018              JZ      ?C0145
000E 246A              ADD     A,#06AH
0010 601C              JZ      ?C0146
0012 249E              ADD     A,#09EH
0014 7032              JNZ     ?C0147
                                           ; SOURCE LINE # 619
                                           ; SOURCE LINE # 620
0016         ?C0143:
                                           ; SOURCE LINE # 622
0016 900000      R     MOV     DPTR,#rData
0019 E0                MOVX    A,@DPTR
001A FF                MOV     R7,A
001B 020000      E     LJMP    _Data_To_Port
                                           ; SOURCE LINE # 623
                                           ; SOURCE LINE # 624
001E         ?C0144:
                                           ; SOURCE LINE # 625
001E 900000      R     MOV     DPTR,#rData
0021 E0                MOVX    A,@DPTR
0022 FF                MOV     R7,A
0023 020000      E     LJMP    _Data_To_PM1
                                           ; SOURCE LINE # 626
                                           ; SOURCE LINE # 628
0026         ?C0145:
                                           ; SOURCE LINE # 630
0026 900000      R     MOV     DPTR,#rData
0029 E0                MOVX    A,@DPTR
002A FF                MOV     R7,A
002B 020000      E     LJMP    _Data_To_PM2
                                           ; SOURCE LINE # 631
                                           ; SOURCE LINE # 633
002E         ?C0146:
                                           ; SOURCE LINE # 634
002E 900000      R     MOV     DPTR,#rData
0031 E0                MOVX    A,@DPTR
0032 FF                MOV     R7,A
0033 900000      E     MOV     DPTR,#MMIO_rDATA_index
0036 E0                MOVX    A,@DPTR
0037 2400        E     ADD     A,#LOW MMIO_rDATA
0039 F582              MOV     DPL,A
003B E4                CLR     A
003C 3400        E     ADDC    A,#HIGH MMIO_rDATA
003E F583              MOV     DPH,A
0040 EF                MOV     A,R7
0041 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 635
0042 900000      E     MOV     DPTR,#MMIO_rDATA_index
0045 E0                MOVX    A,@DPTR
0046 04                INC     A
0047 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 636
                                           ; SOURCE LINE # 637
                                           ; SOURCE LINE # 638
C51 COMPILER V8.12   OEM_ACPI                                                              07/28/2018 12:03:49 PAGE 38  

0048         ?C0147:
0048 22                RET     
             ; FUNCTION _Data2PortDirect (END)

             ; FUNCTION _Data_To_PM2_nWait (BEGIN)
                                           ; SOURCE LINE # 642
;---- Variable 'data_byte' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 643
                                           ; SOURCE LINE # 644
0000 120000      E     LCALL   _Data_To_PM2
                                           ; SOURCE LINE # 646
0003 C28E              CLR     TR1
                                           ; SOURCE LINE # 647
0005 C2AB              CLR     ET1
                                           ; SOURCE LINE # 648
0007 00                NOP     
                                           ; SOURCE LINE # 649
0008 00                NOP     
                                           ; SOURCE LINE # 650
0009 00                NOP     
                                           ; SOURCE LINE # 651
000A 00                NOP     
                                           ; SOURCE LINE # 652
000B E4                CLR     A
000C F58D              MOV     TH1,A
                                           ; SOURCE LINE # 653
000E 758B01            MOV     TL1,#01H
                                           ; SOURCE LINE # 654
0011 C28F              CLR     TF1
                                           ; SOURCE LINE # 655
0013 D28E              SETB    TR1
0015         ?C0148:
                                           ; SOURCE LINE # 657
0015 208F0E            JB      TF1,?C0149
                                           ; SOURCE LINE # 658
                                           ; SOURCE LINE # 659
0018 900000      E     MOV     DPTR,#PM2STS
001B E0                MOVX    A,@DPTR
001C 30E007            JNB     ACC.0,?C0149
                                           ; SOURCE LINE # 660
                                           ; SOURCE LINE # 661
                                           ; SOURCE LINE # 662
001F         ?C0150:
                                           ; SOURCE LINE # 663
001F 900000      E     MOV     DPTR,#PM2STS
0022 E0                MOVX    A,@DPTR
0023 30E1EF            JNB     ACC.1,?C0148
                                           ; SOURCE LINE # 664
                                           ; SOURCE LINE # 665
                                           ; SOURCE LINE # 666
                                           ; SOURCE LINE # 667
0026         ?C0149:
                                           ; SOURCE LINE # 669
0026 C28E              CLR     TR1
                                           ; SOURCE LINE # 670
0028 C28F              CLR     TF1
                                           ; SOURCE LINE # 671
002A D2AB              SETB    ET1
                                           ; SOURCE LINE # 672
002C 22                RET     
             ; FUNCTION _Data_To_PM2_nWait (END)

C51 COMPILER V8.12   OEM_ACPI                                                              07/28/2018 12:03:49 PAGE 39  

             ; FUNCTION _Data2Port (BEGIN)
                                           ; SOURCE LINE # 677
0000 900000      R     MOV     DPTR,#rData
0003 ED                MOV     A,R5
0004 F0                MOVX    @DPTR,A
;---- Variable 'nPort' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 678
                                           ; SOURCE LINE # 679
0005 EF                MOV     A,R7
0006 249E              ADD     A,#09EH
0008 6014              JZ      ?C0155
000A 24FA              ADD     A,#0FAH
000C 6018              JZ      ?C0156
000E 246A              ADD     A,#06AH
0010 601C              JZ      ?C0157
0012 249E              ADD     A,#09EH
0014 7032              JNZ     ?C0158
                                           ; SOURCE LINE # 680
                                           ; SOURCE LINE # 681
0016         ?C0154:
                                           ; SOURCE LINE # 684
0016 900000      R     MOV     DPTR,#rData
0019 E0                MOVX    A,@DPTR
001A FF                MOV     R7,A
001B 020000      E     LJMP    _Data_To_Port_nWait
                                           ; SOURCE LINE # 685
                                           ; SOURCE LINE # 686
001E         ?C0155:
                                           ; SOURCE LINE # 688
001E 900000      R     MOV     DPTR,#rData
0021 E0                MOVX    A,@DPTR
0022 FF                MOV     R7,A
0023 020000      R     LJMP    _Data_To_PM1_nWait
                                           ; SOURCE LINE # 689
                                           ; SOURCE LINE # 691
0026         ?C0156:
                                           ; SOURCE LINE # 692
0026 900000      R     MOV     DPTR,#rData
0029 E0                MOVX    A,@DPTR
002A FF                MOV     R7,A
002B 020000      R     LJMP    _Data_To_PM2_nWait
                                           ; SOURCE LINE # 693
                                           ; SOURCE LINE # 695
002E         ?C0157:
                                           ; SOURCE LINE # 696
002E 900000      R     MOV     DPTR,#rData
0031 E0                MOVX    A,@DPTR
0032 FF                MOV     R7,A
0033 900000      E     MOV     DPTR,#MMIO_rDATA_index
0036 E0                MOVX    A,@DPTR
0037 2400        E     ADD     A,#LOW MMIO_rDATA
0039 F582              MOV     DPL,A
003B E4                CLR     A
003C 3400        E     ADDC    A,#HIGH MMIO_rDATA
003E F583              MOV     DPH,A
0040 EF                MOV     A,R7
0041 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 697
0042 900000      E     MOV     DPTR,#MMIO_rDATA_index
0045 E0                MOVX    A,@DPTR
0046 04                INC     A
0047 F0                MOVX    @DPTR,A
C51 COMPILER V8.12   OEM_ACPI                                                              07/28/2018 12:03:49 PAGE 40  

                                           ; SOURCE LINE # 698
                                           ; SOURCE LINE # 699
                                           ; SOURCE LINE # 700
0048         ?C0158:
0048 22                RET     
             ; FUNCTION _Data2Port (END)

             ; FUNCTION _MultiB2Port (BEGIN)
                                           ; SOURCE LINE # 702
0000 900000      R     MOV     DPTR,#rData
0003 ED                MOV     A,R5
0004 F0                MOVX    @DPTR,A
;---- Variable 'nPort' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 703
                                           ; SOURCE LINE # 704
0005 EF                MOV     A,R7
0006 249E              ADD     A,#09EH
0008 6014              JZ      ?C0161
000A 24FA              ADD     A,#0FAH
000C 6018              JZ      ?C0162
000E 246A              ADD     A,#06AH
0010 601C              JZ      ?C0163
0012 249E              ADD     A,#09EH
0014 7032              JNZ     ?C0164
                                           ; SOURCE LINE # 705
                                           ; SOURCE LINE # 706
0016         ?C0160:
                                           ; SOURCE LINE # 709
0016 900000      R     MOV     DPTR,#rData
0019 E0                MOVX    A,@DPTR
001A FF                MOV     R7,A
001B 020000      E     LJMP    _Data_To_Port_nWait
                                           ; SOURCE LINE # 710
                                           ; SOURCE LINE # 711
001E         ?C0161:
                                           ; SOURCE LINE # 713
001E 900000      R     MOV     DPTR,#rData
0021 E0                MOVX    A,@DPTR
0022 FF                MOV     R7,A
0023 020000      R     LJMP    _Data_To_PM1_nWait
                                           ; SOURCE LINE # 714
                                           ; SOURCE LINE # 716
0026         ?C0162:
                                           ; SOURCE LINE # 717
0026 900000      R     MOV     DPTR,#rData
0029 E0                MOVX    A,@DPTR
002A FF                MOV     R7,A
002B 020000      R     LJMP    _Data_To_PM2_nWait
                                           ; SOURCE LINE # 718
                                           ; SOURCE LINE # 720
002E         ?C0163:
                                           ; SOURCE LINE # 721
002E 900000      R     MOV     DPTR,#rData
0031 E0                MOVX    A,@DPTR
0032 FF                MOV     R7,A
0033 900000      E     MOV     DPTR,#MMIO_rDATA_index
0036 E0                MOVX    A,@DPTR
0037 2400        E     ADD     A,#LOW MMIO_rDATA
0039 F582              MOV     DPL,A
003B E4                CLR     A
003C 3400        E     ADDC    A,#HIGH MMIO_rDATA
003E F583              MOV     DPH,A
C51 COMPILER V8.12   OEM_ACPI                                                              07/28/2018 12:03:49 PAGE 41  

0040 EF                MOV     A,R7
0041 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 722
0042 900000      E     MOV     DPTR,#MMIO_rDATA_index
0045 E0                MOVX    A,@DPTR
0046 04                INC     A
0047 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 723
                                           ; SOURCE LINE # 724
                                           ; SOURCE LINE # 725
0048         ?C0164:
0048 22                RET     
             ; FUNCTION _MultiB2Port (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1795    ----
   CONSTANT SIZE    =     32    ----
   XDATA SIZE       =   ----      23
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)

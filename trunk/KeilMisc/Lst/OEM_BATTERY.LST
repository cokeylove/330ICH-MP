C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 1   


C51 COMPILER V8.12, COMPILATION OF MODULE OEM_BATTERY
OBJECT MODULE PLACED IN Code\OEM\OEM_BATTERY.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE Code\OEM\OEM_BATTERY.C LA WL(1) CD OT(9,SIZE) NOAREGS OR INCDIR(.\Code\CORE
                    -\INCLUDE\;.\Code\OEM\INCLUDE\;.\Code\CHIP\INCLUDE\)

line level    source

   1          /*-----------------------------------------------------------------------------
   2           * TITLE: OEM_BATTERY.C
   3           *
   4           * Author : Dino
   5           *
   6           * Note : These functions are reference only.
   7           *        Please follow your project software specification to do some modification.
   8           *---------------------------------------------------------------------------*/
   9          
  10          #include <CORE_INCLUDE.H>
  11          #include <OEM_INCLUDE.H>
  12          
  13          void UpdateNameSpace(void)
  14          {
  15   1              nBattGasgauge=BAT1PERCL;
  16   1              
  17   1              //remove 5% enable CPU prochot for system enter S4 more quickly, from 115s to 39s
  18   1          /*if((BAT1PERCL<=0x06)&&IS_MASK_CLEAR(SYS_STATUS,AC_ADP)) //ANGELAG050: remove start
  19   1          {
  20   1             SET_MASK(Thro_Status2, b5Bat_5PProtect);
  21   1          }
  22   1          else
  23   1          {
  24   1             CLR_MASK(Thro_Status2, b5Bat_5PProtect);
  25   1          }*/ //ANGELAG050: remove end
  26   1             
  27   1              nCycleCounter=EC_oCCBQl;
  28   1              EC_BatteryStatusL = nBattery0x16L;
  29   1              EC_BatteryStatusH = nBattery0x16H;
  30   1      
  31   1              if(IS_MASK_SET(nBattery0x16L,FullyChg))
  32   1          {
  33   2                      SET_MASK(nBatteryStatus1,ENFULL);
  34   2      
  35   2              if(nBattGasgauge == 100) // 100%
  36   2              {
  37   3                  if(IS_MASK_CLEAR(LENOVOPMFW_Temp,BATTERY_FULLED_100))
  38   3                  {
  39   4                      SET_MASK(LENOVOPMFW_Temp,BATTERY_FULLED_100);
  40   4                      ECSMI_SCIEvent(ACPI_BAT1IN_SCI); // Notify BIOS Update Batt Status
  41   4                  }
  42   3              }
  43   2              }
  44   1              else
  45   1          {
  46   2                      CLEAR_MASK(nBatteryStatus1,ENFULL);
  47   2              CLEAR_MASK(LENOVOPMFW_Temp,BATTERY_FULLED_100);
  48   2              }
  49   1      
  50   1              Lenovo_Battery_EM80();
  51   1      
  52   1          //Mos: Reset Battery Protection Status when AC off or battery plugout
  53   1              /* 
  54   1              if (IS_MASK_SET(StatusKeeper, BatteryProtectCHG))
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 2   

  55   1              {
  56   1                      if (!Read_AC_IN())
  57   1                      CLEAR_MASK(StatusKeeper, BatteryProtectCHG);
  58   1              }
  59   1              */  
  60   1      #if turboboostandstorage //storage mode action with support turbo boost charger
  61   1      
  62   1              if(testtoolflag==0)//Add flag for test tool to keep the battery RSOC at 60%
  63   1              {
  64   2                      if(IS_MASK_SET(LENOVOPMFW,BATTERY_STORAGE) && IS_MASK_CLEAR(LENOVOPMFW,BATTERY_MAIN_CAL))
  65   2                      {
  66   3                      //ANGELAG056: add start
  67   3                              if(IS_MASK_SET(System_Status,b0_System_Is_Heavy_Loading) || IS_MASK_SET(System_Status,b1_EC_S3_Auto_Wak
             -e_Up))
  68   3                              {
  69   4                                      CalcBatRCC = (nFullChgCapH << 8) + nFullChgCapL;
  70   4                                      CalcBatRCC = (CalcBatRCC / 20) + (CalcBatRCC / 200);
  71   4                                      nRemainingCapH = (CalcBatRCC >> 8);
  72   4                                      nRemainingCapL = (CalcBatRCC & 0xFF);
  73   4                              }
  74   3                              else
  75   3                              {
  76   4                              //ANGELAG056: add end
  77   4                                      nRemainingCapL = Bat0x0FTempL;
  78   4                                      nRemainingCapH = Bat0x0FTempH;
  79   4                              } //ANGELAG056: add
  80   3                      
  81   3                              SET_MASK(LENOVOPMFW_Temp,BATTERY_CYCLE_RUNNING);
  82   3                      
  83   3                              if(nBattGasgauge >= 55)
  84   3                              {
  85   4                                      if( IS_MASK_SET(ACOFF_SOURCE, BATTLEARN) )
  86   4                                      { 
  87   5                                      ECSMI_SCIEvent(ACPI_BAT1IN_SCI); 
  88   5                      }
  89   4                                      CLEAR_MASK(ACOFF_SOURCE, BATTLEARN);
  90   4                                      BATT_LEN_OFF(); //Mos //add battery learn mode
  91   4                                      //Mos: Change Status bit to avoid bit has been reset
  92   4                      if (IS_MASK_CLEAR(StatusKeeper, BatteryProtectCHG))
  93   4                      {
  94   5                              SET_MASK(nStopChgStat3H, EmStopChgarg);
  95   5                      }
  96   4                      else
  97   4                      {
  98   5                              CLEAR_MASK(nStopChgStat3H, EmStopChgarg);
  99   5                              if(nBattGasgauge == 60)
 100   5                                      {
 101   6                                                      if(KeepBattRemineCap == 0)
 102   6                                                      { 
 103   7                                                      KeepBattRemineCap = (WORD)(nRemainingCapH << 8) + nRemainingCapL; 
 104   7                              }
 105   6                                                      else
 106   6                                                      {
 107   7                                                              CalcBatRCC =(nFullChgCapH<<8)+nFullChgCapL;//ANGELAS101:Modify battery discharge when battery RSOC 
             -is 59% in storage mode.
 108   7                                                              //Mos: Avoid that stop charger but OS show god damn 59%...
 109   7                                                              //if (((WORD)(nRemainingCapH << 8) + nRemainingCapL) > (KeepBattRemineCap + 10))//ANGELAS101:-Modif
             -y battery discharge when battery RSOC is 59% in storage mode.
 110   7                                                              if(((WORD)(nRemainingCapH << 8) + nRemainingCapL) > (KeepBattRemineCap + (CalcBatRCC/200)))//ANGELA
             -S101:+Modify battery discharge when battery RSOC is 59% in storage mode.
 111   7                                                              {
 112   8                                                                      KeepBattRemineCap = 0;
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 3   

 113   8                                                                      CLEAR_MASK(StatusKeeper, BatteryProtectCHG);
 114   8                                                                      ECSMI_SCIEvent(ACPI_BAT1IN_SCI); // Notify BIOS Update Batt Status
 115   8                                                              }
 116   7                                                      }
 117   6                                              }
 118   5                      }
 119   4                                      //ACOFF_LOW();
 120   4                              
 121   4                              }
 122   3                              else if (nBattGasgauge < 55)
 123   3                              {
 124   4                                      CLEAR_MASK(ACOFF_SOURCE, BATTLEARN);
 125   4                                      BATT_LEN_OFF(); //MosG25:add battery learn mode
 126   4                                      //Mos: Change Status bit to avoid bit has been reset
 127   4                      SET_MASK(StatusKeeper, BatteryProtectCHG);
 128   4                                      CLR_MASK(nStopChgStat3H,EmStopChgarg);
 129   4                                      //ACOFF_LOW();                                                                                  // charge
 130   4                              }
 131   3                      }
 132   2                      else 
 133   2                      {
 134   3                              //if (IS_MASK_SET(EC_BatteryStatusL,FullyChg)&&(IS_MASK_SET(SYS_STATUS,AC_ADP))) //MEILING025:remove.
 135   3                              if (IS_MASK_SET(EC_BatteryStatusL,FullyChg)&&(IS_MASK_SET(SYS_STATUS,AC_ADP))&&(nBattGasgauge==100)) //
             -MEILING025:add.
 136   3                              {
 137   4                                      nRemainingCapL = nFullChgCapL;
 138   4                                      nRemainingCapH = nFullChgCapH;
 139   4                              }
 140   3                              else
 141   3                              {
 142   4                                      //Mos: return RSOC(0x0d)=0 to BIOS if battery error
 143   4                                      //ANGELAG056: remove start
 144   4                              //      if (ChkBattery_abnormal_status == ChkBattery_abnormal_status_error)
 145   4                              //      {
 146   4                                              //nRemainingCapL = 0;  //LMLKBL0006:remove.
 147   4                                              //nRemainingCapH = 0;  //LMLKBL0006:remove.
 148   4                              //      }
 149   4                              //ANGELAG056: remove end
 150   4                                      //ANGELAG056: add start
 151   4                                      if(IS_MASK_SET(System_Status,b0_System_Is_Heavy_Loading) || IS_MASK_SET(System_Status,b1_EC_S3_Auto_Wa
             -ke_Up))
 152   4                                      {
 153   5                                              CalcBatRCC = (nFullChgCapH << 8) + nFullChgCapL;
 154   5                                              CalcBatRCC = (CalcBatRCC / 20) + (CalcBatRCC / 200);
 155   5                                              nRemainingCapH = (CalcBatRCC >> 8);
 156   5                                              nRemainingCapL = (CalcBatRCC & 0xFF);
 157   5                                      }
 158   4                                      //ANGELAG056: add end
 159   4                                      else
 160   4                                      {
 161   5                                              nRemainingCapL = Bat0x0FTempL;
 162   5                                              nRemainingCapH = Bat0x0FTempH;
 163   5                                      }
 164   4                              }
 165   3      
 166   3                      if(IS_MASK_SET(LENOVOPMFW_Temp,BATTERY_CYCLE_RUNNING))
 167   3                      {
 168   4                      CLEAR_MASK(LENOVOPMFW_Temp,BATTERY_CYCLE_RUNNING);
 169   4      
 170   4                      if(IS_MASK_SET(ACOFF_SOURCE,BATTLEARN))
 171   4                      {
 172   5                              CLEAR_MASK(ACOFF_SOURCE, BATTLEARN);
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 4   

 173   5                                              BATT_LEN_OFF(); //MosG25:add battery learn mode
 174   5                              //ACOFF_LOW();
 175   5                      }
 176   4                      }
 177   3      
 178   3                              //Mos: Clear BATTERY_CYCLE_fulchg when change to Longest Battery Mode
 179   3                      CLEAR_MASK(StatusKeeper, BatteryProtectCHG);
 180   3                              CLR_MASK(nStopChgStat3H,EmStopChgarg);
 181   3              }
 182   2              }
 183   1              else if(testtoolflag==1)
 184   1              {
 185   2                      if (IS_MASK_SET(LENOVOPMFW,BATTERY_STORAGE) && IS_MASK_CLEAR(LENOVOPMFW,BATTERY_MAIN_CAL)) 
 186   2                      {
 187   3                              //Mos: return RSOC(0x0d)=0 to BIOS if battery error
 188   3                              /*  
 189   3                              if ((ChkBattery_abnormal_status == ChkBattery_abnormal_status_error)
 190   3                                      || (Chk_Trickle_Current_status == Chk_Trickle_Current_status_error))
 191   3                              {
 192   3                                      //nRemainingCapL = 0;
 193   3                                      //nRemainingCapH = 0;
 194   3                                      //Mos: Disable report RSOC(0x0d) = 0 to BIOS, need to modify spec
 195   3                                      nRemainingCapL = Bat0x0FTempL;
 196   3                                      nRemainingCapH = Bat0x0FTempH;
 197   3                              }
 198   3                              else
 199   3                              */              
 200   3                              //ANGELAG056: add start
 201   3                              if(IS_MASK_SET(System_Status,b0_System_Is_Heavy_Loading) || IS_MASK_SET(System_Status,b1_EC_S3_Auto_Wak
             -e_Up))
 202   3                              {
 203   4                                      CalcBatRCC = (nFullChgCapH << 8) + nFullChgCapL;
 204   4                                      CalcBatRCC = (CalcBatRCC / 20) + (CalcBatRCC / 200);
 205   4                                      nRemainingCapH = (CalcBatRCC >> 8);
 206   4                                      nRemainingCapL = (CalcBatRCC & 0xFF);
 207   4                                      
 208   4                              }
 209   3                              else
 210   3                              {
 211   4                              //ANGELAG056: add end
 212   4                                      nRemainingCapL = Bat0x0FTempL;
 213   4                                      nRemainingCapH = Bat0x0FTempH;
 214   4                              } //ANGELAG056: add
 215   3                      
 216   3                              SET_MASK(LENOVOPMFW_Temp,BATTERY_CYCLE_RUNNING);
 217   3      
 218   3                              if (nBattGasgauge > 60)
 219   3                              {
 220   4                                      SET_MASK(ACOFF_SOURCE, BATTLEARN);
 221   4                                      BATT_LEN_ON();  //add battery learn mode
 222   4                                      /*
 223   4                                      if(IS_MASK_SET(CHGIC_ReadCmd0x37L, TurboBoost)&&(nNowCurrentH & 0x80))
 224   4                                      {
 225   4                                              ACOFF_LOW();
 226   4                                              CLEAR_MASK(ACOFF_SOURCE, BATTLEARN);
 227   4                                      }
 228   4                                      else                      
 229   4                                              ACOFF_HI();             // discharge
 230   4                                      */
 231   4                              }
 232   3                              else if (nBattGasgauge >= 55 && nBattGasgauge <= 60)
 233   3                              {
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 5   

 234   4                                      if ( IS_MASK_SET(ACOFF_SOURCE, BATTLEARN) )
 235   4                                      { 
 236   5                                      ECSMI_SCIEvent(ACPI_BAT1IN_SCI); 
 237   5                      }
 238   4                                      CLEAR_MASK(ACOFF_SOURCE, BATTLEARN);
 239   4                                      BATT_LEN_OFF(); //Mos //add battery learn mode
 240   4                                      //Mos: Change Status bit to avoid bit has been reset
 241   4                      if (IS_MASK_CLEAR(StatusKeeper, BatteryProtectCHG))
 242   4                      {
 243   5                              SET_MASK(nStopChgStat3H, EmStopChgarg);
 244   5                      }
 245   4                      else
 246   4                      {
 247   5                              CLEAR_MASK(nStopChgStat3H, EmStopChgarg);
 248   5                              if (nBattGasgauge == 60)
 249   5                                      {
 250   6                                                      if (KeepBattRemineCap == 0)
 251   6                                                      { 
 252   7                                                      KeepBattRemineCap = (WORD)(nRemainingCapH << 8) + nRemainingCapL; 
 253   7                              }
 254   6                                                      else
 255   6                                                      {
 256   7                                                              CalcBatRCC =(nFullChgCapH<<8)+nFullChgCapL; //ANGELAS101:Modify battery discharge when battery RSOC
             - is 59% in storage mode.
 257   7                                                              //Mos: Avoid that stop charger but OS show god damn 59%...
 258   7                                                              //if (((WORD)(nRemainingCapH << 8) + nRemainingCapL) > (KeepBattRemineCap + 10))//ANGELAS101:Modify
             - battery discharge when battery RSOC is 59% in storage mode.
 259   7                                                      if (((WORD)(nRemainingCapH << 8) + nRemainingCapL) > (KeepBattRemineCap + (CalcBatRCC/200)))//A
             -NGELAS101:Modify battery discharge when battery RSOC is 59% in storage mode.
 260   7                                                              {
 261   8                                                                      KeepBattRemineCap = 0;
 262   8                                                                      CLEAR_MASK(StatusKeeper, BatteryProtectCHG);
 263   8                                                                      ECSMI_SCIEvent(ACPI_BAT1IN_SCI); // Notify BIOS Update Batt Status
 264   8                                                              }
 265   7                                                      }
 266   6                                              }
 267   5                      }
 268   4                                      //ACOFF_LOW();                                                                                  // charge
 269   4                              }
 270   3                              else if (nBattGasgauge < 55)
 271   3                              {
 272   4                                      CLEAR_MASK(ACOFF_SOURCE, BATTLEARN);
 273   4                                      BATT_LEN_OFF(); //add battery learn mode
 274   4                                      //Mos: Change Status bit to avoid bit has been reset
 275   4                      SET_MASK(StatusKeeper, BatteryProtectCHG);
 276   4                                      CLR_MASK(nStopChgStat3H,EmStopChgarg);
 277   4                                      //ACOFF_LOW();                                                                                  // charge
 278   4                              }
 279   3                      }
 280   2              
 281   2                      else
 282   2                      {
 283   3                              //if (IS_MASK_SET(EC_BatteryStatusL,FullyChg)&&(IS_MASK_SET(SYS_STATUS,AC_ADP))) //MEILING025:remove.
 284   3                              if (IS_MASK_SET(EC_BatteryStatusL,FullyChg)&&(IS_MASK_SET(SYS_STATUS,AC_ADP))&&(nBattGasgauge==100)) //
             -MEILING025:add.
 285   3                              {
 286   4                                      nRemainingCapL = nFullChgCapL;
 287   4                                      nRemainingCapH = nFullChgCapH;
 288   4                              }
 289   3                              else
 290   3                              {
 291   4                                      //Mos: return RSOC(0x0d)=0 to BIOS if battery error
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 6   

 292   4                                      //ANGELAG056: remove start
 293   4                              //      if (ChkBattery_abnormal_status == ChkBattery_abnormal_status_error)
 294   4                              //      {
 295   4                                              //nRemainingCapL = 0;  //LMLKBL0006:remove.
 296   4                                              //nRemainingCapH = 0;  //LMLKBL0006:remove.
 297   4                              //      }
 298   4                                      //ANGELAG056: remove end
 299   4                                      //ANGELAG056: add start
 300   4                                      if(IS_MASK_SET(System_Status,b0_System_Is_Heavy_Loading) || IS_MASK_SET(System_Status,b1_EC_S3_Auto_Wa
             -ke_Up))
 301   4                                      {
 302   5                                              CalcBatRCC = (nFullChgCapH << 8) + nFullChgCapL;
 303   5                                              CalcBatRCC = (CalcBatRCC / 20) + (CalcBatRCC / 200);
 304   5                                              nRemainingCapH = (CalcBatRCC >> 8);
 305   5                                              nRemainingCapL = (CalcBatRCC & 0xFF);
 306   5                                      }
 307   4                                      //ANGELAG056: add end
 308   4                                      else
 309   4                                      {
 310   5                                              nRemainingCapL = Bat0x0FTempL;
 311   5                                              nRemainingCapH = Bat0x0FTempH;
 312   5                                      }
 313   4                              }
 314   3      
 315   3                      if(IS_MASK_SET(LENOVOPMFW_Temp,BATTERY_CYCLE_RUNNING))
 316   3                      {
 317   4                              CLEAR_MASK(LENOVOPMFW_Temp,BATTERY_CYCLE_RUNNING);
 318   4      
 319   4                              if(IS_MASK_SET(ACOFF_SOURCE,BATTLEARN))
 320   4                              {
 321   5                              CLEAR_MASK(ACOFF_SOURCE, BATTLEARN);
 322   5                                              BATT_LEN_OFF(); //add battery learn mode
 323   5                              // ACOFF_LOW();
 324   5                              }
 325   4                      }
 326   3      
 327   3                              //Mos: Clear BATTERY_CYCLE_fulchg when change to Longest Battery Mode
 328   3                      CLEAR_MASK(StatusKeeper, BatteryProtectCHG);
 329   3                              CLR_MASK(nStopChgStat3H,EmStopChgarg);
 330   3                      }
 331   2              }
 332   1      
 333   1      #else
              
                      if (IS_MASK_SET(LENOVOPMFW,BATTERY_STORAGE) && IS_MASK_CLEAR(LENOVOPMFW,BATTERY_MAIN_CAL)) //T075
                      {
                              //Mos: return RSOC(0x0d)=0 to BIOS if battery error
                              /* 
                              if ((ChkBattery_abnormal_status == ChkBattery_abnormal_status_error)
                                      || (Chk_Trickle_Current_status == Chk_Trickle_Current_status_error))
                              {
                                      //nRemainingCapL = 0;
                                      //nRemainingCapH = 0;
                                      //Mos: Disable report RSOC(0x0d) = 0 to BIOS, need to modify spec
                                      nRemainingCapL = Bat0x0FTempL;
                                      nRemainingCapH = Bat0x0FTempH;
                              }
                              else
                              */              
                              {
                                      nRemainingCapL = Bat0x0FTempL;
                                      nRemainingCapH = Bat0x0FTempH;
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 7   

                              }
              
                      SET_MASK(LENOVOPMFW_Temp,BATTERY_CYCLE_RUNNING);
              
                              if (nBattGasgauge > 60)
                              {
                                      SET_MASK(ACOFF_SOURCE, BATTLEARN);
                                      BATT_LEN_ON();  //add battery learn mode
                              if(IS_MASK_SET(CHGIC_ReadCmd0x37L, TurboBoost)&&(nNowCurrentH & 0x80))
                              {                       
                                      //ACOFF_LOW();
                                              CLEAR_MASK(ACOFF_SOURCE, BATTLEARN);
                                      }
                              //else     //ANGELAS016                  
                                              //ACOFF_HI();           // discharge
                              }
                              else if (nBattGasgauge >= 55 && nBattGasgauge <= 60)
                              {
                                      if ( IS_MASK_SET(ACOFF_SOURCE, BATTLEARN) )
                                      { 
                                              ECSMI_SCIEvent(ACPI_BAT1IN_SCI); 
                              }
                                      CLEAR_MASK(ACOFF_SOURCE, BATTLEARN);
                                      BATT_LEN_OFF(); //add battery learn mode
                                      // Change Status bit to avoid bit has been reset
                              if (IS_MASK_CLEAR(StatusKeeper, BatteryProtectCHG))
                              {
                              SET_MASK(nStopChgStat3H, EmStopChgarg);
                              }
                              else
                              {
                                      CLEAR_MASK(nStopChgStat3H, EmStopChgarg);
                              if (nBattGasgauge == 60)
                                      {
                                                      if (KeepBattRemineCap == 0)
                                                      { 
                                                              KeepBattRemineCap = (WORD)(nRemainingCapH << 8) + nRemainingCapL; 
                                      }
                                                      else
                                                      {
                                                              CalcBatRCC =(nFullChgCapH<<8)+nFullChgCapL; //ANGELAS101:Modify battery discharge when battery RSOC 
             -is 59% in storage mode.
                                                              //Mos: Avoid that stop charger but OS show god damn 59%...
                                                              //if (((WORD)(nRemainingCapH << 8) + nRemainingCapL) > (KeepBattRemineCap + 10))//ANGELAS101:Modify 
             -battery discharge when battery RSOC is 59% in storage mode.
                                                              if (((WORD)(nRemainingCapH << 8) + nRemainingCapL) > (KeepBattRemineCap + (CalcBatRCC/200)))//ANGELA
             -S101:Modify battery discharge when battery RSOC is 59% in storage mode.
                                                              {
                                                                      KeepBattRemineCap = 0;
                                                                      CLEAR_MASK(StatusKeeper, BatteryProtectCHG);
                                                                      ECSMI_SCIEvent(ACPI_BAT1IN_SCI); // Notify BIOS Update Batt Status
                                                              }
                                                      }
                                              }
                              }
                                      //ACOFF_LOW();                                                                                  // charge
                              }
                              else if (nBattGasgauge < 55)
                              {
                                      CLEAR_MASK(ACOFF_SOURCE, BATTLEARN);
                                      BATT_LEN_OFF(); //add battery learn mode
                                      //Mos: Change Status bit to avoid bit has been reset
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 8   

                              SET_MASK(StatusKeeper, BatteryProtectCHG);
                                      CLR_MASK(nStopChgStat3H,EmStopChgarg);
                                      //ACOFF_LOW();                                                                                  // charge       
                              }
                      }       
                      else 
                      {
                              //if (IS_MASK_SET(EC_BatteryStatusL,FullyChg)&&(IS_MASK_SET(SYS_STATUS,AC_ADP))) //MEILING025:remove.
                              if (IS_MASK_SET(EC_BatteryStatusL,FullyChg)&&(IS_MASK_SET(SYS_STATUS,AC_ADP))&&(nBattGasgauge==100)) //M
             -EILING025:add.
                              {
                                      nRemainingCapL = nFullChgCapL;
                                      nRemainingCapH = nFullChgCapH;
                              }
                              else
                              {
                                      //Mos: return RSOC(0x0d)=0 to BIOS if battery error
                                      if (ChkBattery_abnormal_status == ChkBattery_abnormal_status_error)
                                      {
                                              //nRemainingCapL = 0;  //LMLKBL0006:remove.
                                              //nRemainingCapH = 0;  //LMLKBL0006:remove.
                                      }
                                      else
                                      {
                                              nRemainingCapL = Bat0x0FTempL;
                                              nRemainingCapH = Bat0x0FTempH;
                                      }
                              }
              
                      if(IS_MASK_SET(LENOVOPMFW_Temp,BATTERY_CYCLE_RUNNING))
                      {
                              CLEAR_MASK(LENOVOPMFW_Temp,BATTERY_CYCLE_RUNNING);
              
                              if(IS_MASK_SET(ACOFF_SOURCE,BATTLEARN))
                              {
                              CLEAR_MASK(ACOFF_SOURCE, BATTLEARN);
                                              BATT_LEN_OFF(); //MosG25:add battery learn mode
                              // ACOFF_LOW();
                              }
                      }
              
                              //Mos: Clear BATTERY_CYCLE_fulchg when change to Longest Battery Mode
                      CLEAR_MASK(StatusKeeper, BatteryProtectCHG);
                              CLR_MASK(nStopChgStat3H,EmStopChgarg);
                      }
              
              #endif
 458   1      
 459   1      }
 460          
 461          void ChkLENOVOPMFW(void)
 462          {
 463   1              if (IS_MASK_SET(LENOVOPMFW,BATTERY_MAIN_CAL))                   // check Calibration Cycle enable
 464   1              {
 465   2                      if (cBattFlag0.fbit.cBF0_FullToTarget == 0)
 466   2                      {
 467   3                              if (IS_MASK_CLEAR(LENOVOPMFW,BATTERY_CAL_END))
 468   3                              {
 469   4                                      cBattFlag0.fbit.cBF0_FullToTarget = 1;          // charge to 100% then discharge to 1%
 470   4                                      cBattFlag0.fbit.cBF0_Full = 0;
 471   4                                      cBattFlag0.fbit.cBF0_GoTarget = 0;
 472   4                                      cTargetGauge = 1;
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 9   

 473   4                                      //CLR_MASK(LENOVOPMFW,BATTERY_CYCLE);
 474   4                              }
 475   3                      }
 476   2              }
 477   1              else if (IS_MASK_SET(LENOVOPMFW,BATTERY_CAL_END))
 478   1              {
 479   2                      CLR_MASK(LENOVOPMFW,BATTERY_CAL_END);
 480   2                      cBattFlag0.fbit.cBF0_FullToTarget = 0;
 481   2                      cBattFlag0.fbit.cBF0_Full = 0;
 482   2                      cBattFlag0.fbit.cBF0_GoTarget = 0;
 483   2              //Modify cancel the running of the gauge reset function, the battery can't resume charge. 
 484   2              CLEAR_MASK(ACOFF_SOURCE, BATTLEARN);
 485   2                      BATT_LEN_OFF(); 
 486   2                      //ACOFF_LOW();
 487   2              }
 488   1      }
 489          
 490          void ChkGoTarget(void)
 491          {
 492   1              if (cBattFlag0.fbit.cBF0_GoTarget ==1)
 493   1              {
 494   2                      if ((cTargetGauge == nBattGasgauge) ||  (nBattGasgauge < cTargetGauge))
 495   2                      {
 496   3                              CLEAR_MASK(ACOFF_SOURCE, BATTLEARN);
 497   3                              BATT_LEN_OFF(); //add battery learn mode
 498   3                              //ACOFF_LOW();                                                                                  // charge
 499   3                              cBattFlag0.fbit.cCmdAcOff = 0;
 500   3                              if (IS_MASK_SET(LENOVOPMFW,BATTERY_MAIN_CAL))
 501   3                              {
 502   4                                      SET_MASK(LENOVOPMFW,BATTERY_CAL_END);
 503   4                                      CLR_MASK(LENOVOPMFW,BATTERY_MAIN_CAL);
 504   4                      cTargetGauge=0;
 505   4                      SET_MASK(LENOVOPMFW_Temp,BATTERY_CALIBRATION_OK);   // release Calibration mode
 506   4                      uVPCeventSource = General;
 507   4                      uVPCeventSource2 = 0;
 508   4                      ECSMI_SCIEvent(SDV_VPC_notify);
 509   4                      ChkLENOVOPMFW();
 510   4                              }
 511   3                              return;
 512   3                      }
 513   2                      if (nBattGasgauge > cTargetGauge)
 514   2                      {
 515   3                              SET_MASK(ACOFF_SOURCE, BATTLEARN);
 516   3                              BATT_LEN_ON();  //add battery learn mode
 517   3                              //ACOFF_HI();           // discharge
 518   3                              cBattFlag0.fbit.cCmdAcOff = 1;
 519   3                      }
 520   2              }
 521   1              else if (cBattFlag0.fbit.cBF0_FullToTarget == 1)
 522   1              {
 523   2                      if (cBattFlag0.fbit.cBF0_Full ==0)
 524   2                      {
 525   3                              if (IS_MASK_SET(nBattery0x16L,FullyChg))
 526   3                              {
 527   4                                      cBattFlag0.fbit.cBF0_Full=1;
 528   4                                      cBattFlag0.fbit.cBF0_GoTarget = 1;                                      // Discharge or Charge to cTargetGauge%
 529   4                              }
 530   3                      }
 531   2              }
 532   1      }
 533          
 534          void ChkS3ResumeRSOC(void)
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 10  

 535          {
 536   1              /*if (IS_MASK_CLEAR(SYS_STATUS,AC_ADP))
 537   1              {
 538   1                      if ( SystemIsS3 )
 539   1                      {
 540   1                              if (nBattGasgauge <= S3ResumeRSOC)      // check battery under 5%. //martin0216: meet spec: Battery RSOC<6%,
             - and PC is in S3,System wakes up to S0 automatically(System wakes up from S3)
 541   1                              {
 542   1                                   PWSeqStep = 1;
 543   1                                      PowSeqDelay = 1;
 544   1                                RamDebug(0x31);       
 545   1                                   SysPowState=SYSTEM_S3_S0;
 546   1                              }
 547   1                      }
 548   1              }*///ANGELAS093:-Modify battery RSOC below 5% can't into S3.
 549   1              //ANGELAS093:s+Modify battery RSOC below 5% can't into S3.
 550   1              if(IS_MASK_SET(battery_critical,DCdischargeto5ins3))
 551   1              {
 552   2              //      PWSeqStep = 1; //ANGELAG039: remove
 553   2              //      PowSeqDelay = 1; //ANGELAG039: remove
 554   2              RamDebug(0x37);  
 555   2          //    SysPowState=SYSTEM_S3_S0; //ANGELAG039: remove
 556   2               PulseSBPowerButton(); //ANGELAG039: add 
 557   2                      CLEAR_MASK(battery_critical,DC0ver5enterS3);
 558   2                      CLEAR_MASK(battery_critical,DCdischargeto5ins3);
 559   2                      SET_MASK(System_Status,b1_EC_S3_Auto_Wake_Up); //ANGELAG056: add
 560   2              }
 561   1              //ANGELAG056: add start
 562   1              if(Read_AC_IN() || (nBattGasgauge > 7 || nBattGasgauge < 6))
 563   1              {
 564   2                      CLR_MASK(System_Status,b1_EC_S3_Auto_Wake_Up);
 565   2              }
 566   1              //ANGELAG056: add end
 567   1              //ANGELAS093:s+Modify battery RSOC below 5% can't into S3.
 568   1      }
 569          //ANGELAS093:s+Modify battery RSOC below 5% can't into S3.
 570          void ChkS3DCRSOC(void)
 571          {
 572   1      //ANGELAG056: remove start
 573   1      /*      if(SystemIsS3)
 574   1              {
 575   1                      if(nBattGasgauge != S3ResumeRSOC)
 576   1                      {
 577   1                              SET_MASK(battery_critical, DC0ver5enterS3);
 578   1                      }
 579   1                      else
 580   1                      {                       
 581   1                              if(IS_MASK_CLEAR(SYS_STATUS,AC_ADP)&&(nBattGasgauge== S3ResumeRSOC)&&IS_MASK_SET(battery_critical,DC0ve
             -r5enterS3))
 582   1                              {
 583   1                                      SET_MASK(battery_critical,DCdischargeto5ins3);  
 584   1                              }
 585   1                              else
 586   1                              {
 587   1                                      CLEAR_MASK(battery_critical,DCdischargeto5ins3);
 588   1                              }
 589   1                              //JIMGBRW025 CLEAR_MASK(battery_critical, DC0ver5enterS3);
 590   1                      }
 591   1              }
 592   1              else
 593   1              {
 594   1                      CLEAR_MASK(battery_critical, DC0ver5enterS3);
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 11  

 595   1                      CLEAR_MASK(battery_critical,DCdischargeto5ins3);
 596   1              }*/
 597   1              //ANGELAG056: remove end
 598   1              //ANGELAG056: add start
 599   1              if(SystemIsS3)
 600   1              {
 601   2                      if(nBattGasgauge > 7 || nBattGasgauge < 5)
 602   2                      {
 603   3                              SET_MASK(battery_critical, DC0ver5enterS3);
 604   3                      }
 605   2                      else if(nBattGasgauge == 7)
 606   2                      {
 607   3                              if(IS_MASK_CLEAR(SYS_STATUS,AC_ADP) && IS_MASK_SET(battery_critical,DC0ver5enterS3))
 608   3                              {
 609   4                                      SET_MASK(battery_critical,DCdischargeto5ins3);
 610   4                              }
 611   3                              else
 612   3                              {
 613   4                                      CLEAR_MASK(battery_critical,DCdischargeto5ins3);
 614   4                                      SET_MASK(battery_critical, b2_DC0ver5enterS3);
 615   4                              }
 616   3                      }
 617   2                      else if(nBattGasgauge == 6)
 618   2                      {
 619   3                              if(IS_MASK_CLEAR(SYS_STATUS,AC_ADP) && IS_MASK_SET(battery_critical,b2_DC0ver5enterS3))
 620   3                              {
 621   4                                      SET_MASK(battery_critical,DCdischargeto5ins3);
 622   4                              }
 623   3                              else
 624   3                              {
 625   4                                      CLEAR_MASK(battery_critical,DCdischargeto5ins3);
 626   4                                      SET_MASK(battery_critical, b3_DC0ver5enterS3);
 627   4                              }
 628   3                      }
 629   2                      else if(nBattGasgauge == 5)
 630   2                      {
 631   3                              if(IS_MASK_CLEAR(SYS_STATUS,AC_ADP) && IS_MASK_SET(battery_critical,b3_DC0ver5enterS3))
 632   3                              {
 633   4                                      SET_MASK(battery_critical,DCdischargeto5ins3);
 634   4                              }
 635   3                              else
 636   3                              {
 637   4                                      CLEAR_MASK(battery_critical,DCdischargeto5ins3);
 638   4                              }
 639   3                      }
 640   2                      
 641   2              }
 642   1              else
 643   1              {
 644   2                      battery_critical = 0;
 645   2              }
 646   1              //ANGELAG056: add end
 647   1      }
 648          //ANGELAS093:e+Modify battery RSOC below 5% can't into S3.
 649          //ANGELAS043:Add start
 650          void RSOC1Pto0P_ShutdownCheck(void)
 651          {
 652   1          if(IS_MASK_SET(SYS_STATUS,AC_ADP)||Read_AC_IN()||nBattGasgauge > 0x01||SystemNotS0)
 653   1          {
 654   2             RSOC1PTO0PCount = 0x00;
 655   2                 RSOC1PTO0PSaveSpace = 0x00;
 656   2          }
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 12  

 657   1              else
 658   1              {
 659   2                 if(nBattGasgauge == 0x01)
 660   2                 {
 661   3                    SET_MASK(RSOC1PTO0PSaveSpace,RSOCIs1P);
 662   3                 }
 663   2                 else if((nBattGasgauge == 0x00)&&IS_MASK_SET(RSOC1PTO0PSaveSpace,RSOCIs1P))
 664   2                 {
 665   3                      if ( RSOC1PTO0PCount >= RSOC_Shut_Cnt ) // Read 30 times.
 666   3                      {
 667   4                                      ProcessSID(RSOC_1Pto0P_ID);  //Shutdown ID 0x40         
 668   4                      
 669   4                                  SET_MASK(SysStatus,ERR_ShuntDownFlag);      
 670   4                      
 671   4                                      RSOC1PTO0PCount = 0x00;
 672   4                          RSOC1PTO0PSaveSpace = 0x00;
 673   4                                      SET_MASK(USB_Charger, b2USB_TmlDis);    // Disable USB charger.
 674   4                                      RSMRST_LOW();
 675   4                                      Delay1MS(1);
 676   4                                      RSMRST_HI();                            
 677   4                      }
 678   3                      else
 679   3                      { 
 680   4                          RSOC1PTO0PCount++; 
 681   4                              }
 682   3                 }
 683   2              }
 684   1      }
 685          //ANGELAS043:Add end
 686          void RSMRST_shutdown(void)                                      //shutdown (RSMRST HI-->low-->HI)
 687          
 688          {
 689   1              RSMRST_LOW();                                   //shutdown (remark first)
 690   1              Delay1MS(1);
 691   1              RSMRST_HI();
 692   1              RSMshutdownCnt++;
 693   1      }
 694          
 695          void DownBatteryPState()
 696          {
 697   1              if ((cBATTThrottling !=0)&&(BatteryAlarm == 0)&&(0x00==ADPIDON10MS_NUM)) //add ADPIDON10MS_NUM judge.
 698   1                      cBATTThrottling--;
 699   1      }
 700          
 701          void UpBatteryPState()
 702          {
 703   1              //if (cBATTThrottling != 0x0F)
 704   1              if (cBATTThrottling != PSTATE_MAXStep)//0ptimize CPU P_state (change 16 step to 8 step).
 705   1                      cBATTThrottling++;
 706   1      }
 707          
 708          //MEILING055:S+ decrease GPU throttling every 2s after PnP AC.
 709          void DownACtoBatteryGPUState()
 710          {
 711   1      //      if(CPU_TYPE & 0x80) //ANGELAG031: remove //ANGELAG022: add
 712   1      //      { //ANGELAG031: remove //ANGELAG022: add
 713   1                      if((cGPUACtoBattThrottling !=0)&&(cGPUACtoBattTime==0))
 714   1                      {
 715   2                              if(IS_MASK_SET(SYS_STATUS,AC_ADP))
 716   2                              {
 717   3                                      cGPUACtoBattThrottling=0;
 718   3                              }
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 13  

 719   2                              else
 720   2                              {
 721   3                                      cGPUACtoBattThrottling--;
 722   3                                      cGPUACtoBattTime = 4;//2s to do an action
 723   3                                      //ANGELAG017: add start
 724   3                                      if((nBattGasgauge > 30) && (cGPUACtoBattThrottling == 1))
 725   3                                      {
 726   4                                              cGPUACtoBattThrottling=0;
 727   4                                              cGPUACtoBattTime = 0;  ///////2s to do an action
 728   4                                      }
 729   3                                      else if((nBattGasgauge <= 30) && (cGPUACtoBattThrottling == 2))
 730   3                                      {
 731   4                                              cGPUACtoBattThrottling=0;
 732   4                                              cGPUACtoBattTime = 0;  ///////2s to do an action
 733   4                                      }
 734   3                              ////ANGELAG017: add end
 735   3                              }
 736   2                      }
 737   1                      //ANGELAG031: remove start
 738   1              //ANGELAG022: add start
 739   1              /*}
 740   1              else if(CPU_TYPE & 0x40)
 741   1              {
 742   1                      if((cAMDGPUACtoBattThrott !=0)&&(cGPUACtoBattTime==0))
 743   1                      {
 744   1                              if(IS_MASK_SET(SYS_STATUS,AC_ADP))
 745   1                              {
 746   1                                      cAMDGPUACtoBattThrott = AMD_GPU_DPM7; //DPM7
 747   1                              }
 748   1                              else
 749   1                              {
 750   1                                      
 751   1                                      cGPUACtoBattTime = 20;  ///////2s to do an action
 752   1                                      if(nBattGasgauge > 30)
 753   1                                      {
 754   1                                              if(cAMDGPUACtoBattThrott == AMD_GPU_DPM0) //DPM0 -> DPM5
 755   1                                                      cAMDGPUACtoBattThrott = AMD_GPU_DPM5;
 756   1                                              else
 757   1                                                      cAMDGPUACtoBattThrott--;
 758   1                                              if(cAMDGPUACtoBattThrott == AMD_GPU_DPM6) //DPM6
 759   1                                              {
 760   1                                                      cAMDGPUACtoBattThrott= AMD_GPU_DPM7;
 761   1                                                      cGPUACtoBattTime = 0;  ///////2s to do an action
 762   1                                              }
 763   1                                      }
 764   1                                      else if(nBattGasgauge <= 30)
 765   1                                      {
 766   1                                              cAMDGPUACtoBattThrott--; //DPM5->DPM6
 767   1                                              if(cAMDGPUACtoBattThrott == AMD_GPU_DPM7)
 768   1                                              {
 769   1                                                      cAMDGPUACtoBattThrott = AMD_GPU_DPM7; //DPM7
 770   1                                                      cGPUACtoBattTime = 0;  ///////2s to do an action
 771   1                                              }
 772   1                                      }
 773   1                              }
 774   1                      }
 775   1              }*/
 776   1              //ANGELAG022: add end
 777   1              //ANGELAG031: remove end
 778   1      }
 779          //MEILING055:E+.
 780          
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 14  

 781          //MEILING033:add start CPU prochot control function.
 782          void CPUProchotCtrl()
 783          {
 784   1              if ( IS_MASK_CLEAR(Thro_Status, (b0ProCH_CPU+b1ProCH_VGA+b2ProCH_EXTVGA+b6ProCH_TURBO+b7ProCH_BATT))
 785   1                      &&IS_MASK_CLEAR(Thro_Status2, (b2Batt_LTP+b3Batt_OTP+b5Bat_5PProtect+b6BattRSOC_Low+b7ProCH_Psys))  //CO
             -KEYXU039: add b2Batt_LTP
 786   1                      &&IS_MASK_CLEAR(LENOVOBATT2, (BATTERY_OCP))  //ANGELAG017: add
 787   1                      &&IS_MASK_CLEAR(Thro_Status4, (b0ProCH_ADP))  //ANGELAG046: add 
 788   1                      &&IS_MASK_CLEAR(nBatteryStatH, CMBS_CRITICALLOW)&&(CPUProchotONCnt == 0)) //MEILING055:modify ProchotONC
             -nt name.
 789   1              {       // turn off prochot.  //MEILING033:add prochot on 2S when AC out and battery over temperatrue and batte
             -ry RSOC low.
 790   2                  H_PROCHOT_OFF(); 
 791   2                  nRealThermalPinDIS;
 792   2                  CLR_MASK(pPROCHOT, b0Thermal_PRCOHOTon);    // for AP display.
 793   2              }
 794   1              else
 795   1              {       // turn on prochot.
 796   2                  H_PROCHOT_ON();
 797   2                  nRealThermalPinEN;
 798   2                      SET_MASK(pPROCHOT, b0Thermal_PRCOHOTon);        // for AP display.
 799   2              }     
 800   1      }
 801          //MEILING033:add end.
 802          
 803          /*
 804          *******************************************************************************
 805          * Function name: ChkBattery_LTP
 806          *
 807          * Descriptoin: 
 808          *          DC mode and low temprature condition,pull CPU and GPU prochot. 
 809          *
 810          * Invoked by:  OEM_PollingBatData_TASK()
 811          *
 812          * TimeDiv: 100ms
 813          *
 814          * Arguments: none
 815          *
 816          * Return Values: none 
 817          *******************************************************************************
 818          */
 819          
 820          void ChkBattery_LTP()
 821          {
 822   1              if ((SystemIsS0)&&(!Read_AC_IN())) //COKEYXU045: only DC mode to check Battery LTP.
 823   1              {
 824   2                      if(nBattAverTemp <= 5)   
 825   2                      {
 826   3                              cGPUBattLTPThrottling = 4; //COKEYXU046: battery cell temp < 5, set GPU D5.
 827   3                              DisCPUTurboForLTP = 0xFF;   //COKEYXU046: disable CPU turbo
 828   3                              SET_MASK(Thro_Status2, b2Batt_LTP);
 829   3                              SET_MASK(GPU_Prochot, b2_battery_LTP);
 830   3                      }
 831   2                      else if(nBattAverTemp <= 10)
 832   2                      {
 833   3                              if(nBattAverTemp > 6) //COKEYXU049: LTP condition,when battery cell temp> 6, cancle CPU prochot.
 834   3                              {
 835   4                                      CLEAR_MASK(Thro_Status2, b2Batt_LTP);
 836   4                              }
 837   3                              DisCPUTurboForLTP = 0xFF;  //COKEYXU046: disable CPU turbo
 838   3                              cGPUBattLTPThrottling = 2; //COKEYXU046: 5 < battery cell temp < 20, set GPU D3.
 839   3                              if(Psys_AvgData > 341) //COKEYXU049: Power consumption>50W, pull GPU prochot
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 15  

 840   3                              {
 841   4                                      SET_MASK(GPU_Prochot, b2_battery_LTP);
 842   4                              }
 843   3                              else
 844   3                              {
 845   4                                      CLEAR_MASK(GPU_Prochot, b2_battery_LTP);
 846   4                              }
 847   3                      }
 848   2                      else if(nBattAverTemp <= 20)
 849   2                      {
 850   3                              CLEAR_MASK(Thro_Status2, b2Batt_LTP);
 851   3                              CLEAR_MASK(GPU_Prochot, b2_battery_LTP);
 852   3                              DisCPUTurboForLTP = 0xFF;
 853   3                              cGPUBattLTPThrottling = 2;
 854   3                      }
 855   2                      else
 856   2                      {
 857   3                              CLEAR_MASK(Thro_Status2, b2Batt_LTP);
 858   3                              CLEAR_MASK(GPU_Prochot, b2_battery_LTP);
 859   3                              cGPUBattLTPThrottling = 0;
 860   3                              if(nBattAverTemp > 21)  //COKEYXU049:  LTP condition,when battery cell temp> 21,enable CPU turbo.
 861   3                              {
 862   4                                      DisCPUTurboForLTP = 0;
 863   4                              }
 864   3                      }
 865   2      
 866   2                      if(nBattAverTemp <= 20)      //COKEYXU049:  LTP condition,when battery cell temp < 20,set 0x3D 4608mA.
 867   2                  {
 868   3                      CHGIC_ReadCmd0x3DL=0x39;    
 869   3                      CHGIC_ReadCmd0x3DH=0x25; 
 870   3                  }
 871   2              else
 872   2              {
 873   3                      CHGIC_ReadCmd0x3DL=0x39;    
 874   3                      CHGIC_ReadCmd0x3DH=0x51;
 875   3              }
 876   2              
 877   2              }
 878   1              else
 879   1              {       
 880   2                      DisCPUTurboForLTP = 0;
 881   2                      cGPUBattLTPThrottling = 0; //COKEYXU048: clear cGPUBattLTPThrottling.
 882   2                      CLEAR_MASK(Thro_Status2, b2Batt_LTP);
 883   2                      CLEAR_MASK(GPU_Prochot, b2_battery_LTP);
 884   2                      CHGIC_ReadCmd0x3DL=0x39;    //COKEYXU050: When AC mode,set chargeIC register 0x3D to 0x5139
 885   2              CHGIC_ReadCmd0x3DH=0x51;
 886   2              }
 887   1      
 888   1          if(CHGIC_ReadCmd0x3DH != CHGIC_ReadCmd0x3DH_Temp)
 889   1              {
 890   2                      if (!bRWSMBus(SMbusChB, SMbusWW, Charger_Addr, C_ChargerProchot1, &CHGIC_ReadCmd0x3DL,SMBus_NoPEC))
 891   2              {
 892   3                              CHGIC_SMbusFailCnt++;
 893   3              }
 894   2                      CHGIC_ReadCmd0x3DH_Temp = CHGIC_ReadCmd0x3DH;
 895   2              }
 896   1      }
 897          
 898          
 899          
 900          void ChkBattery_OTP()
 901          {
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 16  

 902   1              BYTE Delay2sCount;            //COKEYXU005: add
 903   1              ITempW01 = (WORD)((EC_oCBTh<<8)+EC_oCBTl);              // get temperature
 904   1              if (ITempW01 > 2730)
 905   1              {
 906   2                      nBattAverTemp = (ITempW01 - 2730) / 10;
 907   2              }
 908   1              else
 909   1              {
 910   2                      return;
 911   2              }
 912   1      
 913   1              //LMLKBL0012:S+ add battery OTP shutdown protect in AC mode.
 914   1              if((SystemIsS0)&&(nBattAverTemp >= BatteryOTPShutdown))  //65
 915   1              {
 916   2                      #if !EN_PwrSeqTest
 917   2              SET_MASK(SysStatus,ERR_ShuntDownFlag);//Add battery over temperature protect.
 918   2                      ProcessSID(BATTOVERTEMP_ID);
 919   2                      RSMRST_shutdown();
 920   2                      #endif
 921   2              }
 922   1              //LMLKBL0012:E+.
 923   1              
 924   1              //if ((SystemIsS0)&&(IS_MASK_CLEAR(SYS_STATUS,AC_ADP)))     
 925   1              if ((SystemIsS0)&&(IS_MASK_SET(nBatteryStatH,CMBS_DISCHARGE)))     
 926   1              {
 927   2                      //LMLKBL0012:S-.
 928   2                      /*if(nBattAverTemp >= BatteryOTPShutdown)  //65
 929   2                      {
 930   2                              #if !EN_PwrSeqTest
 931   2                              SET_MASK(SysStatus,ERR_ShuntDownFlag);//Add battery over temperature protect.
 932   2                              ProcessSID(BATTOVERTEMP_ID);
 933   2                              RSMRST_shutdown();
 934   2                              #endif
 935   2                      }*/
 936   2                      //LMLKBL0012:E-.
 937   2                      
 938   2              //      if (nBattAverTemp >= BatteryOTP)                ////ANGELAG050: remove          // 60
 939   2                      if ((nBattGasgauge>25 && nBattAverTemp >= 55) || (nBattGasgauge<=25 && nBattAverTemp >= 48)) //ANGELAG05
             -0: add 
 940   2                      {                                                                                            //COKEYXU00
             -5: nBattGasgauge 40 to 25
 941   3                              SET_MASK(nStopChgStat3L,ENOVERTEMP);
 942   3                              SET_MASK(BatteryAlarm,BATOTP);
 943   3                              //UpBatteryPState();  //MEILING048:remove.//MEILING051:-Add cpu P_STATE function.
 944   3                              //nRemainingCapL = 0;  //LMLKBL0003:remove.
 945   3                              //nRemainingCapH = 0;  //LMLKBL0003:remove.
 946   3      
 947   3                              //MEILING033:add start prochot on and dGPU throttling set D5.
 948   3                              //cGPUBattOTPThrottling = 4; //ANGELAG033: remove
 949   3                      //      cAMDGPUBattOTPThrott = AMD_GPU_DPM0; //ANGELAG031: remove //DPM0 //ANGELAG022: add
 950   3                  SET_MASK(Thro_Status2, b3Batt_OTP);
 951   3                              //ANGELAG050: add start
 952   3                              if(uPJID == 0X02) //for I+N
 953   3                              {
 954   4                                      cGPUBattOTPThrottling = 4;
 955   4                      //COKEYXU005: add S+
 956   4                                      if(Delay2sCount < 20)
 957   4                                      {
 958   5                                         Delay2sCount++;
 959   5                                      }
 960   4                                      else 
 961   4                                      {
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 17  

 962   5                                              SET_MASK(GPU_Prochot, b3_battery_OTP); 
 963   5                                              Delay2sCount = 0;
 964   5                                      }
 965   4                                      //COKEYXU005: add E+
 966   4                              }
 967   3                              else //for I+A and UMA
 968   3                              { //ANGELAG050: add end
 969   4                                      SET_MASK(GPU_Prochot, b3_battery_OTP); //ANGELAG024: add
 970   4                              }  //ANGELAG050: add
 971   3                              //MEILING033:add end.
 972   3      
 973   3                              //MEILING033:remove start.
 974   3                              /*if (nBattOvrTempCnt > 80)                                     // 2 min
 975   3                              {
 976   3                                      #if !EN_PwrSeqTest
 977   3                                      SET_MASK(SysStatus,ERR_ShuntDownFlag);//Add battery over temperature protect.
 978   3                                      ProcessSID(BATTOVERTEMP_ID);
 979   3                                      RSMRST_shutdown();
 980   3                                      #endif
 981   3                              }
 982   3                              else
 983   3                                      nBattOvrTempCnt ++;*/
 984   3                              //MEILING033:remove end.
 985   3                              
 986   3                      }
 987   2      //      else if (nBattAverTemp < BatteryOTPRelease)     //ANGELAG050: remove            //58
 988   2                      else if((nBattGasgauge>25 && nBattAverTemp < 53) || (nBattGasgauge<=25 && nBattAverTemp < 46)) //ANGELAG
             -050: add
 989   2                      {                                                                                             //COKEYXU0
             -05: nBattGasgauge 40 to 25
 990   3                              CLR_MASK(BatteryAlarm,BATOTP);
 991   3                              CLR_MASK(nStopChgStat3L,ENOVERTEMP);
 992   3                              //nBattOvrTempCnt =0;  //MEILING033:remove.
 993   3      
 994   3                              //MEILING033:add start prochot off and dGPU throttling set D1.
 995   3                              cGPUBattOTPThrottling = 0;  //ANGELAG033: 1 to 0 because psys will set D2 //ANGELAG024: modify D1 to D2
 996   3                              CLR_MASK(GPU_Prochot, b3_battery_OTP); //ANGELAG024: add
 997   3                      //      cAMDGPUBattOTPThrott = AMD_GPU_DPM7; //ANGELAG031: remove //DPM7 //ANGELAG022: add
 998   3                  CLEAR_MASK(Thro_Status2, b3Batt_OTP);
 999   3                              //MEILING033:add end.
1000   3                              
1001   3                      }
1002   2      
1003   2                      //ANGELAG054: add start
1004   2                      if(nBattGasgauge<=25) //COKEYXU005: nBattGasgauge 40 to 25
1005   2                      {
1006   3                              if(nBattAverTemp > 48)
1007   3                              {
1008   4                                      SET_MASK(Fan_full_status, b0_Battery_OTP);
1009   4                              }
1010   3                              else if(nBattAverTemp < 46)
1011   3                              {
1012   4                                      CLR_MASK(Fan_full_status, b0_Battery_OTP);
1013   4                              }
1014   3                      }
1015   2                      else
1016   2                      {
1017   3                              CLR_MASK(Fan_full_status, b0_Battery_OTP);
1018   3                      }
1019   2                      ////ANGELAG054: add end
1020   2                      
1021   2              }
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 18  

1022   1              else
1023   1              {
1024   2                      CLR_MASK(BatteryAlarm,BATOTP);
1025   2                      CLR_MASK(nStopChgStat3L,ENOVERTEMP);
1026   2                      CLEAR_MASK(Thro_Status2, b3Batt_OTP); //MEILING033:add.
1027   2                      cGPUBattOTPThrottling = 0; //MEILING033:add dGPU throttling to D1.
1028   2                      CLR_MASK(GPU_Prochot, b3_battery_OTP); //ANGELAG024: add
1029   2                      CLR_MASK(Fan_full_status, b0_Battery_OTP); //ANGELAG054: add
1030   2              //      cAMDGPUBattOTPThrott = AMD_GPU_DPM7; //ANGELAG031: remove //DPM7 //ANGELAG022: add
1031   2                      //nBattOvrTempCnt =0;  //MEILING033:remove.
1032   2              }
1033   1      }
1034          
1035          //T069 + s
1036          //////////////////////////////////////////////////////
1037          // check battery out power over 28W
1038          //////////////////////////////////////////////////////
1039          void ChkBattery_OverConsumption()  //MEILING033:modify function name.
1040          {
1041   1          WORD BattPresentVolt; 
1042   1              WORD BattNowCurrent; 
1043   1          BYTE Power_Temp;
1044   1          
1045   1              if ((!Read_AC_IN()) || (IS_MASK_SET(CHGIC_ReadCmd0x12L,BatLearnEnable))) //MEILING033:add learn mode cond
             -ition.
1046   1              { 
1047   2              if (nNowCurrentH & 0x80)
1048   2                      {                  
1049   3                          BattNowCurrent=0xFFFF - (WORD)((nNowCurrentH<<8)+nNowCurrentL);
1050   3                  BattPresentVolt = (WORD)((nPresentVoltH << 8) + nPresentVoltL);
1051   3                  Power_Temp=(BYTE) ((BattPresentVolt*0.1/100) *( BattNowCurrent*0.1/100));     
1052   3                  Chk_Hybrid_STPP_Batt_Output_Power =(LWORD)( Power_Temp*1000000 /292968.75);  
1053   3                              XWTemp1 = 0xFFFF - (WORD)((nNowCurrentH<<8)+nNowCurrentL);
1054   3                              
1055   3                              //MEILING049:S+Modify power limit under DC mode to improve performance follow EC v16.
1056   3                  if(Power_Temp >= SysPower_ProchotOn) //MEILING033:change 45W to 28W.
1057   3                  {  
1058   4                      cGPUBattThrottling = 4; //MEILING033:add dGPU throttling to D5.
1059   4                      SET_MASK(Thro_Status, b7ProCH_BATT); 
1060   4                              }
1061   3                              //MEILING042:S+ add GPU throttling according to system consumption.
1062   3                              else if( (Power_Temp < SysPower_ProchotOn) && (Power_Temp >= SysPower_GPUThrottling) )
1063   3                              {
1064   4                                      //MEILING050:s+Distinguish between 310 or 510.
1065   4                                      if(IS_MASK_SET(pProject0,b7GSKL310OR510))//310
1066   4                                      {
1067   5                                              cGPUBattThrottling = 2; 
1068   5                                              cBATTThrottling = 9;//MEILING051:Add cpu P_STATE function.
1069   5                                      }
1070   4                                      else
1071   4                                      {
1072   5                                              cGPUBattThrottling = 3; 
1073   5                                              cBATTThrottling = 7;//MEILING053:add.
1074   5                                      }
1075   4                      CLR_MASK(Thro_Status, b7ProCH_BATT);
1076   4                                      //MEILING050:e+Distinguish between 310 or 510.
1077   4                              }
1078   3                              else if( (Power_Temp < SysPower_GPUThrottling) && (Power_Temp >= SysPower_ProchotOff) )
1079   3                              {
1080   4                                      //MEILING050:s+Distinguish between 310 or 510.
1081   4                                      if(IS_MASK_SET(pProject0,b7GSKL310OR510))
1082   4                                      {
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 19  

1083   5                                              cGPUBattThrottling = 1; 
1084   5                                              cBATTThrottling = 0; //MEILING053:add.
1085   5                                      }
1086   4                                      else
1087   4                                      {
1088   5                                              cGPUBattThrottling = 2; 
1089   5                                              cBATTThrottling = 0; //MEILING053:add.
1090   5                                      }
1091   4                      CLR_MASK(Thro_Status, b7ProCH_BATT);
1092   4                                      //MEILING050:e+Distinguish between 310 or 510.
1093   4                              }
1094   3                              //MEILING042:E+.
1095   3                  else if(Power_Temp < SysPower_ProchotOff)  //MEILING033:change 35W to 20W.
1096   3                  { 
1097   4                      cGPUBattThrottling = 0; //MEILING033:add dGPU throttling to D1.
1098   4                      cBATTThrottling = 0; //MEILING051:Add cpu P_STATE function.
1099   4                      CLR_MASK(Thro_Status, b7ProCH_BATT); 
1100   4                              }
1101   3              }       
1102   2              }
1103   1              else
1104   1              {
1105   2                      cGPUBattThrottling = 0; //MEILING033:add dGPU throttling to D1.
1106   2                      cBATTThrottling = 0; //MEILING053:add.
1107   2              CLR_MASK(Thro_Status, b7ProCH_BATT);
1108   2              }
1109   1      }
1110          //MEILING049:E+Modify power limit under DC mode to improve performance follow EC v16.
1111          
1112          
1113          void ChkBattery_OCP()
1114          {
1115   1      //ANGELAG017: remove start
1116   1      /*      if (!Read_AC_IN())
1117   1              {
1118   1                      if (nNowCurrentH & 0x80)
1119   1                      {
1120   1                              XWTemp1 = 0xFFFF - (WORD)((nNowCurrentH<<8)+nNowCurrentL);
1121   1      
1122   1                              if (XWTemp1 > OCPCapacity)
1123   1                              {
1124   1                                      SET_MASK(BatteryAlarm,BATOCP);
1125   1                                      //UpBatteryPState();  //MEILING048:remove.//MEILING051:-Add cpu P_STATE function.
1126   1                              }
1127   1                              if (XWTemp1 < OCPCapacityRelease)
1128   1                              {
1129   1                                      CLR_MASK(BatteryAlarm,BATOCP);
1130   1                              }
1131   1                      }
1132   1              }
1133   1              else
1134   1              {
1135   1                      CLR_MASK(BatteryAlarm,BATOCP);
1136   1              }*/
1137   1              //ANGELAG017: remove end
1138   1              ////ANGELAG017: add start
1139   1              /*if ((SystemIsS0) && (!Read_AC_IN()))
1140   1              {
1141   1                      if (Bat0x00TempL&0x20)                          // 0x00  bit5
1142   1                      { 
1143   1                              BatteryOCPDelay=10; //last at least 1s
1144   1                              //cGPUBattOCPThrottling = 4; //set DGPU D5 //ANGELAG033: remove 
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 20  

1145   1                      //      cAMDGPUBattOCPThrott = AMD_GPU_DPM0; //ANGELAG031: remove //DPM0 //ANGELAG022: add
1146   1                          SET_MASK(LENOVOBATT2,BATTERY_OCP); //battery OCP CPU prochot
1147   1                          SET_MASK(GPU_Prochot, b2_battery_OCP); //ANGELAG024: add
1148   1                  }
1149   1                      else
1150   1                      { 
1151   1                              if(BatteryOCPDelay==0)
1152   1                              {
1153   1                                      cGPUBattOCPThrottling = 0; //ANGELAG033: 1 to 0 because psys will set D2 //ANGELAG024: modify d1 to d2
             - //set DGPU D1
1154   1                                      CLR_MASK(GPU_Prochot, b2_battery_OCP); //ANGELAG024: add
1155   1                      //              cAMDGPUBattOCPThrott = AMD_GPU_DPM7;  //ANGELAG031: remove //DPM7 //ANGELAG022: add
1156   1                              CLR_MASK(LENOVOBATT2,BATTERY_OCP); 
1157   1                              }
1158   1                  }
1159   1              }
1160   1              else
1161   1              {
1162   1                      if(BatteryOCPDelay==0)
1163   1                      {
1164   1                              cGPUBattOCPThrottling = 0; //set DGPU D1
1165   1                              CLR_MASK(GPU_Prochot, b2_battery_OCP); //ANGELAG024: add
1166   1              //              cAMDGPUBattOCPThrott = AMD_GPU_DPM7; //ANGELAG031: remove //DPM7 //ANGELAG022: add
1167   1                      CLR_MASK(LENOVOBATT2,BATTERY_OCP); 
1168   1                      }
1169   1              }*/
1170   1              //ANGELAG017: add end
1171   1      }
1172          
1173          
1174          void ChkBattery_LowVoltage()
1175          {
1176   1          WORD CV1,CV2,CV3,CV4;
1177   1              
1178   1              if (!Read_AC_IN())
1179   1              {
1180   2                      if (nNowCurrentH & 0x80)
1181   2                      {
1182   3                              if(bRSMBusBlock(SMbusChB, SMbusRBK, SmBat_Addr, C_Mdata, &BAT1_MD_1))
1183   3                  {
1184   4                                      
1185   4                              CV4 = (BAT1_MD_6 << 8)+BAT1_MD_5;   // Get Main battery desgin voltage   //MEILING016:remove.  //ME
             -ILING017:add.
1186   4                              CV3 = (BAT1_MD_8 << 8)+BAT1_MD_7;   // Get Main battery desgin voltage   //MEILING016:remove.  /
             -/MEILING017:add.
1187   4                              CV2 = (BAT1_MD_A << 8)+BAT1_MD_9;   // Get Main battery desgin voltage  //MEILING016:change CV3 
             -to CV2.  
1188   4                              CV1 = (BAT1_MD_C << 8)+BAT1_MD_B;   // Get Main battery desgin voltage  //MEILING016:change CV4 
             -to CV1.  
1189   4                              //if ((CV1 < 3000) || (CV2 < 3000) || (CV3 < 3000) || (CV4 < 3000) )  //change 4th && to ||  //M
             -EILING016:remove.
1190   4                                      //if ((CV1 < 3000) || (CV2 < 3000)) //MEILING016:add.  //MEILING017:remove.
1191   4                                      if ((CV1 < 3000) || (CV2 < 3000) || ((CellCount>=3) && (CV3 < 3000)) || ((CellCount==4) && (CV4 < 3000
             -)) ) //MEILING017: add
1192   4                                      {
1193   5                                              if(SystemIsS0)
1194   5                          {
1195   6                              RamDebug(0xB1);
1196   6                              //ECQEvent(0x27);                              
1197   6                              SET_MASK(nBatteryStatH, CMBS_CRITICALLOW);                            
1198   6                          }            
1199   5                                      }
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 21  

1200   4                      else
1201   4                      {
1202   5                              CLR_MASK(nBatteryStatH, CMBS_CRITICALLOW);  
1203   5                      }
1204   4       
1205   4      
1206   4                              //if ((CV1 < 3300) || (CV2 < 3300) || (CV3 < 3300) || (CV4 < 3300) )  //MEILING017:remove.
1207   4                              if ((CV1 < 3000) || (CV2 < 3000) || ((CellCount>=3) && (CV3 < 3000)) || ((CellCount==4) && (CV4 
             -< 3000)) ) //MEILING017: add
1208   4                                      {
1209   5                                              SET_MASK(BatteryAlarm,BATLOWVOL);
1210   5                                              //UpBatteryPState();  //MEILING048:remove.//MEILING051:-Add cpu P_STATE function.
1211   5                                      }
1212   4                      else 
1213   4                                      {
1214   5                                              CLR_MASK(BatteryAlarm,BATLOWVOL);
1215   5                                      }      
1216   4                  }   
1217   3                      }
1218   2              }
1219   1              else
1220   1              {
1221   2                      CLR_MASK(BatteryAlarm,BATLOWVOL);
1222   2              CLR_MASK(nBatteryStatH, CMBS_CRITICALLOW);     
1223   2              }
1224   1      }
1225          
1226          
1227          //MEILING033: add start check battery RSOC low function.
1228          void CkkBattery_RSOCLow()
1229          {
1230   1              if ((!Read_AC_IN()) || (IS_MASK_SET(CHGIC_ReadCmd0x12L,BatLearnEnable)))
1231   1              {
1232   2                      if(nBattGasgauge <= 7) //ANGELAG050: modify to <=7 //turn on prochot and dGPU throttling to D5.
1233   2                      {
1234   3                              //cGPUBattLowThrottling = 4; //ANGELAG033: remove //ANGELAG013: D4 to D5 //MEILING055:change D5 to D4.
1235   3                      //      cAMDGPUBattLowThrott = AMD_GPU_DPM0;  //ANGELAG031: remove //DPM0 //ANGELAG022: add
1236   3                              //ANGELAG050: add start
1237   3                              //ANGELAG055: add start
1238   3                              //ANGELAG054: remove start
1239   3                              if(uPJID == 0X02)
1240   3                              {
1241   4                                      cGPUBattLowThrottling = 4; //ANGELAG033: remove
1242   4                              }
1243   3                              else
1244   3                              { //ANGELAG050: add end
1245   4                              //ANGELAG054: remove end
1246   4                              //ANGELAG055: add end
1247   4                                      SET_MASK(GPU_Prochot, b4_battery_low); //ANGELAG024: add
1248   4                              } //ANGELAG055: add //ANGELAG054: remove //ANGELAG050: add
1249   3                              //cBATTLowThrottling=7; //ANGELAG013: remove //MEILING055:add.
1250   3                  SET_MASK(Thro_Status2, b6BattRSOC_Low);  //ANGELAG054: add //MEILING039:add.
1251   3                      }
1252   2                      else if(nBattGasgauge > 7) //ANGELAG050: modify to >7 //turn off prochot and dGPU throttling to D1.
1253   2                      {
1254   3                              cGPUBattLowThrottling = 0;  //ANGELAG033: 1 to 0 because psys will set D2 //ANGELAG024: modify d1 to d2
1255   3                              CLR_MASK(GPU_Prochot, b4_battery_low); //ANGELAG024: add
1256   3                      //      cAMDGPUBattLowThrott = AMD_GPU_DPM7; //ANGELAG031: remove  //DPM7 //ANGELAG022: add
1257   3                  CLEAR_MASK(Thro_Status2, b6BattRSOC_Low);  //ANGELAG054: add //MEILING039:add.
1258   3                      }
1259   2              }
1260   1              else
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 22  

1261   1              {
1262   2                      cGPUBattLowThrottling = 0; 
1263   2                      CLR_MASK(GPU_Prochot, b4_battery_low); //ANGELAG024: add
1264   2              //      cAMDGPUBattLowThrott = AMD_GPU_DPM7; //ANGELAG031: remove //DPM7 //ANGELAG022: add
1265   2                      //cBATTLowThrottling=0;  //ANGELAG022: remove //MEILING055:add.
1266   2              CLEAR_MASK(Thro_Status2, b6BattRSOC_Low);  //ANGELAG054: add //MEILING039:add.
1267   2              }
1268   1      }
1269          //MEILING033:add end.
1270          
1271          void ChkBattery_FCCchg()
1272          {
1273   1              ChkBattery_FCCchg_count++;
1274   1              if (ChkBattery_FCCchg_count >= 100) //Mos: 10 Sec(100ms 100times)
1275   1              {
1276   2                      ChkBattery_FCCchg_count = 0;
1277   2                      //COKEYXU019:S+ remove for RSOC drop from 100% to 85% issue.
1278   2                      //ChkBattery_FCCchg_count2++;
1279   2                      //if(ChkBattery_FCCchg_count2 < 30)
1280   2                      //{
1281   2                      //  return;
1282   2                      //}
1283   2                      //ChkBattery_FCCchg_count2 = 0x00;
1284   2                      //COKEYXU019:E+
1285   2                      //Mos: Load default
1286   2                      if ((ChkBattery_FCCchg_lastFCCL == 0) && (ChkBattery_FCCchg_lastFCCH == 0))
1287   2                      {
1288   3                              ChkBattery_FCCchg_lastFCCL = nFullChgCapL;
1289   3                              ChkBattery_FCCchg_lastFCCH = nFullChgCapH;
1290   3                      }
1291   2      
1292   2                      //Mos: Check FCC and Notify OS if FCC change for each 10 sec
1293   2                      if ((ChkBattery_FCCchg_lastFCCL != nFullChgCapL)
1294   2                              || (ChkBattery_FCCchg_lastFCCH != nFullChgCapH))//change "&&" to "||"
1295   2                      {
1296   3                              ECSMI_SCIEvent(ACPI_BAT1IN_SCI);
1297   3                              ChkBattery_FCCchg_lastFCCL = nFullChgCapL;
1298   3                              ChkBattery_FCCchg_lastFCCH = nFullChgCapH;
1299   3                      }
1300   2              }
1301   1      }
1302          
1303          void ChkAvgCurrent()
1304          {
1305   1              //Mos: Modify for meet specification
1306   1              //Average current report to OS
1307   1              //Timer<=60 seconds(The timer starts counting when AC adapter plug out.)
1308   1              //Report "0x00" to EC name space 0xd2, 0xd3 by one time, and then
1309   1              //Report battery Current(0x0a) to EC name space 0xd2, 0xd3
1310   1              //Reset condition:When Timer>60 seconds,Report battery AverageCurrent(0x0b) to EC name space 0xd2, 0xd3
1311   1              if (Bat0x0BTempH & 0x80)
1312   1              {
1313   2                      XWTemp1 = 0xFFFF - (WORD)((Bat0x0BTempH<<8)+Bat0x0BTempL);      
1314   2                      if (XWTemp1 < 400)
1315   2                      {
1316   3                              return;
1317   3                      }
1318   2              }       
1319   1              // Filter the dirty data because when AC not exit, there will only be discharge current.
1320   1              if(IS_MASK_CLEAR(SYS_STATUS,AC_ADP) && SystemIsS0 && IS_MASK_CLEAR(Bat0x0BTempH,BIT7)) //change 'nNowCu
             -rrentH' to 'Bat0x0BTempH'
1321   1          {
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 23  

1322   2         
1323   2               if(IS_MASK_SET(nNowCurrentH,BIT7))
1324   2              {
1325   3                   nAvgCurrentL = nNowCurrentL;
1326   3                           nAvgCurrentH = nNowCurrentH;
1327   3              }                
1328   2              return;
1329   2          }
1330   1              // Filter the dirty data because when AC not exit, there will only be discharge current.
1331   1              if ( Bat0x0BFakeCnt == 0)
1332   1              {
1333   2                      nAvgCurrentL = Bat0x0BTempL;
1334   2                      nAvgCurrentH = Bat0x0BTempH;
1335   2              }
1336   1              else if(Bat0x0BFakeCnt < 60)
1337   1              {
1338   2                      nAvgCurrentL = nNowCurrentL;
1339   2                      nAvgCurrentH = nNowCurrentH;
1340   2              }
1341   1              else if(Bat0x0BFakeCnt == 60)
1342   1              {
1343   2                      nAvgCurrentL = 0;
1344   2                      nAvgCurrentH = 0;
1345   2              }
1346   1      }
1347          
1348          void RST_ChgTimeOutCnt(void)
1349          {
1350   1              TrickleChgTimeOutCnt = 0;
1351   1              FastChgTimeOutCnt = 0;
1352   1              CLEAR_MASK(nStopChgStat3L,ENSTOPCHG);
1353   1              CLEAR_MASK(nStopChgStat3H,ENTRITIMEOUT); //MARTINO006:change 'nStopChgStat3L' to 'nStopChgStat3H'
1354   1      }
1355          
1356          void Battery100ms(void)
1357          {
1358   1              if (inhibit2sec!=0)
1359   1                      inhibit2sec--;
1360   1              else
1361   1                      CLEAR_MASK(nStopChgStat3L,ENCHARGESUSP);                // use for detect battery charging suspend
1362   1      }
1363          //ANGELAG019: add start
1364          void ChkPsys()
1365          {
1366   1              if ((SystemIsS0) && (!Read_AC_IN()))
1367   1              {
1368   2      /* ////ANGELAG046: remove start
1369   2                      if (nBattGasgauge > 30) //ANGELAG024: modify 10 to 30
1370   2                      {
1371   2                              //if (Psys > 286) //ANGELAG028: remove //>0.84V(286)
1372   2                              if (Psys >= 368) //ANGELAG028: add //54W, 1.08V
1373   2                              {
1374   2                                      //cGPUBattPsysThrottling = 4; //ANGELAG024: remove
1375   2                                      
1376   2                                      //cGPUBattPsysThrottling = 4;  //ANGELAG033: remove //ANGELAG028: add
1377   2                                      
1378   2                                      SET_MASK(GPU_Prochot, b1_Psys); //ANGELAG024: add
1379   2                              //      cAMDGPUPsysThrott = AMD_GPU_DPM0; //ANGELAG031: remove //DPM0 //ANGELAG022: add
1380   2                                       SET_MASK(Thro_Status2, b7ProCH_Psys);
1381   2                              }
1382   2                              //else if (Psys > 259) //ANGELAG028: remove //ANGELAG024: modify 273 to 259 //0.76V(259) ~ 0.84V //<0.8
             -0V(273) ~ 0.84V
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 24  

1383   2                              else if ((Psys >= 307) && (Psys < 368)) //ANGELAG028: add //45W ~ 54W
1384   2                              {
1385   2                                      cGPUBattPsysThrottling = 2; //ANGELAG024: modify d3 to d4
1386   2                              //      cAMDGPUPsysThrott = AMD_GPU_DPM3; ///ANGELAG031: remove /DPM3 //ANGELAG022: add
1387   2                                      CLR_MASK(GPU_Prochot, b1_Psys); 
1388   2                                       CLR_MASK(Thro_Status2, b7ProCH_Psys);
1389   2                              }
1390   2                              //else if (Psys > 232) //ANGELAG028: remove start //ANGELAG024: modify 259 to 232 //0.68V(232) to 0.76V
             - //0.76V ~ 0.80V
1391   2                              //{
1392   2                              //      cGPUBattPsysThrottling = 2; //ANGELAG024: modify d2 to d3
1393   2                                      //cAMDGPUPsysThrott = AMD_GPU_DPM5; //DPM5 //ANGELAG031: remove //ANGELAG022: add
1394   2                              //      CLR_MASK(GPU_Prochot, b1_Psys); //ANGELAG024: ADD
1395   2                      //               CLR_MASK(Thro_Status2, b7ProCH_Psys);
1396   2                      //      }  //ANGELAG028: remove end
1397   2                              //else //ANGELAG028: remove //0.68V //< 0.76V
1398   2                              else if(Psys < 307) //ANGELAG028: add //45W, 0.9V
1399   2                              {
1400   2                                      cGPUBattPsysThrottling = 1; //ANGELAG024: ADD //for NV
1401   2                              //      cAMDGPUPsysThrott = AMD_GPU_DPM7; //ANGELAG031: remove //fOR AMD GPU: DPM7 //ANGELAG022: add
1402   2                                      CLR_MASK(GPU_Prochot, b1_Psys); //ANGELAG024: ADD
1403   2                                       CLR_MASK(Thro_Status2, b7ProCH_Psys);
1404   2                              }
1405   2                      }
1406   2      //ANGELAG024: add start
1407   2                      else if (nBattGasgauge > 10)
1408   2                      {
1409   2                              //if (Psys > 286) //ANGELAG028: remove //>0.84V
1410   2                              if (Psys >= 368) //ANGELAG028: add
1411   2                              {
1412   2                                      //cGPUBattPsysThrottling = 4;
1413   2                                      //cGPUBattPsysThrottling = 4; //ANGELAG033: remove //ANGELAG028: add
1414   2                                      
1415   2                                      SET_MASK(GPU_Prochot, b1_Psys);
1416   2                                      SET_MASK(Thro_Status2, b7ProCH_Psys);
1417   2                              //      cAMDGPUPsysThrott = AMD_GPU_DPM0; //ANGELAG031: remove //DPM0 //ANGELAG022: add
1418   2                              }
1419   2                              //else if (Psys > 232) //ANGELAG028: remove //<0.76V ~ 0.84V
1420   2                              else if ((Psys >= 307) && (Psys < 368)) //ANGELAG028: add
1421   2                              {
1422   2                                      cGPUBattPsysThrottling = 3;
1423   2                                      //cAMDGPUPsysThrott = AMD_GPU_DPM3; //ANGELAG031: remove //DPM3 //ANGELAG022: add
1424   2                                      CLR_MASK(GPU_Prochot, b1_Psys);
1425   2                                       CLR_MASK(Thro_Status2, b7ProCH_Psys);
1426   2                              }
1427   2                              //else //ANGELAG028: remove //< 0.68V
1428   2                              else if(Psys < 307) //ANGELAG028: add
1429   2                              {
1430   2                                      cGPUBattPsysThrottling = 2; //for NV
1431   2                              //      cAMDGPUPsysThrott = AMD_GPU_DPM7; //ANGELAG031: remove //fOR AMD GPU: DPM7 //ANGELAG022: add
1432   2                                      CLR_MASK(GPU_Prochot, b1_Psys);
1433   2                                      CLR_MASK(Thro_Status2, b7ProCH_Psys);
1434   2                              }
1435   2                      }
1436   2      //ANGELAG024: add end
1437   2                      else
1438   2                      {
1439   2                              //if (Psys > 191) //ANGELAG028: remove  //ANGELAG024: modify 0.60V(204) to 0.56V(191) //0.56V //0.6V
1440   2                              if (Psys >= 191) //ANGELAG028: add //28W, 0.56V
1441   2                              {
1442   2                                      //cGPUBattPsysThrottling = 4; //ANGELAG024: REMOVE set to D5 to improve GPU responce speed
1443   2                                      //cGPUBattPsysThrottling = 4; //ANGELAG033: remove //ANGELAG028: add
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 25  

1444   2                              //      cAMDGPUPsysThrott = AMD_GPU_DPM0; //ANGELAG031: remove //DPM0 //ANGELAG022: add
1445   2                                      SET_MASK(GPU_Prochot, b1_Psys); //ANGELAG024: add
1446   2                                       SET_MASK(Thro_Status2, b7ProCH_Psys);
1447   2                              }
1448   2                              //ANGELAG024: add start
1449   2                              //else if (Psys > 163) //ANGELAG028: remove  //0.48-0.56V
1450   2                              else if ((Psys >= 163) && (Psys < 191)) //ANGELAG028: add
1451   2                              {
1452   2                                      cGPUBattPsysThrottling = 3;
1453   2                              //      cAMDGPUPsysThrott = AMD_GPU_DPM2; //ANGELAG031: remove //DPM2 //ANGELAG022: add
1454   2                                      CLR_MASK(GPU_Prochot, b1_Psys);
1455   2                                       CLR_MASK(Thro_Status2, b7ProCH_Psys);
1456   2                              }
1457   2                              //ANGELAG024: add end
1458   2                              //else //if (Psys < 177) //ANGELAG028: remove //ANGELAG024: <0.48V //0.52V
1459   2                              else if(Psys < 163 ) ////ANGELAG028: add //24W, 0.48V
1460   2                              {
1461   2                                      cGPUBattPsysThrottling = 2; //ANGELAG024: modify d1 to d3
1462   2                              //      cAMDGPUPsysThrott = AMD_GPU_DPM7; //ANGELAG031: remove//DPM7 //ANGELAG022: add
1463   2                                      CLR_MASK(GPU_Prochot, b1_Psys); //ANGELAG024: add
1464   2                                       CLR_MASK(Thro_Status2, b7ProCH_Psys);
1465   2                              }
1466   2                      } */ //ANGELAG046: remove end
1467   2                      //ANGELAG046: add start
1468   2                      
1469   2                      if (nBattGasgauge > 25) //battery capacity is >25
1470   2                      {
1471   3                              if (Psys_AvgData >= 546) //>=54W, CPU & GPU prochot//COKEYXU003:Modify to 80W(1.6V)
1472   3                              {                       
1473   4                                      SET_MASK(GPU_Prochot, b1_Psys);
1474   4                                      SET_MASK(Thro_Status2, b7ProCH_Psys);
1475   4                              }
1476   3                              else if ((Psys_AvgData >= 409) && (Psys_AvgData < 546)) //COKEYXU003:60~80W, cancel prochot, and NV SKU
             - set D4
1477   3                              {
1478   4                                      cGPUBattPsysThrottling = 3; //only for NV
1479   4                                      CLR_MASK(GPU_Prochot, b1_Psys);
1480   4                                      CLR_MASK(Thro_Status2, b7ProCH_Psys);
1481   4                              }
1482   3                              else if(Psys_AvgData < 409) //COKEYXU003: <60W, cancel prochot, and NV SKU set D3
1483   3                              {
1484   4                                      cGPUBattPsysThrottling = 2; //only for NV
1485   4                                      CLR_MASK(GPU_Prochot, b1_Psys);
1486   4                                      CLR_MASK(Thro_Status2, b7ProCH_Psys);
1487   4                              }
1488   3                      }
1489   2                      else if (nBattGasgauge > 10) //battery capacity is 10-25
1490   2                      {
1491   3                              if (Psys_AvgData >= 546) //54W(0.0029296875*368=1.078V) //COKEYXU003:Modify to 80W(1.6V)
1492   3                              {                       
1493   4                                      SET_MASK(GPU_Prochot, b1_Psys);
1494   4                                      SET_MASK(Thro_Status2, b7ProCH_Psys);
1495   4                              }
1496   3                              else if (Psys_AvgData < 409) //<54W//COKEYXU003:Modify to 60W(1.2V)
1497   3                              {
1498   4                                      cGPUBattPsysThrottling = 2; //D4//COKEYXU003:Modify to D3
1499   4                                      CLR_MASK(GPU_Prochot, b1_Psys);
1500   4                                      CLR_MASK(Thro_Status2, b7ProCH_Psys);
1501   4                              }
1502   3                      }
1503   2                      else if (nBattGasgauge > 7) //battery capacity is 7-10
1504   2                      {
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 26  

1505   3                              if (Psys_AvgData >= 204) ////ANGELAG050: modify to 26W, 0.52V//COKEYXU003:Modify to 30W(0.6V)
1506   3                              {
1507   4                                      SET_MASK(GPU_Prochot, b1_Psys);
1508   4                                       SET_MASK(Thro_Status2, b7ProCH_Psys);
1509   4                              }
1510   3                              else if (Psys_AvgData < 204) //ANGELAG050: modify to 26W, 0.52V//COKEYXU003:Modify to 30W(0.6V)
1511   3                              {
1512   4                                      cGPUBattPsysThrottling = 3; //D4
1513   4                                      CLR_MASK(GPU_Prochot, b1_Psys);
1514   4                                       CLR_MASK(Thro_Status2, b7ProCH_Psys);
1515   4                              }
1516   3                      }
1517   2                      else    // battery capacity is 0-7
1518   2                      {
1519   3                              SET_MASK(GPU_Prochot, b1_Psys);
1520   3                              SET_MASK(Thro_Status2, b7ProCH_Psys);
1521   3                      }
1522   2                      //ANGELAG046: add end
1523   2              }
1524   1              else
1525   1              {
1526   2                      cGPUBattPsysThrottling = 0;
1527   2              //      cAMDGPUPsysThrott = AMD_GPU_DPM7; //ANGELAG031: remove //DPM7 //ANGELAG022: add
1528   2                      CLR_MASK(GPU_Prochot, b1_Psys); //ANGELAG024: add
1529   2                      CLR_MASK(Thro_Status2, b7ProCH_Psys);
1530   2              }
1531   1      }
1532          //ANGELAG019: add end
1533          
1534          void Battery1Sec(void)
1535          {
1536   1              //DownBatteryPState();  //MEILING048:remove.//MEILING051:-Add cpu P_STATE function.
1537   1              if (Bat0x0BFakeCnt != 0)
1538   1                      Bat0x0BFakeCnt--;
1539   1      
1540   1        if ((BatSMbusFailCount != 0)&&IS_MASK_CLEAR(BATTUPDATEFW, PriBattInhib))   //MARTINA034:add 'PriBattInhi
             -b' judge 
1541   1              {
1542   2              SET_MASK(Bat1_FPChgFlag,BIT(0));
1543   2              nBattErrorCnt++;
1544   2              if (nBattErrorCnt > 250)
1545   2                      nBattErrorCnt = 251;
1546   2              if (BatSMbusFailCount > 220)
1547   2                      BatSMbusFailCount = 221;
1548   2              }
1549   1              else
1550   1              {
1551   2                      nBattErrorCnt = 0;
1552   2                      if (nNowCurrentL|nNowCurrentH)                  // if  nNowCurrent != 0
1553   2                      {
1554   3                              if ((nNowCurrentH&0x80) == 0)           // nNowCurrent > 0, charging
1555   3                              {                                                               //current(0x0A)>0mA&polling time10cycles
1556   4                                      nBattTempCnt ++;
1557   4                                      if (nBattTempCnt >= 10)
1558   4                                              nBattTempCnt = 11;                      // nBattTempCnt > 10
1559   4                              }
1560   3                              else                                                            // discharging
1561   3                              {
1562   4                                      nBattTempCnt = 0;
1563   4                                      RST_ChgTimeOutCnt();
1564   4                              }
1565   3                      }
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 27  

1566   2                      else
1567   2                      {
1568   3                              nBattTempCnt = 0;
1569   3                      }
1570   2              }
1571   1      }
1572          
1573          
1574          const sRSmbusBStruct code ABatCommandTable [] =
1575          {//     command               REG                      no.
1576                  { C_Date,               &nManufactureDateL              ,0x00},                         //Batpollstep1 = 0      WORD
1577                  { C_Dchem,              &batteryChemistry               ,0x04},                         //Batpollstep1 = 1      BLOCK
1578                  { C_Mname,              &BATTMANUFACTURE                ,0x0A},                         //Batpollstep1 = 2      BLOCK
1579                  { C_Dname,              &BATTDEVICENAME                 ,0x0A},                         //Batpollstep1 = 3              BLOCK
1580                  { C_OpMfgFun5,  &BAT1_Bar_Code          ,0x0A},             //Batpollstep1 = 4       BLOCK  //MEILING031:
             -add. 
1581                  { C_Date,               &nManufactureDateL              ,0x00},                         //Batpollstep1 = 5      WORD
1582                  { C_DCap,           &nDesignCapL                        ,0x00},                         //Batpollstep1 = 6      WORD    0~8 initial only
1583                  { C_DVolt,              &nDesignVoltL                   ,0x00},                         //Batpollstep1 = 7      WORD
1584                  { C_SerialNo,   &nSerialNumL                    ,0x00},                         //Batpollstep1 = 8      WORD
1585                  { C_mode,               &EC_C_modeL                             ,0x00},                         //Batpollstep1 = 9              WORD
1586                  { C_ChargingV,  &nChargingVoltL                 ,0x00},                         //Batpollstep1 = 10     WORD
1587                  { C_CycleCount, &EC_oCCBQl                              ,0x00},                         //Batpollstep1 = 11     WORD
1588                  { C_volt,               &nPresentVoltL                  ,0x00},                         //Batpollstep1 = 12     WORD
1589                  { C_current,    &nNowCurrentL                   ,0x00},                         //Batpollstep1 = 13     WORD
1590                  { C_ChargingI,  &nBattCharCurrentL      ,0x00},                         //Batpollstep1 = 14     WORD
1591                  { C_BatStatus,  &nBattery0x16L                  ,0x00},                         //Batpollstep1 = 15     WORD
1592                  { C_RMcap,              &Bat0x0FTempL                   ,0x00},                         //Batpollstep1 = 16     WORD    9~19 normal polling
1593                  { C_current,    &nNowCurrentL                   ,0x00},                         //Batpollstep1 = 17     WORD
1594                  { C_FCcap,              &nFullChgCapL                   ,0x00},                         //Batpollstep1 = 18     WORD
1595                  { C_temp,               &EC_oCBTl                               ,0x00},                         //Batpollstep1 = 19     WORD
1596                  { C_RSOC,               &BAT1PERCL                      ,0x00},                         //Batpollstep1 = 20     WORD
1597                  { C_current,    &nNowCurrentL                   ,0x00},                         //Batpollstep1 = 21     WORD
1598                  { C_AVcurrent,  &Bat0x0BTempL                   ,0x00},                         //Batpollstep1 = 22     WORD
1599                  { C_LVMfgFun2,  &Bat0x3ETempL                   ,0x00},                         //Batpollsetp1 = 23     WORD
1600                  { C_access,             &Bat0x00TempL                   ,0x00},                         //Batpollsetp1 = 24     WORD
1601                  { C_current,    &nNowCurrentL                   ,0x00},                         //Batpollstep1 = 25     WORD
1602                  { C_RSOC,               &BAT1PERCL                      ,0x00},                         //Batpollstep1 = 26     WORD  //Add read battery RSOC at bottom of tab
             -le.
1603                  //{ C_D_FET,    &SHIPMODE_L                     ,0x00},                                 //Batpollstep1 = 27     WORD
1604          
1605          };
1606          
1607          //-----------------------------------------------------------------------------
1608          // get 1 battery data
1609          //-----------------------------------------------------------------------------
1610          void GetBatData(BYTE _STEP)
1611          {
1612   1              switch (_STEP)
1613   1          {
1614   2              case 1: //block data
1615   2              //Mos: Break C_Dchem directly
1616   2              //Cause That memory overlap with C_Dname, it will cause Data unstable, I can't get same data 3 times
1617   2                              //break;//ANGELAS107:-Add code for GBSI function.
1618   2                      case 2: //block data
1619   2                      case 3: //block
1620   2                      case 4: //block data //MEILING031:add.
1621   2                              if(     !bRSMBusBlock(SMbusChB, SMbusRBK, SmBat_Addr,
1622   2                                      ABatCommandTable[_STEP].cmd,
1623   2                                      ABatCommandTable[_STEP].smbdataA))
1624   2                              {       // SMBUS FAIL
1625   3                                      BatSMbusFailCount++;
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 28  

1626   3                                      //ResetSMBus(SMbusChB); //MEILING002: add  //MEILING014:remove.
1627   3                              }
1628   2                              else
1629   2                              {       // SMBUS OK
1630   3                                      BatSMbusFailCount=0;
1631   3                              }
1632   2                              break;
1633   2      
1634   2                      default: //word data
1635   2                              if(!bRWSMBus(SMbusChB, SMbusRW, SmBat_Addr,
1636   2                                 ABatCommandTable[_STEP].cmd,
1637   2                                 ABatCommandTable[_STEP].smbdataA,
1638   2                                 SMBus_NoPEC))
1639   2                              {       // SMBUS FAIL
1640   3                                      BatSMbusFailCount++;
1641   3                                      //ResetSMBus(SMbusChB); //MEILING002: add  //MEILING014:remove.
1642   3                              }
1643   2                              else
1644   2                              {       // SMBUS OK
1645   3                                      BatSMbusFailCount=0;
1646   3                              }
1647   2      
1648   2                              break;
1649   2              }
1650   1      }
1651          
1652          
1653          void ChkBattery_Percl()
1654          {
1655   1          bRWSMBus(SMbusChB, SMbusRW, SmBat_Addr,C_RSOC,&BAT1PERCL ,SMBus_NoPEC);
1656   1      }
1657          
1658          //-----------------------------------------------------------------------------
1659          // battery plug in first fast update all information
1660          //-----------------------------------------------------------------------------
1661          void FirstGetBatData(void)
1662          {
1663   1              BYTE i,j;
1664   1              WORD DesignVoltage; //MEILING017: add
1665   1      
1666   1              Batpollstep1 = 0;
1667   1              nBatteryStatL = 0;
1668   1              for (i=0;i<(sizeof(ABatCommandTable)/4);i++)
1669   1              {
1670   2              GetBatData(Batpollstep1);
1671   2              Batpollstep1++;
1672   2              }
1673   1          Batpollstep1=8;
1674   1          SHA1_SEED = (WORD)((TL0+Bat0x0FTempL)<<8);
1675   1      
1676   1              //Mos: Move to OEM_PollingBatData_TASK() to make sure Battery data stable.
1677   1              /*if( ( BATTMANUFACTURE[0] == 'S' ) && ((BATTMANUFACTURE[1] == 'A' )||( BATTMANUFACTURE[1] == 'a' )) )
1678   1                  nBatteryStatL |= 0x10 ;     // SANYO
1679   1              else if( (BATTMANUFACTURE[0] == 'S' ) && ( BATTMANUFACTURE[1] == 'O' ) )
1680   1                  nBatteryStatL |= 0x20 ;     // Sony
1681   1              else if( (BATTMANUFACTURE[0] == 'P' ) && (( BATTMANUFACTURE[1] == 'A' )|| ( BATTMANUFACTURE[1] == 'a' )) 
             -)
1682   1                      nBatteryStatL |= 0x40 ; // Panasonic
1683   1              else if( (BATTMANUFACTURE[0] == 'S' ) && ( BATTMANUFACTURE[1] == 'U' ) )
1684   1                      nBatteryStatL |= 0x50 ; // Samsung
1685   1              else if( (BATTMANUFACTURE[0] == 'L' ) && ( BATTMANUFACTURE[1] == 'G' ) )
1686   1                      nBatteryStatL |= 0x30 ; // LG
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 29  

1687   1              else if( (BATTMANUFACTURE[0] == 'C' ) && (( BATTMANUFACTURE[1] == 'P' ) || ( BATTMANUFACTURE[1] == 'p' ))
             - )
1688   1                      nBatteryStatL |= 0x60;  // CPT Celxpert
1689   1              else if( (BATTMANUFACTURE[0] == 'S' ) && (BATTMANUFACTURE[1] == 'M' ) )
1690   1                      nBatteryStatL |= 0x70;  // Simplo*/
1691   1              
1692   1              //ANGELAS107:S+Add code for GBSI function.
1693   1          if((batteryChemistry[0]=='L')&&(batteryChemistry[1]=='I')&&(batteryChemistry[2]=='O')&&(batteryChemist
             -ry[3]=='N'))
1694   1                      SET_MASK(nBatteryStatL,CMBS_BATTTYPE);  
1695   1              else
1696   1                  CLEAR_MASK(nBatteryStatL,CMBS_BATTTYPE);
1697   1          //ANGELAS107:E+Add code for GBSI function.
1698   1      
1699   1              OCPCapacity = (WORD)((nDesignCapH<<8)+nDesignCapL);
1700   1              OCPCapacity = OCPCapacity *8;
1701   1              //Mos: According Batt - Patrick request, reduce Over Current Point from 0.8 DesignCap to 0.78 DesignCap.
1702   1              //T059- OCPCapacity = OCPCapacity - (OCPCapacity * 2 / 10);
1703   1              //T059- OCPCapacity = OCPCapacity / (WORD)((nDesignVoltH<<8)+nDesignVoltL);
1704   1              //T059- OCPCapacity = OCPCapacity * 1000;
1705   1      
1706   1          OCPCapacity =(WORD)((LWORD)OCPCapacity*1000 / (WORD)((nDesignVoltH<<8)+nDesignVoltL));
1707   1      
1708   1              OCPCapacityRelease = (WORD)((nDesignCapH<<8)+nDesignCapL);
1709   1              OCPCapacityRelease = OCPCapacityRelease *7;
1710   1      
1711   1          OCPCapacityRelease =(WORD)((LWORD)OCPCapacityRelease*1000 / (WORD)((nDesignVoltH<<8)+nDesignVoltL));
1712   1      
1713   1              //MEILING017: add start
1714   1              DesignVoltage=(WORD)((nDesignVoltH<<8)+ nDesignVoltL);
1715   1              if((DesignVoltage >= 14000) && (DesignVoltage <= 15200))  //Cell: 4series   14V~15.2V
1716   1                      CellCount=4;
1717   1              else if((DesignVoltage >= 10500) && (DesignVoltage <= 11400)) //Cell: 3series   10.5V~11.4V
1718   1                      CellCount=3;
1719   1              else if((DesignVoltage >= 7000) && (DesignVoltage <= 7600)) //Cell: 2series   7V~7.6V
1720   1                      CellCount=2;
1721   1              //MEILING017: add end
1722   1      
1723   1              S3ResumeRSOC = S3RSOCPercentage;                // Set S3 resuem in the battery under 5%.
1724   1              BatteryOTP = BatteryOTPHi;
1725   1              BatteryOTPRelease = BatteryOTPLow;
1726   1              BatteryOTPShutdown = BatteryOTPSD;
1727   1      
1728   1      
1729   1              UpdateNameSpace();
1730   1              Chk_Battery_Full();
1731   1              nBattErrorCnt = 0;
1732   1              SHA1_SEED = SHA1_SEED + (WORD)(TL0);
1733   1              srand(SHA1_SEED);
1734   1      
1735   1              if (BatSMbusFailCount==0)
1736   1              {
1737   2                      Battdata_ready = 1;
1738   2                      WSMbusTemp01 = EC_C_modeH;
1739   2                      if ((WSMbusTemp01^0xE0)&0xE0)                           // check bit15,bit14,bit13=1  ??
1740   2                      {
1741   3                              WSMbusTemp01=EC_C_modeL;
1742   3                              WSMbusTemp02=EC_C_modeH;
1743   3                              WSMbusTemp02|=0xE0;
1744   3                              if(!bRWSMBus(SMbusChB, SMbusWW, SmBat_Addr, C_mode, &WSMbusTemp01,SMBus_NoPEC))
1745   3                              {
1746   4                                      BatSMbusFailCount++;
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 30  

1747   4                              }
1748   3                      }
1749   2              }
1750   1      }
1751          
1752          void Chk_Battery_Full(void)
1753          {
1754   1              //COKEYXU018: 65W adapter stop charging when S0
1755   1              if (IS_MASK_CLEAR(SYS_STATUS,AC_ADP)||(IS_MASK_SET(CHGIC_ReadCmd0x37L, BoostIndication))||(IS_MASK_SET(SY
             -S_STATUS,AC_ADP)&&IS_MASK_SET(ACOFF_SOURCE,BATTLEARN)))
1756   1              {
1757   2              CLEAR_MASK(SEL_STATE0,CHARGE_A);                //clear  battery charging flag
1758   2              CLEAR_MASK(nBatteryStatH,CMBS_CHARGE);  //clear  battery charging flag
1759   2              SET_MASK(nBatteryStatH,CMBS_DISCHARGE); //set battery discharging flag
1760   2              return;
1761   2              }
1762   1      
1763   1              //if ((cBattFlag0.fbit.cCmdAcOff==1)||Read_ACOFF()||IS_MASK_SET(EC_BatteryStatusL,FullyChg)||((nStopChgSt
             -at3L|nStopChgStat3H)!=0))
1764   1              if ((cBattFlag0.fbit.cCmdAcOff==1)||IS_MASK_SET(EC_BatteryStatusL,FullyChg)||((nStopChgStat3L|nStopChgSta
             -t3H)!=0))
1765   1              {
1766   2                      CLEAR_MASK(SEL_STATE0,CHARGE_A);                                //clear  battery charging flag
1767   2                      CLEAR_MASK(nBatteryStatH,CMBS_CHARGE);          //clear  battery charging flag
1768   2                      CLEAR_MASK(nBatteryStatH,CMBS_DISCHARGE);       //clear battery discharging flag
1769   2                      return;
1770   2              }
1771   1              else
1772   1              {
1773   2                      if ((cBattFlag0.fbit.cBF0_GoTarget ==1) && (cTargetGauge == nBattGasgauge))
1774   2                      {
1775   3                              CLEAR_MASK(SEL_STATE0,CHARGE_A);                        //clear  battery charging flag
1776   3                              CLEAR_MASK(nBatteryStatH,CMBS_CHARGE);          //clear  battery charging flag
1777   3                              CLEAR_MASK(nBatteryStatH,CMBS_DISCHARGE);       //clear battery discharging flag
1778   3                              return;
1779   3                      }
1780   2              }
1781   1      
1782   1              if (IS_MASK_CLEAR(LENOVOPMFW,BATTERY_STORAGE))  
1783   1              {
1784   2                      if (IS_MASK_SET(nBattery0x16L,FullyChg))        // || IS_MASK_SET(CHGIC_ReadCmd0x12L,ChargeInhibit))
1785   2                      {
1786   3                              CLEAR_MASK(SEL_STATE0,CHARGE_A);                        //clear  battery charging flag
1787   3                              CLEAR_MASK(nBatteryStatH,CMBS_CHARGE);          //clear  battery charging flag
1788   3                              SET_MASK(nBatteryStatH,CMBS_DISCHARGE);         //set battery discharging flag
1789   3                      }
1790   2                      else
1791   2                      {
1792   3                              SET_MASK(SEL_STATE0,CHARGE_A);                          //set battery charging flag
1793   3                              SET_MASK(nBatteryStatH,CMBS_CHARGE);            //set battery charging flag
1794   3                              CLEAR_MASK(nBatteryStatH,CMBS_DISCHARGE);       //clear battery discharging flag
1795   3                      }
1796   2              }
1797   1              else
1798   1              {
1799   2                      if (IS_MASK_SET(EC_BatteryStatusL,FullyChg))    // || IS_MASK_SET(CHGIC_ReadCmd0x12L,ChargeInhibit))
1800   2                      {
1801   3                              CLEAR_MASK(SEL_STATE0,CHARGE_A);                        //clear  battery charging flag
1802   3                              CLEAR_MASK(nBatteryStatH,CMBS_CHARGE);          //clear  battery charging flag
1803   3                      }
1804   2                      else
1805   2                      {
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 31  

1806   3                              SET_MASK(SEL_STATE0,CHARGE_A);                          //set battery charging flag
1807   3                              SET_MASK(nBatteryStatH,CMBS_CHARGE);            //set battery charging flag
1808   3                              CLEAR_MASK(nBatteryStatH,CMBS_DISCHARGE);       //clear battery discharging flag
1809   3                      }
1810   2              }
1811   1      }
1812          
1813          void Unlock_ShipMode(void)
1814          {
1815   1              /*BYTE sCmd;
1816   1              WORD sData;
1817   1      
1818   1              // first command = 0x34, data1 = 0x2000, data2 = 0x4000
1819   1              sCmd = C_D_FET;
1820   1              sData = 0x0020;         // word form L/H
1821   1              if (!bRWSMBus(SMbusChB, SMbusWW, SmBat_Addr, sCmd, &sData,SMBus_NoPEC))
1822   1              {
1823   1                      SMbusFailCnt3++;
1824   1              }
1825   1      
1826   1              sCmd = C_D_FET;
1827   1              sData = 0x0040;         // word form L/H
1828   1              if (!bRWSMBus(SMbusChB, SMbusWW, SmBat_Addr, sCmd, &sData,SMBus_NoPEC))
1829   1              {
1830   1                      SMbusFailCnt2++;
1831   1              }
1832   1              */
1833   1              // change all SMBus_NoPEC to SMBus_NeedPEC
1834   1          if(IS_MASK_SET(BATTUPDATEFW,BIT0))
1835   1              return;
1836   1              ShipModeEn=0x00;   //ANGELAS032: add
1837   1              CLEAR_MASK(EMStatusBit2,b0SetBatteryShipMode); //ANGELAS079:add
1838   1              WSMbusTemp01=0x00;
1839   1              WSMbusTemp02=0x20;
1840   1      
1841   1              if(!bRWSMBus(SMbusChB, SMbusWW, SmBat_Addr, C_D_FET, &WSMbusTemp01,SMBus_NeedPEC)) 
1842   1              {
1843   2                      SMbusFailCnt3++;
1844   2              }
1845   1      
1846   1              WSMbusTemp01=0x00;
1847   1              WSMbusTemp02=0x40;
1848   1      
1849   1              if(!bRWSMBus(SMbusChB, SMbusWW, SmBat_Addr, C_D_FET, &WSMbusTemp01,SMBus_NeedPEC))
1850   1              {
1851   2                      SMbusFailCnt2++;
1852   2              }
1853   1              // start Shipmode disable 5s loop once
1854   1              if(bRWSMBus(SMbusChB, SMbusRW, SmBat_Addr, C_D_FET, &ShipModeACK,SMBus_NoPEC))
1855   1              {
1856   2                  if(ShipModeACK!=0x00)
1857   2                  {
1858   3                 ShipModeCnt=1;
1859   3                      }       
1860   2              }
1861   1              else
1862   1              {
1863   2                  SMbusFailCnt4++;
1864   2              ShipModeCnt=1;
1865   2              }
1866   1              // End Shipmode disable 5s loop once 
1867   1      }
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 32  

1868          
1869          void Lock_ShipMode(void)
1870          {
1871   1              /*
1872   1              BYTE sCmd;
1873   1              WORD sData;
1874   1      
1875   1              // first command = 0x34, data1 = 0x0000, data2 = 0x1000
1876   1              sCmd = C_D_FET;
1877   1              sData = 0x0000;         // word form L/H
1878   1              if (!bRWSMBus(SMbusChB, SMbusWW, SmBat_Addr, sCmd, &sData,SMBus_NoPEC))
1879   1              {
1880   1                      SMbusFailCnt3++;
1881   1              }
1882   1      
1883   1              sCmd = C_D_FET;
1884   1              sData = 0x0010;         // word form L/H
1885   1              if (!bRWSMBus(SMbusChB, SMbusWW, SmBat_Addr, sCmd, &sData,SMBus_NoPEC))
1886   1              {
1887   1                      SMbusFailCnt2++;
1888   1              }
1889   1              */
1890   1              //change all SMBus_NoPEC to SMBus_NeedPEC
1891   1      
1892   1              //LMLKBL0019:s+Add time delay for Clear First Used Date to Enable ship mode following the requirements of
             - the battery and re-try mechanism.
1893   1              BYTE retryNum = 0x00; 
1894   1          SMbusFailCnt3 = 0x00; 
1895   1          SMbusFailCnt2 = 0x00;
1896   1              
1897   1              WSMbusTemp01=0x00;
1898   1              WSMbusTemp02=0x00;
1899   1              if(!bRWSMBus(SMbusChB, SMbusWW, SmBat_Addr, C_D_FET, &WSMbusTemp01,SMBus_NeedPEC))
1900   1              {
1901   2                      SMbusFailCnt3++;
1902   2              }
1903   1              
1904   1              Delay1MS(250);
1905   1      
1906   1              WSMbusTemp01=0x00;
1907   1              WSMbusTemp02=0x10;
1908   1              if(!bRWSMBus(SMbusChB, SMbusWW, SmBat_Addr, C_D_FET, &WSMbusTemp01,SMBus_NeedPEC))
1909   1              {
1910   2                      SMbusFailCnt2++;
1911   2              }
1912   1      
1913   1              for(retryNum=0x00;retryNum<0x06;retryNum++)
1914   1          {
1915   2              if((SMbusFailCnt3 == 0x00)&&(SMbusFailCnt2 == 0x00))
1916   2                      break;
1917   2      
1918   2              ProcessSID(0xA5);
1919   2              SMbusFailCnt3 = 0x00;
1920   2              SMbusFailCnt2 = 0x00;
1921   2                 
1922   2              Delay1MS(0x0A);
1923   2              Delay1MS(250); //ANGELAG015: add
1924   2                 
1925   2              WSMbusTemp01=0x00;
1926   2              WSMbusTemp02=0x00;
1927   2              if(!bRWSMBus(SMbusChB, SMbusWW, SmBat_Addr, C_D_FET, &WSMbusTemp01,SMBus_NeedPEC))
1928   2              {
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 33  

1929   3                      SMbusFailCnt3++;
1930   3              }
1931   2                 
1932   2              Delay1MS(250);
1933   2             
1934   2              WSMbusTemp01=0x00;
1935   2              WSMbusTemp02=0x10;
1936   2              if(!bRWSMBus(SMbusChB, SMbusWW, SmBat_Addr, C_D_FET, &WSMbusTemp01,SMBus_NeedPEC))
1937   2              {
1938   3                      SMbusFailCnt2++;
1939   3              }
1940   2              }
1941   1              //LMLKBL0019:e+Add time delay for Clear First Used Date to Enable ship mode following the requirements of
             - the battery and re-try mechanism.
1942   1      
1943   1      }
1944          
1945          
1946          
1947          //-----------------------------------------------------------------------------
1948          // read all battery about information
1949          // polling time : 100 msec
1950          //-----------------------------------------------------------------------------
1951          void OEM_PollingBatData_TASK(void)
1952          {
1953   1              XBYTE i,j;
1954   1          XBYTE *ptr;
1955   1      
1956   1              if(IS_MASK_CLEAR(BATTUPDATEFW,BIT0))
1957   1              {
1958   2              GetBatData(Batpollstep1);
1959   2              //ChkBattery_OverConsumption();  //ANGELAG019: remove //MEILING033:change over 45W to 28W.
1960   2              Batpollstep1++;
1961   2      
1962   2              if(Batpollstep1 >= (sizeof(ABatCommandTable)/4))
1963   2              {
1964   3                              ////////////////////////
1965   3                              //Mos: Battery Debounce Block
1966   3                              //Get 9 entry from battery table, loop and XOR each byte, calculate a hash byte
1967   3                              //If hash result same as previous, then counter +1
1968   3                              //If counter > 3 times, mean battery data stable, keep Batpollstep1 = 9 to skip first 9 entry in batter
             -y table
1969   3                              //otherwise, clean counter and loop the table again.
1970   3                              if (Get_Batt_debounce_count < 3)
1971   3                              {
1972   4                                      Get_Batt_debounce_hash2 = Get_Batt_debounce_hash1;
1973   4                                      Get_Batt_debounce_hash1 = 0x00;
1974   4                                      for (i=0; i<9; i++)
1975   4                                      {
1976   5                                              if(ABatCommandTable[i].block_limit == 0x00)
1977   5                                                      Get_Batt_debounce_hash1 ^= *ABatCommandTable[i].smbdataA;
1978   5                                              else
1979   5                                              {
1980   6                                                      ptr = ABatCommandTable[i].smbdataA;
1981   6                                                      for(j=0; j<ABatCommandTable[i].block_limit; j++)
1982   6                                                      {
1983   7                                                              Get_Batt_debounce_hash1 ^= *ptr;
1984   7                                                              ptr++;
1985   7                                                      }
1986   6                                              }
1987   5                                      }
1988   4      
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 34  

1989   4                                      if (Get_Batt_debounce_hash2 == Get_Batt_debounce_hash1)
1990   4                                              Get_Batt_debounce_count++;
1991   4                                      else
1992   4                                              Get_Batt_debounce_count = 0;
1993   4      
1994   4                                      Batpollstep1=0; //revert Batpollstep1 for start over
1995   4                                      //Mos: Fill nBatteryStatL after Battery Data stable.
1996   4                                      if ( Get_Batt_debounce_count >= 3 )
1997   4                                      {
1998   5                                              if( ( BATTMANUFACTURE[0] == 'S' ) && ((BATTMANUFACTURE[1] == 'A' )||( BATTMANUFACTURE[1] == 'a' )) )
1999   5                                              nBatteryStatL |= 0x10 ; // SANYO
2000   5                                              else if( (BATTMANUFACTURE[0] == 'S' ) && ( BATTMANUFACTURE[1] == 'O' ) )
2001   5                                              nBatteryStatL |= 0x20 ; // Sony
2002   5                                              else if( (BATTMANUFACTURE[0] == 'P' ) && (( BATTMANUFACTURE[1] == 'A' )|| ( BATTMANUFACTURE[1] == 'a'
             - )) )
2003   5                                                      nBatteryStatL |= 0x40 ; // Panasonic
2004   5                                              else if( (BATTMANUFACTURE[0] == 'S' ) && ( BATTMANUFACTURE[1] == 'U' ) )
2005   5                                                      nBatteryStatL |= 0x50 ; // Samsung
2006   5                                              else if( (BATTMANUFACTURE[0] == 'L' ) && ( BATTMANUFACTURE[1] == 'G' ) )
2007   5                                                      nBatteryStatL |= 0x30 ; // LG
2008   5                                              else if( (BATTMANUFACTURE[0] == 'C' ) && (( BATTMANUFACTURE[1] == 'P' ) || ( BATTMANUFACTURE[1] == 'p
             -' )) )
2009   5                                                      nBatteryStatL |= 0x60;  // CPT Celxpert
2010   5                                              else if( (BATTMANUFACTURE[0] == 'S' ) && (BATTMANUFACTURE[1] == 'M' ) )
2011   5                                                      nBatteryStatL |= 0x70;  // Simplo*/
2012   5                                      }
2013   4                              }
2014   3                              else
2015   3                              {
2016   4                              Batpollstep1=9;
2017   4                              }
2018   3              }
2019   2                      UpdateNameSpace();//:optimize .
2020   2                      ChkLENOVOPMFW();
2021   2                      ChkGoTarget();
2022   2                      Chk_Battery_Full();
2023   2                      if(GPUProchotONCnt == 0) //ANGELAG033: add
2024   2                      { //ANGELAG033: add
2025   3                              ChkBattery_OTP();
2026   3                              ChkBattery_LTP();//COKEYXU039:Add Battery Low Temperature Protect
2027   3                              //ChkBattery_OCP();  //MEILING046:remove.//MEILING051:-Add cpu P_STATE function.
2028   3                              //ChkBattery_OCP();  //ANGELAG017: add
2029   3                              //ChkPsys();  //ANGELAG019: add //COKEYXU008 : remove
2030   3                              CkkBattery_RSOCLow(); //MEILING033:add
2031   3                      } //ANGELAG033: add
2032   2              ChkBattery_LowVoltage();
2033   2                      ChkBattery_FCCchg();
2034   2                      ChkAvgCurrent();
2035   2                      ChkS3DCRSOC();//ANGELAS093:Modify battery RSOC below 5% can't into S3.
2036   2                      ChkS3ResumeRSOC();
2037   2                      RSOC1Pto0P_ShutdownCheck();//ANGELAS043:Add
2038   2              }
2039   1      }
2040          
2041          
2042          //-----------------------------------------------------------------
2043          // Service Charger SMBus
2044          //-----------------------------------------------------------------
2045          void WriteSmartChgIC(void)
2046          {
2047   1              BYTE sCmd, *sData;
2048   1      
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 35  

2049   1              if (!Read_AC_IN())
2050   1                      return;
2051   1      
2052   1              if( CHGIC_ptr>=4 ) 
2053   1                      CHGIC_ptr=0;
2054   1              else 
2055   1                      CHGIC_ptr++;
2056   1              switch( CHGIC_ptr )
2057   1          {
2058   2          case 0x00:
2059   2              sCmd = C_ChargeCurrent;
2060   2              sData = &nBattCharCurrentL;
2061   2              break;
2062   2          case 0x01:
2063   2              sCmd = C_ChargeVoltage;
2064   2              sData = &nChargingVoltL;
2065   2              break;
2066   2          case 0x02:
2067   2                      
2068   2                      //COKEYXU041: S+ S+Setting charge IC
2069   2              if( AdapterID==AdapterID_170W || AdapterID==AdapterID_135W ) //REJERRY048:add 230W adapter ID.
2070   2                      {                                                                       // 6.144A 1800  (4096+2048)
2071   3                              CHGIC_InputCurrentH = 0x18;     
2072   3                              CHGIC_InputCurrentL = 0x00;             
2073   3                      }
2074   2                      else if(AdapterID==AdapterID_90W)       
2075   2                      {                                                                       // 4.1A 1000    (4096)
2076   3                              CHGIC_InputCurrentH = 0x10;             
2077   3                              CHGIC_InputCurrentL = 0x00;             
2078   3                      }
2079   2                      else if(AdapterID==AdapterID_65W)               
2080   2                      {                                                                       // 3A 0C00 (2048+1024)
2081   3                              CHGIC_InputCurrentH = 0x0C;     
2082   3                              CHGIC_InputCurrentL = 0x00;             
2083   3                      }
2084   2                      else if(AdapterID==AdapterID_45W)
2085   2                      {                                                                       // 2.05A 0800 (2048)
2086   3                              CHGIC_InputCurrentH = 0x08;             
2087   3                              CHGIC_InputCurrentL = 0x00;             
2088   3                      }
2089   2                      //COKEYXU041:E+Setting charge IC 
2090   2                              
2091   2              sCmd = C_InputCurrent;
2092   2              sData = &CHGIC_InputCurrentL;
2093   2              break;
2094   2              case 0x03:
2095   2                      if ((CHGIC_ReadCmd0x12L!=0) || (CHGIC_ReadCmd0x12H!=0))
2096   2                      {
2097   3                              //if ((cBattFlag0.fbit.cCmdAcOff==1)||Read_ACOFF()||IS_MASK_SET(EC_BatteryStatusL,FullyChg))    //  || IS_
             -MASK_CLEAR(nBatteryStatH,CMBS_CHARGE))
2098   3                              if ((cBattFlag0.fbit.cCmdAcOff==1)||IS_MASK_SET(EC_BatteryStatusL,FullyChg))    //  || IS_MASK_CLEAR(nBatt
             -eryStatH,CMBS_CHARGE))
2099   3                              {
2100   4                                      SET_MASK(CHGIC_WriteCmd0x12L,ChargeInhibit);    //Inhibit Charge //ANGELAS016:Change charge IC option set
             -ting. read to write
2101   4                              }
2102   3                              else
2103   3                              {
2104   4                                      if ((cBattFlag0.fbit.cBF0_GoTarget ==1) && (cTargetGauge == nBattGasgauge))
2105   4                                      {
2106   5                                              SET_MASK(CHGIC_WriteCmd0x12L,ChargeInhibit);    //Inhibit Charge //ANGELAS016:Change charge IC option se
             -tting. read to write
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 36  

2107   5                                      }
2108   4                                      else
2109   4                                      {
2110   5                                              CLR_MASK(CHGIC_WriteCmd0x12L,ChargeInhibit);    //Enable Charge //ANGELAS016:Change charge IC option set
             -ting. read to write
2111   5                                      }
2112   4                              }
2113   3                              //Mos: Due to must be stop charger before set AC OFF. add ACOFF_SOURCE in condition.
2114   3                              if (nStopChgStat3L|nStopChgStat3H|inhibit2sec|ACOFF_SOURCE)                                     // nStopChgStat3L,nStopChgStat3H,Charge
             -_inhibit2sec != 0
2115   3                              {
2116   4                                      SET_MASK(CHGIC_WriteCmd0x12L,ChargeInhibit);    //Inhibit Charge //ANGELAS016:Change charge IC option se
             -tting. read to write
2117   4                              }
2118   3                              
2119   3                      sCmd = C_ChargerMode;
2120   3                      sData = &CHGIC_WriteCmd0x12L; //ANGELAS016:Change charge IC option setting. read to write
2121   3                      }
2122   2                      else
2123   2                      {
2124   3                              return;
2125   3                      }
2126   2                      break;
2127   2                      
2128   2              case 0x04:
2129   2              sCmd = C_ChargerMode3;
2130   2              sData = &CHGIC_WriteCmd0x37L;
2131   2                      break;
2132   2              //ANGELAG046: add start
2133   2              /*case 0x05: //ANGELAG048: remove start
2134   2                              if(nBattGasgauge > 40)
2135   2                              {
2136   2                                      CHGIC_ReadCmd0x3DL=0x39;
2137   2                                      CHGIC_ReadCmd0x3DH=0x71; //14A
2138   2                              }
2139   2                              else
2140   2                              {
2141   2                                      CHGIC_ReadCmd0x3DL=0x3D;  
2142   2                                      CHGIC_ReadCmd0x3DH=0x71;
2143   2                              }
2144   2                              sCmd = C_ChargerProchot1;
2145   2                      sData = &CHGIC_ReadCmd0x3DL;
2146   2                              break;*/ //ANGELAG048: remove end
2147   2              //ANGELAG046: add end
2148   2          default:
2149   2                      return;
2150   2          }
2151   1          if (!bRWSMBus(SMbusChB, SMbusWW, Charger_Addr, sCmd, sData,SMBus_NoPEC))
2152   1          {
2153   2                      CHGIC_SMbusFailCnt++;
2154   2          }
2155   1      }
2156          
2157          
2158          const sRSmbusBStruct code ReadChgIcCmdTable [] =
2159          {//     command                   REG                    no.
2160            { C_ChargeCurrent,    &CHGIC_ReadCmd0x14L     ,0x00},
2161            { C_ChargeVoltage,    &CHGIC_ReadCmd0x15L     ,0x00},
2162            { C_InputCurrent,     &CHGIC_ReadCmd0x3FL     ,0x00},
2163            { C_ChargerMode,      &CHGIC_ReadCmd0x12L             ,0x00},
2164            { C_ChargerMode3,     &CHGIC_ReadCmd0x37L             ,0x00},
2165          };
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 37  

2166          
2167          void ReadSmartChgIC(void)
2168          {
2169   1              //if (IS_MASK_SET(SEL_STATE0,PRESENT_A))
2170   1              //if(CHGIC_ptr <= 4) //if add or remove read cmd, add this condition.
2171   1              {
2172   2              if(!bRWSMBus(SMbusChB, SMbusRW, Charger_Addr,
2173   2                   ReadChgIcCmdTable[CHGIC_ptr].cmd,
2174   2                   ReadChgIcCmdTable[CHGIC_ptr].smbdataA,
2175   2                     SMBus_NoPEC))
2176   2              {  // SMBUS FAIL
2177   3                      CHGIC_SMbusFailCnt++;
2178   3              }
2179   2              }
2180   1      }
2181          
2182          void Chk_Shutdown_Volt(void)
2183          {
2184   1              WORD cutoff_volt;
2185   1              #if EN_PwrSeqTest
                                return;
                      #endif
2188   1      
2189   1              if( (BATTMANUFACTURE[0] == 'L' ) && ( BATTMANUFACTURE[1] == 'G' ) )
2190   1              {
2191   2                      cutoff_volt = 8250 ;    //  shutdown Voltage 8.25V  for LG 3S battery
2192   2              }
2193   1              else
2194   1              {
2195   2              cutoff_volt = 8500;             // Voltage 8.5V for Sanyo battery
2196   2          }
2197   1      
2198   1      
2199   1              ITempW01 = (WORD)((nPresentVoltH<<8)+nPresentVoltL);    // get now voltage
2200   1      
2201   1              if (ITempW01 < cutoff_volt)     //  shutdown Voltage
2202   1              {
2203   2                      BatLowCnt++;
2204   2                      if ((BatLowCnt >= 6)&&((SysPowState==SYSTEM_S0)||(SysPowState==SYSTEM_S3)))
2205   2                      {
2206   3                      //SET_MASK(SysStatus,ERR_ShuntDownFlag);
2207   3                              //ProcessSID(BATTLOWVOLT_ID);
2208   3                              //RSMRST_shutdown();    //shutdown (RSMRST HI-->low-->HI)
2209   3                      }
2210   2              }
2211   1              else
2212   1              {
2213   2                      BatLowCnt =0;
2214   2              }
2215   1      }
2216          
2217          
2218          
2219          void Chk_BAT1PERCL_5(void)
2220          {
2221   1              if ((BAT1PERCL <= 0)&&(IS_MASK_SET(nBattery0x16L,Dsg))) // BAT1PERCL <= 5%  //T064: change 5 to 0
2222   1              {
2223   2                      //cBATTThrottling = 0x0F;
2224   2                      //cBATTThrottling = PSTATE_MAXStep;//0ptimize CPU P_state (change 16 step to 8 step).  //MEILING048:remo
             -ve.//MEILING051:-Add cpu P_STATE function.
2225   2                      SET_MASK(BatteryAlarm,BATPercl_5);
2226   2              }
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 38  

2227   1              else
2228   1              {
2229   2                      if (IS_MASK_SET(BatteryAlarm,BATPercl_5))
2230   2                      {
2231   3                              CLEAR_MASK(BatteryAlarm,BATPercl_5);
2232   3                              if (BatteryAlarm == 0)
2233   3                              {
2234   4                                      //cBATTThrottling = 0;  //MEILING048:remove.//MEILING051:-Add cpu P_STATE function.
2235   4                              }
2236   3                      }
2237   2              }
2238   1      }
2239          
2240          
2241          
2242          void Chk_BatSMbusFailCount(void)
2243          {
2244   1              BYTE sCmd, *sData;
2245   1      
2246   1              if (nBattErrorCnt==0)
2247   1              {
2248   2                      CLEAR_MASK(nStopChgStat3L,ENCOMMFAIL);  // clear bat communication fail and clear STOP charge
2249   2                      CLEAR_MASK(Bat1_FPChgFlag,BIT(0));
2250   2                      Chk_BAT1PERCL_5();
2251   2                      if (IS_MASK_SET(nBattery0x16L,Dsg))
2252   2                      {
2253   3                              //Chk_Shutdown_Volt(); //ANGELAG023: remove
2254   3                      }
2255   2                      return;
2256   2              }
2257   1      
2258   1              //if (IS_MASK_CLEAR(SYS_STATUS,AC_ADP)||(IS_MASK_SET(SYS_STATUS,AC_ADP)&&Read_ACOFF()))         // discharge
2259   1              if (IS_MASK_CLEAR(SYS_STATUS,AC_ADP))           // discharge
2260   1              {
2261   2      
2262   2                      RST_ChgTimeOutCnt();
2263   2      
2264   2                      if (nBattErrorCnt==30)
2265   2                      {
2266   3                              //cBATTThrottling = 0x0F;
2267   3                              //cBATTThrottling = PSTATE_MAXStep;//0ptimize CPU P_state (change 16 step to 8 step). //MEILING048:remo
             -ve.//MEILING051:-Add cpu P_STATE function.
2268   3      
2269   3                              //nRemainingCapL = 0;  //LMLKBL0006:remove.
2270   3                              //nRemainingCapH = 0;  //LMLKBL0006:remove.
2271   3                              SMbusFailCnt2++;
2272   3                      }
2273   2                      if (nBattErrorCnt>=150)
2274   2                      {
2275   3                              #if !EN_PwrSeqTest
2276   3                              //cBATTThrottling = 0x0F;
2277   3                              //cBATTThrottling = PSTATE_MAXStep;//0ptimize CPU P_state (change 16 step to 8 step).  //MEILING048:rem
             -ove.//MEILING051:-Add cpu P_STATE function.
2278   3                              SMbusFailCnt3++;
2279   3                              nBattErrorCnt = 151;
2280   3                              if ((SysPowState==SYSTEM_S0)||(SysPowState==SYSTEM_S3))
2281   3                              {
2282   4                      SET_MASK(SysStatus,ERR_ShuntDownFlag);//Add battery smbus fail shutdown ID.
2283   4                                      ProcessSID(BATTCOMMFAIL_ID);
2284   4                                      RSMRST_shutdown();
2285   4                              }
2286   3                              #endif
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 39  

2287   3                      }
2288   2              }
2289   1              else
2290   1              {
2291   2                      //if (IS_MASK_SET(SYS_STATUS,AC_ADP)&&(!Read_ACOFF()))                                  // battery charge
2292   2                      if (IS_MASK_SET(SYS_STATUS,AC_ADP))                                     // battery charge
2293   2                      {
2294   3                              if ((nBattErrorCnt != 0)&&(nBattErrorCnt < 30))
2295   3                              {
2296   4                              //ELMERZH002:S+ Modify charger IC config.
2297   4                                      nBattCharCurrentL = 0x00;                       // 256ma
2298   4                                      nBattCharCurrentH = 0x01;           //ELMERZH002:JERRYCH001:Modify power charge IC setting for battery
             - current.
2299   4                                      nChargingVoltL = 0x40;                          //12.6V  
2300   4                                      nChargingVoltH = 0x31;              //ELMERZH002
2301   4                          //ELMERZH002:E+ Modify charger IC config.
2302   4                                      //CHGIC_InputCurrentL = 0x00;
2303   4                                      //CHGIC_InputCurrentH = 0x0C;
2304   4                                      SMbusFailCnt3++;
2305   4                              }
2306   3                              if ((nBattErrorCnt >= 30))                              // disable charge
2307   3                              {
2308   4                                      //nBattCharCurrentL = 0x00;                     // 0 mA
2309   4                                      //nBattCharCurrentH = 0x00;
2310   4                                      //nChargingVoltL = 0x00;                                // 0 V
2311   4                                      //nChargingVoltH = 0x00;
2312   4                                      //CHGIC_InputCurrentL = 0x00;
2313   4                                      //CHGIC_InputCurrentH = 0x00;
2314   4                                      RST_ChgTimeOutCnt();
2315   4                                      SET_MASK(nStopChgStat3L,ENCOMMFAIL);    // Set bat communication fail and STOP charge.
2316   4                                                                                                                              //      charge inhibit
2317   4                                      SMbusFailCnt2++;
2318   4                              }
2319   3                      }
2320   2              }
2321   1      }
2322          
2323          
2324          
2325          void Chk_CHG_TimeOut(void)                      // every 1 min
2326          {
2327   1          if (nBattTempCnt < 10)
2328   1                      return;
2329   1              if (IS_MASK_SET(CHGIC_ReadCmd0x12L,ChargeInhibit))
2330   1                      return;
2331   1              //???
2332   1              if((nBattCharCurrentH > 1) || ((nBattCharCurrentH == 1) && (nBattCharCurrentL >= 0xF4))) // nBattCharCurr
             -ent >= 0x01F4  (500mA)
2333   1              {
2334   2                      TrickleChgTimeOutCnt = 0;
2335   2                      FastChgTimeOutCnt++;
2336   2                      if (FastChgTimeOutCnt >= 720) //12hour
2337   2                      {
2338   3                              FastChgTimeOutCnt = 721;
2339   3                              SET_MASK(nStopChgStat3L,ENSTOPCHG);
2340   3                      }
2341   2              }
2342   1              else // nBattCharCurrent < 0x01F4  (500mA)
2343   1              {
2344   2                      FastChgTimeOutCnt = 0;
2345   2                      TrickleChgTimeOutCnt++;
2346   2                      if (TrickleChgTimeOutCnt >= 480) //COKEYXU025:change to 8hour from 6hour.
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 40  

2347   2                      {
2348   3                              TrickleChgTimeOutCnt = 481;
2349   3                              SET_MASK(nStopChgStat3H,ENTRITIMEOUT); //MARTINO006:change 'nStopChgStat3L' to 'nStopChgStat3H'
2350   3                      }
2351   2              }
2352   1      }
2353          
2354          void ChkBattery_abnormal(void)
2355          {
2356   1              if(IS_MASK_SET(BATTUPDATEFW,BIT0))
2357   1                 return;
2358   1      
2359   1              switch(ChkBattery_abnormal_status)
2360   1              {
2361   2              case ChkBattery_abnormal_status_normal:
2362   2                      if(IS_MASK_SET(CHGIC_ReadCmd0x12L, ChargeInhibit)
2363   2                              && IS_MASK_CLEAR(nNowCurrentH, BIT7) && (nNowCurrentL > 100) )
2364   2                      {
2365   3                              ChkBattery_abnormal_count++;
2366   3                              if (ChkBattery_abnormal_count>5)
2367   3                              {
2368   4                                      ChkBattery_abnormal_status = ChkBattery_abnormal_status_error;
2369   4                              }
2370   3                      }
2371   2                      else
2372   2                      {
2373   3                              ChkBattery_abnormal_status = ChkBattery_abnormal_status_normal;
2374   3                              ChkBattery_abnormal_count = 0;
2375   3                      }
2376   2                      break;
2377   2              case ChkBattery_abnormal_status_error:
2378   2                      //Mos: Reset until EC power down
2379   2                      SET_MASK(ACOFF_SOURCE, CHARGECURRENT);
2380   2                      BATT_LEN_ON(); //ANGELAS047:add
2381   2                      //ACOFF_HI();
2382   2                      break;
2383   2              default:
2384   2                      ChkBattery_abnormal_status = ChkBattery_abnormal_status_normal;
2385   2                      ChkBattery_abnormal_count = 0;
2386   2                      break;
2387   2              }
2388   1      }
2389          
2390          
2391          BYTE Compare_data(XBYTE *buf1, XBYTE *buf2, BYTE count)
2392          {
2393   1              do 
2394   1              {
2395   2                      if( *buf1 != *buf2 ) return FALSE;
2396   2                      buf1++;
2397   2                      buf2++;
2398   2                      count--;
2399   2              }while(count);
2400   1              return TRUE;
2401   1      }
2402          
2403          void Compare_Auth_Result(void)
2404          {
2405   1              //inverse result for compare
2406   1              //inverse(&Hn0, &Hn4+3);
2407   1              if(Compare_data(&K, &RBATH0, 20) )
2408   1              {
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 41  

2409   2                      CLEAR_MASK(nStopChgStat3H,NotLenovoBattery);    // SHA1 pass,legal
2410   2                      CLEAR_MASK(LENOVOBATT,BATTERY_LEGAL);                   // SHA1 pass,legal
2411   2                      CLEAR_MASK(LV_Authen_Step_CNT,BIT(6));          // authentication ok
2412   2                      SHA1failCnt=0x00;
2413   2                      SHA1FailRetry=0x00;
2414   2              }
2415   1              else
2416   1              {
2417   2                      SHA1failCnt ++;
2418   2                      if (SHA1failCnt < 4)
2419   2                      {
2420   3                              Service_Auth_Step=23;                                           //if  SHA1failCnt <3, retry
2421   3                      }
2422   2                      else
2423   2                      {
2424   3                          SHA1FailRetry++;
2425   3                              //if(SHA1FailRetry < 10)  
2426   3                          if((SHA1FailRetry!= 3)&&(SHA1FailRetry<11)) 
2427   3                          {
2428   4                              Service_Auth_Step = 1;
2429   4                          }
2430   3                  else if(SHA1FailRetry == 3)  //add judge         
2431   3                          {
2432   4                                  SET_MASK(nStopChgStat3H,NotLenovoBattery);  // SHA1 no pass, battery illegal
2433   4                                  SET_MASK(LENOVOBATT,BATTERY_LEGAL);                 // SHA1 no pass, battery illegal
2434   4                                  SET_MASK(LV_Authen_Step_CNT,BIT(6));                // authentication Fail
2435   4                                  Service_Auth_Step = 1;  
2436   4                          }
2437   3              }  
2438   2              }
2439   1      }
2440          
2441          BYTE SendChallengeToBat(void)
2442          {
2443   1              BYTE SMBus_work;
2444   1              SMBus_work = bWSMBusBlock(SMbusChB, SMbusWBK, BatteryAddress, 0x27, &BATchallenger, 20, TRUE);
2445   1              if( SMBus_work ) 
2446   1                      return TRUE;
2447   1              
2448   1              return FALSE;
2449   1      }
2450          
2451          BYTE GetChallengeFromBat(void)
2452          {
2453   1              if( bRSMBusBlock(SMbusChB, SMbusRBK, BatteryAddress, 0x28, &RBATH0) ) 
2454   1                      return TRUE;
2455   1              
2456   1              return FALSE;
2457   1      }
2458          
2459          void SetRandomKey(BYTE N)
2460          {
2461   1              char *ptr;
2462   1              BYTE i;
2463   1      
2464   1              if( N==1 )
2465   1              {
2466   2                      ptr = BATchallenger;
2467   2                      for(i=0;i<20;i++)
2468   2                      {
2469   3                              *ptr = (char)(rand()&0xff);
2470   3                              ptr++;
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 42  

2471   3                      }
2472   2      
2473   2                      /* bq20zxx two pass example key */
2474   2                      //SHA1_W[4] = 0x20212223;
2475   2                      //SHA1_W[5] = 0x24252627;
2476   2                      //SHA1_W[6] = 0x28292A2B;
2477   2                      //SHA1_W[7] = 0x2C2D2E2F;
2478   2                      //SHA1_W[8] = 0x30313233;
2479   2      
2480   2                      /* LV Sample example key */
2481   2                      //SHA1_W[4] =0xC82CA3CA;
2482   2                      //SHA1_W[5] =0x10DEC726;
2483   2                      //SHA1_W[6] =0x8E070A7C;
2484   2                      //SHA1_W[7] =0xF0D1FE82;
2485   2                      //SHA1_W[8] =0x20AAD3B8;
2486   2      
2487   2      
2488   2                      /* SHA1 one pass example key */
2489   2                      //SHA1_W[4] = 0x00000000;
2490   2                      //SHA1_W[5] = 0x00000000;
2491   2                      //SHA1_W[6] = 0x00000000;
2492   2                      //SHA1_W[7] = 0x00000000;
2493   2                      //SHA1_W[8] = 0x00000000;
2494   2              }
2495   1          else 
2496   1          {
2497   2                      // move first time result to challenge
2498   2                      //SHA1_W[4]=Hn0;
2499   2                      N_Bit_Shift = 0;
2500   2                      ITempW01 = &Hn0;
2501   2                      AddrX_High = (ITempW01 >> 8);
2502   2                      AddrX_Low  = (ITempW01 & 0xFF);
2503   2                      ITempW01 = &SHA1_W[4];
2504   2                      AddrZ_High = (ITempW01 >> 8);
2505   2                      AddrZ_Low  = (ITempW01 & 0xFF);
2506   2                      Cal_CTRL = Rotate_Shift_right_BIT;
2507   2      
2508   2                      //SHA1_W[5]=Hn1;
2509   2                      AddrX_Low+=4;
2510   2                      AddrZ_Low+=4;
2511   2                      Cal_CTRL = Rotate_Shift_right_BIT;
2512   2      
2513   2                      //SHA1_W[6]=Hn2;
2514   2                      AddrX_Low+=4;
2515   2                      AddrZ_Low+=4;
2516   2                      Cal_CTRL = Rotate_Shift_right_BIT;
2517   2      
2518   2                      //SHA1_W[7]=Hn3;
2519   2                      AddrX_Low+=4;
2520   2                      AddrZ_Low+=4;
2521   2                      Cal_CTRL = Rotate_Shift_right_BIT;
2522   2      
2523   2                      //SHA1_W[8]=Hn4;
2524   2                      AddrX_Low+=4;
2525   2                      AddrZ_Low+=4;
2526   2                      Cal_CTRL = Rotate_Shift_right_BIT;
2527   2              }
2528   1      }
2529          
2530          
2531          
2532          void LV_BAT_Authentication(void)
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 43  

2533          {
2534   1              unsigned long xdata * byte_sha1_pntr;
2535   1          int j;
2536   1      
2537   1              //===================================================================
2538   1              // Service SHA1 algorithm
2539   1              //===================================================================
2540   1              switch(Service_Auth_Step)
2541   1              {
2542   2              case 1:
2543   2                      //InitializeFix();              // initial H and W(0~4/9~15)
2544   2                      SetRandomKey(1);                // initial W(4~8)
2545   2                      Service_Auth_Step=2;
2546   2                      break;
2547   2              case 21:                                        // SHA1 start send data delay 10 sec
2548   2                      SendChallengeToBat();   // send to battery
2549   2                      Service_Auth_Step=22;
2550   2                      break;
2551   2              case 22:
2552   2                      byte_sha1_pntr = sha1_auth(&BATchallenger);
2553   2                      for (j=0; j<5 ;j++)
2554   2                      {
2555   3                              K[j] = *byte_sha1_pntr;
2556   3                              byte_sha1_pntr++;
2557   3                      }
2558   2                      Service_Auth_Step=23;
2559   2                      break;
2560   2              case 23:
2561   2                      Service_Auth_Step=24;
2562   2                      break;
2563   2              case 24:
2564   2                      Service_Auth_Step=25;   // wait  for battery authentication
2565   2                      break;
2566   2              case 25:
2567   2                      GetChallengeFromBat();
2568   2                      Service_Auth_Step=0;
2569   2                      Compare_Auth_Result();
2570   2                      break;
2571   2              case 0:
2572   2                      Service_Auth_Step=0;
2573   2                      break;
2574   2              default:
2575   2                      Service_Auth_Step ++;
2576   2                      break;
2577   2              }
2578   1      }
2579          
2580          
2581          void Lenovo_Battery_EM80(void)
2582          {
2583   1              if (EM8_TEST == 0)
2584   1              {
2585   2                      if (IS_MASK_SET(Bat0x3ETempH,BIT0)&&(IS_MASK_SET(SYS_STATUS,AC_ADP))&&IS_MASK_CLEAR(LENOVOPMFW,BATTERY_S
             -TORAGE))                // 0x3E  bit8 G41:under storage mode Battery has been running over 72hrs ,EM can't pop out a message.
2586   2                      { 
2587   3                              SET_MASK(LENOVOBATT,BATTERY_USAGE);
2588   3              }
2589   2                      else
2590   2                      { 
2591   3                          CLEAR_MASK(LENOVOBATT,BATTERY_USAGE); 
2592   3              }
2593   2      
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 44  

2594   2                      if (Bat0x00TempL&0x03)                          // 0x00  bit1, bit0
2595   2                      { 
2596   3                          SET_MASK(LENOVOBATT,BAD_BATT); 
2597   3              }       // Battery bad
2598   2                      else
2599   2                      { 
2600   3                          CLEAR_MASK(LENOVOBATT,BAD_BATT); 
2601   3              }
2602   2      
2603   2                      if (IS_MASK_SET(Bat0x3ETempH,BIT1))                     // 0x3E  bit9
2604   2                      { 
2605   3                          SET_MASK(LENOVOBATT,BATTERY_Exhaustion); 
2606   3              }       // Battery poor  (Exhaustion)
2607   2                      else
2608   2                      { 
2609   3                          CLEAR_MASK(LENOVOBATT,BATTERY_Exhaustion);   
2610   3              }
2611   2              }
2612   1              else
2613   1              { 
2614   2                  LENOVOBATT = EM8_TEST ; 
2615   2          }
2616   1      }
2617          
2618          //JERRYCRZ010:+S Through the charger IC option control battery learn mode.
2619          void BATT_LEN_OFF(void)
2620          {
2621   1              if(IS_MASK_SET(CHGIC_WriteCmd0x12L,BatLearnEnable)) //COKEYXU001:Add for S3 cannot wake from PS2 KBD. 
2622   1              {
2623   2                      CLEAR_MASK(CHGIC_WriteCmd0x12L,BatLearnEnable); //ANGELAS016:Change charge IC option setting. read to wr
             -ite
2624   2                      if (!bRWSMBus(SMbusChB, SMbusWW, Charger_Addr, C_ChargerMode, &CHGIC_WriteCmd0x12L,SMBus_NoPEC)) //A
             -NGELAS016:Change charge IC option setting. read to write
2625   2                      {
2626   3                              CHGIC_SMbusFailCnt++;
2627   3                              RamDebug(0x13);
2628   3                      }
2629   2              }
2630   1      }
2631          void BATT_LEN_ON(void)
2632          {
2633   1              if(IS_MASK_CLEAR(CHGIC_WriteCmd0x12L,BatLearnEnable)) //COKEYXU001:Add for S3 cannot wake from PS2 KBD.
2634   1              {
2635   2                      SET_MASK(CHGIC_WriteCmd0x12L,BatLearnEnable); //ANGELAS016:Change charge IC option setting. read to wri
             -te
2636   2                      if (!bRWSMBus(SMbusChB, SMbusWW, Charger_Addr, C_ChargerMode, &CHGIC_WriteCmd0x12L,SMBus_NoPEC)) //ANGEL
             -AS016:Change charge IC option setting. read to write
2637   2                      {
2638   3                              CHGIC_SMbusFailCnt++;
2639   3                              RamDebug(0x12);
2640   3                      }
2641   2              }
2642   1      }
2643          //JERRYCRZ010:E+Through the charger IC option control battery learn mode.
2644          //ANGELAG048: add start
2645          void Charger_3D_Config(void)
2646          {
2647   1              CHGIC_ReadCmd0x3DL=0x39;    //ELMERZH002:Modify charger IC config.
2648   1              CHGIC_ReadCmd0x3DH=0x51;   //COKEYXU020: 71 to 51
2649   1          if (!bRWSMBus(SMbusChB, SMbusWW, Charger_Addr, C_ChargerProchot1, &CHGIC_ReadCmd0x3DL,SMBus_NoPEC))
2650   1          {
2651   2                      CHGIC_SMbusFailCnt++;
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 45  

2652   2          }
2653   1      }
2654          //ANGELAG048: add end
2655          //ANGELAS070:add start
2656          const SRTVTstruct code RTVTTable [] =
2657          {
2658                  {20,0x040E},
2659                  {21,0x0409},
2660                  {22,0x0404},
2661                  {23,0x03FF},
2662                  {24,0x03F9},
2663                  {25,0x03F4},
2664                  {26,0x03EE},
2665                  {27,0x03E8},
2666                  {28,0x03E2},
2667                  {29,0x03DB},
2668                  {30,0x03D5},
2669                  {31,0x03CE},
2670                  {32,0x03C7},
2671                  {33,0x03C0},
2672                  {34,0x03B9},
2673                  {35,0x03B1},
2674                  {36,0x03AA},
2675                  {37,0x03A2},
2676                  {38,0x039A},
2677                  {39,0x0392},
2678                  {40,0x0389},
2679                  {41,0x0381},
2680                  {42,0x0378},
2681                  {43,0x0370},
2682                  {44,0x0367},
2683                  {45,0x035E},
2684                  {46,0x0354},
2685                  {47,0x034B},
2686                  {48,0x0342},
2687                  {49,0x0338},
2688                  {50,0x032E},
2689                  {51,0x0324},
2690                  {52,0x031A},
2691                  {53,0x0310},
2692                  {54,0x0306},
2693                  {55,0x02FC},
2694                  {56,0x02F2},
2695                  {57,0x02E7},
2696                  {58,0x02DD},
2697                  {59,0x02D2},
2698                  {60,0x02C8},
2699                  {61,0x02BD},
2700                  {62,0x02B2},
2701                  {63,0x02A8},
2702                  {64,0x029D},
2703                  {65,0x0292},
2704                  {66,0x0287},
2705                  {67,0x027D},
2706                  {68,0x0272},
2707                  {69,0x0267},
2708                  {70,0x025D},
2709                  {71,0x0252},
2710                  {72,0x0247},
2711                  {73,0x023D},
2712                  {74,0x0232},
2713                  {75,0x0228},
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 46  

2714                  {76,0x021E},
2715                  {77,0x0213},
2716                  {78,0x0209},
2717                  {79,0x01FF},
2718                  {80,0x01F5},
2719                  {81,0x01EB},
2720                  {82,0x01E1},
2721                  {83,0x01D7},
2722                  {84,0x01CE},
2723                  {85,0x01C4},
2724                  {86,0x01BB},
2725                  {87,0x01B1},
2726                  {88,0x01A8},
2727                  {89,0x019F},
2728                  {90,0x0196},
2729                  {91,0x018E},
2730                  {92,0x0185},
2731                  {93,0x017C},
2732                  {94,0x0174},
2733                  {95,0x016C},
2734                  {96,0x0164},
2735                  {97,0x015C},
2736                  {98,0x0154},
2737                  {99,0x014C},
2738                  {100,0x0145},
2739                  {101,0x013D},
2740                  {102,0x0136},
2741                  {103,0x012F},
2742                  {104,0x0128},
2743                  {105,0x0121},
2744                  {106,0x011A},
2745          
2746          };
2747          
2748          void PollingCPURT(void)
2749          {
2750   1              BYTE i;
2751   1              BYTE j=0;
2752   1      
2753   1              for (i=0;i<(sizeof(RTVTTable)/sizeof(SRTVTstruct));i++)
2754   1              {
2755   2                      if(NTC_V2<RTVTTable[j].VOL)
2756   2                      {
2757   3                              j++;
2758   3                      }
2759   2                      else if(NTC_V2>=RTVTTable[j].VOL)
2760   2                      {
2761   3                              ThermistorCPU_TEMP=RTVTTable[j].TEM;//JERRYCRZ024:Change fan table follow thermal team.
2762   3                              return;
2763   3                      }       
2764   2              }
2765   1      }
2766          
2767          
2768          void PollingGPURT(void)
2769          {
2770   1              BYTE i;
2771   1              BYTE j=0;
2772   1      
2773   1              for (i=0;i<(sizeof(RTVTTable)/sizeof(SRTVTstruct));i++)
2774   1              {
2775   2                      if(NTC_V1<RTVTTable[j].VOL)
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 47  

2776   2                      {
2777   3                              j++;
2778   3                      }
2779   2                      else if(NTC_V1>=RTVTTable[j].VOL)
2780   2                      {
2781   3                              EXTVGA_TEMP=RTVTTable[j].TEM;//JERRYCRZ024:Change fan table follow thermal team.
2782   3                              return;
2783   3                      }               
2784   2              }
2785   1      }
2786          //ANGELAS070:add end
2787          
2788          //ANGELAG015: add start
2789          void Clear_Batt_First_Used_Date(void)
2790          {
2791   1              if(IS_MASK_SET(SEL_STATE0,PRESENT_A)) 
2792   1                {
2793   2                      if(IS_MASK_SET(pProject0,b1uFUdayClr))
2794   2                      {
2795   3                              if(!bRWSMBus(SMbusChB,SMbusRW,SmBat_Addr,FirstUsedDate,&batteryFirstUsedDateL,SMBus_NeedPEC))
2796   3                              {
2797   4                                      RamDebug(0xAE);
2798   4                                      return;
2799   4                              }
2800   3                              if(batteryFirstUsedDateH != 0x00 || batteryFirstUsedDateL != 0x00)
2801   3                              {
2802   4                                      batteryFirstUsedDateH = 0x00;
2803   4                                      batteryFirstUsedDateL = 0x00;
2804   4                                      if(!bRWSMBus(SMbusChB,SMbusWW,SmBat_Addr,FirstUsedDate,&batteryFirstUsedDateL,SMBus_NeedPEC))
2805   4                                      {
2806   5                                              RamDebug(0xAD);
2807   5                                              return;
2808   5                                      }
2809   4                              }
2810   3                              else
2811   3                              {
2812   4                                      CLEAR_MASK(pProject0,b1uFUdayClr);
2813   4                              }
2814   3                      }
2815   2      
2816   2                }
2817   1      }
2818          //ANGELAG015: add end
2819          
2820          
2821          
2822          //COKEYXU022:move Battery_Expresscharge function from OEM_MAIN. 
2823          //COKEYXU011: S+ Add express charge method.
2824          void Battery_Expresscharge(void)
2825          {
2826   1              //check battery quick charge support.
2827   1              if(IS_MASK_CLEAR(EC_C_modeL,b4QuickChargeMode))
2828   1              {
2829   2                      return;
2830   2              }
2831   1              
2832   1              if (IS_MASK_SET(OEMControl,Expresschargemode))
2833   1              {
2834   2                      if(IS_MASK_CLEAR(Bat0x3ETempH,Expresscharge_mode))
2835   2                      {
2836   3                              //COKEYXU024:S+ only S5 support quick charge
2837   3                              if(SystemIsS5)
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 48  

2838   3                              {
2839   4                                      SET_MASK(Bat0x3ETempH,Expresscharge_mode);
2840   4                              }
2841   3                              else
2842   3                              {
2843   4                                      CLEAR_MASK(Bat0x3ETempH,Expresscharge_mode);
2844   4                              }
2845   3                              //COKEYXU024:E+
2846   3                              
2847   3                              if(bRWSMBus(SMbusChB,SMbusWW,SmBat_Addr,C_LVMfgFun2,&Bat0x3ETempL,SMBus_NeedPEC))
2848   3                              {
2849   4                                      RamDebug(0xD1);
2850   4                                      RamDebug(Bat0x3ETempH);
2851   4                              }
2852   3                      }
2853   2              }
2854   1              else
2855   1              {
2856   2                      if(IS_MASK_SET(Bat0x3ETempH,Expresscharge_mode))
2857   2                      {
2858   3                      CLEAR_MASK(Bat0x3ETempH,Expresscharge_mode);
2859   3                              if(bRWSMBus(SMbusChB,SMbusWW,SmBat_Addr,C_LVMfgFun2,&Bat0x3ETempL,SMBus_NeedPEC))
2860   3                              {
2861   4                                      RamDebug(0xD2);
2862   4                                      RamDebug(Bat0x3ETempH);
2863   4                              }
2864   3                      }
2865   2              }
2866   1      }
2867          //COKEYXU011: E+ Add express charge methodg.
2868          
2869          
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 49  

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION Com0231 (BEGIN)
0000         L?0562:
0000         L?0563:
0000 900000      E     MOV     DPTR,#nFullChgCapH
0003 E0                MOVX    A,@DPTR
0004 FE                MOV     R6,A
0005 900000      E     MOV     DPTR,#nFullChgCapL
0008 E0                MOVX    A,@DPTR
0009 7C00              MOV     R4,#00H
000B 2400              ADD     A,#00H
000D FF                MOV     R7,A
000E EC                MOV     A,R4
000F 3E                ADDC    A,R6
0010 FE                MOV     R6,A
0011 E4                CLR     A
0012 FD                MOV     R5,A
0013 900000      E     MOV     DPTR,#CalcBatRCC
0016 120000      E     LCALL   ?C?LSTXDATA
0019 7BC8              MOV     R3,#0C8H
001B         L?0564:
001B E4                CLR     A
001C         L?0565:
001C FA                MOV     R2,A
001D F9                MOV     R1,A
001E F8                MOV     R0,A
001F 900000      E     MOV     DPTR,#CalcBatRCC
0022 120000      E     LCALL   ?C?LLDXDATA
0025 020000      E     LJMP    ?C?ULDIV
0028         L?0566:
0028 E4                CLR     A
0029 900000      E     MOV     DPTR,#WSMbusTemp01
002C F0                MOVX    @DPTR,A
002D 7410              MOV     A,#010H
002F         L?0567:
002F 900000      E     MOV     DPTR,#WSMbusTemp02
0032         L?0568:
0032 F0                MOVX    @DPTR,A
0033 900000      E     MOV     DPTR,#?_bRWSMBus?BYTE+03H
0036 7434              MOV     A,#034H
0038 F0                MOVX    @DPTR,A
0039 7E00        E     MOV     R6,#HIGH WSMbusTemp01
003B A3                INC     DPTR
003C 7400        E     MOV     A,#HIGH WSMbusTemp01
003E F0                MOVX    @DPTR,A
003F 7400        E     MOV     A,#LOW WSMbusTemp01
0041         L?0569:
0041 A3                INC     DPTR
0042         L?0570:
0042 F0                MOVX    @DPTR,A
0043 A3                INC     DPTR
0044 7401              MOV     A,#01H
0046 F0                MOVX    @DPTR,A
0047 7B16              MOV     R3,#016H
0049 7D8C              MOV     R5,#08CH
004B FF                MOV     R7,A
004C 22                RET     
004D         L?0571:
004D         L?0572:
004D F8                MOV     R0,A
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 50  

004E 120000      E     LCALL   ?C?LADD
0051 900000      E     MOV     DPTR,#CalcBatRCC
0054 120000      E     LCALL   ?C?LSTXDATA
0057 900000      E     MOV     DPTR,#CalcBatRCC
005A 120000      E     LCALL   ?C?LLDXDATA
005D 7808              MOV     R0,#08H
005F 120000      E     LCALL   ?C?ULSHR
0062 900000      E     MOV     DPTR,#nRemainingCapH
0065 EF                MOV     A,R7
0066 F0                MOVX    @DPTR,A
0067 900000      E     MOV     DPTR,#CalcBatRCC
006A 120000      E     LCALL   ?C?LLDXDATA
006D 900000      E     MOV     DPTR,#nRemainingCapL
0070 EF                MOV     A,R7
0071 F0                MOVX    @DPTR,A
0072 22                RET     
0073         L?0573:
0073 900000      E     MOV     DPTR,#AddrX_Low
0076 E0                MOVX    A,@DPTR
0077 2404              ADD     A,#04H
0079 F0                MOVX    @DPTR,A
007A 900000      E     MOV     DPTR,#AddrZ_Low
007D E0                MOVX    A,@DPTR
007E 2404              ADD     A,#04H
0080 F0                MOVX    @DPTR,A
0081 900000      E     MOV     DPTR,#Cal_CTRL
0084 7420              MOV     A,#020H
0086 F0                MOVX    @DPTR,A
0087 900000      E     MOV     DPTR,#AddrX_Low
008A E0                MOVX    A,@DPTR
008B 2404              ADD     A,#04H
008D F0                MOVX    @DPTR,A
008E 900000      E     MOV     DPTR,#AddrZ_Low
0091 E0                MOVX    A,@DPTR
0092 2404              ADD     A,#04H
0094         L?0574:
0094 F0                MOVX    @DPTR,A
0095 900000      E     MOV     DPTR,#Cal_CTRL
0098 7420              MOV     A,#020H
009A F0                MOVX    @DPTR,A
009B 22                RET     
009C         L?0575:
009C         L?0576:
009C 900000      E     MOV     DPTR,#nRemainingCapH
009F E0                MOVX    A,@DPTR
00A0 900000      E     MOV     DPTR,#nRemainingCapL
00A3         L?0577:
00A3 FE                MOV     R6,A
00A4         L?0578:
00A4 E0                MOVX    A,@DPTR
00A5 7C00              MOV     R4,#00H
00A7 2400              ADD     A,#00H
00A9 FF                MOV     R7,A
00AA EC                MOV     A,R4
00AB 3E                ADDC    A,R6
00AC 22                RET     
00AD         L?0579:
00AD 900000      R     MOV     DPTR,#_STEP
00B0 E0                MOVX    A,@DPTR
00B1 FF                MOV     R7,A
00B2 25E0              ADD     A,ACC
00B4 25E0              ADD     A,ACC
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 51  

00B6 2400        R     ADD     A,#LOW ABatCommandTable
00B8 F582              MOV     DPL,A
00BA E4                CLR     A
00BB 3400        R     ADDC    A,#HIGH ABatCommandTable
00BD F583              MOV     DPH,A
00BF E4                CLR     A
00C0 93                MOVC    A,@A+DPTR
00C1 FE                MOV     R6,A
00C2 EF                MOV     A,R7
00C3         L?0580:
00C3 25E0              ADD     A,ACC
00C5 25E0              ADD     A,ACC
00C7 2400        R     ADD     A,#LOW ABatCommandTable+01H
00C9 F582              MOV     DPL,A
00CB E4                CLR     A
00CC 3400        R     ADDC    A,#HIGH ABatCommandTable+01H
00CE F583              MOV     DPH,A
00D0 E4                CLR     A
00D1 93                MOVC    A,@A+DPTR
00D2 22                RET     
00D3         L?0581:
00D3 F0                MOVX    @DPTR,A
00D4 900000      E     MOV     DPTR,#?_bRWSMBus?BYTE+03H
00D7 7412              MOV     A,#012H
00D9 F0                MOVX    @DPTR,A
00DA 7E00        E     MOV     R6,#HIGH CHGIC_WriteCmd0x12L
00DC A3                INC     DPTR
00DD 7400        E     MOV     A,#HIGH CHGIC_WriteCmd0x12L
00DF F0                MOVX    @DPTR,A
00E0 7400        E     MOV     A,#LOW CHGIC_WriteCmd0x12L
00E2         L?0582:
00E2 A3                INC     DPTR
00E3         L?0583:
00E3 F0                MOVX    @DPTR,A
00E4 E4                CLR     A
00E5 A3                INC     DPTR
00E6 F0                MOVX    @DPTR,A
00E7 7B12              MOV     R3,#012H
00E9 7D8C              MOV     R5,#08CH
00EB 7F01              MOV     R7,#01H
00ED 22                RET     
00EE         L?0584:
00EE         L?0585:
00EE 75F003            MOV     B,#03H
00F1 EF                MOV     A,R7
00F2 900000      R     MOV     DPTR,#RTVTTable+01H
00F5 120000      E     LCALL   ?C?OFFXADD
00F8 E4                CLR     A
00F9 93                MOVC    A,@A+DPTR
00FA FC                MOV     R4,A
00FB 7401              MOV     A,#01H
00FD 93                MOVC    A,@A+DPTR
00FE FD                MOV     R5,A
00FF C3                CLR     C
0100 22                RET     
0101         L?0586:
0101 E0                MOVX    A,@DPTR
0102 FC                MOV     R4,A
0103 A3                INC     DPTR
0104 E0                MOVX    A,@DPTR
0105 FD                MOV     R5,A
0106 E4                CLR     A
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 52  

0107 120000      E     LCALL   ?C?FCASTI
010A 7BCD              MOV     R3,#0CDH
010C 7ACC              MOV     R2,#0CCH
010E 79CC              MOV     R1,#0CCH
0110 783D              MOV     R0,#03DH
0112 120000      E     LCALL   ?C?FPMUL
0115 E4                CLR     A
0116 FB                MOV     R3,A
0117 FA                MOV     R2,A
0118 79C8              MOV     R1,#0C8H
011A 7842              MOV     R0,#042H
011C 020000      E     LJMP    ?C?FPDIV
011F         L?0587:
011F C8                XCH     A,R0
0120 EC                MOV     A,R4
0121 C8                XCH     A,R0
0122 C9                XCH     A,R1
0123 ED                MOV     A,R5
0124 C9                XCH     A,R1
0125 CA                XCH     A,R2
0126 EE                MOV     A,R6
0127 CA                XCH     A,R2
0128 CB                XCH     A,R3
0129 EF                MOV     A,R7
012A CB                XCH     A,R3
012B 900000      E     MOV     DPTR,#KeepBattRemineCap
012E         L?0588:
012E E0                MOVX    A,@DPTR
012F FE                MOV     R6,A
0130 A3                INC     DPTR
0131 E0                MOVX    A,@DPTR
0132 FF                MOV     R7,A
0133 E4                CLR     A
0134 FC                MOV     R4,A
0135 FD                MOV     R5,A
0136 22                RET     
0137         L?0589:
0137         L?0590:
0137 900000      E     MOV     DPTR,#Bat0x0FTempL
013A E0                MOVX    A,@DPTR
013B 900000      E     MOV     DPTR,#nRemainingCapL
013E F0                MOVX    @DPTR,A
013F 900000      E     MOV     DPTR,#Bat0x0FTempH
0142 22                RET     
0143         L?0591:
0143         L?0592:
0143 C3                CLR     C
0144 900000      E     MOV     DPTR,#Psys_AvgData+01H
0147 E0                MOVX    A,@DPTR
0148 9499              SUBB    A,#099H
014A         L?0593:
014A 900000      E     MOV     DPTR,#Psys_AvgData
014D E0                MOVX    A,@DPTR
014E 9401              SUBB    A,#01H
0150 22                RET     
0151         L?0594:
0151         L?0595:
0151 900000      E     MOV     DPTR,#Thro_Status2
0154 E0                MOVX    A,@DPTR
0155 54FB              ANL     A,#0FBH
0157 F0                MOVX    @DPTR,A
0158 900000      E     MOV     DPTR,#GPU_Prochot
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 53  

015B E0                MOVX    A,@DPTR
015C 54FB              ANL     A,#0FBH
015E F0                MOVX    @DPTR,A
015F 22                RET     
0160         L?0597:
0160         L?0598:
0160 900000      E     MOV     DPTR,#nBattGasgauge
0163 E0                MOVX    A,@DPTR
0164 D3                SETB    C
0165 9419              SUBB    A,#019H
0167 22                RET     
0168         L?0599:
0168 2400              ADD     A,#00H
016A FF                MOV     R7,A
016B EC                MOV     A,R4
016C 3E                ADDC    A,R6
016D F0                MOVX    @DPTR,A
016E A3                INC     DPTR
016F EF                MOV     A,R7
0170 F0                MOVX    @DPTR,A
0171 22                RET     
0172         L?0600:
0172         L?0601:
0172 E4                CLR     A
0173         L?0602:
0173 75F001            MOV     B,#01H
0176 020000      E     LJMP    ?C?IILDX
0179         L?0603:
0179         L?0604:
0179 900000      E     MOV     DPTR,#nBattGasgauge
017C E0                MOVX    A,@DPTR
017D D3                SETB    C
017E 9407              SUBB    A,#07H
0180 22                RET     
0181         L?0605:
0181 900000      R     MOV     DPTR,#i
0184 E0                MOVX    A,@DPTR
0185 25E0              ADD     A,ACC
0187 25E0              ADD     A,ACC
0189 2400        R     ADD     A,#LOW ABatCommandTable+03H
018B F582              MOV     DPL,A
018D E4                CLR     A
018E 3400        R     ADDC    A,#HIGH ABatCommandTable+03H
0190 F583              MOV     DPH,A
0192 E4                CLR     A
0193 93                MOVC    A,@A+DPTR
0194 22                RET     
0195         L?0606:
0195         L?0607:
0195 900000      E     MOV     DPTR,#SysPowState
0198 E0                MOVX    A,@DPTR
0199 6411              XRL     A,#011H
019B 22                RET     
019C         L?0608:
019C         L?0609:
019C 900000      E     MOV     DPTR,#CHGIC_SMbusFailCnt
019F E0                MOVX    A,@DPTR
01A0 04                INC     A
01A1 F0                MOVX    @DPTR,A
01A2 22                RET     
01A3         L?0610:
01A3 900000      E     MOV     DPTR,#XWTemp1+01H
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 54  

01A6         L?0611:
01A6 FE                MOV     R6,A
01A7 C3                CLR     C
01A8 74FF              MOV     A,#0FFH
01AA 9F                SUBB    A,R7
01AB F0                MOVX    @DPTR,A
01AC 74FF              MOV     A,#0FFH
01AE 9E                SUBB    A,R6
01AF 22                RET     
01B0         L?0612:
01B0 900000      E     MOV     DPTR,#Psys_AvgData+01H
01B3         L?0613:
01B3 E0                MOVX    A,@DPTR
01B4 9422              SUBB    A,#022H
01B6 900000      E     MOV     DPTR,#Psys_AvgData
01B9 E0                MOVX    A,@DPTR
01BA 9402              SUBB    A,#02H
01BC 22                RET     
01BD         L?0614:
01BD         L?0615:
01BD 900000      E     MOV     DPTR,#nBattGasgauge
01C0 E0                MOVX    A,@DPTR
01C1 FF                MOV     R7,A
01C2 900000      E     MOV     DPTR,#cTargetGauge
01C5 E0                MOVX    A,@DPTR
01C6 6F                XRL     A,R7
01C7 22                RET     
01C8         L?0616:
01C8         L?0617:
01C8 E0                MOVX    A,@DPTR
01C9 54EF              ANL     A,#0EFH
01CB F0                MOVX    @DPTR,A
01CC 900000      E     MOV     DPTR,#nBatteryStatH
01CF E0                MOVX    A,@DPTR
01D0 54FD              ANL     A,#0FDH
01D2 22                RET     
01D3         L?0618:
01D3 900000      E     MOV     DPTR,#nFullChgCapL
01D6 E0                MOVX    A,@DPTR
01D7 900000      E     MOV     DPTR,#ChkBattery_FCCchg_lastFCCL
01DA F0                MOVX    @DPTR,A
01DB 900000      E     MOV     DPTR,#nFullChgCapH
01DE E0                MOVX    A,@DPTR
01DF 900000      E     MOV     DPTR,#ChkBattery_FCCchg_lastFCCH
01E2 F0                MOVX    @DPTR,A
01E3 22                RET     
01E4         L?0619:
01E4         L?0620:
01E4 900000      E     MOV     DPTR,#nBattGasgauge
01E7 E0                MOVX    A,@DPTR
01E8 C3                CLR     C
01E9 9437              SUBB    A,#037H
01EB 22                RET     
01EC         L?0621:
01EC         L?0622:
01EC CB                XCH     A,R3
01ED EF                MOV     A,R7
01EE CB                XCH     A,R3
01EF FA                MOV     R2,A
01F0 E4                CLR     A
01F1 F9                MOV     R1,A
01F2 F8                MOV     R0,A
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 55  

01F3 22                RET     
01F4         L?0623:
01F4 A3                INC     DPTR
01F5 F0                MOVX    @DPTR,A
01F6 E4                CLR     A
01F7 A3                INC     DPTR
01F8         L?0624:
01F8 F0                MOVX    @DPTR,A
01F9 7B16              MOV     R3,#016H
01FB 7D0C              MOV     R5,#0CH
01FD 7F01              MOV     R7,#01H
01FF 22                RET     
0200         L?0625:
0200         L?0626:
0200 900000      E     MOV     DPTR,#SMbusFailCnt3
0203 E0                MOVX    A,@DPTR
0204 04                INC     A
0205 F0                MOVX    @DPTR,A
0206 22                RET     
0207         L?0627:
0207         L?0628:
0207 900000      E     MOV     DPTR,#SMbusFailCnt2
020A E0                MOVX    A,@DPTR
020B 04                INC     A
020C F0                MOVX    @DPTR,A
020D 22                RET     
020E         L?0629:
020E 900000      R     MOV     DPTR,#sCmd
0211 F0                MOVX    @DPTR,A
0212 7B01              MOV     R3,#01H
0214 22                RET     
0215         L?0630:
0215 900000      E     MOV     DPTR,#?_bRWSMBus?BYTE+03H
0218 743E              MOV     A,#03EH
021A F0                MOVX    @DPTR,A
021B 7E00        E     MOV     R6,#HIGH Bat0x3ETempL
021D A3                INC     DPTR
021E 7400        E     MOV     A,#HIGH Bat0x3ETempL
0220 F0                MOVX    @DPTR,A
0221 A3                INC     DPTR
0222 7400        E     MOV     A,#LOW Bat0x3ETempL
0224 22                RET     
0225         L?0631:
0225 900000      E     MOV     DPTR,#BatteryAlarm
0228 E0                MOVX    A,@DPTR
0229 54FD              ANL     A,#0FDH
022B F0                MOVX    @DPTR,A
022C 900000      E     MOV     DPTR,#nStopChgStat3L
022F E0                MOVX    A,@DPTR
0230 547F              ANL     A,#07FH
0232 F0                MOVX    @DPTR,A
0233 22                RET     
0234         L?0632:
0234 900000      E     MOV     DPTR,#nStopChgStat3H
0237 E0                MOVX    A,@DPTR
0238 54BF              ANL     A,#0BFH
023A F0                MOVX    @DPTR,A
023B 900000      E     MOV     DPTR,#nBattGasgauge
023E E0                MOVX    A,@DPTR
023F 643C              XRL     A,#03CH
0241 22                RET     
0242         L?0633:
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 56  

0242         L?0634:
0242 900000      E     MOV     DPTR,#cBattFlag0
0245 E0                MOVX    A,@DPTR
0246 13                RRC     A
0247 13                RRC     A
0248 543F              ANL     A,#03FH
024A 22                RET     
024B         L?0635:
024B FE                MOV     R6,A
024C E0                MOVX    A,@DPTR
024D 7C00              MOV     R4,#00H
024F 2400              ADD     A,#00H
0251 F500        E     MOV     ITempW01+01H,A
0253 EC                MOV     A,R4
0254 3E                ADDC    A,R6
0255 F500        E     MOV     ITempW01,A
0257 D3                SETB    C
0258 22                RET     
0259         L?0636:
0259 C3                CLR     C
025A 900000      R     MOV     DPTR,#CV1+01H
025D E0                MOVX    A,@DPTR
025E 94B8              SUBB    A,#0B8H
0260 900000      R     MOV     DPTR,#CV1
0263 E0                MOVX    A,@DPTR
0264 940B              SUBB    A,#0BH
0266 22                RET     
0267         L?0637:
0267 C3                CLR     C
0268 900000      R     MOV     DPTR,#CV4+01H
026B E0                MOVX    A,@DPTR
026C 94B8              SUBB    A,#0B8H
026E 900000      R     MOV     DPTR,#CV4
0271 E0                MOVX    A,@DPTR
0272 940B              SUBB    A,#0BH
0274 22                RET     
0275         L?0638:
0275         L?0639:
0275 900000      E     MOV     DPTR,#nDesignVoltH
0278 E0                MOVX    A,@DPTR
0279 FE                MOV     R6,A
027A 900000      E     MOV     DPTR,#nDesignVoltL
027D 22                RET     
027E         L?0640:
027E 900000      E     MOV     DPTR,#DisCPUTurboForLTP
0281 74FF              MOV     A,#0FFH
0283 F0                MOVX    @DPTR,A
0284 900000      E     MOV     DPTR,#cGPUBattLTPThrottling
0287 7402              MOV     A,#02H
0289 F0                MOVX    @DPTR,A
028A 22                RET     
028B         L?0641:
028B 900000      E     MOV     DPTR,#?_bRWSMBus?BYTE+03H
028E 743D              MOV     A,#03DH
0290 F0                MOVX    @DPTR,A
0291 7E00        E     MOV     R6,#HIGH CHGIC_ReadCmd0x3DL
0293 A3                INC     DPTR
0294 7400        E     MOV     A,#HIGH CHGIC_ReadCmd0x3DL
0296 F0                MOVX    @DPTR,A
0297 22                RET     
0298         L?0642:
0298 900000      E     MOV     DPTR,#cGPUBattOTPThrottling
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 57  

029B         L?0643:
029B E4                CLR     A
029C F0                MOVX    @DPTR,A
029D 900000      E     MOV     DPTR,#GPU_Prochot
02A0 E0                MOVX    A,@DPTR
02A1 22                RET     
02A2         L?0644:
02A2 A3                INC     DPTR
02A3         L?0645:
02A3 F0                MOVX    @DPTR,A
02A4 7B16              MOV     R3,#016H
02A6 7D14              MOV     R5,#014H
02A8 7F01              MOV     R7,#01H
02AA 22                RET     
02AB         L?0646:
02AB 900000      R     MOV     DPTR,#CV2+01H
02AE E0                MOVX    A,@DPTR
02AF 94B8              SUBB    A,#0B8H
02B1 900000      R     MOV     DPTR,#CV2
02B4 E0                MOVX    A,@DPTR
02B5 940B              SUBB    A,#0BH
02B7 22                RET     
02B8         L?0647:
02B8 900000      R     MOV     DPTR,#CV3+01H
02BB E0                MOVX    A,@DPTR
02BC 94B8              SUBB    A,#0B8H
02BE 900000      R     MOV     DPTR,#CV3
02C1 E0                MOVX    A,@DPTR
02C2 940B              SUBB    A,#0BH
02C4 22                RET     
02C5         L?0648:
02C5 900000      E     MOV     DPTR,#Psys_AvgData+01H
02C8 E0                MOVX    A,@DPTR
02C9 94CC              SUBB    A,#0CCH
02CB 900000      E     MOV     DPTR,#Psys_AvgData
02CE E0                MOVX    A,@DPTR
02CF 9400              SUBB    A,#00H
02D1 22                RET     
02D2         L?0649:
02D2 F0                MOVX    @DPTR,A
02D3 A3                INC     DPTR
02D4 EF                MOV     A,R7
02D5 F0                MOVX    @DPTR,A
02D6 900000      E     MOV     DPTR,#OCPCapacityRelease
02D9 E0                MOVX    A,@DPTR
02DA FE                MOV     R6,A
02DB A3                INC     DPTR
02DC E0                MOVX    A,@DPTR
02DD FF                MOV     R7,A
02DE 22                RET     
02DF         L?0650:
02DF 75F003            MOV     B,#03H
02E2 EF                MOV     A,R7
02E3 900000      R     MOV     DPTR,#RTVTTable
02E6 120000      E     LCALL   ?C?OFFXADD
02E9 E4                CLR     A
02EA 93                MOVC    A,@A+DPTR
02EB 22                RET     
02EC         L?0651:
02EC 900000      E     MOV     DPTR,#?_bRWSMBus?BYTE+03H
02EF 743F              MOV     A,#03FH
02F1 F0                MOVX    @DPTR,A
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 58  

02F2 7E00        E     MOV     R6,#HIGH batteryFirstUsedDateL
02F4 A3                INC     DPTR
02F5 7400        E     MOV     A,#HIGH batteryFirstUsedDateL
02F7 F0                MOVX    @DPTR,A
02F8 22                RET     
02F9         L?0652:
02F9 900000      E     MOV     DPTR,#nFullChgCapL
02FC E0                MOVX    A,@DPTR
02FD 900000      E     MOV     DPTR,#nRemainingCapL
0300 F0                MOVX    @DPTR,A
0301 900000      E     MOV     DPTR,#nFullChgCapH
0304 22                RET     
0305         L?0653:
0305         L?0654:
0305 900000      E     MOV     DPTR,#ACOFF_SOURCE
0308 E0                MOVX    A,@DPTR
0309 54FB              ANL     A,#0FBH
030B F0                MOVX    @DPTR,A
030C 22                RET     
030D         L?0655:
030D         L?0656:
030D 900000      E     MOV     DPTR,#battery_critical
0310 E0                MOVX    A,@DPTR
0311 54FD              ANL     A,#0FDH
0313 F0                MOVX    @DPTR,A
0314 22                RET     
0315         L?0657:
0315         L?0658:
0315 900000      E     MOV     DPTR,#SysStatus
0318 E0                MOVX    A,@DPTR
0319 4402              ORL     A,#02H
031B F0                MOVX    @DPTR,A
031C 22                RET     
031D         L?0659:
031D E4                CLR     A
031E 900000      E     MOV     DPTR,#TrickleChgTimeOutCnt
0321 F0                MOVX    @DPTR,A
0322 A3                INC     DPTR
0323 F0                MOVX    @DPTR,A
0324 900000      E     MOV     DPTR,#FastChgTimeOutCnt
0327 22                RET     
0328         L?0660:
0328 7BE8              MOV     R3,#0E8H
032A 7A03              MOV     R2,#03H
032C F9                MOV     R1,A
032D F8                MOV     R0,A
032E 120000      E     LCALL   ?C?LMUL
0331 EC                MOV     A,R4
0332 22                RET     
0333         L?0661:
0333 900000      E     MOV     DPTR,#cBattFlag0
0336 E0                MOVX    A,@DPTR
0337 C4                SWAP    A
0338 13                RRC     A
0339 13                RRC     A
033A 13                RRC     A
033B 5401              ANL     A,#01H
033D 22                RET     
033E         L?0662:
033E 900000      E     MOV     DPTR,#nStopChgStat3H
0341 E0                MOVX    A,@DPTR
0342 FF                MOV     R7,A
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 59  

0343 900000      E     MOV     DPTR,#nStopChgStat3L
0346 E0                MOVX    A,@DPTR
0347 4F                ORL     A,R7
0348 22                RET     
0349         L?0663:
0349 E0                MOVX    A,@DPTR
034A 4410              ORL     A,#010H
034C F0                MOVX    @DPTR,A
034D 900000      E     MOV     DPTR,#nBatteryStatH
0350 E0                MOVX    A,@DPTR
0351 4402              ORL     A,#02H
0353 22                RET     
0354         L?0664:
0354 900000      E     MOV     DPTR,#NTC_V2+01H
0357 E0                MOVX    A,@DPTR
0358 9D                SUBB    A,R5
0359 900000      E     MOV     DPTR,#NTC_V2
035C E0                MOVX    A,@DPTR
035D 9C                SUBB    A,R4
035E 22                RET     
035F         L?0665:
035F 900000      E     MOV     DPTR,#NTC_V1+01H
0362 E0                MOVX    A,@DPTR
0363 9D                SUBB    A,R5
0364 900000      E     MOV     DPTR,#NTC_V1
0367 E0                MOVX    A,@DPTR
0368 9C                SUBB    A,R4
0369 22                RET     
036A         L?0666:
036A F0                MOVX    @DPTR,A
036B E0                MOVX    A,@DPTR
036C 54FE              ANL     A,#0FEH
036E F0                MOVX    @DPTR,A
036F E0                MOVX    A,@DPTR
0370 54FB              ANL     A,#0FBH
0372 F0                MOVX    @DPTR,A
0373 22                RET     
0374         L?0667:
0374 E4                CLR     A
0375 900000      E     MOV     DPTR,#RSOC1PTO0PCount
0378 F0                MOVX    @DPTR,A
0379 900000      E     MOV     DPTR,#RSOC1PTO0PSaveSpace
037C F0                MOVX    @DPTR,A
037D 22                RET     
037E         L?0668:
037E 900000      E     MOV     DPTR,#GPDRH
0381 E0                MOVX    A,@DPTR
0382 54FE              ANL     A,#0FEH
0384 F0                MOVX    @DPTR,A
0385 7F01              MOV     R7,#01H
0387 22                RET     
0388         L?0669:
0388 E4                CLR     A
0389 900000      E     MOV     DPTR,#cGPUBattThrottling
038C F0                MOVX    @DPTR,A
038D 900000      E     MOV     DPTR,#cBATTThrottling
0390 F0                MOVX    @DPTR,A
0391 22                RET     
0392         L?0670:
0392 2400              ADD     A,#00H
0394 FF                MOV     R7,A
0395 EC                MOV     A,R4
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 60  

0396 3E                ADDC    A,R6
0397 F0                MOVX    @DPTR,A
0398 A3                INC     DPTR
0399 EF                MOV     A,R7
039A F0                MOVX    @DPTR,A
039B 22                RET     
039C         L?0671:
039C 900000      R     MOV     DPTR,#sCmd
039F F0                MOVX    @DPTR,A
03A0 7B01              MOV     R3,#01H
03A2 22                RET     
             ; FUNCTION Com0231 (END)

             ; FUNCTION UpdateNameSpace (BEGIN)
                                           ; SOURCE LINE # 13
                                           ; SOURCE LINE # 14
                                           ; SOURCE LINE # 15
0000 900000      E     MOV     DPTR,#BAT1PERCL
0003 E0                MOVX    A,@DPTR
0004 900000      E     MOV     DPTR,#nBattGasgauge
0007 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 27
0008 900000      E     MOV     DPTR,#EC_oCCBQl
000B E0                MOVX    A,@DPTR
000C 900000      E     MOV     DPTR,#nCycleCounter
000F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 28
0010 900000      E     MOV     DPTR,#nBattery0x16L
0013 E0                MOVX    A,@DPTR
0014 900000      E     MOV     DPTR,#EC_BatteryStatusL
0017 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 29
0018 900000      E     MOV     DPTR,#nBattery0x16H
001B E0                MOVX    A,@DPTR
001C 900000      E     MOV     DPTR,#EC_BatteryStatusH
001F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 31
0020 900000      E     MOV     DPTR,#nBattery0x16L
0023 E0                MOVX    A,@DPTR
0024 30E521            JNB     ACC.5,?C0001
                                           ; SOURCE LINE # 32
                                           ; SOURCE LINE # 33
0027 900000      E     MOV     DPTR,#nBatteryStatus1
002A E0                MOVX    A,@DPTR
002B 4402              ORL     A,#02H
002D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 35
002E 900000      E     MOV     DPTR,#nBattGasgauge
0031 E0                MOVX    A,@DPTR
0032 6464              XRL     A,#064H
0034 7020              JNZ     ?C0004
                                           ; SOURCE LINE # 36
                                           ; SOURCE LINE # 37
0036 900000      E     MOV     DPTR,#LENOVOPMFW_Temp
0039 E0                MOVX    A,@DPTR
003A 20E219            JB      ACC.2,?C0004
                                           ; SOURCE LINE # 38
                                           ; SOURCE LINE # 39
003D E0                MOVX    A,@DPTR
003E 4404              ORL     A,#04H
0040 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 40
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 61  

0041 7F25              MOV     R7,#025H
0043 120000      E     LCALL   _ECSMI_SCIEvent
                                           ; SOURCE LINE # 41
                                           ; SOURCE LINE # 42
                                           ; SOURCE LINE # 43
0046 800E              SJMP    ?C0004
0048         ?C0001:
                                           ; SOURCE LINE # 45
                                           ; SOURCE LINE # 46
0048 900000      E     MOV     DPTR,#nBatteryStatus1
004B E0                MOVX    A,@DPTR
004C 54FD              ANL     A,#0FDH
004E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 47
004F 900000      E     MOV     DPTR,#LENOVOPMFW_Temp
0052 E0                MOVX    A,@DPTR
0053 54FB              ANL     A,#0FBH
0055 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 48
0056         ?C0004:
                                           ; SOURCE LINE # 50
0056 120000      R     LCALL   Lenovo_Battery_EM80
                                           ; SOURCE LINE # 62
0059 900000      E     MOV     DPTR,#testtoolflag
005C E0                MOVX    A,@DPTR
005D 6003              JZ      $ + 5H
005F 020000      R     LJMP    ?C0005
                                           ; SOURCE LINE # 63
                                           ; SOURCE LINE # 64
0062 900000      E     MOV     DPTR,#LENOVOPMFW
0065 E0                MOVX    A,@DPTR
0066 20E403            JB      ACC.4,$ + 6H
0069 020000      R     LJMP    ?C0006
006C E0                MOVX    A,@DPTR
006D 30E203            JNB     ACC.2,$ + 6H
0070 020000      R     LJMP    ?C0006
                                           ; SOURCE LINE # 65
                                           ; SOURCE LINE # 67
0073 900000      E     MOV     DPTR,#System_Status
0076 E0                MOVX    A,@DPTR
0077 20E004            JB      ACC.0,?C0008
007A E0                MOVX    A,@DPTR
007B 30E124            JNB     ACC.1,?C0007
007E         ?C0008:
                                           ; SOURCE LINE # 68
                                           ; SOURCE LINE # 69
                                           ; SOURCE LINE # 70
007E 120000      R     LCALL   L?0562
0081 EC                MOV     A,R4
0082 C0E0              PUSH    ACC
0084 ED                MOV     A,R5
0085 C0E0              PUSH    ACC
0087 EE                MOV     A,R6
0088 C0E0              PUSH    ACC
008A EF                MOV     A,R7
008B C0E0              PUSH    ACC
008D 7B14              MOV     R3,#014H
008F 120000      R     LCALL   L?0564
0092 D0E0              POP     ACC
0094 FB                MOV     R3,A
0095 D0E0              POP     ACC
0097 FA                MOV     R2,A
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 62  

0098 D0E0              POP     ACC
009A F9                MOV     R1,A
009B D0E0              POP     ACC
                                           ; SOURCE LINE # 71
                                           ; SOURCE LINE # 72
009D 120000      R     LCALL   L?0571
                                           ; SOURCE LINE # 73
00A0 8008              SJMP    ?C0009
00A2         ?C0007:
                                           ; SOURCE LINE # 75
                                           ; SOURCE LINE # 77
                                           ; SOURCE LINE # 78
00A2 120000      R     LCALL   L?0589
00A5 E0                MOVX    A,@DPTR
00A6 900000      E     MOV     DPTR,#nRemainingCapH
00A9 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 79
00AA         ?C0009:
                                           ; SOURCE LINE # 81
00AA 900000      E     MOV     DPTR,#LENOVOPMFW_Temp
00AD E0                MOVX    A,@DPTR
00AE 4401              ORL     A,#01H
00B0 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 83
00B1 120000      R     LCALL   L?0619
00B4 405B              JC      ?C0010
                                           ; SOURCE LINE # 84
                                           ; SOURCE LINE # 85
00B6 900000      E     MOV     DPTR,#ACOFF_SOURCE
00B9 E0                MOVX    A,@DPTR
00BA 30E205            JNB     ACC.2,?C0011
                                           ; SOURCE LINE # 86
                                           ; SOURCE LINE # 87
00BD 7F25              MOV     R7,#025H
00BF 120000      E     LCALL   _ECSMI_SCIEvent
                                           ; SOURCE LINE # 88
00C2         ?C0011:
                                           ; SOURCE LINE # 89
                                           ; SOURCE LINE # 90
00C2 120000      R     LCALL   L?0596
                                           ; SOURCE LINE # 92
00C5 900000      E     MOV     DPTR,#StatusKeeper
00C8 E0                MOVX    A,@DPTR
00C9 20E103            JB      ACC.1,?C0012
                                           ; SOURCE LINE # 93
                                           ; SOURCE LINE # 94
                                           ; SOURCE LINE # 95
00CC 020000      R     LJMP    ?C0510
00CF         ?C0012:
                                           ; SOURCE LINE # 97
                                           ; SOURCE LINE # 98
                                           ; SOURCE LINE # 99
00CF 120000      R     LCALL   L?0632
00D2 6003              JZ      $ + 5H
00D4 020000      R     LJMP    ?C0054
                                           ; SOURCE LINE # 100
                                           ; SOURCE LINE # 101
00D7 900000      E     MOV     DPTR,#KeepBattRemineCap
00DA E0                MOVX    A,@DPTR
00DB 7002              JNZ     ?C0503
00DD A3                INC     DPTR
00DE E0                MOVX    A,@DPTR
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 63  

00DF         ?C0503:
00DF 7003              JNZ     ?C0015
                                           ; SOURCE LINE # 102
                                           ; SOURCE LINE # 103
                                           ; SOURCE LINE # 104
00E1 020000      R     LJMP    ?C0511
00E4         ?C0015:
                                           ; SOURCE LINE # 106
                                           ; SOURCE LINE # 107
                                           ; SOURCE LINE # 110
00E4 120000      R     LCALL   L?0562
00E7 120000      R     LCALL   L?0587
00EA 120000      E     LCALL   ?C?LADD
00ED EC                MOV     A,R4
00EE C0E0              PUSH    ACC
00F0 EE                MOV     A,R6
00F1 C0E0              PUSH    ACC
00F3 EF                MOV     A,R7
00F4 C0E0              PUSH    ACC
00F6 120000      R     LCALL   L?0575
00F9 120000      R     LCALL   L?0621
00FC D0E0              POP     ACC
00FE FF                MOV     R7,A
00FF D0E0              POP     ACC
0101 FE                MOV     R6,A
0102 D0E0              POP     ACC
0104 FC                MOV     R4,A
0105 D3                SETB    C
0106 120000      E     LCALL   ?C?ULCMP
0109 5003              JNC     $ + 5H
010B 020000      R     LJMP    ?C0054
                                           ; SOURCE LINE # 111
                                           ; SOURCE LINE # 112
                                           ; SOURCE LINE # 113
                                           ; SOURCE LINE # 114
                                           ; SOURCE LINE # 115
                                           ; SOURCE LINE # 116
                                           ; SOURCE LINE # 117
                                           ; SOURCE LINE # 118
                                           ; SOURCE LINE # 121
010E 020000      R     LJMP    ?C0512
0111         ?C0010:
                                           ; SOURCE LINE # 122
0111 120000      R     LCALL   L?0619
0114 4003              JC      $ + 5H
0116 020000      R     LJMP    ?C0054
                                           ; SOURCE LINE # 123
                                           ; SOURCE LINE # 124
                                           ; SOURCE LINE # 125
                                           ; SOURCE LINE # 127
                                           ; SOURCE LINE # 128
                                           ; SOURCE LINE # 130
                                           ; SOURCE LINE # 131
0119 020000      R     LJMP    ?C0513
011C         ?C0006:
                                           ; SOURCE LINE # 133
                                           ; SOURCE LINE # 135
011C 900000      E     MOV     DPTR,#EC_BatteryStatusL
011F E0                MOVX    A,@DPTR
0120 30E514            JNB     ACC.5,?C0021
0123 900000      E     MOV     DPTR,#SYS_STATUS
0126 E0                MOVX    A,@DPTR
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 64  

0127 30E70D            JNB     ACC.7,?C0021
012A 900000      E     MOV     DPTR,#nBattGasgauge
012D E0                MOVX    A,@DPTR
012E B46406            CJNE    A,#064H,?C0021
                                           ; SOURCE LINE # 136
                                           ; SOURCE LINE # 137
                                           ; SOURCE LINE # 138
0131 120000      R     LCALL   L?0652
                                           ; SOURCE LINE # 139
0134 020000      R     LJMP    ?C0514
0137         ?C0021:
                                           ; SOURCE LINE # 141
                                           ; SOURCE LINE # 151
0137 900000      E     MOV     DPTR,#System_Status
013A E0                MOVX    A,@DPTR
013B 20E004            JB      ACC.0,?C0024
013E E0                MOVX    A,@DPTR
013F 30E125            JNB     ACC.1,?C0023
0142         ?C0024:
                                           ; SOURCE LINE # 152
                                           ; SOURCE LINE # 153
                                           ; SOURCE LINE # 154
0142 120000      R     LCALL   L?0563
0145 EC                MOV     A,R4
0146 C0E0              PUSH    ACC
0148 ED                MOV     A,R5
0149 C0E0              PUSH    ACC
014B EE                MOV     A,R6
014C C0E0              PUSH    ACC
014E EF                MOV     A,R7
014F C0E0              PUSH    ACC
0151 E4                CLR     A
0152 7B14              MOV     R3,#014H
0154 120000      R     LCALL   L?0565
0157 D0E0              POP     ACC
0159 FB                MOV     R3,A
015A D0E0              POP     ACC
015C FA                MOV     R2,A
015D D0E0              POP     ACC
015F F9                MOV     R1,A
0160 D0E0              POP     ACC
                                           ; SOURCE LINE # 155
                                           ; SOURCE LINE # 156
0162 120000      R     LCALL   L?0571
                                           ; SOURCE LINE # 157
0165 8008              SJMP    ?C0022
0167         ?C0023:
                                           ; SOURCE LINE # 160
                                           ; SOURCE LINE # 161
                                           ; SOURCE LINE # 162
0167 120000      R     LCALL   L?0589
016A         ?C0514:
016A E0                MOVX    A,@DPTR
016B 900000      E     MOV     DPTR,#nRemainingCapH
016E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 163
                                           ; SOURCE LINE # 164
016F         ?C0022:
                                           ; SOURCE LINE # 166
016F 900000      E     MOV     DPTR,#LENOVOPMFW_Temp
0172 E0                MOVX    A,@DPTR
0173 30E012            JNB     ACC.0,?C0026
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 65  

                                           ; SOURCE LINE # 167
                                           ; SOURCE LINE # 168
0176 E0                MOVX    A,@DPTR
0177 54FE              ANL     A,#0FEH
0179 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 170
017A 900000      E     MOV     DPTR,#ACOFF_SOURCE
017D E0                MOVX    A,@DPTR
017E 30E207            JNB     ACC.2,?C0026
                                           ; SOURCE LINE # 171
                                           ; SOURCE LINE # 172
0181 E0                MOVX    A,@DPTR
0182 54FB              ANL     A,#0FBH
0184 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 173
0185 120000      R     LCALL   BATT_LEN_OFF
                                           ; SOURCE LINE # 175
                                           ; SOURCE LINE # 176
0188         ?C0026:
                                           ; SOURCE LINE # 179
                                           ; SOURCE LINE # 180
                                           ; SOURCE LINE # 181
                                           ; SOURCE LINE # 182
0188 020000      R     LJMP    ?C0515
018B         ?C0005:
                                           ; SOURCE LINE # 183
018B 900000      E     MOV     DPTR,#testtoolflag
018E E0                MOVX    A,@DPTR
018F 6401              XRL     A,#01H
0191 6003              JZ      $ + 5H
0193 020000      R     LJMP    ?C0054
                                           ; SOURCE LINE # 184
                                           ; SOURCE LINE # 185
0196 900000      E     MOV     DPTR,#LENOVOPMFW
0199 E0                MOVX    A,@DPTR
019A 20E403            JB      ACC.4,$ + 6H
019D 020000      R     LJMP    ?C0030
01A0 E0                MOVX    A,@DPTR
01A1 30E203            JNB     ACC.2,$ + 6H
01A4 020000      R     LJMP    ?C0030
                                           ; SOURCE LINE # 186
                                           ; SOURCE LINE # 201
01A7 900000      E     MOV     DPTR,#System_Status
01AA E0                MOVX    A,@DPTR
01AB 20E004            JB      ACC.0,?C0032
01AE E0                MOVX    A,@DPTR
01AF 30E125            JNB     ACC.1,?C0031
01B2         ?C0032:
                                           ; SOURCE LINE # 202
                                           ; SOURCE LINE # 203
                                           ; SOURCE LINE # 204
01B2 120000      R     LCALL   L?0563
01B5 EC                MOV     A,R4
01B6 C0E0              PUSH    ACC
01B8 ED                MOV     A,R5
01B9 C0E0              PUSH    ACC
01BB EE                MOV     A,R6
01BC C0E0              PUSH    ACC
01BE EF                MOV     A,R7
01BF C0E0              PUSH    ACC
01C1 E4                CLR     A
01C2 7B14              MOV     R3,#014H
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 66  

01C4 120000      R     LCALL   L?0565
01C7 D0E0              POP     ACC
01C9 FB                MOV     R3,A
01CA D0E0              POP     ACC
01CC FA                MOV     R2,A
01CD D0E0              POP     ACC
01CF F9                MOV     R1,A
01D0 D0E0              POP     ACC
                                           ; SOURCE LINE # 205
                                           ; SOURCE LINE # 206
01D2 120000      R     LCALL   L?0572
                                           ; SOURCE LINE # 208
01D5 8008              SJMP    ?C0033
01D7         ?C0031:
                                           ; SOURCE LINE # 210
                                           ; SOURCE LINE # 212
                                           ; SOURCE LINE # 213
01D7 120000      R     LCALL   L?0590
01DA E0                MOVX    A,@DPTR
01DB 900000      E     MOV     DPTR,#nRemainingCapH
01DE F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 214
01DF         ?C0033:
                                           ; SOURCE LINE # 216
01DF 900000      E     MOV     DPTR,#LENOVOPMFW_Temp
01E2 E0                MOVX    A,@DPTR
01E3 4401              ORL     A,#01H
01E5 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 218
01E6 900000      E     MOV     DPTR,#nBattGasgauge
01E9 E0                MOVX    A,@DPTR
01EA D3                SETB    C
01EB 943C              SUBB    A,#03CH
01ED 400A              JC      ?C0034
                                           ; SOURCE LINE # 219
                                           ; SOURCE LINE # 220
01EF 900000      E     MOV     DPTR,#ACOFF_SOURCE
01F2 E0                MOVX    A,@DPTR
01F3 4404              ORL     A,#04H
01F5 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 221
01F6 020000      R     LJMP    BATT_LEN_ON
                                           ; SOURCE LINE # 231
01F9         ?C0034:
                                           ; SOURCE LINE # 232
01F9 120000      R     LCALL   L?0620
01FC 5003              JNC     $ + 5H
01FE 020000      R     LJMP    ?C0036
0201 E0                MOVX    A,@DPTR
0202 D3                SETB    C
0203 943C              SUBB    A,#03CH
0205 5078              JNC     ?C0036
                                           ; SOURCE LINE # 233
                                           ; SOURCE LINE # 234
0207 900000      E     MOV     DPTR,#ACOFF_SOURCE
020A E0                MOVX    A,@DPTR
020B 30E205            JNB     ACC.2,?C0037
                                           ; SOURCE LINE # 235
                                           ; SOURCE LINE # 236
020E 7F25              MOV     R7,#025H
0210 120000      E     LCALL   _ECSMI_SCIEvent
                                           ; SOURCE LINE # 237
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 67  

0213         ?C0037:
                                           ; SOURCE LINE # 238
                                           ; SOURCE LINE # 239
0213 120000      R     LCALL   L?0596
                                           ; SOURCE LINE # 241
0216 900000      E     MOV     DPTR,#StatusKeeper
0219 E0                MOVX    A,@DPTR
021A 20E108            JB      ACC.1,?C0038
                                           ; SOURCE LINE # 242
                                           ; SOURCE LINE # 243
021D         ?C0510:
021D 900000      E     MOV     DPTR,#nStopChgStat3H
0220 E0                MOVX    A,@DPTR
0221 4440              ORL     A,#040H
0223 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 244
0224 22                RET     
0225         ?C0038:
                                           ; SOURCE LINE # 246
                                           ; SOURCE LINE # 247
                                           ; SOURCE LINE # 248
0225 120000      R     LCALL   L?0632
0228 6003              JZ      $ + 5H
022A 020000      R     LJMP    ?C0054
                                           ; SOURCE LINE # 249
                                           ; SOURCE LINE # 250
022D 900000      E     MOV     DPTR,#KeepBattRemineCap
0230 E0                MOVX    A,@DPTR
0231 7002              JNZ     ?C0504
0233 A3                INC     DPTR
0234 E0                MOVX    A,@DPTR
0235         ?C0504:
0235 700B              JNZ     ?C0041
                                           ; SOURCE LINE # 251
                                           ; SOURCE LINE # 252
0237         ?C0511:
0237 120000      R     LCALL   L?0575
023A 900000      E     MOV     DPTR,#KeepBattRemineCap
023D F0                MOVX    @DPTR,A
023E A3                INC     DPTR
023F EF                MOV     A,R7
0240 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 253
0241 22                RET     
0242         ?C0041:
                                           ; SOURCE LINE # 255
                                           ; SOURCE LINE # 256
                                           ; SOURCE LINE # 259
0242 120000      R     LCALL   L?0563
0245 120000      R     LCALL   L?0587
0248 120000      E     LCALL   ?C?LADD
024B EC                MOV     A,R4
024C C0E0              PUSH    ACC
024E EE                MOV     A,R6
024F C0E0              PUSH    ACC
0251 EF                MOV     A,R7
0252 C0E0              PUSH    ACC
0254 120000      R     LCALL   L?0576
0257 120000      R     LCALL   L?0621
025A D0E0              POP     ACC
025C FF                MOV     R7,A
025D D0E0              POP     ACC
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 68  

025F FE                MOV     R6,A
0260 D0E0              POP     ACC
0262 FC                MOV     R4,A
0263 D3                SETB    C
0264 120000      E     LCALL   ?C?ULCMP
0267 5003              JNC     $ + 5H
0269 020000      R     LJMP    ?C0054
                                           ; SOURCE LINE # 260
                                           ; SOURCE LINE # 261
026C         ?C0512:
026C E4                CLR     A
026D 900000      E     MOV     DPTR,#KeepBattRemineCap
0270 F0                MOVX    @DPTR,A
0271 A3                INC     DPTR
0272 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 262
0273 900000      E     MOV     DPTR,#StatusKeeper
0276 E0                MOVX    A,@DPTR
0277 54FD              ANL     A,#0FDH
0279 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 263
027A 7F25              MOV     R7,#025H
027C 020000      E     LJMP    _ECSMI_SCIEvent
                                           ; SOURCE LINE # 264
                                           ; SOURCE LINE # 265
                                           ; SOURCE LINE # 266
                                           ; SOURCE LINE # 267
                                           ; SOURCE LINE # 269
027F         ?C0036:
                                           ; SOURCE LINE # 270
027F 120000      R     LCALL   L?0620
0282 4003              JC      $ + 5H
0284 020000      R     LJMP    ?C0054
                                           ; SOURCE LINE # 271
                                           ; SOURCE LINE # 272
0287         ?C0513:
0287 120000      R     LCALL   L?0653
                                           ; SOURCE LINE # 273
028A 120000      R     LCALL   BATT_LEN_OFF
                                           ; SOURCE LINE # 275
028D 900000      E     MOV     DPTR,#StatusKeeper
0290 E0                MOVX    A,@DPTR
0291 4402              ORL     A,#02H
                                           ; SOURCE LINE # 276
                                           ; SOURCE LINE # 278
                                           ; SOURCE LINE # 279
0293 020000      R     LJMP    ?C0516
0296         ?C0030:
                                           ; SOURCE LINE # 282
                                           ; SOURCE LINE # 284
0296 900000      E     MOV     DPTR,#EC_BatteryStatusL
0299 E0                MOVX    A,@DPTR
029A 30E514            JNB     ACC.5,?C0047
029D 900000      E     MOV     DPTR,#SYS_STATUS
02A0 E0                MOVX    A,@DPTR
02A1 30E70D            JNB     ACC.7,?C0047
02A4 900000      E     MOV     DPTR,#nBattGasgauge
02A7 E0                MOVX    A,@DPTR
02A8 B46406            CJNE    A,#064H,?C0047
                                           ; SOURCE LINE # 285
                                           ; SOURCE LINE # 286
                                           ; SOURCE LINE # 287
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 69  

02AB 120000      R     LCALL   L?0652
                                           ; SOURCE LINE # 288
02AE 020000      R     LJMP    ?C0517
02B1         ?C0047:
                                           ; SOURCE LINE # 290
                                           ; SOURCE LINE # 300
02B1 900000      E     MOV     DPTR,#System_Status
02B4 E0                MOVX    A,@DPTR
02B5 20E004            JB      ACC.0,?C0050
02B8 E0                MOVX    A,@DPTR
02B9 30E125            JNB     ACC.1,?C0049
02BC         ?C0050:
                                           ; SOURCE LINE # 301
                                           ; SOURCE LINE # 302
                                           ; SOURCE LINE # 303
02BC 120000      R     LCALL   L?0563
02BF EC                MOV     A,R4
02C0 C0E0              PUSH    ACC
02C2 ED                MOV     A,R5
02C3 C0E0              PUSH    ACC
02C5 EE                MOV     A,R6
02C6 C0E0              PUSH    ACC
02C8 EF                MOV     A,R7
02C9 C0E0              PUSH    ACC
02CB E4                CLR     A
02CC 7B14              MOV     R3,#014H
02CE 120000      R     LCALL   L?0565
02D1 D0E0              POP     ACC
02D3 FB                MOV     R3,A
02D4 D0E0              POP     ACC
02D6 FA                MOV     R2,A
02D7 D0E0              POP     ACC
02D9 F9                MOV     R1,A
02DA D0E0              POP     ACC
                                           ; SOURCE LINE # 304
                                           ; SOURCE LINE # 305
02DC 120000      R     LCALL   L?0572
                                           ; SOURCE LINE # 306
02DF 8008              SJMP    ?C0048
02E1         ?C0049:
                                           ; SOURCE LINE # 309
                                           ; SOURCE LINE # 310
                                           ; SOURCE LINE # 311
02E1 120000      R     LCALL   L?0590
02E4         ?C0517:
02E4 E0                MOVX    A,@DPTR
02E5 900000      E     MOV     DPTR,#nRemainingCapH
02E8 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 312
                                           ; SOURCE LINE # 313
02E9         ?C0048:
                                           ; SOURCE LINE # 315
02E9 900000      E     MOV     DPTR,#LENOVOPMFW_Temp
02EC E0                MOVX    A,@DPTR
02ED 30E012            JNB     ACC.0,?C0052
                                           ; SOURCE LINE # 316
                                           ; SOURCE LINE # 317
02F0 E0                MOVX    A,@DPTR
02F1 54FE              ANL     A,#0FEH
02F3 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 319
02F4 900000      E     MOV     DPTR,#ACOFF_SOURCE
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 70  

02F7 E0                MOVX    A,@DPTR
02F8 30E207            JNB     ACC.2,?C0052
                                           ; SOURCE LINE # 320
                                           ; SOURCE LINE # 321
02FB E0                MOVX    A,@DPTR
02FC 54FB              ANL     A,#0FBH
02FE F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 322
02FF 120000      R     LCALL   BATT_LEN_OFF
                                           ; SOURCE LINE # 324
                                           ; SOURCE LINE # 325
0302         ?C0052:
                                           ; SOURCE LINE # 328
0302         ?C0515:
0302 900000      E     MOV     DPTR,#StatusKeeper
0305 E0                MOVX    A,@DPTR
0306 54FD              ANL     A,#0FDH
0308         ?C0516:
0308 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 329
0309 900000      E     MOV     DPTR,#nStopChgStat3H
030C E0                MOVX    A,@DPTR
030D 54BF              ANL     A,#0BFH
030F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 330
                                           ; SOURCE LINE # 331
                                           ; SOURCE LINE # 459
0310         ?C0054:
0310 22                RET     
0311         L?0596:
0311 900000      E     MOV     DPTR,#ACOFF_SOURCE
0314 E0                MOVX    A,@DPTR
0315 54FB              ANL     A,#0FBH
0317 F0                MOVX    @DPTR,A
0318 120000      R     LCALL   BATT_LEN_OFF
031B 22                RET     
             ; FUNCTION UpdateNameSpace (END)

             ; FUNCTION ChkLENOVOPMFW (BEGIN)
                                           ; SOURCE LINE # 461
                                           ; SOURCE LINE # 462
                                           ; SOURCE LINE # 463
0000 900000      E     MOV     DPTR,#LENOVOPMFW
0003 E0                MOVX    A,@DPTR
0004 30E220            JNB     ACC.2,?C0055
                                           ; SOURCE LINE # 464
                                           ; SOURCE LINE # 465
0007 900000      E     MOV     DPTR,#cBattFlag0
000A E0                MOVX    A,@DPTR
000B C3                CLR     C
000C 13                RRC     A
000D 20E031            JB      ACC.0,?C0060
                                           ; SOURCE LINE # 466
                                           ; SOURCE LINE # 467
0010 900000      E     MOV     DPTR,#LENOVOPMFW
0013 E0                MOVX    A,@DPTR
0014 20E02A            JB      ACC.0,?C0060
                                           ; SOURCE LINE # 468
                                           ; SOURCE LINE # 469
0017 900000      E     MOV     DPTR,#cBattFlag0
001A E0                MOVX    A,@DPTR
001B 4402              ORL     A,#02H
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 71  

                                           ; SOURCE LINE # 470
                                           ; SOURCE LINE # 471
001D 120000      R     LCALL   L?0666
                                           ; SOURCE LINE # 472
0020 900000      E     MOV     DPTR,#cTargetGauge
0023 7401              MOV     A,#01H
0025 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 474
                                           ; SOURCE LINE # 475
                                           ; SOURCE LINE # 476
0026 22                RET     
0027         ?C0055:
                                           ; SOURCE LINE # 477
0027 900000      E     MOV     DPTR,#LENOVOPMFW
002A E0                MOVX    A,@DPTR
002B 30E013            JNB     ACC.0,?C0060
                                           ; SOURCE LINE # 478
                                           ; SOURCE LINE # 479
002E E0                MOVX    A,@DPTR
002F 54FE              ANL     A,#0FEH
0031 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 480
0032 900000      E     MOV     DPTR,#cBattFlag0
0035 E0                MOVX    A,@DPTR
0036 54FD              ANL     A,#0FDH
                                           ; SOURCE LINE # 481
                                           ; SOURCE LINE # 482
0038 120000      R     LCALL   L?0666
                                           ; SOURCE LINE # 484
003B 120000      R     LCALL   L?0653
                                           ; SOURCE LINE # 485
003E 120000      R     LCALL   BATT_LEN_OFF
                                           ; SOURCE LINE # 487
                                           ; SOURCE LINE # 488
0041         ?C0060:
0041 22                RET     
             ; FUNCTION ChkLENOVOPMFW (END)

             ; FUNCTION ChkGoTarget (BEGIN)
                                           ; SOURCE LINE # 490
                                           ; SOURCE LINE # 491
                                           ; SOURCE LINE # 492
0000 120000      R     LCALL   L?0633
0003 30E069            JNB     ACC.0,?C0061
                                           ; SOURCE LINE # 493
                                           ; SOURCE LINE # 494
0006 120000      R     LCALL   L?0614
0009 600A              JZ      ?C0063
000B E0                MOVX    A,@DPTR
000C FF                MOV     R7,A
000D 900000      E     MOV     DPTR,#nBattGasgauge
0010 E0                MOVX    A,@DPTR
0011 C3                CLR     C
0012 9F                SUBB    A,R7
0013 503B              JNC     ?C0062
0015         ?C0063:
                                           ; SOURCE LINE # 495
                                           ; SOURCE LINE # 496
0015 120000      R     LCALL   L?0654
                                           ; SOURCE LINE # 497
0018 120000      R     LCALL   BATT_LEN_OFF
                                           ; SOURCE LINE # 499
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 72  

001B 900000      E     MOV     DPTR,#cBattFlag0
001E E0                MOVX    A,@DPTR
001F 547F              ANL     A,#07FH
0021 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 500
0022 900000      E     MOV     DPTR,#LENOVOPMFW
0025 E0                MOVX    A,@DPTR
0026 30E265            JNB     ACC.2,?C0065
                                           ; SOURCE LINE # 501
                                           ; SOURCE LINE # 502
0029 E0                MOVX    A,@DPTR
002A 4401              ORL     A,#01H
002C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 503
002D E0                MOVX    A,@DPTR
002E 54FB              ANL     A,#0FBH
0030 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 504
0031 E4                CLR     A
0032 900000      E     MOV     DPTR,#cTargetGauge
0035 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 505
0036 900000      E     MOV     DPTR,#LENOVOPMFW_Temp
0039 E0                MOVX    A,@DPTR
003A 4402              ORL     A,#02H
003C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 506
003D 900000      E     MOV     DPTR,#uVPCeventSource
0040 7402              MOV     A,#02H
0042 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 507
0043 E4                CLR     A
0044 900000      E     MOV     DPTR,#uVPCeventSource2
0047 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 508
0048 7F44              MOV     R7,#044H
004A 120000      E     LCALL   _ECSMI_SCIEvent
                                           ; SOURCE LINE # 509
004D 020000      R     LJMP    ChkLENOVOPMFW
                                           ; SOURCE LINE # 510
                                           ; SOURCE LINE # 512
0050         ?C0062:
                                           ; SOURCE LINE # 513
0050 900000      E     MOV     DPTR,#cTargetGauge
0053 E0                MOVX    A,@DPTR
0054 FF                MOV     R7,A
0055 900000      E     MOV     DPTR,#nBattGasgauge
0058 E0                MOVX    A,@DPTR
0059 D3                SETB    C
005A 9F                SUBB    A,R7
005B 4031              JC      ?C0065
                                           ; SOURCE LINE # 514
                                           ; SOURCE LINE # 515
005D 900000      E     MOV     DPTR,#ACOFF_SOURCE
0060 E0                MOVX    A,@DPTR
0061 4404              ORL     A,#04H
0063 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 516
0064 120000      R     LCALL   BATT_LEN_ON
                                           ; SOURCE LINE # 518
0067 900000      E     MOV     DPTR,#cBattFlag0
006A E0                MOVX    A,@DPTR
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 73  

006B 4480              ORL     A,#080H
006D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 519
                                           ; SOURCE LINE # 520
006E 22                RET     
006F         ?C0061:
                                           ; SOURCE LINE # 521
006F 900000      E     MOV     DPTR,#cBattFlag0
0072 E0                MOVX    A,@DPTR
0073 C3                CLR     C
0074 13                RRC     A
0075 30E016            JNB     ACC.0,?C0065
                                           ; SOURCE LINE # 522
                                           ; SOURCE LINE # 523
0078 E0                MOVX    A,@DPTR
0079 20E012            JB      ACC.0,?C0065
                                           ; SOURCE LINE # 524
                                           ; SOURCE LINE # 525
007C 900000      E     MOV     DPTR,#nBattery0x16L
007F E0                MOVX    A,@DPTR
0080 30E50B            JNB     ACC.5,?C0065
                                           ; SOURCE LINE # 526
                                           ; SOURCE LINE # 527
0083 900000      E     MOV     DPTR,#cBattFlag0
0086 E0                MOVX    A,@DPTR
0087 4401              ORL     A,#01H
0089 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 528
008A E0                MOVX    A,@DPTR
008B 4404              ORL     A,#04H
008D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 529
                                           ; SOURCE LINE # 530
                                           ; SOURCE LINE # 531
                                           ; SOURCE LINE # 532
008E         ?C0065:
008E 22                RET     
             ; FUNCTION ChkGoTarget (END)

             ; FUNCTION ChkS3ResumeRSOC (BEGIN)
                                           ; SOURCE LINE # 534
                                           ; SOURCE LINE # 535
                                           ; SOURCE LINE # 550
0000 900000      E     MOV     DPTR,#battery_critical
0003 E0                MOVX    A,@DPTR
0004 30E11A            JNB     ACC.1,?C0071
                                           ; SOURCE LINE # 551
                                           ; SOURCE LINE # 554
0007 7F37              MOV     R7,#037H
0009 120000      E     LCALL   _RamDebug
                                           ; SOURCE LINE # 556
000C 120000      E     LCALL   PulseSBPowerButton
                                           ; SOURCE LINE # 557
000F 900000      E     MOV     DPTR,#battery_critical
0012 E0                MOVX    A,@DPTR
0013 54FE              ANL     A,#0FEH
0015 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 558
0016 E0                MOVX    A,@DPTR
0017 54FD              ANL     A,#0FDH
0019 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 559
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 74  

001A 900000      E     MOV     DPTR,#System_Status
001D E0                MOVX    A,@DPTR
001E 4402              ORL     A,#02H
0020 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 560
0021         ?C0071:
                                           ; SOURCE LINE # 562
0021 900000      E     MOV     DPTR,#GPDRB
0024 E0                MOVX    A,@DPTR
0025 20E00B            JB      ACC.0,?C0073
0028 120000      R     LCALL   L?0603
002B 5006              JNC     ?C0073
002D E0                MOVX    A,@DPTR
002E C3                CLR     C
002F 9406              SUBB    A,#06H
0031 5007              JNC     ?C0075
0033         ?C0073:
                                           ; SOURCE LINE # 563
                                           ; SOURCE LINE # 564
0033 900000      E     MOV     DPTR,#System_Status
0036 E0                MOVX    A,@DPTR
0037 54FD              ANL     A,#0FDH
0039 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 565
                                           ; SOURCE LINE # 568
003A         ?C0075:
003A 22                RET     
             ; FUNCTION ChkS3ResumeRSOC (END)

             ; FUNCTION ChkS3DCRSOC (BEGIN)
                                           ; SOURCE LINE # 570
                                           ; SOURCE LINE # 571
                                           ; SOURCE LINE # 599
0000 900000      E     MOV     DPTR,#SysPowState
0003 E0                MOVX    A,@DPTR
0004 6433              XRL     A,#033H
0006 7072              JNZ     ?C0076
                                           ; SOURCE LINE # 600
                                           ; SOURCE LINE # 601
0008 120000      R     LCALL   L?0603
000B 5006              JNC     ?C0078
000D E0                MOVX    A,@DPTR
000E C3                CLR     C
000F 9405              SUBB    A,#05H
0011 5008              JNC     ?C0077
0013         ?C0078:
                                           ; SOURCE LINE # 602
                                           ; SOURCE LINE # 603
0013 900000      E     MOV     DPTR,#battery_critical
0016 E0                MOVX    A,@DPTR
0017 4401              ORL     A,#01H
0019 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 604
001A 22                RET     
001B         ?C0077:
                                           ; SOURCE LINE # 605
001B 900000      E     MOV     DPTR,#nBattGasgauge
001E E0                MOVX    A,@DPTR
001F 6407              XRL     A,#07H
0021 7018              JNZ     ?C0080
                                           ; SOURCE LINE # 606
                                           ; SOURCE LINE # 607
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 75  

0023 900000      E     MOV     DPTR,#SYS_STATUS
0026 E0                MOVX    A,@DPTR
0027 20E709            JB      ACC.7,?C0081
002A 900000      E     MOV     DPTR,#battery_critical
002D E0                MOVX    A,@DPTR
002E 30E002            JNB     ACC.0,?C0081
                                           ; SOURCE LINE # 608
                                           ; SOURCE LINE # 609
                                           ; SOURCE LINE # 610
0031 803E              SJMP    ?C0519
0033         ?C0081:
                                           ; SOURCE LINE # 612
                                           ; SOURCE LINE # 613
0033 120000      R     LCALL   L?0655
                                           ; SOURCE LINE # 614
0036 E0                MOVX    A,@DPTR
0037 4404              ORL     A,#04H
0039 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 615
                                           ; SOURCE LINE # 616
003A 22                RET     
003B         ?C0080:
                                           ; SOURCE LINE # 617
003B 900000      E     MOV     DPTR,#nBattGasgauge
003E E0                MOVX    A,@DPTR
003F 6406              XRL     A,#06H
0041 7018              JNZ     ?C0084
                                           ; SOURCE LINE # 618
                                           ; SOURCE LINE # 619
0043 900000      E     MOV     DPTR,#SYS_STATUS
0046 E0                MOVX    A,@DPTR
0047 20E709            JB      ACC.7,?C0085
004A 900000      E     MOV     DPTR,#battery_critical
004D E0                MOVX    A,@DPTR
004E 30E202            JNB     ACC.2,?C0085
                                           ; SOURCE LINE # 620
                                           ; SOURCE LINE # 621
0051         ?C0518:
                                           ; SOURCE LINE # 622
0051 801E              SJMP    ?C0519
0053         ?C0085:
                                           ; SOURCE LINE # 624
                                           ; SOURCE LINE # 625
0053 120000      R     LCALL   L?0655
                                           ; SOURCE LINE # 626
0056 E0                MOVX    A,@DPTR
0057 4408              ORL     A,#08H
0059 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 627
                                           ; SOURCE LINE # 628
005A 22                RET     
005B         ?C0084:
                                           ; SOURCE LINE # 629
005B 900000      E     MOV     DPTR,#nBattGasgauge
005E E0                MOVX    A,@DPTR
005F 6405              XRL     A,#05H
0061 701C              JNZ     ?C0092
                                           ; SOURCE LINE # 630
                                           ; SOURCE LINE # 631
0063 900000      E     MOV     DPTR,#SYS_STATUS
0066 E0                MOVX    A,@DPTR
0067 20E70C            JB      ACC.7,?C0089
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 76  

006A 900000      E     MOV     DPTR,#battery_critical
006D E0                MOVX    A,@DPTR
006E 30E305            JNB     ACC.3,?C0089
                                           ; SOURCE LINE # 632
                                           ; SOURCE LINE # 633
0071         ?C0519:
0071 E0                MOVX    A,@DPTR
0072 4402              ORL     A,#02H
0074 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 634
0075 22                RET     
0076         ?C0089:
                                           ; SOURCE LINE # 636
                                           ; SOURCE LINE # 637
0076 120000      R     LCALL   L?0656
                                           ; SOURCE LINE # 638
                                           ; SOURCE LINE # 639
                                           ; SOURCE LINE # 641
0079 22                RET     
007A         ?C0076:
                                           ; SOURCE LINE # 643
                                           ; SOURCE LINE # 644
007A E4                CLR     A
007B 900000      E     MOV     DPTR,#battery_critical
007E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 645
                                           ; SOURCE LINE # 647
007F         ?C0092:
007F 22                RET     
             ; FUNCTION ChkS3DCRSOC (END)

             ; FUNCTION RSOC1Pto0P_ShutdownCheck (BEGIN)
                                           ; SOURCE LINE # 650
                                           ; SOURCE LINE # 651
                                           ; SOURCE LINE # 652
0000 900000      E     MOV     DPTR,#SYS_STATUS
0003 E0                MOVX    A,@DPTR
0004 20E715            JB      ACC.7,?C0094
0007 900000      E     MOV     DPTR,#GPDRB
000A E0                MOVX    A,@DPTR
000B 20E00E            JB      ACC.0,?C0094
000E 900000      E     MOV     DPTR,#nBattGasgauge
0011 E0                MOVX    A,@DPTR
0012 D3                SETB    C
0013 9401              SUBB    A,#01H
0015 5005              JNC     ?C0094
0017 120000      R     LCALL   L?0606
001A 6004              JZ      ?C0093
001C         ?C0094:
                                           ; SOURCE LINE # 653
                                           ; SOURCE LINE # 654
                                           ; SOURCE LINE # 655
001C 120000      R     LCALL   L?0667
                                           ; SOURCE LINE # 656
001F 22                RET     
0020         ?C0093:
                                           ; SOURCE LINE # 658
                                           ; SOURCE LINE # 659
0020 900000      E     MOV     DPTR,#nBattGasgauge
0023 E0                MOVX    A,@DPTR
0024 B40105            CJNE    A,#01H,?C0096
                                           ; SOURCE LINE # 660
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 77  

                                           ; SOURCE LINE # 661
0027 900000      E     MOV     DPTR,#RSOC1PTO0PSaveSpace
                                           ; SOURCE LINE # 662
002A 8031              SJMP    ?C0520
002C         ?C0096:
                                           ; SOURCE LINE # 663
002C 900000      E     MOV     DPTR,#nBattGasgauge
002F E0                MOVX    A,@DPTR
0030 7036              JNZ     ?C0101
0032 900000      E     MOV     DPTR,#RSOC1PTO0PSaveSpace
0035 E0                MOVX    A,@DPTR
0036 30E02F            JNB     ACC.0,?C0101
                                           ; SOURCE LINE # 664
                                           ; SOURCE LINE # 665
0039 900000      E     MOV     DPTR,#RSOC1PTO0PCount
003C E0                MOVX    A,@DPTR
003D C3                CLR     C
003E 941E              SUBB    A,#01EH
0040 4020              JC      ?C0099
                                           ; SOURCE LINE # 666
                                           ; SOURCE LINE # 667
0042 7F40              MOV     R7,#040H
0044 120000      E     LCALL   _ProcessSID
                                           ; SOURCE LINE # 669
0047 120000      R     LCALL   L?0657
                                           ; SOURCE LINE # 671
                                           ; SOURCE LINE # 672
004A 120000      R     LCALL   L?0667
                                           ; SOURCE LINE # 673
004D 900000      E     MOV     DPTR,#USB_Charger
0050 E0                MOVX    A,@DPTR
0051 4404              ORL     A,#04H
0053 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 674
                                           ; SOURCE LINE # 675
0054 120000      R     LCALL   L?0668
0057 120000      E     LCALL   _Delay1MS
                                           ; SOURCE LINE # 676
005A 900000      E     MOV     DPTR,#GPDRH
005D         ?C0520:
005D E0                MOVX    A,@DPTR
005E 4401              ORL     A,#01H
0060 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 677
0061 22                RET     
0062         ?C0099:
                                           ; SOURCE LINE # 679
                                           ; SOURCE LINE # 680
0062 900000      E     MOV     DPTR,#RSOC1PTO0PCount
0065 E0                MOVX    A,@DPTR
0066 04                INC     A
0067 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 681
                                           ; SOURCE LINE # 682
                                           ; SOURCE LINE # 683
                                           ; SOURCE LINE # 684
0068         ?C0101:
0068 22                RET     
             ; FUNCTION RSOC1Pto0P_ShutdownCheck (END)

             ; FUNCTION RSMRST_shutdown (BEGIN)
                                           ; SOURCE LINE # 686
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 78  

                                           ; SOURCE LINE # 688
                                           ; SOURCE LINE # 689
                                           ; SOURCE LINE # 690
0000 120000      R     LCALL   L?0668
0003 120000      E     LCALL   _Delay1MS
                                           ; SOURCE LINE # 691
0006 900000      E     MOV     DPTR,#GPDRH
0009 E0                MOVX    A,@DPTR
000A 4401              ORL     A,#01H
000C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 692
000D 900000      E     MOV     DPTR,#RSMshutdownCnt
0010 E0                MOVX    A,@DPTR
0011 04                INC     A
0012 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 693
0013 22                RET     
             ; FUNCTION RSMRST_shutdown (END)

             ; FUNCTION DownBatteryPState (BEGIN)
                                           ; SOURCE LINE # 695
                                           ; SOURCE LINE # 696
                                           ; SOURCE LINE # 697
0000 900000      E     MOV     DPTR,#cBATTThrottling
0003 E0                MOVX    A,@DPTR
0004 6012              JZ      ?C0104
0006 900000      E     MOV     DPTR,#BatteryAlarm
0009 E0                MOVX    A,@DPTR
000A 700C              JNZ     ?C0104
000C 900000      E     MOV     DPTR,#ADPIDON10MS_NUM
000F E0                MOVX    A,@DPTR
0010 7006              JNZ     ?C0104
                                           ; SOURCE LINE # 698
0012 900000      E     MOV     DPTR,#cBATTThrottling
0015 E0                MOVX    A,@DPTR
0016 14                DEC     A
0017 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 699
0018         ?C0104:
0018 22                RET     
             ; FUNCTION DownBatteryPState (END)

             ; FUNCTION UpBatteryPState (BEGIN)
                                           ; SOURCE LINE # 701
                                           ; SOURCE LINE # 702
                                           ; SOURCE LINE # 704
0000 900000      E     MOV     DPTR,#cBATTThrottling
0003 E0                MOVX    A,@DPTR
0004 640B              XRL     A,#0BH
0006 6003              JZ      ?C0106
                                           ; SOURCE LINE # 705
0008 E0                MOVX    A,@DPTR
0009 04                INC     A
000A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 706
000B         ?C0106:
000B 22                RET     
             ; FUNCTION UpBatteryPState (END)

             ; FUNCTION DownACtoBatteryGPUState (BEGIN)
                                           ; SOURCE LINE # 709
                                           ; SOURCE LINE # 710
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 79  

                                           ; SOURCE LINE # 713
0000 900000      E     MOV     DPTR,#cGPUACtoBattThrottling
0003 E0                MOVX    A,@DPTR
0004 6047              JZ      ?C0113
0006 900000      E     MOV     DPTR,#cGPUACtoBattTime
0009 E0                MOVX    A,@DPTR
000A 7041              JNZ     ?C0113
                                           ; SOURCE LINE # 714
                                           ; SOURCE LINE # 715
000C 900000      E     MOV     DPTR,#SYS_STATUS
000F E0                MOVX    A,@DPTR
0010 30E706            JNB     ACC.7,?C0108
                                           ; SOURCE LINE # 716
                                           ; SOURCE LINE # 717
0013 E4                CLR     A
0014 900000      E     MOV     DPTR,#cGPUACtoBattThrottling
0017 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 718
0018 22                RET     
0019         ?C0108:
                                           ; SOURCE LINE # 720
                                           ; SOURCE LINE # 721
0019 900000      E     MOV     DPTR,#cGPUACtoBattThrottling
001C E0                MOVX    A,@DPTR
001D 14                DEC     A
001E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 722
001F 900000      E     MOV     DPTR,#cGPUACtoBattTime
0022 7404              MOV     A,#04H
0024 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 724
0025 900000      E     MOV     DPTR,#nBattGasgauge
0028 E0                MOVX    A,@DPTR
0029 D3                SETB    C
002A 941E              SUBB    A,#01EH
002C 4009              JC      ?C0110
002E 900000      E     MOV     DPTR,#cGPUACtoBattThrottling
0031 E0                MOVX    A,@DPTR
0032 B40102            CJNE    A,#01H,?C0110
                                           ; SOURCE LINE # 725
                                           ; SOURCE LINE # 726
                                           ; SOURCE LINE # 727
                                           ; SOURCE LINE # 728
0035 8010              SJMP    ?C0521
0037         ?C0110:
                                           ; SOURCE LINE # 729
0037 900000      E     MOV     DPTR,#nBattGasgauge
003A E0                MOVX    A,@DPTR
003B D3                SETB    C
003C 941E              SUBB    A,#01EH
003E 500D              JNC     ?C0113
0040 900000      E     MOV     DPTR,#cGPUACtoBattThrottling
0043 E0                MOVX    A,@DPTR
0044 B40206            CJNE    A,#02H,?C0113
                                           ; SOURCE LINE # 730
                                           ; SOURCE LINE # 731
0047         ?C0521:
0047 E4                CLR     A
0048 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 732
0049 900000      E     MOV     DPTR,#cGPUACtoBattTime
004C F0                MOVX    @DPTR,A
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 80  

                                           ; SOURCE LINE # 733
                                           ; SOURCE LINE # 735
                                           ; SOURCE LINE # 736
                                           ; SOURCE LINE # 778
004D         ?C0113:
004D 22                RET     
             ; FUNCTION DownACtoBatteryGPUState (END)

             ; FUNCTION CPUProchotCtrl (BEGIN)
                                           ; SOURCE LINE # 782
                                           ; SOURCE LINE # 783
                                           ; SOURCE LINE # 784
0000 900000      E     MOV     DPTR,#Thro_Status
0003 E0                MOVX    A,@DPTR
0004 54C7              ANL     A,#0C7H
0006 7039              JNZ     ?C0114
0008 900000      E     MOV     DPTR,#Thro_Status2
000B E0                MOVX    A,@DPTR
000C 54EC              ANL     A,#0ECH
000E 7031              JNZ     ?C0114
0010 900000      E     MOV     DPTR,#LENOVOBATT2
0013 E0                MOVX    A,@DPTR
0014 20E02A            JB      ACC.0,?C0114
0017 900000      E     MOV     DPTR,#Thro_Status4
001A E0                MOVX    A,@DPTR
001B 20E023            JB      ACC.0,?C0114
001E 900000      E     MOV     DPTR,#nBatteryStatH
0021 E0                MOVX    A,@DPTR
0022 20E21C            JB      ACC.2,?C0114
0025 900000      E     MOV     DPTR,#CPUProchotONCnt
0028 E0                MOVX    A,@DPTR
0029 7016              JNZ     ?C0114
                                           ; SOURCE LINE # 789
                                           ; SOURCE LINE # 790
002B 900000      E     MOV     DPTR,#GPDRJ
002E E0                MOVX    A,@DPTR
002F 54EF              ANL     A,#0EFH
0031 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 791
0032 900000      E     MOV     DPTR,#REAL_THROTTLING_INDEX
0035 E0                MOVX    A,@DPTR
0036 547F              ANL     A,#07FH
0038 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 792
0039 900000      E     MOV     DPTR,#pPROCHOT
003C E0                MOVX    A,@DPTR
003D 54FE              ANL     A,#0FEH
003F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 793
0040 22                RET     
0041         ?C0114:
                                           ; SOURCE LINE # 795
                                           ; SOURCE LINE # 796
0041 900000      E     MOV     DPTR,#GPDRJ
0044 E0                MOVX    A,@DPTR
0045 4410              ORL     A,#010H
0047 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 797
0048 900000      E     MOV     DPTR,#REAL_THROTTLING_INDEX
004B E0                MOVX    A,@DPTR
004C 4480              ORL     A,#080H
004E F0                MOVX    @DPTR,A
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 81  

                                           ; SOURCE LINE # 798
004F 900000      E     MOV     DPTR,#pPROCHOT
0052 E0                MOVX    A,@DPTR
0053 4401              ORL     A,#01H
0055 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 799
                                           ; SOURCE LINE # 800
0056         ?C0116:
0056 22                RET     
             ; FUNCTION CPUProchotCtrl (END)

             ; FUNCTION ChkBattery_LTP (BEGIN)
                                           ; SOURCE LINE # 820
                                           ; SOURCE LINE # 821
                                           ; SOURCE LINE # 822
0000 120000      R     LCALL   L?0606
0003 6003              JZ      $ + 5H
0005 020000      R     LJMP    ?C0117
0008 900000      E     MOV     DPTR,#GPDRB
000B E0                MOVX    A,@DPTR
000C 30E003            JNB     ACC.0,?C0118
000F D3                SETB    C
0010 8001              SJMP    ?C0119
0012         ?C0118:
0012 C3                CLR     C
0013         ?C0119:
0013 5003              JNC     $ + 5H
0015 020000      R     LJMP    ?C0117
                                           ; SOURCE LINE # 823
                                           ; SOURCE LINE # 824
0018 900000      E     MOV     DPTR,#nBattAverTemp
001B E0                MOVX    A,@DPTR
001C D3                SETB    C
001D 9405              SUBB    A,#05H
001F 5019              JNC     ?C0120
                                           ; SOURCE LINE # 825
                                           ; SOURCE LINE # 826
0021 900000      E     MOV     DPTR,#cGPUBattLTPThrottling
0024 7404              MOV     A,#04H
0026 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 827
0027 900000      E     MOV     DPTR,#DisCPUTurboForLTP
002A 74FF              MOV     A,#0FFH
002C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 828
002D 900000      E     MOV     DPTR,#Thro_Status2
0030 E0                MOVX    A,@DPTR
0031 4404              ORL     A,#04H
0033 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 829
0034 900000      E     MOV     DPTR,#GPU_Prochot
0037 E0                MOVX    A,@DPTR
                                           ; SOURCE LINE # 830
0038 8028              SJMP    ?C0522
003A         ?C0120:
                                           ; SOURCE LINE # 831
003A 900000      E     MOV     DPTR,#nBattAverTemp
003D E0                MOVX    A,@DPTR
003E D3                SETB    C
003F 940A              SUBB    A,#0AH
0041 5029              JNC     ?C0122
                                           ; SOURCE LINE # 832
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 82  

                                           ; SOURCE LINE # 833
0043 E0                MOVX    A,@DPTR
0044 9406              SUBB    A,#06H
0046 4007              JC      ?C0123
                                           ; SOURCE LINE # 834
                                           ; SOURCE LINE # 835
0048 900000      E     MOV     DPTR,#Thro_Status2
004B E0                MOVX    A,@DPTR
004C 54FB              ANL     A,#0FBH
004E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 836
004F         ?C0123:
                                           ; SOURCE LINE # 837
                                           ; SOURCE LINE # 838
004F 120000      R     LCALL   L?0640
                                           ; SOURCE LINE # 839
0052 D3                SETB    C
0053 900000      E     MOV     DPTR,#Psys_AvgData+01H
0056 E0                MOVX    A,@DPTR
0057 9455              SUBB    A,#055H
0059 120000      R     LCALL   L?0593
005C 900000      E     MOV     DPTR,#GPU_Prochot
005F E0                MOVX    A,@DPTR
0060 4005              JC      ?C0124
                                           ; SOURCE LINE # 840
                                           ; SOURCE LINE # 841
0062         ?C0522:
0062 4404              ORL     A,#04H
0064 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 842
0065 802C              SJMP    ?C0121
0067         ?C0124:
                                           ; SOURCE LINE # 844
                                           ; SOURCE LINE # 845
0067 54FB              ANL     A,#0FBH
0069 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 846
                                           ; SOURCE LINE # 847
006A 8027              SJMP    ?C0121
006C         ?C0122:
                                           ; SOURCE LINE # 848
006C 900000      E     MOV     DPTR,#nBattAverTemp
006F E0                MOVX    A,@DPTR
0070 D3                SETB    C
0071 9414              SUBB    A,#014H
0073 5008              JNC     ?C0127
                                           ; SOURCE LINE # 849
                                           ; SOURCE LINE # 850
                                           ; SOURCE LINE # 851
0075 120000      R     LCALL   L?0594
                                           ; SOURCE LINE # 852
                                           ; SOURCE LINE # 853
0078 120000      R     LCALL   L?0640
                                           ; SOURCE LINE # 854
007B 8016              SJMP    ?C0121
007D         ?C0127:
                                           ; SOURCE LINE # 856
                                           ; SOURCE LINE # 857
                                           ; SOURCE LINE # 858
007D 120000      R     LCALL   L?0594
                                           ; SOURCE LINE # 859
0080 E4                CLR     A
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 83  

0081 900000      E     MOV     DPTR,#cGPUBattLTPThrottling
0084 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 860
0085 900000      E     MOV     DPTR,#nBattAverTemp
0088 E0                MOVX    A,@DPTR
0089 D3                SETB    C
008A 9415              SUBB    A,#015H
008C 4005              JC      ?C0121
                                           ; SOURCE LINE # 861
                                           ; SOURCE LINE # 862
008E E4                CLR     A
008F 900000      E     MOV     DPTR,#DisCPUTurboForLTP
0092 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 863
                                           ; SOURCE LINE # 864
0093         ?C0121:
                                           ; SOURCE LINE # 866
0093 900000      E     MOV     DPTR,#nBattAverTemp
0096 E0                MOVX    A,@DPTR
0097 D3                SETB    C
0098 9414              SUBB    A,#014H
009A 900000      E     MOV     DPTR,#CHGIC_ReadCmd0x3DL
009D 7439              MOV     A,#039H
009F 501A              JNC     ?C0523
                                           ; SOURCE LINE # 867
                                           ; SOURCE LINE # 868
00A1 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 869
00A2 900000      E     MOV     DPTR,#CHGIC_ReadCmd0x3DH
00A5 7425              MOV     A,#025H
00A7 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 870
00A8 8018              SJMP    ?C0132
00AA         ?C0117:
                                           ; SOURCE LINE # 879
                                           ; SOURCE LINE # 880
00AA E4                CLR     A
00AB 900000      E     MOV     DPTR,#DisCPUTurboForLTP
00AE F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 881
00AF 900000      E     MOV     DPTR,#cGPUBattLTPThrottling
00B2 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 882
                                           ; SOURCE LINE # 883
00B3 120000      R     LCALL   L?0595
                                           ; SOURCE LINE # 884
00B6 900000      E     MOV     DPTR,#CHGIC_ReadCmd0x3DL
00B9 7439              MOV     A,#039H
00BB         ?C0523:
00BB F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 885
00BC 900000      E     MOV     DPTR,#CHGIC_ReadCmd0x3DH
00BF 7451              MOV     A,#051H
00C1 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 886
00C2         ?C0132:
                                           ; SOURCE LINE # 888
00C2 900000      E     MOV     DPTR,#CHGIC_ReadCmd0x3DH_Temp
00C5 E0                MOVX    A,@DPTR
00C6 FF                MOV     R7,A
00C7 900000      E     MOV     DPTR,#CHGIC_ReadCmd0x3DH
00CA E0                MOVX    A,@DPTR
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 84  

00CB 6F                XRL     A,R7
00CC 6019              JZ      ?C0135
                                           ; SOURCE LINE # 889
                                           ; SOURCE LINE # 890
00CE 120000      R     LCALL   L?0641
00D1 7400        E     MOV     A,#LOW CHGIC_ReadCmd0x3DL
00D3 120000      R     LCALL   L?0582
00D6 120000      E     LCALL   _bRWSMBus
00D9 EF                MOV     A,R7
00DA 7003              JNZ     ?C0134
                                           ; SOURCE LINE # 891
                                           ; SOURCE LINE # 892
00DC 120000      R     LCALL   L?0608
                                           ; SOURCE LINE # 893
00DF         ?C0134:
                                           ; SOURCE LINE # 894
00DF 900000      E     MOV     DPTR,#CHGIC_ReadCmd0x3DH
00E2 E0                MOVX    A,@DPTR
00E3 900000      E     MOV     DPTR,#CHGIC_ReadCmd0x3DH_Temp
00E6 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 895
                                           ; SOURCE LINE # 896
00E7         ?C0135:
00E7 22                RET     
             ; FUNCTION ChkBattery_LTP (END)

             ; FUNCTION ChkBattery_OTP (BEGIN)
                                           ; SOURCE LINE # 900
                                           ; SOURCE LINE # 901
                                           ; SOURCE LINE # 903
0000 900000      E     MOV     DPTR,#EC_oCBTh
0003 E0                MOVX    A,@DPTR
0004 900000      E     MOV     DPTR,#EC_oCBTl
                                           ; SOURCE LINE # 904
0007 120000      R     LCALL   L?0635
000A E500        E     MOV     A,ITempW01+01H
000C 94AA              SUBB    A,#0AAH
000E E500        E     MOV     A,ITempW01
0010 940A              SUBB    A,#0AH
0012 5003              JNC     $ + 5H
0014 020000      R     LJMP    ?C0138
                                           ; SOURCE LINE # 905
                                           ; SOURCE LINE # 906
0017 E500        E     MOV     A,ITempW01+01H
0019 2456              ADD     A,#056H
001B FF                MOV     R7,A
001C E500        E     MOV     A,ITempW01
001E 34F5              ADDC    A,#0F5H
0020 FE                MOV     R6,A
0021 7D0A              MOV     R5,#0AH
0023 120000      E     LCALL   ?C?UIDIV
0026 900000      E     MOV     DPTR,#nBattAverTemp
0029 EF                MOV     A,R7
002A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 907
                                           ; SOURCE LINE # 909
                                           ; SOURCE LINE # 911
002B         ?C0137:
                                           ; SOURCE LINE # 914
002B 900000      E     MOV     DPTR,#SysPowState
002E E0                MOVX    A,@DPTR
002F B41118            CJNE    A,#011H,?C0139
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 85  

0032 900000      E     MOV     DPTR,#BatteryOTPShutdown
0035 E0                MOVX    A,@DPTR
0036 FF                MOV     R7,A
0037 900000      E     MOV     DPTR,#nBattAverTemp
003A E0                MOVX    A,@DPTR
003B C3                CLR     C
003C 9F                SUBB    A,R7
003D 400B              JC      ?C0139
                                           ; SOURCE LINE # 915
                                           ; SOURCE LINE # 917
003F 120000      R     LCALL   L?0657
                                           ; SOURCE LINE # 918
0042 7F0A              MOV     R7,#0AH
0044 120000      E     LCALL   _ProcessSID
                                           ; SOURCE LINE # 919
0047 120000      R     LCALL   RSMRST_shutdown
                                           ; SOURCE LINE # 921
004A         ?C0139:
                                           ; SOURCE LINE # 925
004A 120000      R     LCALL   L?0607
004D 6003              JZ      $ + 5H
004F 020000      R     LJMP    ?C0140
0052 900000      E     MOV     DPTR,#nBatteryStatH
0055 E0                MOVX    A,@DPTR
0056 20E003            JB      ACC.0,$ + 6H
0059 020000      R     LJMP    ?C0140
                                           ; SOURCE LINE # 926
                                           ; SOURCE LINE # 939
005C 120000      R     LCALL   L?0597
005F 4008              JC      ?C0143
0061 900000      E     MOV     DPTR,#nBattAverTemp
0064 E0                MOVX    A,@DPTR
0065 9437              SUBB    A,#037H
0067 500E              JNC     ?C0142
0069         ?C0143:
0069 120000      R     LCALL   L?0597
006C 5050              JNC     ?C0141
006E 900000      E     MOV     DPTR,#nBattAverTemp
0071 E0                MOVX    A,@DPTR
0072 C3                CLR     C
0073 9430              SUBB    A,#030H
0075 4047              JC      ?C0141
0077         ?C0142:
                                           ; SOURCE LINE # 940
                                           ; SOURCE LINE # 941
0077 900000      E     MOV     DPTR,#nStopChgStat3L
007A E0                MOVX    A,@DPTR
007B 4480              ORL     A,#080H
007D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 942
007E 900000      E     MOV     DPTR,#BatteryAlarm
0081 E0                MOVX    A,@DPTR
0082 4402              ORL     A,#02H
0084 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 950
0085 900000      E     MOV     DPTR,#Thro_Status2
0088 E0                MOVX    A,@DPTR
0089 4408              ORL     A,#08H
008B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 952
008C 900000      E     MOV     DPTR,#uPJID
008F E0                MOVX    A,@DPTR
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 86  

0090 B40222            CJNE    A,#02H,?C0144
                                           ; SOURCE LINE # 953
                                           ; SOURCE LINE # 954
0093 900000      E     MOV     DPTR,#cGPUBattOTPThrottling
0096 7404              MOV     A,#04H
0098 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 956
0099 900000      R     MOV     DPTR,#Delay2sCount
009C E0                MOVX    A,@DPTR
009D C3                CLR     C
009E 9414              SUBB    A,#014H
00A0 5005              JNC     ?C0145
                                           ; SOURCE LINE # 957
                                           ; SOURCE LINE # 958
00A2 E0                MOVX    A,@DPTR
00A3 04                INC     A
00A4 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 959
00A5 8042              SJMP    ?C0148
00A7         ?C0145:
                                           ; SOURCE LINE # 961
                                           ; SOURCE LINE # 962
00A7 900000      E     MOV     DPTR,#GPU_Prochot
00AA E0                MOVX    A,@DPTR
00AB 4408              ORL     A,#08H
00AD F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 963
00AE E4                CLR     A
00AF 900000      R     MOV     DPTR,#Delay2sCount
00B2 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 964
                                           ; SOURCE LINE # 966
00B3 8034              SJMP    ?C0148
00B5         ?C0144:
                                           ; SOURCE LINE # 968
                                           ; SOURCE LINE # 969
00B5 900000      E     MOV     DPTR,#GPU_Prochot
00B8 E0                MOVX    A,@DPTR
00B9 4408              ORL     A,#08H
00BB F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 970
                                           ; SOURCE LINE # 986
00BC 802B              SJMP    ?C0148
00BE         ?C0141:
                                           ; SOURCE LINE # 988
00BE 120000      R     LCALL   L?0598
00C1 4008              JC      ?C0151
00C3 900000      E     MOV     DPTR,#nBattAverTemp
00C6 E0                MOVX    A,@DPTR
00C7 9435              SUBB    A,#035H
00C9 400E              JC      ?C0150
00CB         ?C0151:
00CB 120000      R     LCALL   L?0598
00CE 5019              JNC     ?C0148
00D0 900000      E     MOV     DPTR,#nBattAverTemp
00D3 E0                MOVX    A,@DPTR
00D4 C3                CLR     C
00D5 942E              SUBB    A,#02EH
00D7 5010              JNC     ?C0148
00D9         ?C0150:
                                           ; SOURCE LINE # 989
                                           ; SOURCE LINE # 990
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 87  

                                           ; SOURCE LINE # 991
00D9 120000      R     LCALL   L?0631
                                           ; SOURCE LINE # 995
                                           ; SOURCE LINE # 996
00DC 120000      R     LCALL   L?0642
00DF 54F7              ANL     A,#0F7H
00E1 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 998
00E2 900000      E     MOV     DPTR,#Thro_Status2
00E5 E0                MOVX    A,@DPTR
00E6 54F7              ANL     A,#0F7H
00E8 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1001
00E9         ?C0148:
                                           ; SOURCE LINE # 1004
00E9 120000      R     LCALL   L?0598
00EC 501B              JNC     ?C0152
                                           ; SOURCE LINE # 1005
                                           ; SOURCE LINE # 1006
00EE 900000      E     MOV     DPTR,#nBattAverTemp
00F1 E0                MOVX    A,@DPTR
00F2 9430              SUBB    A,#030H
00F4 4008              JC      ?C0153
                                           ; SOURCE LINE # 1007
                                           ; SOURCE LINE # 1008
00F6 900000      E     MOV     DPTR,#Fan_full_status
00F9 E0                MOVX    A,@DPTR
00FA 4401              ORL     A,#01H
00FC F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1009
00FD 22                RET     
00FE         ?C0153:
                                           ; SOURCE LINE # 1010
00FE 900000      E     MOV     DPTR,#nBattAverTemp
0101 E0                MOVX    A,@DPTR
0102 C3                CLR     C
0103 942E              SUBB    A,#02EH
0105 501B              JNC     ?C0138
                                           ; SOURCE LINE # 1011
                                           ; SOURCE LINE # 1012
                                           ; SOURCE LINE # 1013
                                           ; SOURCE LINE # 1014
0107 8012              SJMP    ?C0525
0109         ?C0152:
                                           ; SOURCE LINE # 1016
                                           ; SOURCE LINE # 1017
0109         ?C0524:
                                           ; SOURCE LINE # 1018
                                           ; SOURCE LINE # 1021
0109 8010              SJMP    ?C0525
010B         ?C0140:
                                           ; SOURCE LINE # 1023
                                           ; SOURCE LINE # 1024
                                           ; SOURCE LINE # 1025
010B 120000      R     LCALL   L?0631
                                           ; SOURCE LINE # 1026
010E 900000      E     MOV     DPTR,#Thro_Status2
0111 E0                MOVX    A,@DPTR
0112 54F7              ANL     A,#0F7H
0114 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1027
                                           ; SOURCE LINE # 1028
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 88  

0115 120000      R     LCALL   L?0642
0118 54F7              ANL     A,#0F7H
011A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1029
011B         ?C0525:
011B 900000      E     MOV     DPTR,#Fan_full_status
011E E0                MOVX    A,@DPTR
011F 54FE              ANL     A,#0FEH
0121 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1032
                                           ; SOURCE LINE # 1033
0122         ?C0138:
0122 22                RET     
             ; FUNCTION ChkBattery_OTP (END)

             ; FUNCTION ChkBattery_OverConsumption (BEGIN)
                                           ; SOURCE LINE # 1039
                                           ; SOURCE LINE # 1040
                                           ; SOURCE LINE # 1045
0000 900000      E     MOV     DPTR,#GPDRB
0003 E0                MOVX    A,@DPTR
0004 30E003            JNB     ACC.0,?C0160
0007 D3                SETB    C
0008 8001              SJMP    ?C0161
000A         ?C0160:
000A C3                CLR     C
000B         ?C0161:
000B 500A              JNC     ?C0159
000D 900000      E     MOV     DPTR,#CHGIC_ReadCmd0x12L
0010 E0                MOVX    A,@DPTR
0011 20E503            JB      ACC.5,$ + 6H
0014 020000      R     LJMP    ?C0158
0017         ?C0159:
                                           ; SOURCE LINE # 1046
                                           ; SOURCE LINE # 1047
0017 900000      E     MOV     DPTR,#nNowCurrentH
001A E0                MOVX    A,@DPTR
001B 20E703            JB      ACC.7,$ + 6H
001E 020000      R     LJMP    ?C0175
                                           ; SOURCE LINE # 1048
                                           ; SOURCE LINE # 1049
0021 E0                MOVX    A,@DPTR
0022 900000      E     MOV     DPTR,#nNowCurrentL
0025 120000      R     LCALL   L?0577
0028 900000      R     MOV     DPTR,#BattNowCurrent+01H
002B 120000      R     LCALL   L?0611
002E 900000      R     MOV     DPTR,#BattNowCurrent
0031 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1050
0032 900000      E     MOV     DPTR,#nPresentVoltH
0035 E0                MOVX    A,@DPTR
0036 FE                MOV     R6,A
0037 900000      E     MOV     DPTR,#nPresentVoltL
003A E0                MOVX    A,@DPTR
003B 900000      R     MOV     DPTR,#BattPresentVolt
003E 120000      R     LCALL   L?0599
                                           ; SOURCE LINE # 1051
0041 900000      R     MOV     DPTR,#BattNowCurrent
0044 120000      R     LCALL   L?0586
0047 EC                MOV     A,R4
0048 C0E0              PUSH    ACC
004A ED                MOV     A,R5
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 89  

004B C0E0              PUSH    ACC
004D EE                MOV     A,R6
004E C0E0              PUSH    ACC
0050 EF                MOV     A,R7
0051 C0E0              PUSH    ACC
0053 900000      R     MOV     DPTR,#BattPresentVolt
0056 120000      R     LCALL   L?0586
0059 D0E0              POP     ACC
005B FB                MOV     R3,A
005C D0E0              POP     ACC
005E FA                MOV     R2,A
005F D0E0              POP     ACC
0061 F9                MOV     R1,A
0062 D0E0              POP     ACC
0064 F8                MOV     R0,A
0065 120000      E     LCALL   ?C?FPMUL
0068 120000      E     LCALL   ?C?CASTF
006B 900000      R     MOV     DPTR,#Power_Temp
006E EF                MOV     A,R7
006F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1052
0070 E0                MOVX    A,@DPTR
0071 FF                MOV     R7,A
0072 E4                CLR     A
0073 FC                MOV     R4,A
0074 FD                MOV     R5,A
0075 FE                MOV     R6,A
0076 7B40              MOV     R3,#040H
0078 7A42              MOV     R2,#042H
007A 790F              MOV     R1,#0FH
007C F8                MOV     R0,A
007D 120000      E     LCALL   ?C?LMUL
0080 EC                MOV     A,R4
0081 120000      E     LCALL   ?C?FCASTL
0084 7B18              MOV     R3,#018H
0086 7A0D              MOV     R2,#0DH
0088 798F              MOV     R1,#08FH
008A 7848              MOV     R0,#048H
008C 120000      E     LCALL   ?C?FPDIV
008F 120000      E     LCALL   ?C?CASTF
0092 900000      E     MOV     DPTR,#Chk_Hybrid_STPP_Batt_Output_Power
0095 EE                MOV     A,R6
0096 F0                MOVX    @DPTR,A
0097 A3                INC     DPTR
0098 EF                MOV     A,R7
0099 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1053
009A 900000      E     MOV     DPTR,#nNowCurrentH
009D E0                MOVX    A,@DPTR
009E FE                MOV     R6,A
009F 900000      E     MOV     DPTR,#nNowCurrentL
00A2 120000      R     LCALL   L?0578
00A5 120000      R     LCALL   L?0610
00A8 900000      E     MOV     DPTR,#XWTemp1
00AB F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1056
00AC 900000      R     MOV     DPTR,#Power_Temp
00AF E0                MOVX    A,@DPTR
00B0 FD                MOV     R5,A
00B1 C3                CLR     C
00B2 9420              SUBB    A,#020H
00B4 400E              JC      ?C0163
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 90  

                                           ; SOURCE LINE # 1057
                                           ; SOURCE LINE # 1058
00B6 900000      E     MOV     DPTR,#cGPUBattThrottling
00B9 7404              MOV     A,#04H
00BB F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1059
00BC 900000      E     MOV     DPTR,#Thro_Status
00BF E0                MOVX    A,@DPTR
00C0 4480              ORL     A,#080H
00C2 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1060
00C3 22                RET     
00C4         ?C0163:
                                           ; SOURCE LINE # 1062
00C4 ED                MOV     A,R5
00C5 C3                CLR     C
00C6 9420              SUBB    A,#020H
00C8 5029              JNC     ?C0165
00CA 900000      R     MOV     DPTR,#Power_Temp
00CD E0                MOVX    A,@DPTR
00CE C3                CLR     C
00CF 9419              SUBB    A,#019H
00D1 4020              JC      ?C0165
                                           ; SOURCE LINE # 1063
                                           ; SOURCE LINE # 1065
00D3 900000      E     MOV     DPTR,#pProject0
00D6 E0                MOVX    A,@DPTR
00D7 900000      E     MOV     DPTR,#cGPUBattThrottling
00DA 30E70B            JNB     ACC.7,?C0166
                                           ; SOURCE LINE # 1066
                                           ; SOURCE LINE # 1067
00DD 7402              MOV     A,#02H
00DF F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1068
00E0 900000      E     MOV     DPTR,#cBATTThrottling
00E3 7409              MOV     A,#09H
00E5 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1069
00E6 8044              SJMP    ?C0529
00E8         ?C0166:
                                           ; SOURCE LINE # 1071
                                           ; SOURCE LINE # 1072
00E8 7403              MOV     A,#03H
00EA F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1073
00EB 900000      E     MOV     DPTR,#cBATTThrottling
00EE 7407              MOV     A,#07H
00F0 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1074
00F1         ?C0167:
                                           ; SOURCE LINE # 1075
                                           ; SOURCE LINE # 1077
00F1 8039              SJMP    ?C0529
00F3         ?C0165:
                                           ; SOURCE LINE # 1078
00F3 900000      R     MOV     DPTR,#Power_Temp
00F6 E0                MOVX    A,@DPTR
00F7 FF                MOV     R7,A
00F8 C3                CLR     C
00F9 9419              SUBB    A,#019H
00FB 501E              JNC     ?C0169
00FD EF                MOV     A,R7
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 91  

00FE C3                CLR     C
00FF 9414              SUBB    A,#014H
0101 4018              JC      ?C0169
                                           ; SOURCE LINE # 1079
                                           ; SOURCE LINE # 1081
0103 900000      E     MOV     DPTR,#pProject0
0106 E0                MOVX    A,@DPTR
0107 900000      E     MOV     DPTR,#cGPUBattThrottling
010A 30E704            JNB     ACC.7,?C0170
                                           ; SOURCE LINE # 1082
                                           ; SOURCE LINE # 1083
010D 7401              MOV     A,#01H
                                           ; SOURCE LINE # 1084
                                           ; SOURCE LINE # 1085
010F 8002              SJMP    ?C0526
0111         ?C0170:
                                           ; SOURCE LINE # 1087
                                           ; SOURCE LINE # 1088
0111 7402              MOV     A,#02H
0113         ?C0526:
0113 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1089
0114 E4                CLR     A
0115 900000      E     MOV     DPTR,#cBATTThrottling
0118 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1090
0119         ?C0171:
                                           ; SOURCE LINE # 1091
0119         ?C0527:
                                           ; SOURCE LINE # 1093
0119 8011              SJMP    ?C0529
011B         ?C0169:
                                           ; SOURCE LINE # 1095
011B 900000      R     MOV     DPTR,#Power_Temp
011E E0                MOVX    A,@DPTR
011F C3                CLR     C
0120 9414              SUBB    A,#014H
0122 500F              JNC     ?C0175
                                           ; SOURCE LINE # 1096
                                           ; SOURCE LINE # 1097
                                           ; SOURCE LINE # 1098
0124 120000      R     LCALL   L?0669
                                           ; SOURCE LINE # 1099
0127         ?C0528:
                                           ; SOURCE LINE # 1100
                                           ; SOURCE LINE # 1101
                                           ; SOURCE LINE # 1102
0127 8003              SJMP    ?C0529
0129         ?C0158:
                                           ; SOURCE LINE # 1104
                                           ; SOURCE LINE # 1105
                                           ; SOURCE LINE # 1106
0129 120000      R     LCALL   L?0669
                                           ; SOURCE LINE # 1107
012C         ?C0529:
012C 900000      E     MOV     DPTR,#Thro_Status
012F E0                MOVX    A,@DPTR
0130 547F              ANL     A,#07FH
0132 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1108
                                           ; SOURCE LINE # 1109
0133         ?C0175:
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 92  

0133 22                RET     
             ; FUNCTION ChkBattery_OverConsumption (END)

             ; FUNCTION ChkBattery_OCP (BEGIN)
                                           ; SOURCE LINE # 1113
                                           ; SOURCE LINE # 1114
                                           ; SOURCE LINE # 1171
0000 22                RET     
             ; FUNCTION ChkBattery_OCP (END)

             ; FUNCTION ChkBattery_LowVoltage (BEGIN)
                                           ; SOURCE LINE # 1174
                                           ; SOURCE LINE # 1175
                                           ; SOURCE LINE # 1178
0000 900000      E     MOV     DPTR,#GPDRB
0003 E0                MOVX    A,@DPTR
0004 30E003            JNB     ACC.0,?C0178
0007 D3                SETB    C
0008 8001              SJMP    ?C0179
000A         ?C0178:
000A C3                CLR     C
000B         ?C0179:
000B 5003              JNC     $ + 5H
000D 020000      R     LJMP    ?C0177
                                           ; SOURCE LINE # 1179
                                           ; SOURCE LINE # 1180
0010 900000      E     MOV     DPTR,#nNowCurrentH
0013 E0                MOVX    A,@DPTR
0014 20E703            JB      ACC.7,$ + 6H
0017 020000      R     LJMP    ?C0192
                                           ; SOURCE LINE # 1181
                                           ; SOURCE LINE # 1182
001A 900000      E     MOV     DPTR,#?_bRSMBusBlock?BYTE+03H
001D 7423              MOV     A,#023H
001F F0                MOVX    @DPTR,A
0020 7E00        E     MOV     R6,#HIGH BAT1_MD_1
0022 A3                INC     DPTR
0023 7400        E     MOV     A,#HIGH BAT1_MD_1
0025 F0                MOVX    @DPTR,A
0026 7400        E     MOV     A,#LOW BAT1_MD_1
0028 120000      R     LCALL   L?0644
002B 120000      E     LCALL   _bRSMBusBlock
002E EF                MOV     A,R7
002F 7003              JNZ     $ + 5H
0031 020000      R     LJMP    ?C0192
                                           ; SOURCE LINE # 1183
                                           ; SOURCE LINE # 1185
0034 900000      E     MOV     DPTR,#BAT1_MD_6
0037 E0                MOVX    A,@DPTR
0038 FE                MOV     R6,A
0039 900000      E     MOV     DPTR,#BAT1_MD_5
003C 120000      R     LCALL   L?0578
003F 900000      R     MOV     DPTR,#CV4
0042 F0                MOVX    @DPTR,A
0043 A3                INC     DPTR
0044 EF                MOV     A,R7
0045 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1186
0046 900000      E     MOV     DPTR,#BAT1_MD_8
0049 E0                MOVX    A,@DPTR
004A FE                MOV     R6,A
004B 900000      E     MOV     DPTR,#BAT1_MD_7
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 93  

004E E0                MOVX    A,@DPTR
004F 900000      R     MOV     DPTR,#CV3
0052 120000      R     LCALL   L?0599
                                           ; SOURCE LINE # 1187
0055 900000      E     MOV     DPTR,#BAT1_MD_A
0058 E0                MOVX    A,@DPTR
0059 FE                MOV     R6,A
005A 900000      E     MOV     DPTR,#BAT1_MD_9
005D E0                MOVX    A,@DPTR
005E 900000      R     MOV     DPTR,#CV2
0061 120000      R     LCALL   L?0670
                                           ; SOURCE LINE # 1188
0064 900000      E     MOV     DPTR,#BAT1_MD_C
0067 E0                MOVX    A,@DPTR
0068 FE                MOV     R6,A
0069 900000      E     MOV     DPTR,#BAT1_MD_B
006C E0                MOVX    A,@DPTR
006D 900000      R     MOV     DPTR,#CV1
0070 120000      R     LCALL   L?0670
                                           ; SOURCE LINE # 1191
0073 120000      R     LCALL   L?0636
0076 401E              JC      ?C0183
0078 120000      R     LCALL   L?0646
007B 4019              JC      ?C0183
007D 900000      E     MOV     DPTR,#CellCount
0080 E0                MOVX    A,@DPTR
0081 9403              SUBB    A,#03H
0083 4005              JC      ?C0184
0085 120000      R     LCALL   L?0647
0088 400C              JC      ?C0183
008A         ?C0184:
008A 900000      E     MOV     DPTR,#CellCount
008D E0                MOVX    A,@DPTR
008E B4041A            CJNE    A,#04H,?C0182
0091 120000      R     LCALL   L?0637
0094 5015              JNC     ?C0182
0096         ?C0183:
                                           ; SOURCE LINE # 1192
                                           ; SOURCE LINE # 1193
0096 900000      E     MOV     DPTR,#SysPowState
0099 E0                MOVX    A,@DPTR
009A B41115            CJNE    A,#011H,?C0186
                                           ; SOURCE LINE # 1194
                                           ; SOURCE LINE # 1195
009D 7FB1              MOV     R7,#0B1H
009F 120000      E     LCALL   _RamDebug
                                           ; SOURCE LINE # 1197
00A2 900000      E     MOV     DPTR,#nBatteryStatH
00A5 E0                MOVX    A,@DPTR
00A6 4404              ORL     A,#04H
00A8 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1198
                                           ; SOURCE LINE # 1199
00A9 8007              SJMP    ?C0186
00AB         ?C0182:
                                           ; SOURCE LINE # 1201
                                           ; SOURCE LINE # 1202
00AB 900000      E     MOV     DPTR,#nBatteryStatH
00AE E0                MOVX    A,@DPTR
00AF 54FB              ANL     A,#0FBH
00B1 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1203
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 94  

00B2         ?C0186:
                                           ; SOURCE LINE # 1207
00B2 120000      R     LCALL   L?0636
00B5 401E              JC      ?C0188
00B7 120000      R     LCALL   L?0646
00BA 4019              JC      ?C0188
00BC 900000      E     MOV     DPTR,#CellCount
00BF E0                MOVX    A,@DPTR
00C0 9403              SUBB    A,#03H
00C2 4005              JC      ?C0189
00C4 120000      R     LCALL   L?0647
00C7 400C              JC      ?C0188
00C9         ?C0189:
00C9 900000      E     MOV     DPTR,#CellCount
00CC E0                MOVX    A,@DPTR
00CD B4040D            CJNE    A,#04H,?C0187
00D0 120000      R     LCALL   L?0637
00D3 5008              JNC     ?C0187
00D5         ?C0188:
                                           ; SOURCE LINE # 1208
                                           ; SOURCE LINE # 1209
00D5 900000      E     MOV     DPTR,#BatteryAlarm
00D8 E0                MOVX    A,@DPTR
00D9 4420              ORL     A,#020H
00DB F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1211
00DC 22                RET     
00DD         ?C0187:
                                           ; SOURCE LINE # 1213
                                           ; SOURCE LINE # 1214
00DD 900000      E     MOV     DPTR,#BatteryAlarm
00E0 E0                MOVX    A,@DPTR
00E1 54DF              ANL     A,#0DFH
00E3 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1215
                                           ; SOURCE LINE # 1216
                                           ; SOURCE LINE # 1217
                                           ; SOURCE LINE # 1218
00E4 22                RET     
00E5         ?C0177:
                                           ; SOURCE LINE # 1220
                                           ; SOURCE LINE # 1221
00E5 900000      E     MOV     DPTR,#BatteryAlarm
00E8 E0                MOVX    A,@DPTR
00E9 54DF              ANL     A,#0DFH
00EB F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1222
00EC 900000      E     MOV     DPTR,#nBatteryStatH
00EF E0                MOVX    A,@DPTR
00F0 54FB              ANL     A,#0FBH
00F2 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1223
                                           ; SOURCE LINE # 1224
00F3         ?C0192:
00F3 22                RET     
             ; FUNCTION ChkBattery_LowVoltage (END)

             ; FUNCTION CkkBattery_RSOCLow (BEGIN)
                                           ; SOURCE LINE # 1228
                                           ; SOURCE LINE # 1229
                                           ; SOURCE LINE # 1230
0000 900000      E     MOV     DPTR,#GPDRB
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 95  

0003 E0                MOVX    A,@DPTR
0004 30E003            JNB     ACC.0,?C0195
0007 D3                SETB    C
0008 8001              SJMP    ?C0196
000A         ?C0195:
000A C3                CLR     C
000B         ?C0196:
000B 5007              JNC     ?C0194
000D 900000      E     MOV     DPTR,#CHGIC_ReadCmd0x12L
0010 E0                MOVX    A,@DPTR
0011 30E52A            JNB     ACC.5,?C0193
0014         ?C0194:
                                           ; SOURCE LINE # 1231
                                           ; SOURCE LINE # 1232
0014 120000      R     LCALL   L?0604
0017 501E              JNC     ?C0197
                                           ; SOURCE LINE # 1233
                                           ; SOURCE LINE # 1239
0019 900000      E     MOV     DPTR,#uPJID
001C E0                MOVX    A,@DPTR
001D B40208            CJNE    A,#02H,?C0198
                                           ; SOURCE LINE # 1240
                                           ; SOURCE LINE # 1241
0020 900000      E     MOV     DPTR,#cGPUBattLowThrottling
0023 7404              MOV     A,#04H
0025 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1242
0026 8007              SJMP    ?C0199
0028         ?C0198:
                                           ; SOURCE LINE # 1244
                                           ; SOURCE LINE # 1247
0028 900000      E     MOV     DPTR,#GPU_Prochot
002B E0                MOVX    A,@DPTR
002C 4410              ORL     A,#010H
002E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1248
002F         ?C0199:
                                           ; SOURCE LINE # 1250
002F 900000      E     MOV     DPTR,#Thro_Status2
0032 E0                MOVX    A,@DPTR
0033 4440              ORL     A,#040H
0035 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1251
0036 22                RET     
0037         ?C0197:
                                           ; SOURCE LINE # 1252
0037 120000      R     LCALL   L?0604
003A 4012              JC      ?C0203
                                           ; SOURCE LINE # 1253
                                           ; SOURCE LINE # 1254
                                           ; SOURCE LINE # 1255
                                           ; SOURCE LINE # 1257
                                           ; SOURCE LINE # 1258
                                           ; SOURCE LINE # 1259
003C 8000              SJMP    ?C0530
003E         ?C0193:
                                           ; SOURCE LINE # 1261
                                           ; SOURCE LINE # 1262
003E         ?C0530:
003E 900000      E     MOV     DPTR,#cGPUBattLowThrottling
                                           ; SOURCE LINE # 1263
0041 120000      R     LCALL   L?0643
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 96  

0044 54EF              ANL     A,#0EFH
0046 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1266
0047 900000      E     MOV     DPTR,#Thro_Status2
004A E0                MOVX    A,@DPTR
004B 54BF              ANL     A,#0BFH
004D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1267
                                           ; SOURCE LINE # 1268
004E         ?C0203:
004E 22                RET     
             ; FUNCTION CkkBattery_RSOCLow (END)

             ; FUNCTION ChkBattery_FCCchg (BEGIN)
                                           ; SOURCE LINE # 1271
                                           ; SOURCE LINE # 1272
                                           ; SOURCE LINE # 1273
0000 900000      E     MOV     DPTR,#ChkBattery_FCCchg_count
0003 E0                MOVX    A,@DPTR
0004 04                INC     A
0005 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1274
0006 E0                MOVX    A,@DPTR
0007 C3                CLR     C
0008 9464              SUBB    A,#064H
000A 4031              JC      ?C0208
                                           ; SOURCE LINE # 1275
                                           ; SOURCE LINE # 1276
000C E4                CLR     A
000D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1286
000E 900000      E     MOV     DPTR,#ChkBattery_FCCchg_lastFCCL
0011 E0                MOVX    A,@DPTR
0012 7009              JNZ     ?C0205
0014 900000      E     MOV     DPTR,#ChkBattery_FCCchg_lastFCCH
0017 E0                MOVX    A,@DPTR
0018 7003              JNZ     ?C0205
                                           ; SOURCE LINE # 1287
                                           ; SOURCE LINE # 1288
                                           ; SOURCE LINE # 1289
001A 120000      R     LCALL   L?0618
                                           ; SOURCE LINE # 1290
001D         ?C0205:
                                           ; SOURCE LINE # 1293
001D 900000      E     MOV     DPTR,#nFullChgCapL
0020 E0                MOVX    A,@DPTR
0021 FF                MOV     R7,A
0022 900000      E     MOV     DPTR,#ChkBattery_FCCchg_lastFCCL
0025 E0                MOVX    A,@DPTR
0026 6F                XRL     A,R7
0027 700C              JNZ     ?C0207
0029 900000      E     MOV     DPTR,#nFullChgCapH
002C E0                MOVX    A,@DPTR
002D FF                MOV     R7,A
002E 900000      E     MOV     DPTR,#ChkBattery_FCCchg_lastFCCH
0031 E0                MOVX    A,@DPTR
0032 6F                XRL     A,R7
0033 6008              JZ      ?C0208
0035         ?C0207:
                                           ; SOURCE LINE # 1295
                                           ; SOURCE LINE # 1296
0035 7F25              MOV     R7,#025H
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 97  

0037 120000      E     LCALL   _ECSMI_SCIEvent
                                           ; SOURCE LINE # 1297
                                           ; SOURCE LINE # 1298
003A 120000      R     LCALL   L?0618
                                           ; SOURCE LINE # 1299
                                           ; SOURCE LINE # 1300
                                           ; SOURCE LINE # 1301
003D         ?C0208:
003D 22                RET     
             ; FUNCTION ChkBattery_FCCchg (END)

             ; FUNCTION ChkAvgCurrent (BEGIN)
                                           ; SOURCE LINE # 1303
                                           ; SOURCE LINE # 1304
                                           ; SOURCE LINE # 1311
0000 900000      E     MOV     DPTR,#Bat0x0BTempH
0003 E0                MOVX    A,@DPTR
0004 30E71C            JNB     ACC.7,?C0209
                                           ; SOURCE LINE # 1312
                                           ; SOURCE LINE # 1313
0007 E0                MOVX    A,@DPTR
0008 FE                MOV     R6,A
0009 900000      E     MOV     DPTR,#Bat0x0BTempL
000C 120000      R     LCALL   L?0578
000F 120000      R     LCALL   L?0610
0012 900000      E     MOV     DPTR,#XWTemp1
0015 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1314
0016 C3                CLR     C
0017 A3                INC     DPTR
0018 E0                MOVX    A,@DPTR
0019 9490              SUBB    A,#090H
001B 900000      E     MOV     DPTR,#XWTemp1
001E E0                MOVX    A,@DPTR
001F 9401              SUBB    A,#01H
0021 4058              JC      ?C0211
                                           ; SOURCE LINE # 1315
                                           ; SOURCE LINE # 1317
                                           ; SOURCE LINE # 1318
0023         ?C0209:
                                           ; SOURCE LINE # 1320
0023 900000      E     MOV     DPTR,#SYS_STATUS
0026 E0                MOVX    A,@DPTR
0027 20E717            JB      ACC.7,?C0212
002A 900000      E     MOV     DPTR,#SysPowState
002D E0                MOVX    A,@DPTR
002E B41110            CJNE    A,#011H,?C0212
0031 900000      E     MOV     DPTR,#Bat0x0BTempH
0034 E0                MOVX    A,@DPTR
0035 20E709            JB      ACC.7,?C0212
                                           ; SOURCE LINE # 1321
                                           ; SOURCE LINE # 1323
0038 900000      E     MOV     DPTR,#nNowCurrentH
003B E0                MOVX    A,@DPTR
003C 30E73C            JNB     ACC.7,?C0211
                                           ; SOURCE LINE # 1324
                                           ; SOURCE LINE # 1325
                                           ; SOURCE LINE # 1326
                                           ; SOURCE LINE # 1327
003F 801C              SJMP    ?C0531
                                           ; SOURCE LINE # 1329
0041         ?C0212:
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 98  

                                           ; SOURCE LINE # 1331
0041 900000      E     MOV     DPTR,#Bat0x0BFakeCnt
0044 E0                MOVX    A,@DPTR
0045 700D              JNZ     ?C0214
                                           ; SOURCE LINE # 1332
                                           ; SOURCE LINE # 1333
0047 900000      E     MOV     DPTR,#Bat0x0BTempL
004A E0                MOVX    A,@DPTR
004B 900000      E     MOV     DPTR,#nAvgCurrentL
004E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1334
004F 900000      E     MOV     DPTR,#Bat0x0BTempH
                                           ; SOURCE LINE # 1335
0052 8014              SJMP    ?C0532
0054         ?C0214:
                                           ; SOURCE LINE # 1336
0054 900000      E     MOV     DPTR,#Bat0x0BFakeCnt
0057 E0                MOVX    A,@DPTR
0058 C3                CLR     C
0059 943C              SUBB    A,#03CH
005B 500E              JNC     ?C0216
                                           ; SOURCE LINE # 1337
                                           ; SOURCE LINE # 1338
005D         ?C0531:
005D 900000      E     MOV     DPTR,#nNowCurrentL
0060 E0                MOVX    A,@DPTR
0061 900000      E     MOV     DPTR,#nAvgCurrentL
0064 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1339
0065 900000      E     MOV     DPTR,#nNowCurrentH
0068         ?C0532:
0068 E0                MOVX    A,@DPTR
                                           ; SOURCE LINE # 1340
0069 800C              SJMP    ?C0533
006B         ?C0216:
                                           ; SOURCE LINE # 1341
006B 900000      E     MOV     DPTR,#Bat0x0BFakeCnt
006E E0                MOVX    A,@DPTR
006F B43C09            CJNE    A,#03CH,?C0211
                                           ; SOURCE LINE # 1342
                                           ; SOURCE LINE # 1343
0072 E4                CLR     A
0073 900000      E     MOV     DPTR,#nAvgCurrentL
0076 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1344
0077         ?C0533:
0077 900000      E     MOV     DPTR,#nAvgCurrentH
007A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1345
                                           ; SOURCE LINE # 1346
007B         ?C0211:
007B 22                RET     
             ; FUNCTION ChkAvgCurrent (END)

             ; FUNCTION RST_ChgTimeOutCnt (BEGIN)
                                           ; SOURCE LINE # 1348
                                           ; SOURCE LINE # 1349
                                           ; SOURCE LINE # 1350
                                           ; SOURCE LINE # 1351
0000 120000      R     LCALL   L?0659
0003 F0                MOVX    @DPTR,A
0004 A3                INC     DPTR
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 99  

0005 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1352
0006 900000      E     MOV     DPTR,#nStopChgStat3L
0009 E0                MOVX    A,@DPTR
000A 54FE              ANL     A,#0FEH
000C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1353
000D 900000      E     MOV     DPTR,#nStopChgStat3H
0010 E0                MOVX    A,@DPTR
0011 54FE              ANL     A,#0FEH
0013 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1354
0014 22                RET     
             ; FUNCTION RST_ChgTimeOutCnt (END)

             ; FUNCTION Battery100ms (BEGIN)
                                           ; SOURCE LINE # 1356
                                           ; SOURCE LINE # 1357
                                           ; SOURCE LINE # 1358
0000 900000      E     MOV     DPTR,#inhibit2sec
0003 E0                MOVX    A,@DPTR
0004 6004              JZ      ?C0220
                                           ; SOURCE LINE # 1359
0006 E0                MOVX    A,@DPTR
0007 14                DEC     A
0008 F0                MOVX    @DPTR,A
0009 22                RET     
000A         ?C0220:
                                           ; SOURCE LINE # 1361
000A 900000      E     MOV     DPTR,#nStopChgStat3L
000D E0                MOVX    A,@DPTR
000E 54F7              ANL     A,#0F7H
0010 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1362
0011         ?C0222:
0011 22                RET     
             ; FUNCTION Battery100ms (END)

             ; FUNCTION ChkPsys (BEGIN)
                                           ; SOURCE LINE # 1364
                                           ; SOURCE LINE # 1365
                                           ; SOURCE LINE # 1366
0000 120000      R     LCALL   L?0607
0003 7072              JNZ     ?C0223
0005 900000      E     MOV     DPTR,#GPDRB
0008 E0                MOVX    A,@DPTR
0009 30E003            JNB     ACC.0,?C0224
000C D3                SETB    C
000D 8001              SJMP    ?C0225
000F         ?C0224:
000F C3                CLR     C
0010         ?C0225:
0010 4065              JC      ?C0223
                                           ; SOURCE LINE # 1367
                                           ; SOURCE LINE # 1469
0012 120000      R     LCALL   L?0598
0015 401C              JC      ?C0226
                                           ; SOURCE LINE # 1470
                                           ; SOURCE LINE # 1471
0017 120000      R     LCALL   L?0612
001A 4003              JC      ?C0227
                                           ; SOURCE LINE # 1472
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 100 

                                           ; SOURCE LINE # 1473
                                           ; SOURCE LINE # 1474
                                           ; SOURCE LINE # 1475
001C 020000      R     LJMP    ?C0539
001F         ?C0227:
                                           ; SOURCE LINE # 1476
001F 120000      R     LCALL   L?0591
0022 4008              JC      ?C0229
0024 A3                INC     DPTR
0025 120000      R     LCALL   L?0613
0028 5002              JNC     ?C0229
                                           ; SOURCE LINE # 1477
                                           ; SOURCE LINE # 1478
                                           ; SOURCE LINE # 1479
                                           ; SOURCE LINE # 1480
                                           ; SOURCE LINE # 1481
002A 8035              SJMP    ?C0535
002C         ?C0229:
                                           ; SOURCE LINE # 1482
002C 120000      R     LCALL   L?0591
002F 5059              JNC     ?C0244
                                           ; SOURCE LINE # 1483
                                           ; SOURCE LINE # 1484
                                           ; SOURCE LINE # 1485
                                           ; SOURCE LINE # 1486
                                           ; SOURCE LINE # 1487
                                           ; SOURCE LINE # 1488
0031 8015              SJMP    ?C0536
0033         ?C0226:
                                           ; SOURCE LINE # 1489
0033 900000      E     MOV     DPTR,#nBattGasgauge
0036 E0                MOVX    A,@DPTR
0037 D3                SETB    C
0038 940A              SUBB    A,#0AH
003A 4013              JC      ?C0233
                                           ; SOURCE LINE # 1490
                                           ; SOURCE LINE # 1491
003C 120000      R     LCALL   L?0612
003F 4002              JC      ?C0234
                                           ; SOURCE LINE # 1492
                                           ; SOURCE LINE # 1493
0041         ?C0534:
                                           ; SOURCE LINE # 1494
                                           ; SOURCE LINE # 1495
0041 8025              SJMP    ?C0539
0043         ?C0234:
                                           ; SOURCE LINE # 1496
0043 120000      R     LCALL   L?0592
0046 5042              JNC     ?C0244
                                           ; SOURCE LINE # 1497
                                           ; SOURCE LINE # 1498
0048         ?C0536:
0048 900000      E     MOV     DPTR,#cGPUBattPsysThrottling
004B 7402              MOV     A,#02H
                                           ; SOURCE LINE # 1499
                                           ; SOURCE LINE # 1500
                                           ; SOURCE LINE # 1501
                                           ; SOURCE LINE # 1502
004D 802C              SJMP    ?C0540
004F         ?C0233:
                                           ; SOURCE LINE # 1503
004F 120000      R     LCALL   L?0604
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 101 

0052 4014              JC      ?C0238
                                           ; SOURCE LINE # 1504
                                           ; SOURCE LINE # 1505
0054 120000      R     LCALL   L?0648
0057 4002              JC      ?C0239
                                           ; SOURCE LINE # 1506
                                           ; SOURCE LINE # 1507
0059         ?C0537:
                                           ; SOURCE LINE # 1508
                                           ; SOURCE LINE # 1509
0059 800D              SJMP    ?C0539
005B         ?C0239:
                                           ; SOURCE LINE # 1510
005B C3                CLR     C
005C 120000      R     LCALL   L?0648
005F 5029              JNC     ?C0244
                                           ; SOURCE LINE # 1511
                                           ; SOURCE LINE # 1512
0061         ?C0535:
0061 900000      E     MOV     DPTR,#cGPUBattPsysThrottling
0064 7403              MOV     A,#03H
0066         ?C0538:
                                           ; SOURCE LINE # 1513
                                           ; SOURCE LINE # 1514
                                           ; SOURCE LINE # 1515
                                           ; SOURCE LINE # 1516
0066 8013              SJMP    ?C0540
0068         ?C0238:
                                           ; SOURCE LINE # 1518
                                           ; SOURCE LINE # 1519
0068         ?C0539:
0068 900000      E     MOV     DPTR,#GPU_Prochot
006B E0                MOVX    A,@DPTR
006C 4402              ORL     A,#02H
006E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1520
006F 900000      E     MOV     DPTR,#Thro_Status2
0072 E0                MOVX    A,@DPTR
0073 4480              ORL     A,#080H
0075 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1521
                                           ; SOURCE LINE # 1523
0076 22                RET     
0077         ?C0223:
                                           ; SOURCE LINE # 1525
                                           ; SOURCE LINE # 1526
0077 E4                CLR     A
0078 900000      E     MOV     DPTR,#cGPUBattPsysThrottling
007B         ?C0540:
007B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1528
007C 900000      E     MOV     DPTR,#GPU_Prochot
007F E0                MOVX    A,@DPTR
0080 54FD              ANL     A,#0FDH
0082 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1529
0083 900000      E     MOV     DPTR,#Thro_Status2
0086 E0                MOVX    A,@DPTR
0087 547F              ANL     A,#07FH
0089 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1530
                                           ; SOURCE LINE # 1531
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 102 

008A         ?C0244:
008A 22                RET     
             ; FUNCTION ChkPsys (END)

             ; FUNCTION Battery1Sec (BEGIN)
                                           ; SOURCE LINE # 1534
                                           ; SOURCE LINE # 1535
                                           ; SOURCE LINE # 1537
0000 900000      E     MOV     DPTR,#Bat0x0BFakeCnt
0003 E0                MOVX    A,@DPTR
0004 6003              JZ      ?C0245
                                           ; SOURCE LINE # 1538
0006 E0                MOVX    A,@DPTR
0007 14                DEC     A
0008 F0                MOVX    @DPTR,A
0009         ?C0245:
                                           ; SOURCE LINE # 1540
0009 900000      E     MOV     DPTR,#BatSMbusFailCount
000C E0                MOVX    A,@DPTR
000D 602A              JZ      ?C0246
000F 900000      E     MOV     DPTR,#BATTUPDATEFW
0012 E0                MOVX    A,@DPTR
0013 20E023            JB      ACC.0,?C0246
                                           ; SOURCE LINE # 1541
                                           ; SOURCE LINE # 1542
0016 900000      E     MOV     DPTR,#Bat1_FPChgFlag
0019 E0                MOVX    A,@DPTR
001A 4401              ORL     A,#01H
001C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1543
001D 900000      E     MOV     DPTR,#nBattErrorCnt
0020 E0                MOVX    A,@DPTR
0021 04                INC     A
0022 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1544
0023 E0                MOVX    A,@DPTR
0024 D3                SETB    C
0025 94FA              SUBB    A,#0FAH
0027 4003              JC      ?C0247
                                           ; SOURCE LINE # 1545
0029 74FB              MOV     A,#0FBH
002B F0                MOVX    @DPTR,A
002C         ?C0247:
                                           ; SOURCE LINE # 1546
002C 900000      E     MOV     DPTR,#BatSMbusFailCount
002F E0                MOVX    A,@DPTR
0030 D3                SETB    C
0031 94DC              SUBB    A,#0DCH
0033 4039              JC      ?C0255
                                           ; SOURCE LINE # 1547
0035 74DD              MOV     A,#0DDH
0037 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1548
0038 22                RET     
0039         ?C0246:
                                           ; SOURCE LINE # 1550
                                           ; SOURCE LINE # 1551
0039 E4                CLR     A
003A 900000      E     MOV     DPTR,#nBattErrorCnt
003D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1552
003E 900000      E     MOV     DPTR,#nNowCurrentH
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 103 

0041 E0                MOVX    A,@DPTR
0042 FF                MOV     R7,A
0043 900000      E     MOV     DPTR,#nNowCurrentL
0046 E0                MOVX    A,@DPTR
0047 4F                ORL     A,R7
0048 601F              JZ      ?C0250
                                           ; SOURCE LINE # 1553
                                           ; SOURCE LINE # 1554
004A 900000      E     MOV     DPTR,#nNowCurrentH
004D E0                MOVX    A,@DPTR
004E 20E710            JB      ACC.7,?C0251
                                           ; SOURCE LINE # 1555
                                           ; SOURCE LINE # 1556
0051 900000      E     MOV     DPTR,#nBattTempCnt
0054 E0                MOVX    A,@DPTR
0055 04                INC     A
0056 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1557
0057 E0                MOVX    A,@DPTR
0058 C3                CLR     C
0059 940A              SUBB    A,#0AH
005B 4011              JC      ?C0255
                                           ; SOURCE LINE # 1558
005D 740B              MOV     A,#0BH
005F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1559
0060 22                RET     
0061         ?C0251:
                                           ; SOURCE LINE # 1561
                                           ; SOURCE LINE # 1562
0061 E4                CLR     A
0062 900000      E     MOV     DPTR,#nBattTempCnt
0065 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1563
0066 020000      R     LJMP    RST_ChgTimeOutCnt
                                           ; SOURCE LINE # 1564
                                           ; SOURCE LINE # 1565
0069         ?C0250:
                                           ; SOURCE LINE # 1567
                                           ; SOURCE LINE # 1568
0069 E4                CLR     A
006A 900000      E     MOV     DPTR,#nBattTempCnt
006D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1569
                                           ; SOURCE LINE # 1570
                                           ; SOURCE LINE # 1571
006E         ?C0255:
006E 22                RET     
             ; FUNCTION Battery1Sec (END)

             ; FUNCTION _GetBatData (BEGIN)
                                           ; SOURCE LINE # 1610
0000 900000      R     MOV     DPTR,#_STEP
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1611
                                           ; SOURCE LINE # 1612
0005 14                DEC     A
0006 24FC              ADD     A,#0FCH
0008 5002              JNC     ?C0260
000A 801E              SJMP    ?C0263
                                           ; SOURCE LINE # 1613
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 104 

                                           ; SOURCE LINE # 1614
                                           ; SOURCE LINE # 1618
                                           ; SOURCE LINE # 1619
                                           ; SOURCE LINE # 1620
000C         ?C0260:
                                           ; SOURCE LINE # 1621
000C 120000      R     LCALL   L?0579
000F FD                MOV     R5,A
0010 7401              MOV     A,#01H
0012 93                MOVC    A,@A+DPTR
0013 900000      E     MOV     DPTR,#?_bRSMBusBlock?BYTE+04H
0016 CD                XCH     A,R5
0017 F0                MOVX    @DPTR,A
0018 A3                INC     DPTR
0019 ED                MOV     A,R5
001A F0                MOVX    @DPTR,A
001B 900000      E     MOV     DPTR,#?_bRSMBusBlock?BYTE+03H
001E EE                MOV     A,R6
001F 120000      R     LCALL   L?0645
0022 120000      E     LCALL   _bRSMBusBlock
0025 EF                MOV     A,R7
0026 702A              JNZ     ?C0542
                                           ; SOURCE LINE # 1624
                                           ; SOURCE LINE # 1625
                                           ; SOURCE LINE # 1627
0028 8021              SJMP    ?C0541
                                           ; SOURCE LINE # 1634
002A         ?C0263:
                                           ; SOURCE LINE # 1635
002A 120000      R     LCALL   L?0579
002D FD                MOV     R5,A
002E 7401              MOV     A,#01H
0030 93                MOVC    A,@A+DPTR
0031 900000      E     MOV     DPTR,#?_bRWSMBus?BYTE+04H
0034 CD                XCH     A,R5
0035 F0                MOVX    @DPTR,A
0036 A3                INC     DPTR
0037 ED                MOV     A,R5
0038 F0                MOVX    @DPTR,A
0039 900000      E     MOV     DPTR,#?_bRWSMBus?BYTE+03H
003C EE                MOV     A,R6
003D F0                MOVX    @DPTR,A
003E E4                CLR     A
003F 900000      E     MOV     DPTR,#?_bRWSMBus?BYTE+06H
0042 120000      R     LCALL   L?0624
0045 120000      E     LCALL   _bRWSMBus
0048 EF                MOV     A,R7
0049 7007              JNZ     ?C0264
                                           ; SOURCE LINE # 1639
                                           ; SOURCE LINE # 1640
004B         ?C0541:
004B 900000      E     MOV     DPTR,#BatSMbusFailCount
004E E0                MOVX    A,@DPTR
004F 04                INC     A
0050 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1642
0051 22                RET     
0052         ?C0264:
                                           ; SOURCE LINE # 1644
                                           ; SOURCE LINE # 1645
0052         ?C0542:
0052 E4                CLR     A
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 105 

0053 900000      E     MOV     DPTR,#BatSMbusFailCount
0056 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1646
                                           ; SOURCE LINE # 1648
                                           ; SOURCE LINE # 1649
                                           ; SOURCE LINE # 1650
0057         ?C0266:
0057 22                RET     
             ; FUNCTION _GetBatData (END)

             ; FUNCTION ChkBattery_Percl (BEGIN)
                                           ; SOURCE LINE # 1653
                                           ; SOURCE LINE # 1654
                                           ; SOURCE LINE # 1655
0000 900000      E     MOV     DPTR,#?_bRWSMBus?BYTE+03H
0003 740D              MOV     A,#0DH
0005 F0                MOVX    @DPTR,A
0006 7E00        E     MOV     R6,#HIGH BAT1PERCL
0008 A3                INC     DPTR
0009 7400        E     MOV     A,#HIGH BAT1PERCL
000B F0                MOVX    @DPTR,A
000C 7400        E     MOV     A,#LOW BAT1PERCL
000E 120000      R     LCALL   L?0623
0011 020000      E     LJMP    _bRWSMBus
             ; FUNCTION ChkBattery_Percl (END)

             ; FUNCTION FirstGetBatData (BEGIN)
                                           ; SOURCE LINE # 1661
                                           ; SOURCE LINE # 1662
                                           ; SOURCE LINE # 1666
0000 E4                CLR     A
0001 900000      E     MOV     DPTR,#Batpollstep1
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1667
0005 900000      E     MOV     DPTR,#nBatteryStatL
0008 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1668
0009 900000      R     MOV     DPTR,#i
000C F0                MOVX    @DPTR,A
000D         ?C0268:
                                           ; SOURCE LINE # 1669
                                           ; SOURCE LINE # 1670
000D 900000      E     MOV     DPTR,#Batpollstep1
0010 E0                MOVX    A,@DPTR
0011 FF                MOV     R7,A
0012 120000      R     LCALL   _GetBatData
                                           ; SOURCE LINE # 1671
0015 900000      E     MOV     DPTR,#Batpollstep1
0018 E0                MOVX    A,@DPTR
0019 04                INC     A
001A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1672
001B 900000      R     MOV     DPTR,#i
001E E0                MOVX    A,@DPTR
001F 04                INC     A
0020 F0                MOVX    @DPTR,A
0021 E0                MOVX    A,@DPTR
0022 C3                CLR     C
0023 941B              SUBB    A,#01BH
0025 40E6              JC      ?C0268
0027         ?C0269:
                                           ; SOURCE LINE # 1673
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 106 

0027 900000      E     MOV     DPTR,#Batpollstep1
002A 7408              MOV     A,#08H
002C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1674
002D 900000      E     MOV     DPTR,#Bat0x0FTempL
0030 E0                MOVX    A,@DPTR
0031 AD8A              MOV     R5,TL0
0033 2D                ADD     A,R5
0034 FF                MOV     R7,A
0035 EF                MOV     A,R7
0036 900000      E     MOV     DPTR,#SHA1_SEED
0039 F0                MOVX    @DPTR,A
003A A3                INC     DPTR
003B E4                CLR     A
003C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1693
003D 900000      E     MOV     DPTR,#batteryChemistry
0040 E0                MOVX    A,@DPTR
0041 B44C18            CJNE    A,#04CH,?C0271
0044 A3                INC     DPTR
0045 E0                MOVX    A,@DPTR
0046 B44913            CJNE    A,#049H,?C0271
0049 A3                INC     DPTR
004A E0                MOVX    A,@DPTR
004B B44F0E            CJNE    A,#04FH,?C0271
004E A3                INC     DPTR
004F E0                MOVX    A,@DPTR
0050 B44E09            CJNE    A,#04EH,?C0271
                                           ; SOURCE LINE # 1694
0053 900000      E     MOV     DPTR,#nBatteryStatL
0056 E0                MOVX    A,@DPTR
0057 4401              ORL     A,#01H
0059 F0                MOVX    @DPTR,A
005A 8007              SJMP    ?C0272
005C         ?C0271:
                                           ; SOURCE LINE # 1696
005C 900000      E     MOV     DPTR,#nBatteryStatL
005F E0                MOVX    A,@DPTR
0060 54FE              ANL     A,#0FEH
0062 F0                MOVX    @DPTR,A
0063         ?C0272:
                                           ; SOURCE LINE # 1699
0063 900000      E     MOV     DPTR,#nDesignCapH
0066 E0                MOVX    A,@DPTR
0067 FE                MOV     R6,A
0068 900000      E     MOV     DPTR,#nDesignCapL
006B 120000      R     LCALL   L?0578
006E 900000      E     MOV     DPTR,#OCPCapacity
0071 F0                MOVX    @DPTR,A
0072 A3                INC     DPTR
0073 EF                MOV     A,R7
0074 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1700
0075 900000      E     MOV     DPTR,#OCPCapacity
0078 E0                MOVX    A,@DPTR
0079 FE                MOV     R6,A
007A A3                INC     DPTR
007B E0                MOVX    A,@DPTR
007C 7803              MOV     R0,#03H
007E         ?C0505:
007E C3                CLR     C
007F 33                RLC     A
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 107 

0080 CE                XCH     A,R6
0081 33                RLC     A
0082 CE                XCH     A,R6
0083 D8F9              DJNZ    R0,?C0505
0085 F0                MOVX    @DPTR,A
0086 EE                MOV     A,R6
0087 900000      E     MOV     DPTR,#OCPCapacity
008A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1706
008B 120000      R     LCALL   L?0588
008E 120000      R     LCALL   L?0660
0091 C0E0              PUSH    ACC
0093 EE                MOV     A,R6
0094 C0E0              PUSH    ACC
0096 EF                MOV     A,R7
0097 C0E0              PUSH    ACC
0099 120000      R     LCALL   L?0638
009C 120000      R     LCALL   L?0578
009F 120000      R     LCALL   L?0622
00A2 D0E0              POP     ACC
00A4 FF                MOV     R7,A
00A5 D0E0              POP     ACC
00A7 FE                MOV     R6,A
00A8 D0E0              POP     ACC
00AA FC                MOV     R4,A
00AB 120000      E     LCALL   ?C?ULDIV
00AE 900000      E     MOV     DPTR,#OCPCapacity
00B1 EE                MOV     A,R6
00B2 F0                MOVX    @DPTR,A
00B3 A3                INC     DPTR
00B4 EF                MOV     A,R7
00B5 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1708
00B6 900000      E     MOV     DPTR,#nDesignCapH
00B9 E0                MOVX    A,@DPTR
00BA FE                MOV     R6,A
00BB 900000      E     MOV     DPTR,#nDesignCapL
00BE 120000      R     LCALL   L?0578
00C1 900000      E     MOV     DPTR,#OCPCapacityRelease
                                           ; SOURCE LINE # 1709
00C4 120000      R     LCALL   L?0649
00C7 7D07              MOV     R5,#07H
00C9 120000      E     LCALL   ?C?IMUL
00CC 900000      E     MOV     DPTR,#OCPCapacityRelease
00CF EE                MOV     A,R6
                                           ; SOURCE LINE # 1711
00D0 120000      R     LCALL   L?0649
00D3 E4                CLR     A
00D4 FD                MOV     R5,A
00D5 120000      R     LCALL   L?0660
00D8 C0E0              PUSH    ACC
00DA EE                MOV     A,R6
00DB C0E0              PUSH    ACC
00DD EF                MOV     A,R7
00DE C0E0              PUSH    ACC
00E0 120000      R     LCALL   L?0638
00E3 120000      R     LCALL   L?0578
00E6 120000      R     LCALL   L?0622
00E9 D0E0              POP     ACC
00EB FF                MOV     R7,A
00EC D0E0              POP     ACC
00EE FE                MOV     R6,A
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 108 

00EF D0E0              POP     ACC
00F1 FC                MOV     R4,A
00F2 120000      E     LCALL   ?C?ULDIV
00F5 900000      E     MOV     DPTR,#OCPCapacityRelease
00F8 EE                MOV     A,R6
00F9 F0                MOVX    @DPTR,A
00FA A3                INC     DPTR
00FB EF                MOV     A,R7
00FC F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1714
00FD 120000      R     LCALL   L?0639
0100 120000      R     LCALL   L?0578
0103 900000      R     MOV     DPTR,#DesignVoltage
0106 F0                MOVX    @DPTR,A
0107 A3                INC     DPTR
0108 EF                MOV     A,R7
0109 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1715
010A C3                CLR     C
010B 900000      R     MOV     DPTR,#DesignVoltage+01H
010E E0                MOVX    A,@DPTR
010F 94B0              SUBB    A,#0B0H
0111 900000      R     MOV     DPTR,#DesignVoltage
0114 E0                MOVX    A,@DPTR
0115 9436              SUBB    A,#036H
0117 4015              JC      ?C0273
0119 D3                SETB    C
011A A3                INC     DPTR
011B E0                MOVX    A,@DPTR
011C 9460              SUBB    A,#060H
011E 900000      R     MOV     DPTR,#DesignVoltage
0121 E0                MOVX    A,@DPTR
0122 943B              SUBB    A,#03BH
0124 5008              JNC     ?C0273
                                           ; SOURCE LINE # 1716
0126 900000      E     MOV     DPTR,#CellCount
0129 7404              MOV     A,#04H
012B F0                MOVX    @DPTR,A
012C 8046              SJMP    ?C0274
012E         ?C0273:
                                           ; SOURCE LINE # 1717
012E C3                CLR     C
012F 900000      R     MOV     DPTR,#DesignVoltage+01H
0132 E0                MOVX    A,@DPTR
0133 9404              SUBB    A,#04H
0135 900000      R     MOV     DPTR,#DesignVoltage
0138 E0                MOVX    A,@DPTR
0139 9429              SUBB    A,#029H
013B 4015              JC      ?C0275
013D D3                SETB    C
013E A3                INC     DPTR
013F E0                MOVX    A,@DPTR
0140 9488              SUBB    A,#088H
0142 900000      R     MOV     DPTR,#DesignVoltage
0145 E0                MOVX    A,@DPTR
0146 942C              SUBB    A,#02CH
0148 5008              JNC     ?C0275
                                           ; SOURCE LINE # 1718
014A 900000      E     MOV     DPTR,#CellCount
014D 7403              MOV     A,#03H
014F F0                MOVX    @DPTR,A
0150 8022              SJMP    ?C0274
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 109 

0152         ?C0275:
                                           ; SOURCE LINE # 1719
0152 C3                CLR     C
0153 900000      R     MOV     DPTR,#DesignVoltage+01H
0156 E0                MOVX    A,@DPTR
0157 9458              SUBB    A,#058H
0159 900000      R     MOV     DPTR,#DesignVoltage
015C E0                MOVX    A,@DPTR
015D 941B              SUBB    A,#01BH
015F 4013              JC      ?C0274
0161 D3                SETB    C
0162 A3                INC     DPTR
0163 E0                MOVX    A,@DPTR
0164 94B0              SUBB    A,#0B0H
0166 900000      R     MOV     DPTR,#DesignVoltage
0169 E0                MOVX    A,@DPTR
016A 941D              SUBB    A,#01DH
016C 5006              JNC     ?C0274
                                           ; SOURCE LINE # 1720
016E 900000      E     MOV     DPTR,#CellCount
0171 7402              MOV     A,#02H
0173 F0                MOVX    @DPTR,A
0174         ?C0274:
                                           ; SOURCE LINE # 1723
0174 900000      E     MOV     DPTR,#S3ResumeRSOC
0177 7405              MOV     A,#05H
0179 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1724
017A 900000      E     MOV     DPTR,#BatteryOTP
017D 7437              MOV     A,#037H
017F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1725
0180 900000      E     MOV     DPTR,#BatteryOTPRelease
0183 7435              MOV     A,#035H
0185 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1726
0186 900000      E     MOV     DPTR,#BatteryOTPShutdown
0189 7441              MOV     A,#041H
018B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1729
018C 120000      R     LCALL   UpdateNameSpace
                                           ; SOURCE LINE # 1730
018F 120000      R     LCALL   Chk_Battery_Full
                                           ; SOURCE LINE # 1731
0192 E4                CLR     A
0193 900000      E     MOV     DPTR,#nBattErrorCnt
0196 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1732
0197 AF8A              MOV     R7,TL0
0199 900000      E     MOV     DPTR,#SHA1_SEED
019C 8FF0              MOV     B,R7
019E 120000      E     LCALL   ?C?IILDX
                                           ; SOURCE LINE # 1733
01A1 900000      E     MOV     DPTR,#SHA1_SEED
01A4 E0                MOVX    A,@DPTR
01A5 FE                MOV     R6,A
01A6 A3                INC     DPTR
01A7 E0                MOVX    A,@DPTR
01A8 FF                MOV     R7,A
01A9 120000      E     LCALL   _srand
                                           ; SOURCE LINE # 1735
01AC 900000      E     MOV     DPTR,#BatSMbusFailCount
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 110 

01AF E0                MOVX    A,@DPTR
01B0 704D              JNZ     ?C0281
                                           ; SOURCE LINE # 1736
                                           ; SOURCE LINE # 1737
01B2 900000      E     MOV     DPTR,#Battdata_ready
01B5 04                INC     A
01B6 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1738
01B7 900000      E     MOV     DPTR,#EC_C_modeH
01BA E0                MOVX    A,@DPTR
01BB 900000      E     MOV     DPTR,#WSMbusTemp01
01BE F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1739
01BF E0                MOVX    A,@DPTR
01C0 64E0              XRL     A,#0E0H
01C2 54E0              ANL     A,#0E0H
01C4 6039              JZ      ?C0281
                                           ; SOURCE LINE # 1740
                                           ; SOURCE LINE # 1741
01C6 900000      E     MOV     DPTR,#EC_C_modeL
01C9 E0                MOVX    A,@DPTR
01CA 900000      E     MOV     DPTR,#WSMbusTemp01
01CD F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1742
01CE 900000      E     MOV     DPTR,#EC_C_modeH
01D1 E0                MOVX    A,@DPTR
01D2 900000      E     MOV     DPTR,#WSMbusTemp02
01D5 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1743
01D6 E0                MOVX    A,@DPTR
01D7 44E0              ORL     A,#0E0H
01D9 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1744
01DA 900000      E     MOV     DPTR,#?_bRWSMBus?BYTE+03H
01DD 7403              MOV     A,#03H
01DF F0                MOVX    @DPTR,A
01E0 7E00        E     MOV     R6,#HIGH WSMbusTemp01
01E2 A3                INC     DPTR
01E3 7400        E     MOV     A,#HIGH WSMbusTemp01
01E5 F0                MOVX    @DPTR,A
01E6 A3                INC     DPTR
01E7 7400        E     MOV     A,#LOW WSMbusTemp01
01E9 F0                MOVX    @DPTR,A
01EA E4                CLR     A
01EB A3                INC     DPTR
01EC F0                MOVX    @DPTR,A
01ED 7B16              MOV     R3,#016H
01EF 7D8C              MOV     R5,#08CH
01F1 7F01              MOV     R7,#01H
01F3 120000      E     LCALL   _bRWSMBus
01F6 EF                MOV     A,R7
01F7 7006              JNZ     ?C0281
                                           ; SOURCE LINE # 1745
                                           ; SOURCE LINE # 1746
01F9 900000      E     MOV     DPTR,#BatSMbusFailCount
01FC E0                MOVX    A,@DPTR
01FD 04                INC     A
01FE F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1747
                                           ; SOURCE LINE # 1748
                                           ; SOURCE LINE # 1749
                                           ; SOURCE LINE # 1750
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 111 

01FF         ?C0281:
01FF 22                RET     
             ; FUNCTION FirstGetBatData (END)

             ; FUNCTION Chk_Battery_Full (BEGIN)
                                           ; SOURCE LINE # 1752
                                           ; SOURCE LINE # 1753
                                           ; SOURCE LINE # 1755
0000 900000      E     MOV     DPTR,#SYS_STATUS
0003 E0                MOVX    A,@DPTR
0004 30E715            JNB     ACC.7,?C0283
0007 900000      E     MOV     DPTR,#CHGIC_ReadCmd0x37L
000A E0                MOVX    A,@DPTR
000B 20E10E            JB      ACC.1,?C0283
000E 900000      E     MOV     DPTR,#SYS_STATUS
0011 E0                MOVX    A,@DPTR
0012 30E70C            JNB     ACC.7,?C0282
0015 900000      E     MOV     DPTR,#ACOFF_SOURCE
0018 E0                MOVX    A,@DPTR
0019 30E205            JNB     ACC.2,?C0282
001C         ?C0283:
                                           ; SOURCE LINE # 1756
                                           ; SOURCE LINE # 1757
001C 900000      E     MOV     DPTR,#SEL_STATE0
                                           ; SOURCE LINE # 1758
                                           ; SOURCE LINE # 1759
001F 8038              SJMP    ?C0543
                                           ; SOURCE LINE # 1761
0021         ?C0282:
                                           ; SOURCE LINE # 1764
0021 120000      R     LCALL   L?0661
0024 20E019            JB      ACC.0,?C0544
0027 900000      E     MOV     DPTR,#EC_BatteryStatusL
002A E0                MOVX    A,@DPTR
002B 20E512            JB      ACC.5,?C0544
002E 120000      R     LCALL   L?0662
0031 6002              JZ      ?C0285
0033         ?C0286:
                                           ; SOURCE LINE # 1765
                                           ; SOURCE LINE # 1766
                                           ; SOURCE LINE # 1767
                                           ; SOURCE LINE # 1768
0033 800B              SJMP    ?C0544
                                           ; SOURCE LINE # 1770
0035         ?C0285:
                                           ; SOURCE LINE # 1772
                                           ; SOURCE LINE # 1773
0035 120000      R     LCALL   L?0633
0038 30E00D            JNB     ACC.0,?C0287
003B 120000      R     LCALL   L?0614
003E 7008              JNZ     ?C0287
                                           ; SOURCE LINE # 1774
                                           ; SOURCE LINE # 1775
0040         ?C0544:
0040 900000      E     MOV     DPTR,#SEL_STATE0
                                           ; SOURCE LINE # 1776
0043 120000      R     LCALL   L?0616
                                           ; SOURCE LINE # 1777
0046 8031              SJMP    ?C0546
                                           ; SOURCE LINE # 1779
                                           ; SOURCE LINE # 1780
0048         ?C0287:
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 112 

                                           ; SOURCE LINE # 1782
0048 900000      E     MOV     DPTR,#LENOVOPMFW
004B E0                MOVX    A,@DPTR
004C 20E418            JB      ACC.4,?C0289
                                           ; SOURCE LINE # 1783
                                           ; SOURCE LINE # 1784
004F 900000      E     MOV     DPTR,#nBattery0x16L
0052 E0                MOVX    A,@DPTR
0053 900000      E     MOV     DPTR,#SEL_STATE0
0056 30E509            JNB     ACC.5,?C0290
                                           ; SOURCE LINE # 1785
                                           ; SOURCE LINE # 1786
0059         ?C0543:
                                           ; SOURCE LINE # 1787
0059 120000      R     LCALL   L?0616
005C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1788
005D E0                MOVX    A,@DPTR
005E 4401              ORL     A,#01H
0060 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1789
0061 22                RET     
0062         ?C0290:
                                           ; SOURCE LINE # 1791
                                           ; SOURCE LINE # 1792
                                           ; SOURCE LINE # 1793
0062 120000      R     LCALL   L?0663
0065         ?C0545:
                                           ; SOURCE LINE # 1794
                                           ; SOURCE LINE # 1795
                                           ; SOURCE LINE # 1796
0065 8012              SJMP    ?C0546
0067         ?C0289:
                                           ; SOURCE LINE # 1798
                                           ; SOURCE LINE # 1799
0067 900000      E     MOV     DPTR,#EC_BatteryStatusL
006A E0                MOVX    A,@DPTR
006B 900000      E     MOV     DPTR,#SEL_STATE0
006E 30E505            JNB     ACC.5,?C0293
                                           ; SOURCE LINE # 1800
                                           ; SOURCE LINE # 1801
                                           ; SOURCE LINE # 1802
0071 120000      R     LCALL   L?0617
0074 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1803
0075 22                RET     
0076         ?C0293:
                                           ; SOURCE LINE # 1805
                                           ; SOURCE LINE # 1806
                                           ; SOURCE LINE # 1807
0076 120000      R     LCALL   L?0663
0079         ?C0546:
0079 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1808
007A E0                MOVX    A,@DPTR
007B 54FE              ANL     A,#0FEH
007D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1809
                                           ; SOURCE LINE # 1810
                                           ; SOURCE LINE # 1811
007E         ?C0284:
007E 22                RET     
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 113 

             ; FUNCTION Chk_Battery_Full (END)

             ; FUNCTION Unlock_ShipMode (BEGIN)
                                           ; SOURCE LINE # 1813
                                           ; SOURCE LINE # 1814
                                           ; SOURCE LINE # 1834
0000 900000      E     MOV     DPTR,#BATTUPDATEFW
0003 E0                MOVX    A,@DPTR
0004 20E064            JB      ACC.0,?C0296
0007         ?C0295:
                                           ; SOURCE LINE # 1836
0007 E4                CLR     A
0008 900000      E     MOV     DPTR,#ShipModeEn
000B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1837
000C 900000      E     MOV     DPTR,#EMStatusBit2
000F E0                MOVX    A,@DPTR
0010 54FE              ANL     A,#0FEH
0012 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1838
0013 E4                CLR     A
0014 900000      E     MOV     DPTR,#WSMbusTemp01
0017 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1839
0018 7420              MOV     A,#020H
                                           ; SOURCE LINE # 1841
001A 120000      R     LCALL   L?0567
001D 120000      E     LCALL   _bRWSMBus
0020 EF                MOV     A,R7
0021 7003              JNZ     ?C0297
                                           ; SOURCE LINE # 1842
                                           ; SOURCE LINE # 1843
0023 120000      R     LCALL   L?0625
                                           ; SOURCE LINE # 1844
0026         ?C0297:
                                           ; SOURCE LINE # 1846
0026 E4                CLR     A
0027 900000      E     MOV     DPTR,#WSMbusTemp01
002A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1847
002B 900000      E     MOV     DPTR,#WSMbusTemp02
002E 7440              MOV     A,#040H
                                           ; SOURCE LINE # 1849
0030 120000      R     LCALL   L?0568
0033 120000      E     LCALL   _bRWSMBus
0036 EF                MOV     A,R7
0037 7003              JNZ     ?C0298
                                           ; SOURCE LINE # 1850
                                           ; SOURCE LINE # 1851
0039 120000      R     LCALL   L?0627
                                           ; SOURCE LINE # 1852
003C         ?C0298:
                                           ; SOURCE LINE # 1854
003C 900000      E     MOV     DPTR,#?_bRWSMBus?BYTE+03H
003F 7434              MOV     A,#034H
0041 F0                MOVX    @DPTR,A
0042 7E00        E     MOV     R6,#HIGH ShipModeACK
0044 A3                INC     DPTR
0045 7400        E     MOV     A,#HIGH ShipModeACK
0047 F0                MOVX    @DPTR,A
0048 7400        E     MOV     A,#LOW ShipModeACK
004A 120000      R     LCALL   L?0623
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 114 

004D 120000      E     LCALL   _bRWSMBus
0050 EF                MOV     A,R7
0051 600C              JZ      ?C0299
                                           ; SOURCE LINE # 1855
                                           ; SOURCE LINE # 1856
0053 900000      E     MOV     DPTR,#ShipModeACK
0056 E0                MOVX    A,@DPTR
0057 7002              JNZ     ?C0506
0059 A3                INC     DPTR
005A E0                MOVX    A,@DPTR
005B         ?C0506:
005B 600E              JZ      ?C0296
                                           ; SOURCE LINE # 1857
                                           ; SOURCE LINE # 1858
                                           ; SOURCE LINE # 1859
                                           ; SOURCE LINE # 1860
005D 8006              SJMP    ?C0547
005F         ?C0299:
                                           ; SOURCE LINE # 1862
                                           ; SOURCE LINE # 1863
005F 900000      E     MOV     DPTR,#SMbusFailCnt4
0062 E0                MOVX    A,@DPTR
0063 04                INC     A
0064 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1864
0065         ?C0547:
0065 900000      E     MOV     DPTR,#ShipModeCnt
0068 7401              MOV     A,#01H
006A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1865
                                           ; SOURCE LINE # 1867
006B         ?C0296:
006B 22                RET     
             ; FUNCTION Unlock_ShipMode (END)

             ; FUNCTION Lock_ShipMode (BEGIN)
                                           ; SOURCE LINE # 1869
                                           ; SOURCE LINE # 1870
                                           ; SOURCE LINE # 1893
0000 E4                CLR     A
0001 900000      R     MOV     DPTR,#retryNum
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1894
0005 900000      E     MOV     DPTR,#SMbusFailCnt3
0008 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1895
0009 900000      E     MOV     DPTR,#SMbusFailCnt2
000C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1897
000D 900000      E     MOV     DPTR,#WSMbusTemp01
0010 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1898
                                           ; SOURCE LINE # 1899
0011 120000      R     LCALL   L?0567
0014 120000      E     LCALL   _bRWSMBus
0017 EF                MOV     A,R7
0018 7003              JNZ     ?C0302
                                           ; SOURCE LINE # 1900
                                           ; SOURCE LINE # 1901
001A 120000      R     LCALL   L?0625
                                           ; SOURCE LINE # 1902
001D         ?C0302:
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 115 

                                           ; SOURCE LINE # 1904
001D 7FFA              MOV     R7,#0FAH
001F 120000      E     LCALL   _Delay1MS
                                           ; SOURCE LINE # 1906
                                           ; SOURCE LINE # 1907
                                           ; SOURCE LINE # 1908
0022 120000      R     LCALL   L?0566
0025 120000      E     LCALL   _bRWSMBus
0028 EF                MOV     A,R7
0029 7003              JNZ     ?C0303
                                           ; SOURCE LINE # 1909
                                           ; SOURCE LINE # 1910
002B 120000      R     LCALL   L?0627
                                           ; SOURCE LINE # 1911
002E         ?C0303:
                                           ; SOURCE LINE # 1913
002E E4                CLR     A
002F 900000      R     MOV     DPTR,#retryNum
0032 F0                MOVX    @DPTR,A
0033         ?C0304:
                                           ; SOURCE LINE # 1914
                                           ; SOURCE LINE # 1915
0033 900000      E     MOV     DPTR,#SMbusFailCnt3
0036 E0                MOVX    A,@DPTR
0037 7006              JNZ     ?C0307
0039 900000      E     MOV     DPTR,#SMbusFailCnt2
003C E0                MOVX    A,@DPTR
003D 6046              JZ      ?C0310
                                           ; SOURCE LINE # 1916
003F         ?C0307:
                                           ; SOURCE LINE # 1918
003F 7FA5              MOV     R7,#0A5H
0041 120000      E     LCALL   _ProcessSID
                                           ; SOURCE LINE # 1919
0044 E4                CLR     A
0045 900000      E     MOV     DPTR,#SMbusFailCnt3
0048 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1920
0049 900000      E     MOV     DPTR,#SMbusFailCnt2
004C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1922
004D 7F0A              MOV     R7,#0AH
004F 120000      E     LCALL   _Delay1MS
                                           ; SOURCE LINE # 1923
0052 7FFA              MOV     R7,#0FAH
0054 120000      E     LCALL   _Delay1MS
                                           ; SOURCE LINE # 1925
0057 E4                CLR     A
0058 900000      E     MOV     DPTR,#WSMbusTemp01
005B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1926
                                           ; SOURCE LINE # 1927
005C 120000      R     LCALL   L?0567
005F 120000      E     LCALL   _bRWSMBus
0062 EF                MOV     A,R7
0063 7003              JNZ     ?C0308
                                           ; SOURCE LINE # 1928
                                           ; SOURCE LINE # 1929
0065 120000      R     LCALL   L?0626
                                           ; SOURCE LINE # 1930
0068         ?C0308:
                                           ; SOURCE LINE # 1932
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 116 

0068 7FFA              MOV     R7,#0FAH
006A 120000      E     LCALL   _Delay1MS
                                           ; SOURCE LINE # 1934
                                           ; SOURCE LINE # 1935
                                           ; SOURCE LINE # 1936
006D 120000      R     LCALL   L?0566
0070 120000      E     LCALL   _bRWSMBus
0073 EF                MOV     A,R7
0074 7003              JNZ     ?C0306
                                           ; SOURCE LINE # 1937
                                           ; SOURCE LINE # 1938
0076 120000      R     LCALL   L?0628
                                           ; SOURCE LINE # 1939
                                           ; SOURCE LINE # 1940
0079         ?C0306:
0079 900000      R     MOV     DPTR,#retryNum
007C E0                MOVX    A,@DPTR
007D 04                INC     A
007E F0                MOVX    @DPTR,A
007F E0                MOVX    A,@DPTR
0080 C3                CLR     C
0081 9406              SUBB    A,#06H
0083 40AE              JC      ?C0304
                                           ; SOURCE LINE # 1943
0085         ?C0310:
0085 22                RET     
             ; FUNCTION Lock_ShipMode (END)

             ; FUNCTION OEM_PollingBatData_TASK (BEGIN)
                                           ; SOURCE LINE # 1951
                                           ; SOURCE LINE # 1952
                                           ; SOURCE LINE # 1956
0000 900000      E     MOV     DPTR,#BATTUPDATEFW
0003 E0                MOVX    A,@DPTR
0004 30E003            JNB     ACC.0,$ + 6H
0007 020000      R     LJMP    ?C0343
                                           ; SOURCE LINE # 1957
                                           ; SOURCE LINE # 1958
000A 900000      E     MOV     DPTR,#Batpollstep1
000D E0                MOVX    A,@DPTR
000E FF                MOV     R7,A
000F 120000      R     LCALL   _GetBatData
                                           ; SOURCE LINE # 1960
0012 900000      E     MOV     DPTR,#Batpollstep1
0015 E0                MOVX    A,@DPTR
0016 04                INC     A
0017 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1962
0018 E0                MOVX    A,@DPTR
0019 C3                CLR     C
001A 941B              SUBB    A,#01BH
001C 5003              JNC     $ + 5H
001E 020000      R     LJMP    ?C0312
                                           ; SOURCE LINE # 1963
                                           ; SOURCE LINE # 1970
0021 900000      E     MOV     DPTR,#Get_Batt_debounce_count
0024 E0                MOVX    A,@DPTR
0025 9403              SUBB    A,#03H
0027 4003              JC      $ + 5H
0029 020000      R     LJMP    ?C0313
                                           ; SOURCE LINE # 1971
                                           ; SOURCE LINE # 1972
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 117 

002C 900000      E     MOV     DPTR,#Get_Batt_debounce_hash1
002F E0                MOVX    A,@DPTR
0030 900000      E     MOV     DPTR,#Get_Batt_debounce_hash2
0033 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1973
0034 E4                CLR     A
0035 900000      E     MOV     DPTR,#Get_Batt_debounce_hash1
0038 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1974
0039 900000      R     MOV     DPTR,#i
003C F0                MOVX    @DPTR,A
003D         ?C0314:
                                           ; SOURCE LINE # 1975
                                           ; SOURCE LINE # 1976
003D 120000      R     LCALL   L?0605
0040 701E              JNZ     ?C0317
                                           ; SOURCE LINE # 1977
0042 900000      E     MOV     DPTR,#Get_Batt_debounce_hash1
0045 E0                MOVX    A,@DPTR
0046 FF                MOV     R7,A
0047 900000      R     MOV     DPTR,#i
004A E0                MOVX    A,@DPTR
004B 120000      R     LCALL   L?0580
004E FC                MOV     R4,A
004F 7401              MOV     A,#01H
0051 93                MOVC    A,@A+DPTR
0052 F582              MOV     DPL,A
0054 8C83              MOV     DPH,R4
0056 E0                MOVX    A,@DPTR
0057 FE                MOV     R6,A
0058 EF                MOV     A,R7
0059 6E                XRL     A,R6
005A 900000      E     MOV     DPTR,#Get_Batt_debounce_hash1
005D F0                MOVX    @DPTR,A
005E 803E              SJMP    ?C0316
0060         ?C0317:
                                           ; SOURCE LINE # 1979
                                           ; SOURCE LINE # 1980
0060 900000      R     MOV     DPTR,#i
0063 E0                MOVX    A,@DPTR
0064 120000      R     LCALL   L?0580
0067 FE                MOV     R6,A
0068 7401              MOV     A,#01H
006A 93                MOVC    A,@A+DPTR
;---- Variable 'ptr' assigned to Register 'R4/R5' ----
006B FD                MOV     R5,A
006C CC                XCH     A,R4
006D EE                MOV     A,R6
006E CC                XCH     A,R4
                                           ; SOURCE LINE # 1981
006F E4                CLR     A
0070 900000      R     MOV     DPTR,#j
0073 F0                MOVX    @DPTR,A
0074         ?C0319:
0074 120000      R     LCALL   L?0605
0077 FF                MOV     R7,A
0078 900000      R     MOV     DPTR,#j
007B E0                MOVX    A,@DPTR
007C C3                CLR     C
007D 9F                SUBB    A,R7
007E 501E              JNC     ?C0316
                                           ; SOURCE LINE # 1982
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 118 

                                           ; SOURCE LINE # 1983
0080 900000      E     MOV     DPTR,#Get_Batt_debounce_hash1
0083 E0                MOVX    A,@DPTR
0084 FF                MOV     R7,A
0085 8D82              MOV     DPL,R5
0087 8C83              MOV     DPH,R4
0089 E0                MOVX    A,@DPTR
008A FE                MOV     R6,A
008B EF                MOV     A,R7
008C 6E                XRL     A,R6
008D 900000      E     MOV     DPTR,#Get_Batt_debounce_hash1
0090 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1984
0091 0D                INC     R5
0092 BD0001            CJNE    R5,#00H,?C0507
0095 0C                INC     R4
0096         ?C0507:
                                           ; SOURCE LINE # 1985
0096 900000      R     MOV     DPTR,#j
0099 E0                MOVX    A,@DPTR
009A 04                INC     A
009B F0                MOVX    @DPTR,A
009C 80D6              SJMP    ?C0319
                                           ; SOURCE LINE # 1986
                                           ; SOURCE LINE # 1987
009E         ?C0316:
009E 900000      R     MOV     DPTR,#i
00A1 E0                MOVX    A,@DPTR
00A2 04                INC     A
00A3 F0                MOVX    @DPTR,A
00A4 E0                MOVX    A,@DPTR
00A5 6409              XRL     A,#09H
00A7 7094              JNZ     ?C0314
00A9         ?C0315:
                                           ; SOURCE LINE # 1989
00A9 900000      E     MOV     DPTR,#Get_Batt_debounce_hash1
00AC E0                MOVX    A,@DPTR
00AD FF                MOV     R7,A
00AE 900000      E     MOV     DPTR,#Get_Batt_debounce_hash2
00B1 E0                MOVX    A,@DPTR
00B2 6F                XRL     A,R7
00B3 7008              JNZ     ?C0322
                                           ; SOURCE LINE # 1990
00B5 900000      E     MOV     DPTR,#Get_Batt_debounce_count
00B8 E0                MOVX    A,@DPTR
00B9 04                INC     A
00BA F0                MOVX    @DPTR,A
00BB 8005              SJMP    ?C0323
00BD         ?C0322:
                                           ; SOURCE LINE # 1992
00BD E4                CLR     A
00BE 900000      E     MOV     DPTR,#Get_Batt_debounce_count
00C1 F0                MOVX    @DPTR,A
00C2         ?C0323:
                                           ; SOURCE LINE # 1994
00C2 E4                CLR     A
00C3 900000      E     MOV     DPTR,#Batpollstep1
00C6 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1996
00C7 900000      E     MOV     DPTR,#Get_Batt_debounce_count
00CA E0                MOVX    A,@DPTR
00CB C3                CLR     C
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 119 

00CC 9403              SUBB    A,#03H
00CE 5003              JNC     $ + 5H
00D0 020000      R     LJMP    ?C0312
                                           ; SOURCE LINE # 1997
                                           ; SOURCE LINE # 1998
00D3 900000      E     MOV     DPTR,#BATTMANUFACTURE
00D6 E0                MOVX    A,@DPTR
00D7 B45314            CJNE    A,#053H,?C0325
00DA A3                INC     DPTR
00DB E0                MOVX    A,@DPTR
00DC 6441              XRL     A,#041H
00DE 6004              JZ      ?C0326
00E0 E0                MOVX    A,@DPTR
00E1 B4610A            CJNE    A,#061H,?C0325
00E4         ?C0326:
                                           ; SOURCE LINE # 1999
00E4 900000      E     MOV     DPTR,#nBatteryStatL
00E7 E0                MOVX    A,@DPTR
00E8 4410              ORL     A,#010H
00EA F0                MOVX    @DPTR,A
00EB 020000      R     LJMP    ?C0312
00EE         ?C0325:
                                           ; SOURCE LINE # 2000
00EE 900000      E     MOV     DPTR,#BATTMANUFACTURE
00F1 E0                MOVX    A,@DPTR
00F2 B4530E            CJNE    A,#053H,?C0328
00F5 A3                INC     DPTR
00F6 E0                MOVX    A,@DPTR
00F7 B44F09            CJNE    A,#04FH,?C0328
                                           ; SOURCE LINE # 2001
00FA 900000      E     MOV     DPTR,#nBatteryStatL
00FD E0                MOVX    A,@DPTR
00FE 4420              ORL     A,#020H
0100 F0                MOVX    @DPTR,A
0101 8079              SJMP    ?C0312
0103         ?C0328:
                                           ; SOURCE LINE # 2002
0103 900000      E     MOV     DPTR,#BATTMANUFACTURE
0106 E0                MOVX    A,@DPTR
0107 B45013            CJNE    A,#050H,?C0330
010A A3                INC     DPTR
010B E0                MOVX    A,@DPTR
010C 6441              XRL     A,#041H
010E 6004              JZ      ?C0331
0110 E0                MOVX    A,@DPTR
0111 B46109            CJNE    A,#061H,?C0330
0114         ?C0331:
                                           ; SOURCE LINE # 2003
0114 900000      E     MOV     DPTR,#nBatteryStatL
0117 E0                MOVX    A,@DPTR
0118 4440              ORL     A,#040H
011A F0                MOVX    @DPTR,A
011B 805F              SJMP    ?C0312
011D         ?C0330:
                                           ; SOURCE LINE # 2004
011D 900000      E     MOV     DPTR,#BATTMANUFACTURE
0120 E0                MOVX    A,@DPTR
0121 B4530E            CJNE    A,#053H,?C0333
0124 A3                INC     DPTR
0125 E0                MOVX    A,@DPTR
0126 B45509            CJNE    A,#055H,?C0333
                                           ; SOURCE LINE # 2005
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 120 

0129 900000      E     MOV     DPTR,#nBatteryStatL
012C E0                MOVX    A,@DPTR
012D 4450              ORL     A,#050H
012F F0                MOVX    @DPTR,A
0130 804A              SJMP    ?C0312
0132         ?C0333:
                                           ; SOURCE LINE # 2006
0132 900000      E     MOV     DPTR,#BATTMANUFACTURE
0135 E0                MOVX    A,@DPTR
0136 B44C0E            CJNE    A,#04CH,?C0335
0139 A3                INC     DPTR
013A E0                MOVX    A,@DPTR
013B B44709            CJNE    A,#047H,?C0335
                                           ; SOURCE LINE # 2007
013E 900000      E     MOV     DPTR,#nBatteryStatL
0141 E0                MOVX    A,@DPTR
0142 4430              ORL     A,#030H
0144 F0                MOVX    @DPTR,A
0145 8035              SJMP    ?C0312
0147         ?C0335:
                                           ; SOURCE LINE # 2008
0147 900000      E     MOV     DPTR,#BATTMANUFACTURE
014A E0                MOVX    A,@DPTR
014B B44313            CJNE    A,#043H,?C0337
014E A3                INC     DPTR
014F E0                MOVX    A,@DPTR
0150 6450              XRL     A,#050H
0152 6004              JZ      ?C0338
0154 E0                MOVX    A,@DPTR
0155 B47009            CJNE    A,#070H,?C0337
0158         ?C0338:
                                           ; SOURCE LINE # 2009
0158 900000      E     MOV     DPTR,#nBatteryStatL
015B E0                MOVX    A,@DPTR
015C 4460              ORL     A,#060H
015E F0                MOVX    @DPTR,A
015F 801B              SJMP    ?C0312
0161         ?C0337:
                                           ; SOURCE LINE # 2010
0161 900000      E     MOV     DPTR,#BATTMANUFACTURE
0164 E0                MOVX    A,@DPTR
0165 B45314            CJNE    A,#053H,?C0312
0168 A3                INC     DPTR
0169 E0                MOVX    A,@DPTR
016A B44D0F            CJNE    A,#04DH,?C0312
                                           ; SOURCE LINE # 2011
016D 900000      E     MOV     DPTR,#nBatteryStatL
0170 E0                MOVX    A,@DPTR
0171 4470              ORL     A,#070H
0173 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2012
                                           ; SOURCE LINE # 2013
0174 8006              SJMP    ?C0312
0176         ?C0313:
                                           ; SOURCE LINE # 2015
                                           ; SOURCE LINE # 2016
0176 900000      E     MOV     DPTR,#Batpollstep1
0179 7409              MOV     A,#09H
017B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2017
                                           ; SOURCE LINE # 2018
017C         ?C0312:
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 121 

                                           ; SOURCE LINE # 2019
017C 120000      R     LCALL   UpdateNameSpace
                                           ; SOURCE LINE # 2020
017F 120000      R     LCALL   ChkLENOVOPMFW
                                           ; SOURCE LINE # 2021
0182 120000      R     LCALL   ChkGoTarget
                                           ; SOURCE LINE # 2022
0185 120000      R     LCALL   Chk_Battery_Full
                                           ; SOURCE LINE # 2023
0188 900000      E     MOV     DPTR,#GPUProchotONCnt
018B E0                MOVX    A,@DPTR
018C 7009              JNZ     ?C0342
                                           ; SOURCE LINE # 2024
                                           ; SOURCE LINE # 2025
018E 120000      R     LCALL   ChkBattery_OTP
                                           ; SOURCE LINE # 2026
0191 120000      R     LCALL   ChkBattery_LTP
                                           ; SOURCE LINE # 2030
0194 120000      R     LCALL   CkkBattery_RSOCLow
                                           ; SOURCE LINE # 2031
0197         ?C0342:
                                           ; SOURCE LINE # 2032
0197 120000      R     LCALL   ChkBattery_LowVoltage
                                           ; SOURCE LINE # 2033
019A 120000      R     LCALL   ChkBattery_FCCchg
                                           ; SOURCE LINE # 2034
019D 120000      R     LCALL   ChkAvgCurrent
                                           ; SOURCE LINE # 2035
01A0 120000      R     LCALL   ChkS3DCRSOC
                                           ; SOURCE LINE # 2036
01A3 120000      R     LCALL   ChkS3ResumeRSOC
                                           ; SOURCE LINE # 2037
01A6 120000      R     LCALL   RSOC1Pto0P_ShutdownCheck
                                           ; SOURCE LINE # 2038
                                           ; SOURCE LINE # 2039
01A9         ?C0343:
01A9 22                RET     
             ; FUNCTION OEM_PollingBatData_TASK (END)

             ; FUNCTION WriteSmartChgIC (BEGIN)
                                           ; SOURCE LINE # 2045
                                           ; SOURCE LINE # 2046
                                           ; SOURCE LINE # 2049
0000 900000      E     MOV     DPTR,#GPDRB
0003 E0                MOVX    A,@DPTR
0004 30E003            JNB     ACC.0,?C0345
0007 D3                SETB    C
0008 8001              SJMP    ?C0346
000A         ?C0345:
000A C3                CLR     C
000B         ?C0346:
000B 4003              JC      $ + 5H
000D 020000      R     LJMP    ?C0347
0010         ?C0344:
                                           ; SOURCE LINE # 2052
0010 900000      E     MOV     DPTR,#CHGIC_ptr
0013 E0                MOVX    A,@DPTR
0014 C3                CLR     C
0015 9404              SUBB    A,#04H
0017 4004              JC      ?C0348
                                           ; SOURCE LINE # 2053
0019 E4                CLR     A
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 122 

001A F0                MOVX    @DPTR,A
001B 8006              SJMP    ?C0349
001D         ?C0348:
                                           ; SOURCE LINE # 2055
001D 900000      E     MOV     DPTR,#CHGIC_ptr
0020 E0                MOVX    A,@DPTR
0021 04                INC     A
0022 F0                MOVX    @DPTR,A
0023         ?C0349:
                                           ; SOURCE LINE # 2056
0023 900000      E     MOV     DPTR,#CHGIC_ptr
0026 E0                MOVX    A,@DPTR
0027 14                DEC     A
0028 601F              JZ      ?C0352
002A 14                DEC     A
002B 6028              JZ      ?C0353
002D 14                DEC     A
002E 6071              JZ      ?C0362
0030 14                DEC     A
0031 7003              JNZ     $ + 5H
0033 020000      R     LJMP    ?C0372
0036 2404              ADD     A,#04H
0038 6003              JZ      $ + 5H
003A 020000      R     LJMP    ?C0347
                                           ; SOURCE LINE # 2057
                                           ; SOURCE LINE # 2058
003D         ?C0351:
                                           ; SOURCE LINE # 2059
003D 7414              MOV     A,#014H
                                           ; SOURCE LINE # 2060
003F 120000      R     LCALL   L?0629
0042 7A00        E     MOV     R2,#HIGH nBattCharCurrentL
0044 7900        E     MOV     R1,#LOW nBattCharCurrentL
                                           ; SOURCE LINE # 2061
0046 020000      R     LJMP    ?C0555
                                           ; SOURCE LINE # 2062
0049         ?C0352:
                                           ; SOURCE LINE # 2063
0049 7415              MOV     A,#015H
                                           ; SOURCE LINE # 2064
004B 120000      R     LCALL   L?0629
004E 7A00        E     MOV     R2,#HIGH nChargingVoltL
0050 7900        E     MOV     R1,#LOW nChargingVoltL
0052         ?C0548:
                                           ; SOURCE LINE # 2065
0052 020000      R     LJMP    ?C0555
                                           ; SOURCE LINE # 2066
0055         ?C0353:
                                           ; SOURCE LINE # 2069
0055 900000      E     MOV     DPTR,#AdapterID
0058 E0                MOVX    A,@DPTR
0059 6403              XRL     A,#03H
005B 6004              JZ      ?C0355
005D E0                MOVX    A,@DPTR
005E B40407            CJNE    A,#04H,?C0354
0061         ?C0355:
                                           ; SOURCE LINE # 2070
                                           ; SOURCE LINE # 2071
0061 900000      E     MOV     DPTR,#CHGIC_InputCurrentH
0064 7418              MOV     A,#018H
                                           ; SOURCE LINE # 2072
                                           ; SOURCE LINE # 2073
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 123 

0066 8027              SJMP    ?C0552
0068         ?C0354:
                                           ; SOURCE LINE # 2074
0068 900000      E     MOV     DPTR,#AdapterID
006B E0                MOVX    A,@DPTR
006C 7007              JNZ     ?C0357
                                           ; SOURCE LINE # 2075
                                           ; SOURCE LINE # 2076
006E 900000      E     MOV     DPTR,#CHGIC_InputCurrentH
0071 7410              MOV     A,#010H
0073         ?C0550:
                                           ; SOURCE LINE # 2077
                                           ; SOURCE LINE # 2078
0073 801A              SJMP    ?C0552
0075         ?C0357:
                                           ; SOURCE LINE # 2079
0075 900000      E     MOV     DPTR,#AdapterID
0078 E0                MOVX    A,@DPTR
0079 B40207            CJNE    A,#02H,?C0359
                                           ; SOURCE LINE # 2080
                                           ; SOURCE LINE # 2081
007C 900000      E     MOV     DPTR,#CHGIC_InputCurrentH
007F 740C              MOV     A,#0CH
0081         ?C0551:
                                           ; SOURCE LINE # 2082
                                           ; SOURCE LINE # 2083
0081 800C              SJMP    ?C0552
0083         ?C0359:
                                           ; SOURCE LINE # 2084
0083 900000      E     MOV     DPTR,#AdapterID
0086 E0                MOVX    A,@DPTR
0087 B4050B            CJNE    A,#05H,?C0356
                                           ; SOURCE LINE # 2085
                                           ; SOURCE LINE # 2086
008A 900000      E     MOV     DPTR,#CHGIC_InputCurrentH
008D 7408              MOV     A,#08H
008F         ?C0552:
008F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2087
0090 E4                CLR     A
0091 900000      E     MOV     DPTR,#CHGIC_InputCurrentL
0094 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2088
0095         ?C0356:
                                           ; SOURCE LINE # 2091
0095 743F              MOV     A,#03FH
                                           ; SOURCE LINE # 2092
0097 120000      R     LCALL   L?0671
009A 7A00        E     MOV     R2,#HIGH CHGIC_InputCurrentL
009C 7900        E     MOV     R1,#LOW CHGIC_InputCurrentL
009E         ?C0549:
                                           ; SOURCE LINE # 2093
009E 020000      R     LJMP    ?C0555
                                           ; SOURCE LINE # 2094
00A1         ?C0362:
                                           ; SOURCE LINE # 2095
00A1 900000      E     MOV     DPTR,#CHGIC_ReadCmd0x12L
00A4 E0                MOVX    A,@DPTR
00A5 7009              JNZ     ?C0364
00A7 900000      E     MOV     DPTR,#CHGIC_ReadCmd0x12H
00AA E0                MOVX    A,@DPTR
00AB 7003              JNZ     $ + 5H
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 124 

00AD 020000      R     LJMP    ?C0347
00B0         ?C0364:
                                           ; SOURCE LINE # 2096
                                           ; SOURCE LINE # 2098
00B0 120000      R     LCALL   L?0661
00B3 20E014            JB      ACC.0,?C0554
00B6 900000      E     MOV     DPTR,#EC_BatteryStatusL
00B9 E0                MOVX    A,@DPTR
00BA 30E502            JNB     ACC.5,?C0365
00BD         ?C0366:
                                           ; SOURCE LINE # 2099
                                           ; SOURCE LINE # 2100
                                           ; SOURCE LINE # 2101
00BD 800B              SJMP    ?C0554
00BF         ?C0365:
                                           ; SOURCE LINE # 2103
                                           ; SOURCE LINE # 2104
00BF 120000      R     LCALL   L?0634
00C2 30E00E            JNB     ACC.0,?C0368
00C5 120000      R     LCALL   L?0615
00C8 7009              JNZ     ?C0368
                                           ; SOURCE LINE # 2105
                                           ; SOURCE LINE # 2106
00CA         ?C0554:
00CA 900000      E     MOV     DPTR,#CHGIC_WriteCmd0x12L
00CD E0                MOVX    A,@DPTR
00CE 4401              ORL     A,#01H
00D0 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2107
00D1 8007              SJMP    ?C0367
00D3         ?C0368:
                                           ; SOURCE LINE # 2109
                                           ; SOURCE LINE # 2110
00D3 900000      E     MOV     DPTR,#CHGIC_WriteCmd0x12L
00D6 E0                MOVX    A,@DPTR
00D7 54FE              ANL     A,#0FEH
00D9 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2111
                                           ; SOURCE LINE # 2112
00DA         ?C0367:
                                           ; SOURCE LINE # 2114
00DA 120000      R     LCALL   L?0662
00DD FF                MOV     R7,A
00DE 900000      E     MOV     DPTR,#inhibit2sec
00E1 E0                MOVX    A,@DPTR
00E2 4F                ORL     A,R7
00E3 FF                MOV     R7,A
00E4 900000      E     MOV     DPTR,#ACOFF_SOURCE
00E7 E0                MOVX    A,@DPTR
00E8 4F                ORL     A,R7
00E9 6007              JZ      ?C0370
                                           ; SOURCE LINE # 2115
                                           ; SOURCE LINE # 2116
00EB 900000      E     MOV     DPTR,#CHGIC_WriteCmd0x12L
00EE E0                MOVX    A,@DPTR
00EF 4401              ORL     A,#01H
00F1 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2117
00F2         ?C0370:
                                           ; SOURCE LINE # 2119
00F2 7412              MOV     A,#012H
                                           ; SOURCE LINE # 2120
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 125 

00F4 120000      R     LCALL   L?0671
00F7 7A00        E     MOV     R2,#HIGH CHGIC_WriteCmd0x12L
00F9 7900        E     MOV     R1,#LOW CHGIC_WriteCmd0x12L
00FB         ?C0553:
                                           ; SOURCE LINE # 2121
00FB 800C              SJMP    ?C0555
                                           ; SOURCE LINE # 2123
                                           ; SOURCE LINE # 2125
                                           ; SOURCE LINE # 2126
                                           ; SOURCE LINE # 2128
00FD         ?C0372:
                                           ; SOURCE LINE # 2129
00FD 900000      R     MOV     DPTR,#sCmd
0100 7437              MOV     A,#037H
0102 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2130
0103 7B01              MOV     R3,#01H
0105 7A00        E     MOV     R2,#HIGH CHGIC_WriteCmd0x37L
0107 7900        E     MOV     R1,#LOW CHGIC_WriteCmd0x37L
0109         ?C0555:
0109 A3                INC     DPTR
010A 120000      E     LCALL   ?C?PSTXDATA
                                           ; SOURCE LINE # 2131
                                           ; SOURCE LINE # 2148
                                           ; SOURCE LINE # 2150
010D         ?C0350:
                                           ; SOURCE LINE # 2151
010D 900000      R     MOV     DPTR,#sCmd
0110 E0                MOVX    A,@DPTR
0111 900000      E     MOV     DPTR,#?_bRWSMBus?BYTE+03H
0114 F0                MOVX    @DPTR,A
0115 900000      R     MOV     DPTR,#sData
0118 120000      E     LCALL   ?C?PLDXDATA
011B CF                XCH     A,R7
011C E9                MOV     A,R1
011D CF                XCH     A,R7
011E 900000      E     MOV     DPTR,#?_bRWSMBus?BYTE+04H
0121 EA                MOV     A,R2
0122 F0                MOVX    @DPTR,A
0123 A3                INC     DPTR
0124 EF                MOV     A,R7
0125 120000      R     LCALL   L?0583
0128 120000      E     LCALL   _bRWSMBus
012B EF                MOV     A,R7
012C 7003              JNZ     ?C0347
                                           ; SOURCE LINE # 2152
                                           ; SOURCE LINE # 2153
012E 120000      R     LCALL   L?0608
                                           ; SOURCE LINE # 2154
                                           ; SOURCE LINE # 2155
0131         ?C0347:
0131 22                RET     
             ; FUNCTION WriteSmartChgIC (END)

             ; FUNCTION ReadSmartChgIC (BEGIN)
                                           ; SOURCE LINE # 2167
                                           ; SOURCE LINE # 2168
                                           ; SOURCE LINE # 2171
                                           ; SOURCE LINE # 2172
0000 900000      E     MOV     DPTR,#CHGIC_ptr
0003 E0                MOVX    A,@DPTR
0004 25E0              ADD     A,ACC
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 126 

0006 25E0              ADD     A,ACC
0008 2400        R     ADD     A,#LOW ReadChgIcCmdTable
000A F582              MOV     DPL,A
000C E4                CLR     A
000D 3400        R     ADDC    A,#HIGH ReadChgIcCmdTable
000F F583              MOV     DPH,A
0011 E4                CLR     A
0012 93                MOVC    A,@A+DPTR
0013 FF                MOV     R7,A
0014 900000      E     MOV     DPTR,#CHGIC_ptr
0017 E0                MOVX    A,@DPTR
0018 25E0              ADD     A,ACC
001A 25E0              ADD     A,ACC
001C 2400        R     ADD     A,#LOW ReadChgIcCmdTable+01H
001E F582              MOV     DPL,A
0020 E4                CLR     A
0021 3400        R     ADDC    A,#HIGH ReadChgIcCmdTable+01H
0023 F583              MOV     DPH,A
0025 E4                CLR     A
0026 93                MOVC    A,@A+DPTR
0027 FD                MOV     R5,A
0028 7401              MOV     A,#01H
002A 93                MOVC    A,@A+DPTR
002B 900000      E     MOV     DPTR,#?_bRWSMBus?BYTE+04H
002E CD                XCH     A,R5
002F F0                MOVX    @DPTR,A
0030 A3                INC     DPTR
0031 ED                MOV     A,R5
0032 F0                MOVX    @DPTR,A
0033 900000      E     MOV     DPTR,#?_bRWSMBus?BYTE+03H
0036 EF                MOV     A,R7
0037 F0                MOVX    @DPTR,A
0038 E4                CLR     A
0039 900000      E     MOV     DPTR,#?_bRWSMBus?BYTE+06H
003C F0                MOVX    @DPTR,A
003D 7B12              MOV     R3,#012H
003F 7D0C              MOV     R5,#0CH
0041 7F01              MOV     R7,#01H
0043 120000      E     LCALL   _bRWSMBus
0046 EF                MOV     A,R7
0047 7003              JNZ     ?C0376
                                           ; SOURCE LINE # 2176
                                           ; SOURCE LINE # 2177
0049 120000      R     LCALL   L?0609
                                           ; SOURCE LINE # 2178
                                           ; SOURCE LINE # 2179
                                           ; SOURCE LINE # 2180
004C         ?C0376:
004C 22                RET     
             ; FUNCTION ReadSmartChgIC (END)

             ; FUNCTION Chk_Shutdown_Volt (BEGIN)
                                           ; SOURCE LINE # 2182
                                           ; SOURCE LINE # 2183
                                           ; SOURCE LINE # 2189
0000 900000      E     MOV     DPTR,#BATTMANUFACTURE
0003 E0                MOVX    A,@DPTR
0004 B44C11            CJNE    A,#04CH,?C0377
0007 A3                INC     DPTR
0008 E0                MOVX    A,@DPTR
0009 B4470C            CJNE    A,#047H,?C0377
                                           ; SOURCE LINE # 2190
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 127 

                                           ; SOURCE LINE # 2191
000C 900000      R     MOV     DPTR,#cutoff_volt
000F 7420              MOV     A,#020H
0011 F0                MOVX    @DPTR,A
0012 A3                INC     DPTR
0013 743A              MOV     A,#03AH
0015 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2192
0016 800A              SJMP    ?C0378
0018         ?C0377:
                                           ; SOURCE LINE # 2194
                                           ; SOURCE LINE # 2195
0018 900000      R     MOV     DPTR,#cutoff_volt
001B 7421              MOV     A,#021H
001D F0                MOVX    @DPTR,A
001E A3                INC     DPTR
001F 7434              MOV     A,#034H
0021 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2196
0022         ?C0378:
                                           ; SOURCE LINE # 2199
0022 900000      E     MOV     DPTR,#nPresentVoltH
0025 E0                MOVX    A,@DPTR
0026 900000      E     MOV     DPTR,#nPresentVoltL
                                           ; SOURCE LINE # 2201
0029 120000      R     LCALL   L?0635
002C 900000      R     MOV     DPTR,#cutoff_volt+01H
002F E0                MOVX    A,@DPTR
0030 9500        E     SUBB    A,ITempW01+01H
0032 900000      R     MOV     DPTR,#cutoff_volt
0035 E0                MOVX    A,@DPTR
0036 9500        E     SUBB    A,ITempW01
0038 4015              JC      ?C0379
                                           ; SOURCE LINE # 2202
                                           ; SOURCE LINE # 2203
003A 900000      E     MOV     DPTR,#BatLowCnt
003D E0                MOVX    A,@DPTR
003E 04                INC     A
003F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2204
0040 E0                MOVX    A,@DPTR
0041 9406              SUBB    A,#06H
0043 400F              JC      ?C0383
0045 120000      R     LCALL   L?0607
0048 600A              JZ      ?C0383
004A E0                MOVX    A,@DPTR
004B B43306            CJNE    A,#033H,?C0383
                                           ; SOURCE LINE # 2205
                                           ; SOURCE LINE # 2209
                                           ; SOURCE LINE # 2210
004E 22                RET     
004F         ?C0379:
                                           ; SOURCE LINE # 2212
                                           ; SOURCE LINE # 2213
004F E4                CLR     A
0050 900000      E     MOV     DPTR,#BatLowCnt
0053 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2214
                                           ; SOURCE LINE # 2215
0054         ?C0383:
0054 22                RET     
             ; FUNCTION Chk_Shutdown_Volt (END)
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 128 


             ; FUNCTION Chk_BAT1PERCL_5 (BEGIN)
                                           ; SOURCE LINE # 2219
                                           ; SOURCE LINE # 2220
                                           ; SOURCE LINE # 2221
0000 900000      E     MOV     DPTR,#BAT1PERCL
0003 E0                MOVX    A,@DPTR
0004 D3                SETB    C
0005 9400              SUBB    A,#00H
0007 500F              JNC     ?C0384
0009 900000      E     MOV     DPTR,#nBattery0x16L
000C E0                MOVX    A,@DPTR
000D 30E608            JNB     ACC.6,?C0384
                                           ; SOURCE LINE # 2222
                                           ; SOURCE LINE # 2225
0010 900000      E     MOV     DPTR,#BatteryAlarm
0013 E0                MOVX    A,@DPTR
0014 4408              ORL     A,#08H
0016 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2226
0017 22                RET     
0018         ?C0384:
                                           ; SOURCE LINE # 2228
                                           ; SOURCE LINE # 2229
0018 900000      E     MOV     DPTR,#BatteryAlarm
001B E0                MOVX    A,@DPTR
001C 30E305            JNB     ACC.3,?C0388
                                           ; SOURCE LINE # 2230
                                           ; SOURCE LINE # 2231
001F E0                MOVX    A,@DPTR
0020 54F7              ANL     A,#0F7H
0022 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2232
0023 E0                MOVX    A,@DPTR
                                           ; SOURCE LINE # 2233
                                           ; SOURCE LINE # 2235
                                           ; SOURCE LINE # 2236
                                           ; SOURCE LINE # 2237
                                           ; SOURCE LINE # 2238
0024         ?C0388:
0024 22                RET     
             ; FUNCTION Chk_BAT1PERCL_5 (END)

             ; FUNCTION Chk_BatSMbusFailCount (BEGIN)
                                           ; SOURCE LINE # 2242
                                           ; SOURCE LINE # 2243
                                           ; SOURCE LINE # 2246
0000 900000      E     MOV     DPTR,#nBattErrorCnt
0003 E0                MOVX    A,@DPTR
0004 701C              JNZ     ?C0389
                                           ; SOURCE LINE # 2247
                                           ; SOURCE LINE # 2248
0006 900000      E     MOV     DPTR,#nStopChgStat3L
0009 E0                MOVX    A,@DPTR
000A 54FB              ANL     A,#0FBH
000C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2249
000D 900000      E     MOV     DPTR,#Bat1_FPChgFlag
0010 E0                MOVX    A,@DPTR
0011 54FE              ANL     A,#0FEH
0013 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2250
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 129 

0014 120000      R     LCALL   Chk_BAT1PERCL_5
                                           ; SOURCE LINE # 2251
0017 900000      E     MOV     DPTR,#nBattery0x16L
001A E0                MOVX    A,@DPTR
001B 20E603            JB      ACC.6,$ + 6H
001E 020000      R     LJMP    ?C0391
                                           ; SOURCE LINE # 2252
                                           ; SOURCE LINE # 2254
0021 22                RET     
                                           ; SOURCE LINE # 2256
0022         ?C0389:
                                           ; SOURCE LINE # 2259
0022 900000      E     MOV     DPTR,#SYS_STATUS
0025 E0                MOVX    A,@DPTR
0026 20E734            JB      ACC.7,?C0392
                                           ; SOURCE LINE # 2260
                                           ; SOURCE LINE # 2262
0029 120000      R     LCALL   RST_ChgTimeOutCnt
                                           ; SOURCE LINE # 2264
002C 900000      E     MOV     DPTR,#nBattErrorCnt
002F E0                MOVX    A,@DPTR
0030 B41E03            CJNE    A,#01EH,?C0393
                                           ; SOURCE LINE # 2265
                                           ; SOURCE LINE # 2271
0033 120000      R     LCALL   L?0628
                                           ; SOURCE LINE # 2272
0036         ?C0393:
                                           ; SOURCE LINE # 2273
0036 900000      E     MOV     DPTR,#nBattErrorCnt
0039 E0                MOVX    A,@DPTR
003A C3                CLR     C
003B 9496              SUBB    A,#096H
003D 4060              JC      ?C0391
                                           ; SOURCE LINE # 2274
                                           ; SOURCE LINE # 2278
003F 120000      R     LCALL   L?0626
                                           ; SOURCE LINE # 2279
0042 900000      E     MOV     DPTR,#nBattErrorCnt
0045 7497              MOV     A,#097H
0047 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2280
0048 120000      R     LCALL   L?0607
004B 6005              JZ      ?C0396
004D E0                MOVX    A,@DPTR
004E 6433              XRL     A,#033H
0050 704D              JNZ     ?C0391
0052         ?C0396:
                                           ; SOURCE LINE # 2281
                                           ; SOURCE LINE # 2282
0052 120000      R     LCALL   L?0658
                                           ; SOURCE LINE # 2283
0055 7F0E              MOV     R7,#0EH
0057 120000      E     LCALL   _ProcessSID
                                           ; SOURCE LINE # 2284
005A 020000      R     LJMP    RSMRST_shutdown
                                           ; SOURCE LINE # 2285
                                           ; SOURCE LINE # 2287
                                           ; SOURCE LINE # 2288
005D         ?C0392:
                                           ; SOURCE LINE # 2290
                                           ; SOURCE LINE # 2292
005D 900000      E     MOV     DPTR,#SYS_STATUS
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 130 

0060 E0                MOVX    A,@DPTR
0061 30E73B            JNB     ACC.7,?C0391
                                           ; SOURCE LINE # 2293
                                           ; SOURCE LINE # 2294
0064 900000      E     MOV     DPTR,#nBattErrorCnt
0067 E0                MOVX    A,@DPTR
0068 601F              JZ      ?C0399
006A E0                MOVX    A,@DPTR
006B C3                CLR     C
006C 941E              SUBB    A,#01EH
006E 5019              JNC     ?C0399
                                           ; SOURCE LINE # 2295
                                           ; SOURCE LINE # 2297
0070 E4                CLR     A
0071 900000      E     MOV     DPTR,#nBattCharCurrentL
0074 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2298
0075 900000      E     MOV     DPTR,#nBattCharCurrentH
0078 04                INC     A
0079 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2299
007A 900000      E     MOV     DPTR,#nChargingVoltL
007D 7440              MOV     A,#040H
007F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2300
0080 900000      E     MOV     DPTR,#nChargingVoltH
0083 7431              MOV     A,#031H
0085 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2304
0086 120000      R     LCALL   L?0626
                                           ; SOURCE LINE # 2305
0089         ?C0399:
                                           ; SOURCE LINE # 2306
0089 900000      E     MOV     DPTR,#nBattErrorCnt
008C E0                MOVX    A,@DPTR
008D C3                CLR     C
008E 941E              SUBB    A,#01EH
0090 400D              JC      ?C0391
                                           ; SOURCE LINE # 2307
                                           ; SOURCE LINE # 2314
0092 120000      R     LCALL   RST_ChgTimeOutCnt
                                           ; SOURCE LINE # 2315
0095 900000      E     MOV     DPTR,#nStopChgStat3L
0098 E0                MOVX    A,@DPTR
0099 4404              ORL     A,#04H
009B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2317
009C 120000      R     LCALL   L?0628
                                           ; SOURCE LINE # 2318
                                           ; SOURCE LINE # 2319
                                           ; SOURCE LINE # 2320
                                           ; SOURCE LINE # 2321
009F         ?C0391:
009F 22                RET     
             ; FUNCTION Chk_BatSMbusFailCount (END)

             ; FUNCTION Chk_CHG_TimeOut (BEGIN)
                                           ; SOURCE LINE # 2325
                                           ; SOURCE LINE # 2326
                                           ; SOURCE LINE # 2327
0000 900000      E     MOV     DPTR,#nBattTempCnt
0003 E0                MOVX    A,@DPTR
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 131 

0004 C3                CLR     C
0005 940A              SUBB    A,#0AH
0007 4068              JC      ?C0402
0009         ?C0401:
                                           ; SOURCE LINE # 2329
0009 900000      E     MOV     DPTR,#CHGIC_ReadCmd0x12L
000C E0                MOVX    A,@DPTR
000D 20E061            JB      ACC.0,?C0402
0010         ?C0403:
                                           ; SOURCE LINE # 2332
0010 900000      E     MOV     DPTR,#nBattCharCurrentH
0013 E0                MOVX    A,@DPTR
0014 D3                SETB    C
0015 9401              SUBB    A,#01H
0017 500D              JNC     ?C0405
0019 E0                MOVX    A,@DPTR
001A B4012A            CJNE    A,#01H,?C0404
001D 900000      E     MOV     DPTR,#nBattCharCurrentL
0020 E0                MOVX    A,@DPTR
0021 C3                CLR     C
0022 94F4              SUBB    A,#0F4H
0024 4021              JC      ?C0404
0026         ?C0405:
                                           ; SOURCE LINE # 2333
                                           ; SOURCE LINE # 2334
                                           ; SOURCE LINE # 2335
0026 120000      R     LCALL   L?0659
0029 120000      R     LCALL   L?0602
                                           ; SOURCE LINE # 2336
002C C3                CLR     C
002D 900000      E     MOV     DPTR,#FastChgTimeOutCnt+01H
0030 E0                MOVX    A,@DPTR
0031 94D0              SUBB    A,#0D0H
0033 900000      E     MOV     DPTR,#FastChgTimeOutCnt
0036 E0                MOVX    A,@DPTR
0037 9402              SUBB    A,#02H
0039 4036              JC      ?C0402
                                           ; SOURCE LINE # 2337
                                           ; SOURCE LINE # 2338
003B 7402              MOV     A,#02H
003D F0                MOVX    @DPTR,A
003E A3                INC     DPTR
003F 74D1              MOV     A,#0D1H
0041 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2339
0042 900000      E     MOV     DPTR,#nStopChgStat3L
                                           ; SOURCE LINE # 2340
                                           ; SOURCE LINE # 2341
0045 8026              SJMP    ?C0556
0047         ?C0404:
                                           ; SOURCE LINE # 2343
                                           ; SOURCE LINE # 2344
0047 E4                CLR     A
0048 900000      E     MOV     DPTR,#FastChgTimeOutCnt
004B F0                MOVX    @DPTR,A
004C A3                INC     DPTR
004D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2345
004E 900000      E     MOV     DPTR,#TrickleChgTimeOutCnt
0051 120000      R     LCALL   L?0602
                                           ; SOURCE LINE # 2346
0054 C3                CLR     C
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 132 

0055 900000      E     MOV     DPTR,#TrickleChgTimeOutCnt+01H
0058 E0                MOVX    A,@DPTR
0059 94E0              SUBB    A,#0E0H
005B 900000      E     MOV     DPTR,#TrickleChgTimeOutCnt
005E E0                MOVX    A,@DPTR
005F 9401              SUBB    A,#01H
0061 400E              JC      ?C0402
                                           ; SOURCE LINE # 2347
                                           ; SOURCE LINE # 2348
0063 7401              MOV     A,#01H
0065 F0                MOVX    @DPTR,A
0066 A3                INC     DPTR
0067 74E1              MOV     A,#0E1H
0069 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2349
006A 900000      E     MOV     DPTR,#nStopChgStat3H
006D         ?C0556:
006D E0                MOVX    A,@DPTR
006E 4401              ORL     A,#01H
0070 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2350
                                           ; SOURCE LINE # 2351
                                           ; SOURCE LINE # 2352
0071         ?C0402:
0071 22                RET     
             ; FUNCTION Chk_CHG_TimeOut (END)

             ; FUNCTION ChkBattery_abnormal (BEGIN)
                                           ; SOURCE LINE # 2354
                                           ; SOURCE LINE # 2355
                                           ; SOURCE LINE # 2356
0000 900000      E     MOV     DPTR,#BATTUPDATEFW
0003 E0                MOVX    A,@DPTR
0004 20E049            JB      ACC.0,?C0410
0007         ?C0409:
                                           ; SOURCE LINE # 2359
0007 900000      E     MOV     DPTR,#ChkBattery_abnormal_status
000A E0                MOVX    A,@DPTR
000B 24FE              ADD     A,#0FEH
000D 602E              JZ      ?C0416
000F 2402              ADD     A,#02H
0011 7034              JNZ     ?C0417
                                           ; SOURCE LINE # 2360
                                           ; SOURCE LINE # 2361
0013         ?C0412:
                                           ; SOURCE LINE # 2362
0013 900000      E     MOV     DPTR,#CHGIC_ReadCmd0x12L
0016 E0                MOVX    A,@DPTR
0017 30E02D            JNB     ACC.0,?C0557
001A 900000      E     MOV     DPTR,#nNowCurrentH
001D E0                MOVX    A,@DPTR
001E 20E726            JB      ACC.7,?C0557
0021 900000      E     MOV     DPTR,#nNowCurrentL
0024 E0                MOVX    A,@DPTR
0025 D3                SETB    C
0026 9464              SUBB    A,#064H
0028 401D              JC      ?C0557
                                           ; SOURCE LINE # 2364
                                           ; SOURCE LINE # 2365
002A 900000      E     MOV     DPTR,#ChkBattery_abnormal_count
002D E0                MOVX    A,@DPTR
002E 04                INC     A
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 133 

002F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2366
0030 E0                MOVX    A,@DPTR
0031 D3                SETB    C
0032 9405              SUBB    A,#05H
0034 401A              JC      ?C0410
                                           ; SOURCE LINE # 2367
                                           ; SOURCE LINE # 2368
0036 900000      E     MOV     DPTR,#ChkBattery_abnormal_status
0039 7402              MOV     A,#02H
003B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2369
                                           ; SOURCE LINE # 2370
003C 22                RET     
                                           ; SOURCE LINE # 2377
003D         ?C0416:
                                           ; SOURCE LINE # 2379
003D 900000      E     MOV     DPTR,#ACOFF_SOURCE
0040 E0                MOVX    A,@DPTR
0041 4401              ORL     A,#01H
0043 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2380
0044 020000      R     LJMP    BATT_LEN_ON
                                           ; SOURCE LINE # 2382
                                           ; SOURCE LINE # 2383
0047         ?C0417:
                                           ; SOURCE LINE # 2384
0047         ?C0557:
0047 E4                CLR     A
0048 900000      E     MOV     DPTR,#ChkBattery_abnormal_status
004B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2385
004C 900000      E     MOV     DPTR,#ChkBattery_abnormal_count
004F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2386
                                           ; SOURCE LINE # 2387
                                           ; SOURCE LINE # 2388
0050         ?C0410:
0050 22                RET     
             ; FUNCTION ChkBattery_abnormal (END)

             ; FUNCTION _Compare_data (BEGIN)
                                           ; SOURCE LINE # 2391
0000 900000      R     MOV     DPTR,#buf1
0003 EE                MOV     A,R6
0004 F0                MOVX    @DPTR,A
0005 A3                INC     DPTR
0006 EF                MOV     A,R7
0007 F0                MOVX    @DPTR,A
0008 A3                INC     DPTR
0009 EC                MOV     A,R4
000A F0                MOVX    @DPTR,A
000B A3                INC     DPTR
000C ED                MOV     A,R5
000D F0                MOVX    @DPTR,A
;---- Variable 'count' assigned to Register 'R3' ----
                                           ; SOURCE LINE # 2392
000E         ?C0420:
                                           ; SOURCE LINE # 2394
                                           ; SOURCE LINE # 2395
000E 900000      R     MOV     DPTR,#buf2
0011 E0                MOVX    A,@DPTR
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 134 

0012 FE                MOV     R6,A
0013 A3                INC     DPTR
0014 E0                MOVX    A,@DPTR
0015 F582              MOV     DPL,A
0017 8E83              MOV     DPH,R6
0019 E0                MOVX    A,@DPTR
001A FF                MOV     R7,A
001B 900000      R     MOV     DPTR,#buf1
001E E0                MOVX    A,@DPTR
001F FC                MOV     R4,A
0020 A3                INC     DPTR
0021 E0                MOVX    A,@DPTR
0022 F582              MOV     DPL,A
0024 8C83              MOV     DPH,R4
0026 E0                MOVX    A,@DPTR
0027 6F                XRL     A,R7
0028 6003              JZ      ?C0421
002A 7F00              MOV     R7,#00H
002C 22                RET     
002D         ?C0421:
                                           ; SOURCE LINE # 2396
002D 900000      R     MOV     DPTR,#buf1
0030 120000      R     LCALL   L?0600
                                           ; SOURCE LINE # 2397
0033 900000      R     MOV     DPTR,#buf2
0036 120000      R     LCALL   L?0600
                                           ; SOURCE LINE # 2398
0039 DBD3              DJNZ    R3,?C0420
                                           ; SOURCE LINE # 2399
                                           ; SOURCE LINE # 2400
003B 7F01              MOV     R7,#01H
                                           ; SOURCE LINE # 2401
003D         ?C0422:
003D 22                RET     
             ; FUNCTION _Compare_data (END)

             ; FUNCTION Compare_Auth_Result (BEGIN)
                                           ; SOURCE LINE # 2403
                                           ; SOURCE LINE # 2404
                                           ; SOURCE LINE # 2407
0000 7E00        E     MOV     R6,#HIGH K
0002 7F00        E     MOV     R7,#LOW K
0004 7C00        E     MOV     R4,#HIGH RBATH0
0006 7D00        E     MOV     R5,#LOW RBATH0
0008 7B14              MOV     R3,#014H
000A 120000      R     LCALL   _Compare_data
000D EF                MOV     A,R7
000E 601F              JZ      ?C0423
                                           ; SOURCE LINE # 2408
                                           ; SOURCE LINE # 2409
0010 900000      E     MOV     DPTR,#nStopChgStat3H
0013 E0                MOVX    A,@DPTR
0014 54DF              ANL     A,#0DFH
0016 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2410
0017 900000      E     MOV     DPTR,#LENOVOBATT
001A E0                MOVX    A,@DPTR
001B 54FD              ANL     A,#0FDH
001D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2411
001E 900000      E     MOV     DPTR,#LV_Authen_Step_CNT
0021 E0                MOVX    A,@DPTR
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 135 

0022 54BF              ANL     A,#0BFH
0024 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2412
0025 E4                CLR     A
0026 900000      E     MOV     DPTR,#SHA1failCnt
0029 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2413
002A 900000      E     MOV     DPTR,#SHA1FailRetry
002D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2414
002E 22                RET     
002F         ?C0423:
                                           ; SOURCE LINE # 2416
                                           ; SOURCE LINE # 2417
002F 900000      E     MOV     DPTR,#SHA1failCnt
0032 E0                MOVX    A,@DPTR
0033 04                INC     A
0034 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2418
0035 E0                MOVX    A,@DPTR
0036 C3                CLR     C
0037 9404              SUBB    A,#04H
0039 5007              JNC     ?C0425
                                           ; SOURCE LINE # 2419
                                           ; SOURCE LINE # 2420
003B 900000      E     MOV     DPTR,#Service_Auth_Step
003E 7417              MOV     A,#017H
0040 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2421
0041 22                RET     
0042         ?C0425:
                                           ; SOURCE LINE # 2423
                                           ; SOURCE LINE # 2424
0042 900000      E     MOV     DPTR,#SHA1FailRetry
0045 E0                MOVX    A,@DPTR
0046 04                INC     A
0047 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2426
0048 E0                MOVX    A,@DPTR
0049 6403              XRL     A,#03H
004B 6008              JZ      ?C0427
004D E0                MOVX    A,@DPTR
004E C3                CLR     C
004F 940B              SUBB    A,#0BH
0051 5002              JNC     ?C0427
                                           ; SOURCE LINE # 2427
                                           ; SOURCE LINE # 2428
                                           ; SOURCE LINE # 2429
0053 801C              SJMP    ?C0558
0055         ?C0427:
                                           ; SOURCE LINE # 2430
0055 900000      E     MOV     DPTR,#SHA1FailRetry
0058 E0                MOVX    A,@DPTR
0059 B4031B            CJNE    A,#03H,?C0430
                                           ; SOURCE LINE # 2431
                                           ; SOURCE LINE # 2432
005C 900000      E     MOV     DPTR,#nStopChgStat3H
005F E0                MOVX    A,@DPTR
0060 4420              ORL     A,#020H
0062 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2433
0063 900000      E     MOV     DPTR,#LENOVOBATT
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 136 

0066 E0                MOVX    A,@DPTR
0067 4402              ORL     A,#02H
0069 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2434
006A 900000      E     MOV     DPTR,#LV_Authen_Step_CNT
006D E0                MOVX    A,@DPTR
006E 4440              ORL     A,#040H
0070 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2435
0071         ?C0558:
0071 900000      E     MOV     DPTR,#Service_Auth_Step
0074 7401              MOV     A,#01H
0076 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2436
                                           ; SOURCE LINE # 2437
                                           ; SOURCE LINE # 2438
                                           ; SOURCE LINE # 2439
0077         ?C0430:
0077 22                RET     
             ; FUNCTION Compare_Auth_Result (END)

             ; FUNCTION SendChallengeToBat (BEGIN)
                                           ; SOURCE LINE # 2441
                                           ; SOURCE LINE # 2442
                                           ; SOURCE LINE # 2444
0000 900000      E     MOV     DPTR,#?_bWSMBusBlock?BYTE+03H
0003 7427              MOV     A,#027H
0005 F0                MOVX    @DPTR,A
0006 7E00        E     MOV     R6,#HIGH BATchallenger
0008 A3                INC     DPTR
0009 7400        E     MOV     A,#HIGH BATchallenger
000B F0                MOVX    @DPTR,A
000C A3                INC     DPTR
000D 7400        E     MOV     A,#LOW BATchallenger
000F F0                MOVX    @DPTR,A
0010 A3                INC     DPTR
0011 7414              MOV     A,#014H
0013 F0                MOVX    @DPTR,A
0014 A3                INC     DPTR
0015 7401              MOV     A,#01H
0017 F0                MOVX    @DPTR,A
0018 7B16              MOV     R3,#016H
001A 7D94              MOV     R5,#094H
001C FF                MOV     R7,A
001D 120000      E     LCALL   _bWSMBusBlock
;---- Variable 'SMBus_work' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 2445
0020 EF                MOV     A,R7
0021 6003              JZ      ?C0431
                                           ; SOURCE LINE # 2446
0023 7F01              MOV     R7,#01H
0025 22                RET     
0026         ?C0431:
                                           ; SOURCE LINE # 2448
0026 7F00              MOV     R7,#00H
                                           ; SOURCE LINE # 2449
0028         ?C0432:
0028 22                RET     
             ; FUNCTION SendChallengeToBat (END)

             ; FUNCTION GetChallengeFromBat (BEGIN)
                                           ; SOURCE LINE # 2451
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 137 

                                           ; SOURCE LINE # 2452
                                           ; SOURCE LINE # 2453
0000 900000      E     MOV     DPTR,#?_bRSMBusBlock?BYTE+03H
0003 7428              MOV     A,#028H
0005 F0                MOVX    @DPTR,A
0006 7E00        E     MOV     R6,#HIGH RBATH0
0008 A3                INC     DPTR
0009 7400        E     MOV     A,#HIGH RBATH0
000B F0                MOVX    @DPTR,A
000C 7400        E     MOV     A,#LOW RBATH0
000E 120000      R     LCALL   L?0644
0011 120000      E     LCALL   _bRSMBusBlock
0014 EF                MOV     A,R7
0015 6003              JZ      ?C0433
                                           ; SOURCE LINE # 2454
0017 7F01              MOV     R7,#01H
0019 22                RET     
001A         ?C0433:
                                           ; SOURCE LINE # 2456
001A 7F00              MOV     R7,#00H
                                           ; SOURCE LINE # 2457
001C         ?C0434:
001C 22                RET     
             ; FUNCTION GetChallengeFromBat (END)

             ; FUNCTION _SetRandomKey (BEGIN)
                                           ; SOURCE LINE # 2459
;---- Variable 'N' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 2460
                                           ; SOURCE LINE # 2464
0000 EF                MOV     A,R7
0001 6401              XRL     A,#01H
0003 7031              JNZ     ?C0435
                                           ; SOURCE LINE # 2465
                                           ; SOURCE LINE # 2466
0005 7B01              MOV     R3,#01H
0007 7A00        E     MOV     R2,#HIGH BATchallenger
0009 7900        E     MOV     R1,#LOW BATchallenger
000B 900000      R     MOV     DPTR,#ptr
000E 120000      E     LCALL   ?C?PSTXDATA
                                           ; SOURCE LINE # 2467
0011 E4                CLR     A
0012 900000      R     MOV     DPTR,#i
0015 F0                MOVX    @DPTR,A
0016         ?C0436:
                                           ; SOURCE LINE # 2468
                                           ; SOURCE LINE # 2469
0016 120000      E     LCALL   rand
0019 900000      R     MOV     DPTR,#ptr
001C 120000      E     LCALL   ?C?PLDXDATA
001F EF                MOV     A,R7
0020 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 2470
0023 900000      R     MOV     DPTR,#ptr+01H
0026 120000      R     LCALL   L?0601
                                           ; SOURCE LINE # 2471
0029 900000      R     MOV     DPTR,#i
002C E0                MOVX    A,@DPTR
002D 04                INC     A
002E F0                MOVX    @DPTR,A
002F E0                MOVX    A,@DPTR
0030 C3                CLR     C
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 138 

0031 9414              SUBB    A,#014H
0033 40E1              JC      ?C0436
0035 22                RET     
                                           ; SOURCE LINE # 2494
0036         ?C0435:
                                           ; SOURCE LINE # 2496
                                           ; SOURCE LINE # 2499
0036 E4                CLR     A
0037 900000      E     MOV     DPTR,#N_Bit_Shift
003A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2500
003B 750000      E     MOV     ITempW01,#HIGH Hn0
003E 750000      E     MOV     ITempW01+01H,#LOW Hn0
                                           ; SOURCE LINE # 2501
0041 E500        E     MOV     A,ITempW01
0043 900000      E     MOV     DPTR,#AddrX_High
0046 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2502
0047 AF00        E     MOV     R7,ITempW01+01H
0049 EF                MOV     A,R7
004A 900000      E     MOV     DPTR,#AddrX_Low
004D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2503
004E 750000      E     MOV     ITempW01,#HIGH SHA1_W+010H
0051 750000      E     MOV     ITempW01+01H,#LOW SHA1_W+010H
                                           ; SOURCE LINE # 2504
0054 E500        E     MOV     A,ITempW01
0056 900000      E     MOV     DPTR,#AddrZ_High
0059 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2505
005A AF00        E     MOV     R7,ITempW01+01H
005C EF                MOV     A,R7
005D 900000      E     MOV     DPTR,#AddrZ_Low
                                           ; SOURCE LINE # 2506
0060 120000      R     LCALL   L?0574
                                           ; SOURCE LINE # 2509
                                           ; SOURCE LINE # 2510
                                           ; SOURCE LINE # 2511
                                           ; SOURCE LINE # 2514
                                           ; SOURCE LINE # 2515
                                           ; SOURCE LINE # 2516
0063 120000      R     LCALL   L?0573
                                           ; SOURCE LINE # 2519
                                           ; SOURCE LINE # 2520
                                           ; SOURCE LINE # 2521
                                           ; SOURCE LINE # 2524
                                           ; SOURCE LINE # 2525
                                           ; SOURCE LINE # 2526
0066 120000      R     LCALL   L?0573
                                           ; SOURCE LINE # 2527
                                           ; SOURCE LINE # 2528
0069         ?C0440:
0069 22                RET     
             ; FUNCTION _SetRandomKey (END)

             ; FUNCTION LV_BAT_Authentication (BEGIN)
                                           ; SOURCE LINE # 2532
                                           ; SOURCE LINE # 2533
                                           ; SOURCE LINE # 2540
0000 900000      E     MOV     DPTR,#Service_Auth_Step
0003 E0                MOVX    A,@DPTR
0004 120000      E     LCALL   ?C?CCASE
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 139 

0007 0000        R     DW      ?C0451
0009 00                DB      00H
000A 0000        R     DW      ?C0442
000C 01                DB      01H
000D 0000        R     DW      ?C0443
000F 15                DB      015H
0010 0000        R     DW      ?C0444
0012 16                DB      016H
0013 0000        R     DW      ?C0448
0015 17                DB      017H
0016 0000        R     DW      ?C0449
0018 18                DB      018H
0019 0000        R     DW      ?C0450
001B 19                DB      019H
001C 0000              DW      00H
001E 0000        R     DW      ?C0452
                                           ; SOURCE LINE # 2541
                                           ; SOURCE LINE # 2542
0020         ?C0442:
                                           ; SOURCE LINE # 2544
0020 7F01              MOV     R7,#01H
0022 120000      R     LCALL   _SetRandomKey
                                           ; SOURCE LINE # 2545
0025 900000      E     MOV     DPTR,#Service_Auth_Step
0028 7402              MOV     A,#02H
002A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2546
002B 22                RET     
                                           ; SOURCE LINE # 2547
002C         ?C0443:
                                           ; SOURCE LINE # 2548
002C 120000      R     LCALL   SendChallengeToBat
                                           ; SOURCE LINE # 2549
002F 900000      E     MOV     DPTR,#Service_Auth_Step
0032 7416              MOV     A,#016H
0034 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2550
0035 22                RET     
                                           ; SOURCE LINE # 2551
0036         ?C0444:
                                           ; SOURCE LINE # 2552
0036 7E00        E     MOV     R6,#HIGH BATchallenger
0038 7F00        E     MOV     R7,#LOW BATchallenger
003A 120000      E     LCALL   _sha1_auth
003D 900000      R     MOV     DPTR,#byte_sha1_pntr
0040 EE                MOV     A,R6
0041 F0                MOVX    @DPTR,A
0042 A3                INC     DPTR
0043 EF                MOV     A,R7
0044 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2553
0045 E4                CLR     A
0046 A3                INC     DPTR
0047 F0                MOVX    @DPTR,A
0048 A3                INC     DPTR
0049 F0                MOVX    @DPTR,A
004A         ?C0445:
                                           ; SOURCE LINE # 2554
                                           ; SOURCE LINE # 2555
004A 900000      R     MOV     DPTR,#byte_sha1_pntr
004D E0                MOVX    A,@DPTR
004E FE                MOV     R6,A
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 140 

004F A3                INC     DPTR
0050 E0                MOVX    A,@DPTR
0051 F582              MOV     DPL,A
0053 8E83              MOV     DPH,R6
0055 120000      E     LCALL   ?C?LLDXDATA
0058 EC                MOV     A,R4
0059 C0E0              PUSH    ACC
005B ED                MOV     A,R5
005C C0E0              PUSH    ACC
005E EE                MOV     A,R6
005F C0E0              PUSH    ACC
0061 EF                MOV     A,R7
0062 C0E0              PUSH    ACC
0064 900000      R     MOV     DPTR,#j
0067 E0                MOVX    A,@DPTR
0068 FE                MOV     R6,A
0069 A3                INC     DPTR
006A E0                MOVX    A,@DPTR
006B 7802              MOV     R0,#02H
006D         ?C0508:
006D C3                CLR     C
006E 33                RLC     A
006F CE                XCH     A,R6
0070 33                RLC     A
0071 CE                XCH     A,R6
0072 D8F9              DJNZ    R0,?C0508
0074 2400        E     ADD     A,#LOW K
0076 F582              MOV     DPL,A
0078 7400        E     MOV     A,#HIGH K
007A 3E                ADDC    A,R6
007B F583              MOV     DPH,A
007D D0E0              POP     ACC
007F FF                MOV     R7,A
0080 D0E0              POP     ACC
0082 FE                MOV     R6,A
0083 D0E0              POP     ACC
0085 FD                MOV     R5,A
0086 D0E0              POP     ACC
0088 FC                MOV     R4,A
0089 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 2556
008C 900000      R     MOV     DPTR,#byte_sha1_pntr
008F E4                CLR     A
0090 75F004            MOV     B,#04H
0093 120000      E     LCALL   ?C?IILDX
                                           ; SOURCE LINE # 2557
0096 900000      R     MOV     DPTR,#j
0099 120000      R     LCALL   L?0601
009C 900000      R     MOV     DPTR,#j
009F E0                MOVX    A,@DPTR
00A0 7004              JNZ     ?C0509
00A2 A3                INC     DPTR
00A3 E0                MOVX    A,@DPTR
00A4 6405              XRL     A,#05H
00A6         ?C0509:
00A6 70A2              JNZ     ?C0445
00A8         ?C0446:
                                           ; SOURCE LINE # 2558
00A8 900000      E     MOV     DPTR,#Service_Auth_Step
00AB 7417              MOV     A,#017H
00AD F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2559
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 141 

00AE 22                RET     
                                           ; SOURCE LINE # 2560
00AF         ?C0448:
                                           ; SOURCE LINE # 2561
00AF 900000      E     MOV     DPTR,#Service_Auth_Step
00B2 7418              MOV     A,#018H
00B4 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2562
00B5 22                RET     
                                           ; SOURCE LINE # 2563
00B6         ?C0449:
                                           ; SOURCE LINE # 2564
00B6 900000      E     MOV     DPTR,#Service_Auth_Step
00B9 7419              MOV     A,#019H
00BB F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2565
00BC 22                RET     
                                           ; SOURCE LINE # 2566
00BD         ?C0450:
                                           ; SOURCE LINE # 2567
00BD 120000      R     LCALL   GetChallengeFromBat
                                           ; SOURCE LINE # 2568
00C0 E4                CLR     A
00C1 900000      E     MOV     DPTR,#Service_Auth_Step
00C4 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2569
00C5 020000      R     LJMP    Compare_Auth_Result
                                           ; SOURCE LINE # 2570
                                           ; SOURCE LINE # 2571
00C8         ?C0451:
                                           ; SOURCE LINE # 2572
00C8 E4                CLR     A
00C9 900000      E     MOV     DPTR,#Service_Auth_Step
00CC F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2573
00CD 22                RET     
                                           ; SOURCE LINE # 2574
00CE         ?C0452:
                                           ; SOURCE LINE # 2575
00CE 900000      E     MOV     DPTR,#Service_Auth_Step
00D1 E0                MOVX    A,@DPTR
00D2 04                INC     A
00D3 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2576
                                           ; SOURCE LINE # 2577
                                           ; SOURCE LINE # 2578
00D4         ?C0453:
00D4 22                RET     
             ; FUNCTION LV_BAT_Authentication (END)

             ; FUNCTION Lenovo_Battery_EM80 (BEGIN)
                                           ; SOURCE LINE # 2581
                                           ; SOURCE LINE # 2582
                                           ; SOURCE LINE # 2583
0000 900000      E     MOV     DPTR,#EM8_TEST
0003 E0                MOVX    A,@DPTR
0004 704E              JNZ     ?C0454
                                           ; SOURCE LINE # 2584
                                           ; SOURCE LINE # 2585
0006 900000      E     MOV     DPTR,#Bat0x3ETempH
0009 E0                MOVX    A,@DPTR
000A 30E017            JNB     ACC.0,?C0455
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 142 

000D 900000      E     MOV     DPTR,#SYS_STATUS
0010 E0                MOVX    A,@DPTR
0011 30E710            JNB     ACC.7,?C0455
0014 900000      E     MOV     DPTR,#LENOVOPMFW
0017 E0                MOVX    A,@DPTR
0018 20E409            JB      ACC.4,?C0455
                                           ; SOURCE LINE # 2586
                                           ; SOURCE LINE # 2587
001B 900000      E     MOV     DPTR,#LENOVOBATT
001E E0                MOVX    A,@DPTR
001F 4401              ORL     A,#01H
0021 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2588
0022 8007              SJMP    ?C0456
0024         ?C0455:
                                           ; SOURCE LINE # 2590
                                           ; SOURCE LINE # 2591
0024 900000      E     MOV     DPTR,#LENOVOBATT
0027 E0                MOVX    A,@DPTR
0028 54FE              ANL     A,#0FEH
002A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2592
002B         ?C0456:
                                           ; SOURCE LINE # 2594
002B 900000      E     MOV     DPTR,#Bat0x00TempL
002E E0                MOVX    A,@DPTR
002F 5403              ANL     A,#03H
0031 900000      E     MOV     DPTR,#LENOVOBATT
0034 6006              JZ      ?C0457
                                           ; SOURCE LINE # 2595
                                           ; SOURCE LINE # 2596
0036 E0                MOVX    A,@DPTR
0037 4420              ORL     A,#020H
0039 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2597
003A 8004              SJMP    ?C0458
003C         ?C0457:
                                           ; SOURCE LINE # 2599
                                           ; SOURCE LINE # 2600
003C E0                MOVX    A,@DPTR
003D 54DF              ANL     A,#0DFH
003F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2601
0040         ?C0458:
                                           ; SOURCE LINE # 2603
0040 900000      E     MOV     DPTR,#Bat0x3ETempH
0043 E0                MOVX    A,@DPTR
0044 900000      E     MOV     DPTR,#LENOVOBATT
0047 30E105            JNB     ACC.1,?C0459
                                           ; SOURCE LINE # 2604
                                           ; SOURCE LINE # 2605
004A E0                MOVX    A,@DPTR
004B 4404              ORL     A,#04H
004D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2606
004E 22                RET     
004F         ?C0459:
                                           ; SOURCE LINE # 2608
                                           ; SOURCE LINE # 2609
004F E0                MOVX    A,@DPTR
0050 54FB              ANL     A,#0FBH
0052 F0                MOVX    @DPTR,A
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 143 

                                           ; SOURCE LINE # 2610
                                           ; SOURCE LINE # 2611
0053 22                RET     
0054         ?C0454:
                                           ; SOURCE LINE # 2613
                                           ; SOURCE LINE # 2614
0054 900000      E     MOV     DPTR,#EM8_TEST
0057 E0                MOVX    A,@DPTR
0058 900000      E     MOV     DPTR,#LENOVOBATT
005B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2615
                                           ; SOURCE LINE # 2616
005C         ?C0462:
005C 22                RET     
             ; FUNCTION Lenovo_Battery_EM80 (END)

             ; FUNCTION BATT_LEN_OFF (BEGIN)
                                           ; SOURCE LINE # 2619
                                           ; SOURCE LINE # 2620
                                           ; SOURCE LINE # 2621
0000 900000      E     MOV     DPTR,#CHGIC_WriteCmd0x12L
0003 E0                MOVX    A,@DPTR
0004 30E514            JNB     ACC.5,?C0465
                                           ; SOURCE LINE # 2622
                                           ; SOURCE LINE # 2623
0007 E0                MOVX    A,@DPTR
0008 54DF              ANL     A,#0DFH
                                           ; SOURCE LINE # 2624
000A 120000      R     LCALL   L?0581
000D 120000      E     LCALL   _bRWSMBus
0010 EF                MOV     A,R7
0011 7008              JNZ     ?C0465
                                           ; SOURCE LINE # 2625
                                           ; SOURCE LINE # 2626
0013 120000      R     LCALL   L?0609
                                           ; SOURCE LINE # 2627
0016 7F13              MOV     R7,#013H
0018 120000      E     LCALL   _RamDebug
                                           ; SOURCE LINE # 2628
                                           ; SOURCE LINE # 2629
                                           ; SOURCE LINE # 2630
001B         ?C0465:
001B 22                RET     
             ; FUNCTION BATT_LEN_OFF (END)

             ; FUNCTION BATT_LEN_ON (BEGIN)
                                           ; SOURCE LINE # 2631
                                           ; SOURCE LINE # 2632
                                           ; SOURCE LINE # 2633
0000 900000      E     MOV     DPTR,#CHGIC_WriteCmd0x12L
0003 E0                MOVX    A,@DPTR
0004 20E514            JB      ACC.5,?C0468
                                           ; SOURCE LINE # 2634
                                           ; SOURCE LINE # 2635
0007 E0                MOVX    A,@DPTR
0008 4420              ORL     A,#020H
                                           ; SOURCE LINE # 2636
000A 120000      R     LCALL   L?0581
000D 120000      E     LCALL   _bRWSMBus
0010 EF                MOV     A,R7
0011 7008              JNZ     ?C0468
                                           ; SOURCE LINE # 2637
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 144 

                                           ; SOURCE LINE # 2638
0013 120000      R     LCALL   L?0609
                                           ; SOURCE LINE # 2639
0016 7F12              MOV     R7,#012H
0018 120000      E     LCALL   _RamDebug
                                           ; SOURCE LINE # 2640
                                           ; SOURCE LINE # 2641
                                           ; SOURCE LINE # 2642
001B         ?C0468:
001B 22                RET     
             ; FUNCTION BATT_LEN_ON (END)

             ; FUNCTION Charger_3D_Config (BEGIN)
                                           ; SOURCE LINE # 2645
                                           ; SOURCE LINE # 2646
                                           ; SOURCE LINE # 2647
0000 900000      E     MOV     DPTR,#CHGIC_ReadCmd0x3DL
0003 7439              MOV     A,#039H
0005 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2648
0006 900000      E     MOV     DPTR,#CHGIC_ReadCmd0x3DH
0009 7451              MOV     A,#051H
000B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2649
000C 120000      R     LCALL   L?0641
000F A3                INC     DPTR
0010 7400        E     MOV     A,#LOW CHGIC_ReadCmd0x3DL
0012 120000      R     LCALL   L?0583
0015 120000      E     LCALL   _bRWSMBus
0018 EF                MOV     A,R7
0019 7003              JNZ     ?C0470
                                           ; SOURCE LINE # 2650
                                           ; SOURCE LINE # 2651
001B 120000      R     LCALL   L?0609
                                           ; SOURCE LINE # 2652
                                           ; SOURCE LINE # 2653
001E         ?C0470:
001E 22                RET     
             ; FUNCTION Charger_3D_Config (END)

             ; FUNCTION PollingCPURT (BEGIN)
                                           ; SOURCE LINE # 2748
                                           ; SOURCE LINE # 2749
                                           ; SOURCE LINE # 2751
;---- Variable 'j' assigned to Register 'R7' ----
0000 E4                CLR     A
0001 FF                MOV     R7,A
                                           ; SOURCE LINE # 2753
;---- Variable 'i' assigned to Register 'R6' ----
0002 FE                MOV     R6,A
0003         ?C0471:
                                           ; SOURCE LINE # 2754
                                           ; SOURCE LINE # 2755
0003 120000      R     LCALL   L?0584
0006 120000      R     LCALL   L?0664
0009 5003              JNC     ?C0474
                                           ; SOURCE LINE # 2756
                                           ; SOURCE LINE # 2757
000B 0F                INC     R7
                                           ; SOURCE LINE # 2758
000C 8010              SJMP    ?C0473
000E         ?C0474:
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 145 

                                           ; SOURCE LINE # 2759
000E 120000      R     LCALL   L?0584
0011 120000      R     LCALL   L?0664
0014 4008              JC      ?C0473
                                           ; SOURCE LINE # 2760
                                           ; SOURCE LINE # 2761
0016 120000      R     LCALL   L?0650
0019 900000      E     MOV     DPTR,#ThermistorCPU_TEMP
001C F0                MOVX    @DPTR,A
001D 22                RET     
                                           ; SOURCE LINE # 2763
                                           ; SOURCE LINE # 2764
001E         ?C0473:
001E 0E                INC     R6
001F EE                MOV     A,R6
0020 B457E0            CJNE    A,#057H,?C0471
                                           ; SOURCE LINE # 2765
0023         ?C0477:
0023 22                RET     
             ; FUNCTION PollingCPURT (END)

             ; FUNCTION PollingGPURT (BEGIN)
                                           ; SOURCE LINE # 2768
                                           ; SOURCE LINE # 2769
                                           ; SOURCE LINE # 2771
;---- Variable 'j' assigned to Register 'R7' ----
0000 E4                CLR     A
0001 FF                MOV     R7,A
                                           ; SOURCE LINE # 2773
;---- Variable 'i' assigned to Register 'R6' ----
0002 FE                MOV     R6,A
0003         ?C0478:
                                           ; SOURCE LINE # 2774
                                           ; SOURCE LINE # 2775
0003 120000      R     LCALL   L?0585
0006 120000      R     LCALL   L?0665
0009 5003              JNC     ?C0481
                                           ; SOURCE LINE # 2776
                                           ; SOURCE LINE # 2777
000B 0F                INC     R7
                                           ; SOURCE LINE # 2778
000C 8010              SJMP    ?C0480
000E         ?C0481:
                                           ; SOURCE LINE # 2779
000E 120000      R     LCALL   L?0585
0011 120000      R     LCALL   L?0665
0014 4008              JC      ?C0480
                                           ; SOURCE LINE # 2780
                                           ; SOURCE LINE # 2781
0016 120000      R     LCALL   L?0650
0019 900000      E     MOV     DPTR,#EXTVGA_TEMP
001C F0                MOVX    @DPTR,A
001D 22                RET     
                                           ; SOURCE LINE # 2783
                                           ; SOURCE LINE # 2784
001E         ?C0480:
001E 0E                INC     R6
001F EE                MOV     A,R6
0020 B457E0            CJNE    A,#057H,?C0478
                                           ; SOURCE LINE # 2785
0023         ?C0484:
0023 22                RET     
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 146 

             ; FUNCTION PollingGPURT (END)

             ; FUNCTION Clear_Batt_First_Used_Date (BEGIN)
                                           ; SOURCE LINE # 2789
                                           ; SOURCE LINE # 2790
                                           ; SOURCE LINE # 2791
0000 900000      E     MOV     DPTR,#SEL_STATE0
0003 E0                MOVX    A,@DPTR
0004 30E050            JNB     ACC.0,?C0488
                                           ; SOURCE LINE # 2792
                                           ; SOURCE LINE # 2793
0007 900000      E     MOV     DPTR,#pProject0
000A E0                MOVX    A,@DPTR
000B 30E149            JNB     ACC.1,?C0488
                                           ; SOURCE LINE # 2794
                                           ; SOURCE LINE # 2795
000E 120000      R     LCALL   L?0651
0011 A3                INC     DPTR
0012 7400        E     MOV     A,#LOW batteryFirstUsedDateL
0014 F0                MOVX    @DPTR,A
0015 A3                INC     DPTR
0016 7401              MOV     A,#01H
0018 F0                MOVX    @DPTR,A
0019 7B16              MOV     R3,#016H
001B 7D0C              MOV     R5,#0CH
001D FF                MOV     R7,A
001E 120000      E     LCALL   _bRWSMBus
0021 EF                MOV     A,R7
0022 7004              JNZ     ?C0487
                                           ; SOURCE LINE # 2796
                                           ; SOURCE LINE # 2797
0024 7FAE              MOV     R7,#0AEH
0026 8025              SJMP    ?C0559
                                           ; SOURCE LINE # 2799
0028         ?C0487:
                                           ; SOURCE LINE # 2800
0028 900000      E     MOV     DPTR,#batteryFirstUsedDateH
002B E0                MOVX    A,@DPTR
002C 7006              JNZ     ?C0490
002E 900000      E     MOV     DPTR,#batteryFirstUsedDateL
0031 E0                MOVX    A,@DPTR
0032 601C              JZ      ?C0489
0034         ?C0490:
                                           ; SOURCE LINE # 2801
                                           ; SOURCE LINE # 2802
0034 E4                CLR     A
0035 900000      E     MOV     DPTR,#batteryFirstUsedDateH
0038 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2803
0039 900000      E     MOV     DPTR,#batteryFirstUsedDateL
003C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2804
003D 120000      R     LCALL   L?0651
0040 7400        E     MOV     A,#LOW batteryFirstUsedDateL
0042 120000      R     LCALL   L?0569
0045 120000      E     LCALL   _bRWSMBus
0048 EF                MOV     A,R7
0049 700C              JNZ     ?C0488
                                           ; SOURCE LINE # 2805
                                           ; SOURCE LINE # 2806
004B 7FAD              MOV     R7,#0ADH
004D         ?C0559:
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 147 

004D 020000      E     LJMP    _RamDebug
                                           ; SOURCE LINE # 2808
                                           ; SOURCE LINE # 2809
0050         ?C0489:
                                           ; SOURCE LINE # 2811
                                           ; SOURCE LINE # 2812
0050 900000      E     MOV     DPTR,#pProject0
0053 E0                MOVX    A,@DPTR
0054 54FD              ANL     A,#0FDH
0056 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2813
                                           ; SOURCE LINE # 2814
                                           ; SOURCE LINE # 2816
                                           ; SOURCE LINE # 2817
0057         ?C0488:
0057 22                RET     
             ; FUNCTION Clear_Batt_First_Used_Date (END)

             ; FUNCTION Battery_Expresscharge (BEGIN)
                                           ; SOURCE LINE # 2824
                                           ; SOURCE LINE # 2825
                                           ; SOURCE LINE # 2827
0000 900000      E     MOV     DPTR,#EC_C_modeL
0003 E0                MOVX    A,@DPTR
0004 30E456            JNB     ACC.4,?C0494
                                           ; SOURCE LINE # 2828
                                           ; SOURCE LINE # 2830
0007         ?C0493:
                                           ; SOURCE LINE # 2832
0007 900000      E     MOV     DPTR,#OEMControl
000A E0                MOVX    A,@DPTR
000B 30E02B            JNB     ACC.0,?C0495
                                           ; SOURCE LINE # 2833
                                           ; SOURCE LINE # 2834
000E 900000      E     MOV     DPTR,#Bat0x3ETempH
0011 E0                MOVX    A,@DPTR
0012 20E448            JB      ACC.4,?C0494
                                           ; SOURCE LINE # 2835
                                           ; SOURCE LINE # 2837
0015 900000      E     MOV     DPTR,#SysPowState
0018 E0                MOVX    A,@DPTR
0019 900000      E     MOV     DPTR,#Bat0x3ETempH
001C B45506            CJNE    A,#055H,?C0497
                                           ; SOURCE LINE # 2838
                                           ; SOURCE LINE # 2839
001F E0                MOVX    A,@DPTR
0020 4410              ORL     A,#010H
0022 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2840
0023 8004              SJMP    ?C0498
0025         ?C0497:
                                           ; SOURCE LINE # 2842
                                           ; SOURCE LINE # 2843
0025 E0                MOVX    A,@DPTR
0026 54EF              ANL     A,#0EFH
0028 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2844
0029         ?C0498:
                                           ; SOURCE LINE # 2847
0029 120000      R     LCALL   L?0630
002C 120000      R     LCALL   L?0570
002F 120000      E     LCALL   _bRWSMBus
C51 COMPILER V8.12   OEM_BATTERY                                                           07/28/2018 12:03:45 PAGE 148 

0032 EF                MOV     A,R7
0033 6028              JZ      ?C0494
                                           ; SOURCE LINE # 2848
                                           ; SOURCE LINE # 2849
0035 7FD1              MOV     R7,#0D1H
                                           ; SOURCE LINE # 2850
                                           ; SOURCE LINE # 2851
                                           ; SOURCE LINE # 2852
                                           ; SOURCE LINE # 2853
0037 8019              SJMP    ?C0560
0039         ?C0495:
                                           ; SOURCE LINE # 2855
                                           ; SOURCE LINE # 2856
0039 900000      E     MOV     DPTR,#Bat0x3ETempH
003C E0                MOVX    A,@DPTR
003D 30E41D            JNB     ACC.4,?C0494
                                           ; SOURCE LINE # 2857
                                           ; SOURCE LINE # 2858
0040 E0                MOVX    A,@DPTR
0041 54EF              ANL     A,#0EFH
0043 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2859
0044 120000      R     LCALL   L?0630
0047 120000      R     LCALL   L?0570
004A 120000      E     LCALL   _bRWSMBus
004D EF                MOV     A,R7
004E 600D              JZ      ?C0494
                                           ; SOURCE LINE # 2860
                                           ; SOURCE LINE # 2861
0050 7FD2              MOV     R7,#0D2H
0052         ?C0560:
0052 120000      E     LCALL   _RamDebug
                                           ; SOURCE LINE # 2862
0055 900000      E     MOV     DPTR,#Bat0x3ETempH
0058 E0                MOVX    A,@DPTR
0059 FF                MOV     R7,A
005A 120000      E     LCALL   _RamDebug
                                           ; SOURCE LINE # 2863
                                           ; SOURCE LINE # 2864
                                           ; SOURCE LINE # 2865
                                           ; SOURCE LINE # 2866
005D         ?C0494:
005D 22                RET     
             ; FUNCTION Battery_Expresscharge (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   7360    ----
   CONSTANT SIZE    =    389    ----
   XDATA SIZE       =   ----      44
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)

C51 COMPILER V8.12   OEM_PECI                                                              07/28/2018 12:03:55 PAGE 1   


C51 COMPILER V8.12, COMPILATION OF MODULE OEM_PECI
OBJECT MODULE PLACED IN Code\Oem\OEM_PECI.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE Code\Oem\OEM_PECI.C LA WL(1) CD OT(9,SIZE) NOAREGS OR INCDIR(.\Code\CORE\IN
                    -CLUDE\;.\Code\OEM\INCLUDE\;.\Code\CHIP\INCLUDE\)

line level    source

   1          /*-----------------------------------------------------------------------------
   2           * TITLE: OEM_PECI.C
   3           *
   4           * Author : Dino
   5           *
   6           * Note : These functions are reference only.
   7           *        Please follow your project software specification to do some modification.
   8           *---------------------------------------------------------------------------*/
   9          
  10          #include <CORE_INCLUDE.H>
  11          #include <OEM_INCLUDE.H>
  12          
  13          // Hank 0104 +
  14          //-----------------------------------------------------------------------
  15          // Enable PECI interface function
  16          //-----------------------------------------------------------------------
  17          void Init_PECI(void)
  18          {
  19   1          PECI_ALT;                   // Set PECI pin to ALT.
  20   1          GCR2 |= PECIE;      // Enable PECI
  21   1      }
  22          //-----------------------------------------------------------------------
  23          // Init timer1 for interface time-out
  24          //-----------------------------------------------------------------------
  25          void PECI_InitTimeOutTimer(void)
  26          {
  27   1          TR1 = 0;                    // Disable timer1
  28   1          ET1 = 0;                    // Disable timer1 interrupt
  29   1              // TH1 = Timer_2ms>>8;        // Set timer1 counter 30ms//JERRYB0047£º
  30   1              // TL1 = Timer_2ms;           // Set timer1 counter 30ms//JERRYB0047£º
  31   1          TH1 = Timer_30ms>>8;        // Set timer1 counter 30ms//:+modify PECI time out timer
  32   1          TL1 = Timer_30ms;           // Set timer1 counter 30ms//£º+Modify PECI time out timer
  33   1          TF1 = 0;                    // Clear overflow flag
  34   1          TR1 = 1;                    // Enable timer1
  35   1      }
  36          //-----------------------------------------------------------------------
  37          // Enables the PECI host controller.
  38          //-----------------------------------------------------------------------
  39          void PECI_HostEnable(void)
  40          {
  41   1          HOCTLR |= (FIFOCLR+FCSERR_ABT+PECIHEN+CONCTRL);
  42   1      }
  43          //-----------------------------------------------------------------------
  44          // Check PECI host busy
  45          //-----------------------------------------------------------------------
  46          BYTE PECI_CheckHostBusy(void)
  47          {
  48   1              PECI_InitTimeOutTimer();
  49   1      
  50   1              while (!TF1) 
  51   1              {
  52   2                      if(IS_MASK_CLEAR(HOSTAR, HOBY))
  53   2                      {
  54   3                              TR1=0;
C51 COMPILER V8.12   OEM_PECI                                                              07/28/2018 12:03:55 PAGE 2   

  55   3                              TF1=0;
  56   3                              ET1=1;
  57   3                              PECI_TIMEOUT=0x01;      // set timeout flag
  58   3                              break;
  59   3                      }
  60   2              }
  61   1      
  62   1              if(TF1) 
  63   1              {
  64   2                      TR1=0;
  65   2                      TF1=0;
  66   2                      ET1=1;
  67   2                      PECI_TIMEOUT=0x00;      // clear timeout flag
  68   2                      return(0);
  69   2              }
  70   1              return(1);
  71   1      }
  72          //-----------------------------------------------------------------------
  73          // The PECI host controller will perform the desired transaction.
  74          //-----------------------------------------------------------------------
  75          void PECI_HostControl(BYTE control)
  76          {
  77   1          HOCTLR |= control;
  78   1      }
  79          //-----------------------------------------------------------------------
  80          // Check PECI host Finish
  81          //-----------------------------------------------------------------------
  82          BYTE PECI_CheckHostFinish(void)
  83          {
  84   1              BYTE error;
  85   1              BYTE status,result;
  86   1              error = 0x00;
  87   1      
  88   1              PECI_InitTimeOutTimer();
  89   1          while (!TF1)
  90   1              {
  91   2              status = HOSTAR;
  92   2      
  93   2              if(status!=0x00)
  94   2              {
  95   3                  if(IS_MASK_SET(status, FINISH))
  96   3                  {
  97   4                      TR1=0;
  98   4                      TF1=0;
  99   4                      error = 0x00;
 100   4                      break;
 101   4                  }
 102   3                  else if(IS_MASK_SET(status, RD_FCS_ERR))
 103   3                  {
 104   4                      error = 0x01;
 105   4                      break;
 106   4                  }
 107   3                  else if(IS_MASK_SET(status, WR_FCS_ERR))
 108   3                  {
 109   4                      error = 0x01;
 110   4                      break;
 111   4                  }
 112   3                  else if(IS_MASK_SET(status, EXTERR))
 113   3                  {
 114   4                      error = 0x02;
 115   4                      break;
 116   4                  }
C51 COMPILER V8.12   OEM_PECI                                                              07/28/2018 12:03:55 PAGE 3   

 117   3                  else if(IS_MASK_SET(status, BUSERR))
 118   3                  {
 119   4                      error = 0x02;
 120   4      
 121   4                      break;
 122   4                  }
 123   3                  else if(IS_MASK_SET(status, TEMPERR))
 124   3                  {
 125   4                      error = 0x03;
 126   4      
 127   4                      while(1)
 128   4                      break;
 129   4                  }
 130   3              }
 131   2          }
 132   1      
 133   1              if((TF1)||(error!=0x00))
 134   1              {
 135   2                      if(error == 0x02)                       // EXTERR and BUSERR error
 136   2                      {
 137   3                              SET_MASK(RSTC4,BIT4);                   // Reset PECI interface
 138   3                      }
 139   2                      result=0x00;                                            // error
 140   2              }
 141   1              else
 142   1              {
 143   2                      result=0x01;                                            // Finish
 144   2              }
 145   1      
 146   1              TR1=0;
 147   1              TF1=0;
 148   1              ET1=1;
 149   1              return(result);
 150   1      }
 151          //-----------------------------------------------------------------------
 152          // The function of clearing Host Status Register
 153          //-----------------------------------------------------------------------
 154          void ResetPECIStatus(void)
 155          {
 156   1          HOSTAR = 0xFE;
 157   1      }
 158          //-----------------------------------------------------------------------
 159          // Disable the PECI host controller.
 160          //-----------------------------------------------------------------------
 161          void PECI_HostDisable(void)
 162          {
 163   1          HOCTLR = 0x00;
 164   1      }
 165          //-----------------------------------------------------------------------
 166          // Process all PECI command
 167          //  return :
 168          //                      0x00 : done
 169          //                      0xFF : error
 170          //  Input :
 171          //                      (1) address : The address of processor
 172          //                      (2) WriteLen : write length
 173          //                      (3) ReadLen : read length
 174          //                      (4) CMD : PECI command
 175          //                      (5) *WriteBuf : buffer point of data write to PECI
 176          //                              format : 1) Host ID[7:1]&Retry[0]
 177          //                                               2) index
 178          //                                               3) LSB
C51 COMPILER V8.12   OEM_PECI                                                              07/28/2018 12:03:55 PAGE 4   

 179          //                                               4) MSB
 180          //                                               5) Data
 181          //                      (6) *ReadBuf : buffer point for read back data
 182          //-----------------------------------------------------------------------
 183          BYTE PECI_CMD(BYTE address, BYTE WL, BYTE RL, BYTE CMD, BYTE *WriteBuf, BYTE *ReadBuf)
 184          {
 185   1              BYTE done;
 186   1      
 187   1              done = 0xFF;
 188   1              PECI_HostEnable();
 189   1              HOTRADDR = address;
 190   1              HOWRLR = WL;
 191   1              HORDLR = RL;
 192   1              HOCMDR = CMD;
 193   1      
 194   1              for(ITempB01=0; ITempB01<WL; ITempB01++) 
 195   1              {
 196   2                      HOWRDR = *(WriteBuf + ITempB01);
 197   2              }
 198   1      
 199   1          if(PECI_CheckHostBusy())
 200   1              {
 201   2                  if (CMD == 0xA5)
 202   2                      PECI_HostControl(0x03);
 203   2                      else
 204   2                      PECI_HostControl(START);
 205   2              if(PECI_CheckHostFinish())
 206   2                      {
 207   3                      done = 0x00;
 208   3                  for(ITempB01=0x00;ITempB01<HORDLR;ITempB01++) 
 209   3                              {
 210   4                                      *(ReadBuf+ITempB01)=HORDDR;
 211   4                  }
 212   3              }
 213   2          }
 214   1              ResetPECIStatus();
 215   1          PECI_HostDisable();
 216   1      
 217   1              return(done);
 218   1      }
 219          
 220          // ----------------------------------------------------------------------------
 221          // The function of PECI3.0 Read the Maximum Allowed Processor Temperature
 222          // ----------------------------------------------------------------------------
 223          void PECI_ReadCPUTJMAX(void)
 224          {
 225   1      
 226   1          *(&PECIBuffer+0x00)=0x00;                           // Host ID
 227   1          *(&PECIBuffer+0x01)=PECI_Index_TTR;         // Index
 228   1          *(&PECIBuffer+0x02)=0x00;                           // LSB
 229   1          *(&PECIBuffer+0x03)=0x00;                           // MSB
 230   1          if( PECI_CMD(PECI_CPU_ADDR, 0x05, 0x05, PECI_CMD_RdPkgConfig, &PECIBuffer, &PECIBuffer) == 0x00 )
 231   1              {
 232   2              TJMAX = *(&PECIBuffer+0x03);            // get CPU Tj max from buffer
 233   2                      //if(TJMAX == 0x00)
 234   2                      //      RamDebug(0xBB);
 235   2                      PECI_Err_CNT = 0;       // Clear error count.
 236   2                      CLR_MASK(ERR_THMSTS, b3PECITempEr);             // Clear bit3 CPU read temperature error.
 237   2          }
 238   1              else
 239   1          {
 240   2              //Optimize read CPU temperature function.
C51 COMPILER V8.12   OEM_PECI                                                              07/28/2018 12:03:55 PAGE 5   

 241   2              SET_MASK(ERR_THMSTS, b3PECITempEr);
 242   2              //RamDebug(0xCC);
 243   2              /*
 244   2                      // When PECI fail,BIOS will trigger SMI to read DTS.
 245   2                      ECQEvent(DTS_READ_CPU_TEMP);    
 246   2                      TEMP_Buff_3 = TEMP_Buff_2;
 247   2                      TEMP_Buff_2 = TEMP_Buff_1;
 248   2                      TEMP_Buff_1 = nCpuTemp;
 249   2                      TEMP_Buff_3 = (TEMP_Buff_1 + TEMP_Buff_2 + TEMP_Buff_3)/3;      // CPU average temperature.
 250   2                      */
 251   2                      //Optimize read CPU temperature function.
 252   2                      /*
 253   2                      if ( PECI_Err_CNT == 0 )                // 3 Sec.
 254   2                      {
 255   2                              PECI_Err_CNT++;
 256   2                              Buffer_Key(0x11);        //ALT  
 257   2                              Buffer_Key(0x0C);       // F4 
 258   2      
 259   2                              Buffer_Key(0xF0);       
 260   2                              Buffer_Key(0x11);       
 261   2                              Buffer_Key(0xF0);       
 262   2                              Buffer_Key(0x0C);
 263   2                      }*/
 264   2              /*
 265   2                      PECI_Err_CNT++; // increase read fail count
 266   2                      if( IS_MASK_CLEAR(ERR_THMSTS, b3PECITempEr) )// Check bit3 is Error.
 267   2                      {
 268   2                              if ( PECI_Err_CNT > 7 )         // 3 Sec.
 269   2                              {
 270   2                                      SET_MASK(ERR_THMSTS, b3PECITempEr);     // Set bit3 CPU read temperature error.
 271   2                              }
 272   2                      }
 273   2                      else
 274   2                      {
 275   2                              if ( PECI_Err_CNT > 68 )                // 30 Sec.
 276   2                              {
 277   2                                      #if !EN_PwrSeqTest
 278   2                                      //SET_MASK(SysStatus,ERR_ShuntDownFlag);
 279   2                                      //ProcessSID(CPUCOMMFAIL_ID);   // 0x22 shutdown ID.
 280   2                                      PECI_Err_CNT = 0;                       // Clear error count.
 281   2                                      //RSMRST_LOW();
 282   2                                      //Delay1MS(1);
 283   2                                      //RSMRST_HI();
 284   2                                      #endif  // EN_PwrSeqTest
 285   2                              }
 286   2                      }*///When PECI fail,BIOS will trigger SMI to read DTS.
 287   2              }
 288   1      }
 289          // ----------------------------------------------------------------------------
 290          // The function of PECI3.0 CPU temperature read
 291          // ----------------------------------------------------------------------------
 292          void PECI_ReadCPUTemp(void)
 293          {
 294   1          WORD cputemp;
 295   1          BYTE tempoffset;
 296   1      
 297   1          if( PECI_CMD(PECI_CPU_ADDR, 0x01, 0x02, PECI_CMD_GetTemp, &PECIBuffer,&PECIBuffer) == 0x00 ) // Read O
             -K
 298   1          {
 299   2              PECI_GET_TEMPL = *(&PECIBuffer+0x00);
 300   2              PECI_GET_TEMPH = *(&PECIBuffer+0x01);
 301   2              cputemp = ((*(&PECIBuffer+0x01))<<8)+(*(&PECIBuffer+0x00));     // MSB+LSB
C51 COMPILER V8.12   OEM_PECI                                                              07/28/2018 12:03:55 PAGE 6   

 302   2              cputemp = (~cputemp)+1;                                 // 2's complement
 303   2              tempoffset = cputemp>>6;                                // 1/64 degrees centigrade
 304   2              if(tempoffset <= TJMAX)                                 // PECI thermal reading temperature readings are
 305   2              {                                                                               // not reliable at temperatures above Tjmax
 306   3                  nCpuTemp = TJMAX - tempoffset;              // Save temperature
 307   3              }
 308   2                      else
 309   2                      {       // Over Tjmax.
 310   3                              nCpuTemp = TJMAX;                                       // The same as TjMax.
 311   3                              //RamDebug(0xBB);
 312   3                      }
 313   2                      PECI_Err_CNT = 0;       // Clear error count.
 314   2                      CLR_MASK(ERR_THMSTS, b3PECITempEr);             // Clear bit3 CPU read temperature error.    
 315   2      
 316   2                      if ( IS_MASK_CLEAR(Fan_Debug_Temp,b0CPU_Temp) ) // Debug CPU Temperature, Engineer myself control.
 317   2                      {
 318   3                              if((nCpuTemp&0x80)==0x80)//Filter the value of the CPU temperature greater than 128//optimize G69
 319   3                      {
 320   4                              return;
 321   4                      }  
 322   3                      else
 323   3                              {
 324   4                                      TEMP_Buff_3 = TEMP_Buff_2;
 325   4                                      TEMP_Buff_2 = TEMP_Buff_1;
 326   4                                      TEMP_Buff_1 = nCpuTemp;
 327   4                                      TEMP_Buff_3 = (TEMP_Buff_1 + TEMP_Buff_2 + TEMP_Buff_3)/3;      // CPU average temperature.
 328   4                      }
 329   3                      }
 330   2          }
 331   1              else
 332   1              {
 333   2                      //Optimize read CPU temperature function.
 334   2                      SET_MASK(ERR_THMSTS, b3PECITempEr);
 335   2              //RamDebug(0xAA);
 336   2              /*
 337   2                      //When PECI fail,BIOS will trigger SMI to read DTS.
 338   2                      ECQEvent(DTS_READ_CPU_TEMP);    
 339   2                      TEMP_Buff_3 = TEMP_Buff_2;
 340   2                      TEMP_Buff_2 = TEMP_Buff_1;
 341   2                      TEMP_Buff_1 = nCpuTemp;
 342   2                      TEMP_Buff_3 = (TEMP_Buff_1 + TEMP_Buff_2 + TEMP_Buff_3)/3;      // CPU average temperature.
 343   2                      */
 344   2                              
 345   2                      //Optimize read CPU temperature function.               
 346   2                      /*
 347   2                      PECI_Err_CNT++; // increase read fail count
 348   2                      if( IS_MASK_CLEAR(ERR_THMSTS, b3PECITempEr) )// Check bit3 is Error.
 349   2                      {
 350   2                              if ( PECI_Err_CNT > 3 )         // 3 Sec.
 351   2                              {
 352   2                                      SET_MASK(ERR_THMSTS, b3PECITempEr);     // Set bit3 CPU read temperature error.
 353   2                                      Buffer_Key(0x11);        //ALT  
 354   2                              Buffer_Key(0x0C);       // F4 
 355   2      
 356   2                              Buffer_Key(0xF0);       
 357   2                                      Buffer_Key(0x11);       
 358   2                                      Buffer_Key(0xF0);       
 359   2                                      Buffer_Key(0x0C);
 360   2                              }
 361   2                      }
 362   2                      else
 363   2                      {
C51 COMPILER V8.12   OEM_PECI                                                              07/28/2018 12:03:55 PAGE 7   

 364   2                              if ( PECI_Err_CNT > 34 )                // 30 Sec.
 365   2                              {
 366   2                                      #if !EN_PwrSeqTest
 367   2                                      SET_MASK(SysStatus,ERR_ShuntDownFlag);
 368   2                                      ProcessSID(CPUCOMMFAIL_ID);     // 0x22 shutdown ID.
 369   2                                      PECI_Err_CNT = 0;                       // Clear error count.
 370   2                                      //RSMRST_LOW();
 371   2                                      //Delay1MS(1);
 372   2                                      //RSMRST_HI();
 373   2                                      #endif  // EN_PwrSeqTest
 374   2                              }
 375   2                      }*///// When PECI fail,BIOS will trigger SMI to read DTS.
 376   2              }
 377   1      }
 378          
 379          // ----------------------------------------------------------------------------
 380          // The function of setting PL2 watts
 381          // ----------------------------------------------------------------------------
 382          void PECI_SETPL2Watts(BYTE watts)
 383          {
 384   1              //T034- if( SystemNotS0 ) 
 385   1          if( SystemNotS0 )  //T034A+
 386   1              return;
 387   1      
 388   1              //Bit3~Bit5             0x01:XE(55w), 0x02:QuadCore(45w), 0x03:DualCore(35w), 0x04: UL(25w), 0x00: ULV(17w)
 389   1              if( (CPU_TYPE & 0x38) == 0x08 )
 390   1              {         // XE
 391   2                      cPacketPowerLimit1 = 55;
 392   2              }
 393   1              else if( (CPU_TYPE & 0x38) == 0x10 )
 394   1              {         // QuadCore
 395   2                      cPacketPowerLimit1 = 45;
 396   2              }
 397   1              else if( (CPU_TYPE & 0x38) == 0x18 )
 398   1              {         // DualCore
 399   2                      cPacketPowerLimit1 = 35;
 400   2              }
 401   1              else if( (CPU_TYPE & 0x38) == 0x20 )
 402   1              {         // UL
 403   2                      cPacketPowerLimit1 = 25;
 404   2              }
 405   1              else
 406   1              {
 407   2                      cPacketPowerLimit1 = 35;
 408   2              }
 409   1      
 410   1              if( watts == 0x01 )
 411   1              {
 412   2                      cWriteCurrentPL2 = (cPacketPowerLimit1 * 8)|0x8000;
 413   2              }
 414   1              else if( watts == 0x02 )
 415   1              {
 416   2                      cWriteCurrentPL2 = (cPacketPowerLimit1 * 10)|0x8000;
 417   2              }
 418   1              else
 419   1              {
 420   2                      return;
 421   2              }
 422   1      
 423   1      
 424   1            *(&PECIBuffer+0x00)=0x00;
 425   1            *(&PECIBuffer+0x01)=PECI_Index_PPL2;
C51 COMPILER V8.12   OEM_PECI                                                              07/28/2018 12:03:55 PAGE 8   

 426   1            *(&PECIBuffer+0x02)=0x00;
 427   1            *(&PECIBuffer+0x03)=0x00;
 428   1            *(&PECIBuffer+0x04)=(BYTE)cWriteCurrentPL2;
 429   1            *(&PECIBuffer+0x05)=(BYTE)(cWriteCurrentPL2>>8);
 430   1            *(&PECIBuffer+0x06)=0;
 431   1            *(&PECIBuffer+0x07)=0;
 432   1      
 433   1              if( PECI_CMD(PECI_CPU_ADDR, 0x0A, 0x01, PECI_CMD_WrPkgConfig, &PECIBuffer,&PECIBuffer) == 0x00 )
 434   1              {
 435   2                      /*
 436   2                      PECI_CMD(PECI_CPU_ADDR, 0x05, 0x05, PECI_CMD_RdPkgConfig, &PECIBuffer,&PECIBuffer);
 437   2      
 438   2                      if( (*(&PECIBuffer+0x01) == cWriteCurrentPL2) &&
 439   2                              (*(&PECIBuffer+0x02) == (cWriteCurrentPL2 >> 8)))
 440   2                      {
 441   2                              return;
 442   2                      }
 443   2                      */
 444   2                      return;
 445   2              }
 446   1              PECI_ERROR++;
 447   1      
 448   1              /*
 449   1              *(&PECIBuffer+0x00)=0x00;
 450   1              *(&PECIBuffer+0x01)=PECI_Index_PPL2;
 451   1              *(&PECIBuffer+0x02)=0x00;
 452   1              *(&PECIBuffer+0x03)=0x00;
 453   1              *(&PECIBuffer+0x04)= cWriteCurrentPL2;
 454   1              *(&PECIBuffer+0x05)=(cWriteCurrentPL2 >> 8);
 455   1              *(&PECIBuffer+0x06)=0;
 456   1              *(&PECIBuffer+0x07)=0;
 457   1              PECI_CMD(PECI_CPU_ADDR, 0x0A, 0x01, PECI_CMD_WrPkgConfig, &PECIBuffer,&PECIBuffer);
 458   1              */
 459   1      }
 460          //Optimize read CPU temperature function.
 461          void DTS_ReadCPUTemp(void)
 462          {
 463   1              ECQEvent(DTS_READ_CPU_TEMP);    
 464   1              //ANGELAG023: add start
 465   1              if((nCpuTemp&0x80)==0x80)//Filter the value of the CPU temperature greater than 128//optimize G69
 466   1              {
 467   2                      return;
 468   2              }  
 469   1              else
 470   1              {
 471   2              //ANGELAG023: add end   
 472   2                      TEMP_Buff_3 = TEMP_Buff_2;
 473   2                      TEMP_Buff_2 = TEMP_Buff_1;
 474   2                      TEMP_Buff_1 = nCpuTemp;
 475   2                      TEMP_Buff_3 = (TEMP_Buff_1 + TEMP_Buff_2 + TEMP_Buff_3)/3;      // CPU average temperature.
 476   2              } ////ANGELAG023: add 
 477   1      }
 478          //Optimize read CPU temperature function.
C51 COMPILER V8.12   OEM_PECI                                                              07/28/2018 12:03:55 PAGE 9   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION Com004E (BEGIN)
0000         L?0079:
0000 900000      E     MOV     DPTR,#TEMP_Buff_2
0003 E0                MOVX    A,@DPTR
0004 900000      E     MOV     DPTR,#TEMP_Buff_3
0007 F0                MOVX    @DPTR,A
0008 900000      E     MOV     DPTR,#TEMP_Buff_1
000B E0                MOVX    A,@DPTR
000C 900000      E     MOV     DPTR,#TEMP_Buff_2
000F F0                MOVX    @DPTR,A
0010 900000      E     MOV     DPTR,#nCpuTemp
0013 E0                MOVX    A,@DPTR
0014 900000      E     MOV     DPTR,#TEMP_Buff_1
0017 F0                MOVX    @DPTR,A
0018 900000      E     MOV     DPTR,#TEMP_Buff_2
001B E0                MOVX    A,@DPTR
001C FF                MOV     R7,A
001D 900000      E     MOV     DPTR,#TEMP_Buff_1
0020 E0                MOVX    A,@DPTR
0021 2F                ADD     A,R7
0022 FF                MOV     R7,A
0023 E4                CLR     A
0024 33                RLC     A
0025 FE                MOV     R6,A
0026 900000      E     MOV     DPTR,#TEMP_Buff_3
0029 E0                MOVX    A,@DPTR
002A 7C00              MOV     R4,#00H
002C 2F                ADD     A,R7
002D FF                MOV     R7,A
002E EC                MOV     A,R4
002F 3E                ADDC    A,R6
0030 FE                MOV     R6,A
0031 7D03              MOV     R5,#03H
0033 120000      E     LCALL   ?C?UIDIV
0036 EF                MOV     A,R7
0037 F0                MOVX    @DPTR,A
0038 22                RET     
0039         L?0080:
0039 900000      R     MOV     DPTR,#?_PECI_CMD?BYTE+03H
003C F0                MOVX    @DPTR,A
003D 7B01              MOV     R3,#01H
003F         L?0081:
003F 7A05              MOV     R2,#05H
0041 790E              MOV     R1,#0EH
0043 A3                INC     DPTR
0044 120000      E     LCALL   ?C?PSTXDATA
0047 900000      R     MOV     DPTR,#?_PECI_CMD?BYTE+07H
004A 020000      E     LJMP    ?C?PSTXDATA
004D         L?0082:
004D         L?0083:
004D 900000      E     MOV     DPTR,#CPU_TYPE
0050 E0                MOVX    A,@DPTR
0051 5438              ANL     A,#038H
0053 FE                MOV     R6,A
0054 22                RET     
0055         L?0084:
0055 E4                CLR     A
0056 900000      E     MOV     DPTR,#PECI_Err_CNT
0059 F0                MOVX    @DPTR,A
C51 COMPILER V8.12   OEM_PECI                                                              07/28/2018 12:03:55 PAGE 10  

005A 900000      E     MOV     DPTR,#ERR_THMSTS
005D E0                MOVX    A,@DPTR
005E 54F7              ANL     A,#0F7H
0060 F0                MOVX    @DPTR,A
0061 22                RET     
0062         L?0085:
0062 3E                ADDC    A,R6
0063 900000      R     MOV     DPTR,#cputemp
0066 F0                MOVX    @DPTR,A
0067 A3                INC     DPTR
0068 EF                MOV     A,R7
0069 F0                MOVX    @DPTR,A
006A 900000      R     MOV     DPTR,#cputemp
006D 22                RET     
006E         L?0086:
006E A3                INC     DPTR
006F         L?0087:
006F F0                MOVX    @DPTR,A
0070 A3                INC     DPTR
0071 E4                CLR     A
0072 F0                MOVX    @DPTR,A
0073 A3                INC     DPTR
0074 F0                MOVX    @DPTR,A
0075 22                RET     
0076         L?0088:
0076         L?0089:
0076 C28E              CLR     TR1
0078 C28F              CLR     TF1
007A D2AB              SETB    ET1
007C 22                RET     
             ; FUNCTION Com004E (END)

             ; FUNCTION Init_PECI (BEGIN)
                                           ; SOURCE LINE # 17
                                           ; SOURCE LINE # 18
                                           ; SOURCE LINE # 19
0000 E4                CLR     A
0001 900000      E     MOV     DPTR,#GPCRF6
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 20
0005 900000      E     MOV     DPTR,#GCR2
0008 E0                MOVX    A,@DPTR
0009 4410              ORL     A,#010H
000B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 21
000C 22                RET     
             ; FUNCTION Init_PECI (END)

             ; FUNCTION PECI_InitTimeOutTimer (BEGIN)
                                           ; SOURCE LINE # 25
                                           ; SOURCE LINE # 26
                                           ; SOURCE LINE # 27
0000 C28E              CLR     TR1
                                           ; SOURCE LINE # 28
0002 C2AB              CLR     ET1
                                           ; SOURCE LINE # 31
0004 758DA6            MOV     TH1,#0A6H
                                           ; SOURCE LINE # 32
0007 758B29            MOV     TL1,#029H
                                           ; SOURCE LINE # 33
000A C28F              CLR     TF1
                                           ; SOURCE LINE # 34
C51 COMPILER V8.12   OEM_PECI                                                              07/28/2018 12:03:55 PAGE 11  

000C D28E              SETB    TR1
                                           ; SOURCE LINE # 35
000E 22                RET     
             ; FUNCTION PECI_InitTimeOutTimer (END)

             ; FUNCTION PECI_HostEnable (BEGIN)
                                           ; SOURCE LINE # 39
                                           ; SOURCE LINE # 40
                                           ; SOURCE LINE # 41
0000 900000      E     MOV     DPTR,#HOCTLR
0003 E0                MOVX    A,@DPTR
0004 443C              ORL     A,#03CH
0006 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 42
0007 22                RET     
             ; FUNCTION PECI_HostEnable (END)

             ; FUNCTION PECI_CheckHostBusy (BEGIN)
                                           ; SOURCE LINE # 46
                                           ; SOURCE LINE # 47
                                           ; SOURCE LINE # 48
0000 120000      R     LCALL   PECI_InitTimeOutTimer
0003         ?C0004:
                                           ; SOURCE LINE # 50
0003 208F10            JB      TF1,?C0005
                                           ; SOURCE LINE # 51
                                           ; SOURCE LINE # 52
0006 900000      E     MOV     DPTR,#HOSTAR
0009 E0                MOVX    A,@DPTR
000A 20E0F6            JB      ACC.0,?C0004
                                           ; SOURCE LINE # 53
                                           ; SOURCE LINE # 54
                                           ; SOURCE LINE # 55
                                           ; SOURCE LINE # 56
000D 120000      R     LCALL   L?0088
                                           ; SOURCE LINE # 57
0010 900000      E     MOV     DPTR,#PECI_TIMEOUT
0013 7401              MOV     A,#01H
0015 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 58
                                           ; SOURCE LINE # 59
                                           ; SOURCE LINE # 60
0016         ?C0005:
                                           ; SOURCE LINE # 62
0016 308F0A            JNB     TF1,?C0007
                                           ; SOURCE LINE # 63
                                           ; SOURCE LINE # 64
                                           ; SOURCE LINE # 65
                                           ; SOURCE LINE # 66
0019 120000      R     LCALL   L?0088
                                           ; SOURCE LINE # 67
001C E4                CLR     A
001D 900000      E     MOV     DPTR,#PECI_TIMEOUT
0020 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 68
0021 FF                MOV     R7,A
0022 22                RET     
                                           ; SOURCE LINE # 69
0023         ?C0007:
                                           ; SOURCE LINE # 70
0023 7F01              MOV     R7,#01H
                                           ; SOURCE LINE # 71
C51 COMPILER V8.12   OEM_PECI                                                              07/28/2018 12:03:55 PAGE 12  

0025         ?C0008:
0025 22                RET     
             ; FUNCTION PECI_CheckHostBusy (END)

             ; FUNCTION _PECI_HostControl (BEGIN)
                                           ; SOURCE LINE # 75
;---- Variable 'control' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 76
                                           ; SOURCE LINE # 77
0000 900000      E     MOV     DPTR,#HOCTLR
0003 E0                MOVX    A,@DPTR
0004 4F                ORL     A,R7
0005 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 78
0006 22                RET     
             ; FUNCTION _PECI_HostControl (END)

             ; FUNCTION PECI_CheckHostFinish (BEGIN)
                                           ; SOURCE LINE # 82
;---- Variable 'status' assigned to Register 'R3' ----
;---- Variable 'result' assigned to Register 'R6' ----
                                           ; SOURCE LINE # 83
                                           ; SOURCE LINE # 86
;---- Variable 'error' assigned to Register 'R5' ----
0000 E4                CLR     A
0001 FD                MOV     R5,A
                                           ; SOURCE LINE # 88
0002 120000      R     LCALL   PECI_InitTimeOutTimer
0005         ?C0010:
                                           ; SOURCE LINE # 89
0005 208F3A            JB      TF1,?C0011
                                           ; SOURCE LINE # 90
                                           ; SOURCE LINE # 91
0008 900000      E     MOV     DPTR,#HOSTAR
000B E0                MOVX    A,@DPTR
000C FB                MOV     R3,A
                                           ; SOURCE LINE # 93
000D 60F6              JZ      ?C0010
                                           ; SOURCE LINE # 94
                                           ; SOURCE LINE # 95
000F 30E108            JNB     ACC.1,?C0013
                                           ; SOURCE LINE # 96
                                           ; SOURCE LINE # 97
0012 C28E              CLR     TR1
                                           ; SOURCE LINE # 98
0014 C28F              CLR     TF1
                                           ; SOURCE LINE # 99
0016 E4                CLR     A
0017 FD                MOV     R5,A
                                           ; SOURCE LINE # 100
0018 8028              SJMP    ?C0011
                                           ; SOURCE LINE # 101
001A         ?C0013:
                                           ; SOURCE LINE # 102
001A EB                MOV     A,R3
001B 30E204            JNB     ACC.2,?C0015
                                           ; SOURCE LINE # 103
                                           ; SOURCE LINE # 104
001E 7D01              MOV     R5,#01H
                                           ; SOURCE LINE # 105
0020 8020              SJMP    ?C0011
                                           ; SOURCE LINE # 106
C51 COMPILER V8.12   OEM_PECI                                                              07/28/2018 12:03:55 PAGE 13  

0022         ?C0015:
                                           ; SOURCE LINE # 107
0022 EB                MOV     A,R3
0023 30E304            JNB     ACC.3,?C0017
                                           ; SOURCE LINE # 108
                                           ; SOURCE LINE # 109
0026 7D01              MOV     R5,#01H
                                           ; SOURCE LINE # 110
0028 8018              SJMP    ?C0011
                                           ; SOURCE LINE # 111
002A         ?C0017:
                                           ; SOURCE LINE # 112
002A EB                MOV     A,R3
002B 30E504            JNB     ACC.5,?C0019
                                           ; SOURCE LINE # 113
                                           ; SOURCE LINE # 114
002E 7D02              MOV     R5,#02H
                                           ; SOURCE LINE # 115
0030 8010              SJMP    ?C0011
                                           ; SOURCE LINE # 116
0032         ?C0019:
                                           ; SOURCE LINE # 117
0032 EB                MOV     A,R3
0033 30E604            JNB     ACC.6,?C0021
                                           ; SOURCE LINE # 118
                                           ; SOURCE LINE # 119
0036 7D02              MOV     R5,#02H
                                           ; SOURCE LINE # 121
0038 8008              SJMP    ?C0011
                                           ; SOURCE LINE # 122
003A         ?C0021:
                                           ; SOURCE LINE # 123
003A EB                MOV     A,R3
003B 30E7C7            JNB     ACC.7,?C0010
                                           ; SOURCE LINE # 124
                                           ; SOURCE LINE # 125
003E 7D03              MOV     R5,#03H
                                           ; SOURCE LINE # 127
                                           ; SOURCE LINE # 128
0040 80C3              SJMP    ?C0010
                                           ; SOURCE LINE # 129
                                           ; SOURCE LINE # 130
                                           ; SOURCE LINE # 131
0042         ?C0011:
                                           ; SOURCE LINE # 133
0042 208F03            JB      TF1,?C0027
0045 ED                MOV     A,R5
0046 600F              JZ      ?C0026
0048         ?C0027:
                                           ; SOURCE LINE # 134
                                           ; SOURCE LINE # 135
0048 ED                MOV     A,R5
0049 B40207            CJNE    A,#02H,?C0028
                                           ; SOURCE LINE # 136
                                           ; SOURCE LINE # 137
004C 900000      E     MOV     DPTR,#RSTC4
004F E0                MOVX    A,@DPTR
0050 4410              ORL     A,#010H
0052 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 138
0053         ?C0028:
                                           ; SOURCE LINE # 139
C51 COMPILER V8.12   OEM_PECI                                                              07/28/2018 12:03:55 PAGE 14  

0053 E4                CLR     A
0054 FE                MOV     R6,A
                                           ; SOURCE LINE # 140
0055 8002              SJMP    ?C0029
0057         ?C0026:
                                           ; SOURCE LINE # 142
                                           ; SOURCE LINE # 143
0057 7E01              MOV     R6,#01H
                                           ; SOURCE LINE # 144
0059         ?C0029:
                                           ; SOURCE LINE # 146
                                           ; SOURCE LINE # 147
                                           ; SOURCE LINE # 148
0059 120000      R     LCALL   L?0089
                                           ; SOURCE LINE # 149
005C CF                XCH     A,R7
005D EE                MOV     A,R6
005E CF                XCH     A,R7
                                           ; SOURCE LINE # 150
005F         ?C0030:
005F 22                RET     
             ; FUNCTION PECI_CheckHostFinish (END)

             ; FUNCTION ResetPECIStatus (BEGIN)
                                           ; SOURCE LINE # 154
                                           ; SOURCE LINE # 155
                                           ; SOURCE LINE # 156
0000 900000      E     MOV     DPTR,#HOSTAR
0003 74FE              MOV     A,#0FEH
0005 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 157
0006 22                RET     
             ; FUNCTION ResetPECIStatus (END)

             ; FUNCTION PECI_HostDisable (BEGIN)
                                           ; SOURCE LINE # 161
                                           ; SOURCE LINE # 162
                                           ; SOURCE LINE # 163
0000 E4                CLR     A
0001 900000      E     MOV     DPTR,#HOCTLR
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 164
0005 22                RET     
             ; FUNCTION PECI_HostDisable (END)

             ; FUNCTION _PECI_CMD (BEGIN)
                                           ; SOURCE LINE # 183
;---- Variable 'WL' assigned to Register 'R5' ----
;---- Variable 'RL' assigned to Register 'R3' ----
;---- Variable 'address' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 184
                                           ; SOURCE LINE # 187
;---- Variable 'done' assigned to Register 'R4' ----
0000 7CFF              MOV     R4,#0FFH
                                           ; SOURCE LINE # 188
0002 120000      R     LCALL   PECI_HostEnable
                                           ; SOURCE LINE # 189
0005 900000      E     MOV     DPTR,#HOTRADDR
0008 EF                MOV     A,R7
0009 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 190
000A 900000      E     MOV     DPTR,#HOWRLR
C51 COMPILER V8.12   OEM_PECI                                                              07/28/2018 12:03:55 PAGE 15  

000D ED                MOV     A,R5
000E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 191
000F 900000      E     MOV     DPTR,#HORDLR
0012 EB                MOV     A,R3
0013 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 192
0014 900000      R     MOV     DPTR,#CMD
0017 E0                MOVX    A,@DPTR
0018 900000      E     MOV     DPTR,#HOCMDR
001B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 194
001C E4                CLR     A
001D F500        E     MOV     ITempB01,A
001F         ?C0033:
001F E500        E     MOV     A,ITempB01
0021 C3                CLR     C
0022 9D                SUBB    A,R5
0023 5018              JNC     ?C0034
                                           ; SOURCE LINE # 195
                                           ; SOURCE LINE # 196
0025 900000      R     MOV     DPTR,#WriteBuf
0028 120000      E     LCALL   ?C?PLDXDATA
002B AF00        E     MOV     R7,ITempB01
002D 8F82              MOV     DPL,R7
002F 758300            MOV     DPH,#00H
0032 120000      E     LCALL   ?C?CLDOPTR
0035 900000      E     MOV     DPTR,#HOWRDR
0038 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 197
0039 0500        E     INC     ITempB01
003B 80E2              SJMP    ?C0033
003D         ?C0034:
                                           ; SOURCE LINE # 199
003D 120000      R     LCALL   PECI_CheckHostBusy
0040 EF                MOV     A,R7
0041 603F              JZ      ?C0036
                                           ; SOURCE LINE # 200
                                           ; SOURCE LINE # 201
0043 900000      R     MOV     DPTR,#CMD
0046 E0                MOVX    A,@DPTR
0047 B4A504            CJNE    A,#0A5H,?C0037
                                           ; SOURCE LINE # 202
004A 7F03              MOV     R7,#03H
004C 8002              SJMP    ?C0074
004E         ?C0037:
                                           ; SOURCE LINE # 204
004E 7F01              MOV     R7,#01H
0050         ?C0074:
0050 120000      R     LCALL   _PECI_HostControl
0053         ?C0038:
                                           ; SOURCE LINE # 205
0053 120000      R     LCALL   PECI_CheckHostFinish
0056 EF                MOV     A,R7
0057 6029              JZ      ?C0036
                                           ; SOURCE LINE # 206
                                           ; SOURCE LINE # 207
0059 E4                CLR     A
005A FC                MOV     R4,A
                                           ; SOURCE LINE # 208
005B F500        E     MOV     ITempB01,A
005D         ?C0040:
C51 COMPILER V8.12   OEM_PECI                                                              07/28/2018 12:03:55 PAGE 16  

005D 900000      E     MOV     DPTR,#HORDLR
0060 E0                MOVX    A,@DPTR
0061 FF                MOV     R7,A
0062 E500        E     MOV     A,ITempB01
0064 C3                CLR     C
0065 9F                SUBB    A,R7
0066 501A              JNC     ?C0036
                                           ; SOURCE LINE # 209
                                           ; SOURCE LINE # 210
0068 900000      E     MOV     DPTR,#HORDDR
006B E0                MOVX    A,@DPTR
006C FF                MOV     R7,A
006D 900000      R     MOV     DPTR,#ReadBuf
0070 120000      E     LCALL   ?C?PLDXDATA
0073 AE00        E     MOV     R6,ITempB01
0075 8E82              MOV     DPL,R6
0077 758300            MOV     DPH,#00H
007A EF                MOV     A,R7
007B 120000      E     LCALL   ?C?CSTOPTR
                                           ; SOURCE LINE # 211
007E 0500        E     INC     ITempB01
0080 80DB              SJMP    ?C0040
                                           ; SOURCE LINE # 212
                                           ; SOURCE LINE # 213
0082         ?C0036:
                                           ; SOURCE LINE # 214
0082 120000      R     LCALL   ResetPECIStatus
                                           ; SOURCE LINE # 215
0085 120000      R     LCALL   PECI_HostDisable
                                           ; SOURCE LINE # 217
0088 CF                XCH     A,R7
0089 EC                MOV     A,R4
008A CF                XCH     A,R7
                                           ; SOURCE LINE # 218
008B         ?C0043:
008B 22                RET     
             ; FUNCTION _PECI_CMD (END)

             ; FUNCTION PECI_ReadCPUTJMAX (BEGIN)
                                           ; SOURCE LINE # 223
                                           ; SOURCE LINE # 224
                                           ; SOURCE LINE # 226
0000 90050E            MOV     DPTR,#050EH
0003 E4                CLR     A
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 227
0005 7410              MOV     A,#010H
                                           ; SOURCE LINE # 228
                                           ; SOURCE LINE # 229
0007 120000      R     LCALL   L?0086
                                           ; SOURCE LINE # 230
000A 74A1              MOV     A,#0A1H
000C 120000      R     LCALL   L?0080
000F 7B05              MOV     R3,#05H
0011 7D05              MOV     R5,#05H
0013 7F30              MOV     R7,#030H
0015 120000      R     LCALL   _PECI_CMD
0018 EF                MOV     A,R7
0019 700C              JNZ     ?C0044
                                           ; SOURCE LINE # 231
                                           ; SOURCE LINE # 232
001B 900511            MOV     DPTR,#0511H
C51 COMPILER V8.12   OEM_PECI                                                              07/28/2018 12:03:55 PAGE 17  

001E E0                MOVX    A,@DPTR
001F 900000      E     MOV     DPTR,#TJMAX
0022 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 235
                                           ; SOURCE LINE # 236
0023 120000      R     LCALL   L?0084
                                           ; SOURCE LINE # 237
0026 22                RET     
0027         ?C0044:
                                           ; SOURCE LINE # 239
                                           ; SOURCE LINE # 241
0027 900000      E     MOV     DPTR,#ERR_THMSTS
002A E0                MOVX    A,@DPTR
002B 4408              ORL     A,#08H
002D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 287
                                           ; SOURCE LINE # 288
002E         ?C0046:
002E 22                RET     
             ; FUNCTION PECI_ReadCPUTJMAX (END)

             ; FUNCTION PECI_ReadCPUTemp (BEGIN)
                                           ; SOURCE LINE # 292
                                           ; SOURCE LINE # 293
                                           ; SOURCE LINE # 297
0000 900000      R     MOV     DPTR,#?_PECI_CMD?BYTE+03H
0003 7401              MOV     A,#01H
0005 F0                MOVX    @DPTR,A
0006 FB                MOV     R3,A
0007 120000      R     LCALL   L?0081
000A 0B                INC     R3
000B 7D01              MOV     R5,#01H
000D 7F30              MOV     R7,#030H
000F 120000      R     LCALL   _PECI_CMD
0012 EF                MOV     A,R7
0013 706D              JNZ     ?C0047
                                           ; SOURCE LINE # 298
                                           ; SOURCE LINE # 299
0015 90050E            MOV     DPTR,#050EH
0018 E0                MOVX    A,@DPTR
0019 900000      E     MOV     DPTR,#PECI_GET_TEMPL
001C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 300
001D 90050F            MOV     DPTR,#050FH
0020 E0                MOVX    A,@DPTR
0021 900000      E     MOV     DPTR,#PECI_GET_TEMPH
0024 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 301
0025 90050F            MOV     DPTR,#050FH
0028 E0                MOVX    A,@DPTR
0029 FE                MOV     R6,A
002A 90050E            MOV     DPTR,#050EH
002D E0                MOVX    A,@DPTR
002E 7C00              MOV     R4,#00H
0030 2400              ADD     A,#00H
0032 FF                MOV     R7,A
0033 EC                MOV     A,R4
                                           ; SOURCE LINE # 302
0034 120000      R     LCALL   L?0085
0037 E0                MOVX    A,@DPTR
0038 FE                MOV     R6,A
0039 A3                INC     DPTR
C51 COMPILER V8.12   OEM_PECI                                                              07/28/2018 12:03:55 PAGE 18  

003A E0                MOVX    A,@DPTR
003B F4                CPL     A
003C FF                MOV     R7,A
003D EE                MOV     A,R6
003E F4                CPL     A
003F FE                MOV     R6,A
0040 EF                MOV     A,R7
0041 2401              ADD     A,#01H
0043 FF                MOV     R7,A
0044 E4                CLR     A
                                           ; SOURCE LINE # 303
0045 120000      R     LCALL   L?0085
0048 E0                MOVX    A,@DPTR
0049 FE                MOV     R6,A
004A A3                INC     DPTR
004B E0                MOVX    A,@DPTR
004C 7806              MOV     R0,#06H
004E         ?C0073:
004E CE                XCH     A,R6
004F C3                CLR     C
0050 13                RRC     A
0051 CE                XCH     A,R6
0052 13                RRC     A
0053 D8F9              DJNZ    R0,?C0073
0055 FF                MOV     R7,A
;---- Variable 'tempoffset' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 304
0056 900000      E     MOV     DPTR,#TJMAX
0059 E0                MOVX    A,@DPTR
005A FE                MOV     R6,A
005B EF                MOV     A,R7
005C D3                SETB    C
005D 9E                SUBB    A,R6
005E 5005              JNC     ?C0048
                                           ; SOURCE LINE # 305
                                           ; SOURCE LINE # 306
0060 E0                MOVX    A,@DPTR
0061 C3                CLR     C
0062 9F                SUBB    A,R7
                                           ; SOURCE LINE # 307
0063 8004              SJMP    ?C0075
0065         ?C0048:
                                           ; SOURCE LINE # 309
                                           ; SOURCE LINE # 310
0065 900000      E     MOV     DPTR,#TJMAX
0068 E0                MOVX    A,@DPTR
0069         ?C0075:
0069 900000      E     MOV     DPTR,#nCpuTemp
006C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 312
006D         ?C0049:
                                           ; SOURCE LINE # 313
                                           ; SOURCE LINE # 314
006D 120000      R     LCALL   L?0084
                                           ; SOURCE LINE # 316
0070 900000      E     MOV     DPTR,#Fan_Debug_Temp
0073 E0                MOVX    A,@DPTR
0074 20E012            JB      ACC.0,?C0052
                                           ; SOURCE LINE # 317
                                           ; SOURCE LINE # 318
0077 900000      E     MOV     DPTR,#nCpuTemp
007A E0                MOVX    A,@DPTR
C51 COMPILER V8.12   OEM_PECI                                                              07/28/2018 12:03:55 PAGE 19  

007B 20E70B            JB      ACC.7,?C0052
                                           ; SOURCE LINE # 319
                                           ; SOURCE LINE # 321
007E         ?C0051:
                                           ; SOURCE LINE # 323
                                           ; SOURCE LINE # 324
                                           ; SOURCE LINE # 325
                                           ; SOURCE LINE # 326
                                           ; SOURCE LINE # 327
007E 120000      R     LCALL   L?0079
                                           ; SOURCE LINE # 328
                                           ; SOURCE LINE # 329
                                           ; SOURCE LINE # 330
0081 22                RET     
0082         ?C0047:
                                           ; SOURCE LINE # 332
                                           ; SOURCE LINE # 334
0082 900000      E     MOV     DPTR,#ERR_THMSTS
0085 E0                MOVX    A,@DPTR
0086 4408              ORL     A,#08H
0088 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 376
                                           ; SOURCE LINE # 377
0089         ?C0052:
0089 22                RET     
             ; FUNCTION PECI_ReadCPUTemp (END)

             ; FUNCTION _PECI_SETPL2Watts (BEGIN)
                                           ; SOURCE LINE # 382
;---- Variable 'watts' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 383
                                           ; SOURCE LINE # 385
0000 900000      E     MOV     DPTR,#SysPowState
0003 E0                MOVX    A,@DPTR
0004 6411              XRL     A,#011H
0006 6003              JZ      $ + 5H
0008 020000      R     LJMP    ?C0056
000B         ?C0055:
                                           ; SOURCE LINE # 389
000B 120000      R     LCALL   L?0082
000E BE0808            CJNE    R6,#08H,?C0057
                                           ; SOURCE LINE # 390
                                           ; SOURCE LINE # 391
0011 900000      E     MOV     DPTR,#cPacketPowerLimit1
0014 7437              MOV     A,#037H
0016 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 392
0017 802A              SJMP    ?C0058
0019         ?C0057:
                                           ; SOURCE LINE # 393
0019 120000      R     LCALL   L?0082
001C BE1008            CJNE    R6,#010H,?C0059
                                           ; SOURCE LINE # 394
                                           ; SOURCE LINE # 395
001F 900000      E     MOV     DPTR,#cPacketPowerLimit1
0022 742D              MOV     A,#02DH
0024 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 396
0025 801C              SJMP    ?C0058
0027         ?C0059:
                                           ; SOURCE LINE # 397
0027 120000      R     LCALL   L?0083
C51 COMPILER V8.12   OEM_PECI                                                              07/28/2018 12:03:55 PAGE 20  

002A BE1805            CJNE    R6,#018H,?C0061
                                           ; SOURCE LINE # 398
                                           ; SOURCE LINE # 399
002D 900000      E     MOV     DPTR,#cPacketPowerLimit1
                                           ; SOURCE LINE # 400
0030 800E              SJMP    ?C0076
0032         ?C0061:
                                           ; SOURCE LINE # 401
0032 120000      R     LCALL   L?0083
0035 900000      E     MOV     DPTR,#cPacketPowerLimit1
0038 BE2005            CJNE    R6,#020H,?C0063
                                           ; SOURCE LINE # 402
                                           ; SOURCE LINE # 403
003B 7419              MOV     A,#019H
003D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 404
003E 8003              SJMP    ?C0058
0040         ?C0063:
                                           ; SOURCE LINE # 406
                                           ; SOURCE LINE # 407
0040         ?C0076:
0040 7423              MOV     A,#023H
0042 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 408
0043         ?C0058:
                                           ; SOURCE LINE # 410
0043 EF                MOV     A,R7
0044 B40109            CJNE    A,#01H,?C0065
                                           ; SOURCE LINE # 411
                                           ; SOURCE LINE # 412
0047 900000      E     MOV     DPTR,#cPacketPowerLimit1
004A E0                MOVX    A,@DPTR
004B 75F008            MOV     B,#08H
                                           ; SOURCE LINE # 413
004E 800C              SJMP    ?C0077
0050         ?C0065:
                                           ; SOURCE LINE # 414
0050 EF                MOV     A,R7
0051 6402              XRL     A,#02H
0053 7047              JNZ     ?C0056
                                           ; SOURCE LINE # 415
                                           ; SOURCE LINE # 416
0055 900000      E     MOV     DPTR,#cPacketPowerLimit1
0058 E0                MOVX    A,@DPTR
0059 75F00A            MOV     B,#0AH
005C         ?C0077:
005C A4                MUL     AB
005D FF                MOV     R7,A
005E E5F0              MOV     A,B
0060 4480              ORL     A,#080H
0062 900000      E     MOV     DPTR,#cWriteCurrentPL2
0065 F0                MOVX    @DPTR,A
0066 A3                INC     DPTR
0067 EF                MOV     A,R7
0068 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 417
                                           ; SOURCE LINE # 419
                                           ; SOURCE LINE # 421
0069         ?C0066:
                                           ; SOURCE LINE # 424
0069 90050E            MOV     DPTR,#050EH
006C E4                CLR     A
C51 COMPILER V8.12   OEM_PECI                                                              07/28/2018 12:03:55 PAGE 21  

006D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 425
006E 741B              MOV     A,#01BH
                                           ; SOURCE LINE # 426
                                           ; SOURCE LINE # 427
0070 120000      R     LCALL   L?0086
                                           ; SOURCE LINE # 428
0073 900000      E     MOV     DPTR,#cWriteCurrentPL2
0076 E0                MOVX    A,@DPTR
0077 A3                INC     DPTR
0078 E0                MOVX    A,@DPTR
0079 900512            MOV     DPTR,#0512H
007C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 429
007D 900000      E     MOV     DPTR,#cWriteCurrentPL2
0080 E0                MOVX    A,@DPTR
0081 900513            MOV     DPTR,#0513H
                                           ; SOURCE LINE # 430
                                           ; SOURCE LINE # 431
0084 120000      R     LCALL   L?0087
                                           ; SOURCE LINE # 433
0087 74A5              MOV     A,#0A5H
0089 120000      R     LCALL   L?0080
008C 7D0A              MOV     R5,#0AH
008E 7F30              MOV     R7,#030H
0090 120000      R     LCALL   _PECI_CMD
0093 EF                MOV     A,R7
0094 6006              JZ      ?C0056
                                           ; SOURCE LINE # 434
                                           ; SOURCE LINE # 445
0096         ?C0069:
                                           ; SOURCE LINE # 446
0096 900000      E     MOV     DPTR,#PECI_ERROR
0099 E0                MOVX    A,@DPTR
009A 04                INC     A
009B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 459
009C         ?C0056:
009C 22                RET     
             ; FUNCTION _PECI_SETPL2Watts (END)

             ; FUNCTION DTS_ReadCPUTemp (BEGIN)
                                           ; SOURCE LINE # 461
                                           ; SOURCE LINE # 462
                                           ; SOURCE LINE # 463
0000 7F50              MOV     R7,#050H
0002 120000      E     LCALL   _ECQEvent
                                           ; SOURCE LINE # 465
0005 900000      E     MOV     DPTR,#nCpuTemp
0008 E0                MOVX    A,@DPTR
0009 20E703            JB      ACC.7,?C0071
                                           ; SOURCE LINE # 466
                                           ; SOURCE LINE # 468
000C         ?C0070:
                                           ; SOURCE LINE # 470
                                           ; SOURCE LINE # 472
                                           ; SOURCE LINE # 473
                                           ; SOURCE LINE # 474
                                           ; SOURCE LINE # 475
000C 120000      R     LCALL   L?0079
                                           ; SOURCE LINE # 476
                                           ; SOURCE LINE # 477
C51 COMPILER V8.12   OEM_PECI                                                              07/28/2018 12:03:55 PAGE 22  

000F         ?C0071:
000F 22                RET     
             ; FUNCTION DTS_ReadCPUTemp (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    813    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----      12
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)

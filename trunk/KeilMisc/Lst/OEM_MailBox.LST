C51 COMPILER V8.12   OEM_MAILBOX                                                           07/28/2018 12:03:52 PAGE 1   


C51 COMPILER V8.12, COMPILATION OF MODULE OEM_MAILBOX
OBJECT MODULE PLACED IN Code\Oem\OEM_MailBox.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE Code\Oem\OEM_MailBox.C LA WL(1) CD OT(9,SIZE) NOAREGS OR INCDIR(.\Code\CORE
                    -\INCLUDE\;.\Code\OEM\INCLUDE\;.\Code\CHIP\INCLUDE\)

line level    source

   1          /*-----------------------------------------------------------------------------
   2           * TITLE: OEM_MAILBOX.C
   3           *
   4           * Author : Dino
   5           *
   6           * Note : These functions are reference only.
   7           *        Please follow your project software specification to do some modification.
   8           *---------------------------------------------------------------------------*/
   9          
  10          #include <CORE_INCLUDE.H>
  11          #include <OEM_INCLUDE.H>
  12          
  13          
  14          
  15          //----------------------------------------------------------------------------
  16          // The function of Mailbox handler
  17          //  Note :
  18          //----------------------------------------------------------------------------
  19          void Hook_MailBox(BYTE Cmd)
  20          {
  21   1              BYTE i;
  22   1      
  23   1              switch(Cmd)
  24   1              {
  25   2              case 0x40:
  26   2                      Cmd_40(MMIO_iDATA8C);
  27   2                      break;
  28   2              case 0x41:
  29   2                      if(MMIO_iDATA8C==0xA0) Cmd_41_A0(0xFE);
  30   2                      if(MMIO_iDATA8C==0xA1) Cmd_41_A1(0xFE);
  31   2                      if(MMIO_iDATA8C==0xA2) Cmd_41_A2(0xFE);
  32   2                      if(MMIO_iDATA8C==0xA3) Cmd_41_A3(0xFE);
  33   2                      break;
  34   2              case 0x42:
  35   2                      Cmd_42(MMIO_iDATA8C);
  36   2                      break;
  37   2              case 0x43:
  38   2                      Cmd_43(0xFE,MMIO_iDATA8C);
  39   2                      break;
  40   2              case 0x45:
  41   2                      Cmd_45(0xFE,MMIO_iDATA8C);
  42   2                      break;
  43   2              case 0x46:
  44   2                      Cmd_46(0xFE,MMIO_iDATA8C);
  45   2                      break;
  46   2              case 0x47:
  47   2                      Cmd_47(0xFE,MMIO_iDATA8C);
  48   2                      break;
  49   2                      break;
  50   2              case 0x49:
  51   2                      break;
  52   2              case 0x4B:
  53   2                      i = MMIO_iDATA8C; //Mos: What it is??
  54   2                      eEEPROMAddrsss  = MMIO_iDATA8D;
C51 COMPILER V8.12   OEM_MAILBOX                                                           07/28/2018 12:03:52 PAGE 2   

  55   2                      eEEPROMBank             = MMIO_iDATA8E;
  56   2                      eEEPROMData             = MMIO_iDATA8F;
  57   2              SET_MASK(LENOVOPMFW_Temp,EEPROM_Token);
  58   2                      Update_EEPROMMark();
  59   2              CLEAR_MASK(LENOVOPMFW_Temp,EEPROM_Token);
  60   2                      Data2PortDirect(0xFE, 0x00);   
  61   2                      break;
  62   2      
  63   2              case 0x4C:
  64   2                      i = MMIO_iDATA8C;
  65   2                      eEEPROMAddrsss = MMIO_iDATA8D;
  66   2                      eEEPROMBank = MMIO_iDATA8E;
  67   2                      Cmd_4E(0xFE,eEEPROMAddrsss);
  68   2                      break;
  69   2      
  70   2              case 0x4D:
  71   2                      eEEPROMAddrsss = MMIO_iDATA8C;
  72   2                      eEEPROMData     = MMIO_iDATA8D;
  73   2              SET_MASK(LENOVOPMFW_Temp,EEPROM_Token);
  74   2                      Update_EEPROMMark();
  75   2              CLEAR_MASK(LENOVOPMFW_Temp,EEPROM_Token);
  76   2                      Data2PortDirect(0xFE, 0x00);         
  77   2                      break;
  78   2              case 0x4E:
  79   2                      eEEPROMAddrsss = MMIO_iDATA8C;
  80   2                      Cmd_4E(0xFE,eEEPROMAddrsss);
  81   2                      break;
  82   2              case 0x4F: //reference from Hook_64Port
  83   2                      Erase_EEPROMAll();
  84   2                      break;
  85   2              case 0x51:
  86   2                      Cmd_51(0xFE);
  87   2                      break;
  88   2              case 0x52:
  89   2                      if(MMIO_iDATA8C==0xA0) Cmd_52_A0(0xFE);
  90   2                      if(MMIO_iDATA8C==0xA3) Cmd_52_A3(0xFE);
  91   2                      if(MMIO_iDATA8C==0xA4) Cmd_52_A4(0xFE);
  92   2                      if(MMIO_iDATA8C==0xA5) Cmd_52_A5(0xFE);
  93   2                      if(MMIO_iDATA8C==0xA6) Cmd_52_A6(0xFE); //LMLKBL0018:add.
  94   2                      if(MMIO_iDATA8C==0xA7) Cmd_52_A7(0xFE); //LMLKBL0018:add.
  95   2                      break;
  96   2              case 0x53:
  97   2                      break;
  98   2              case 0x56:
  99   2                      break;
 100   2              case 0x58:
 101   2                      Cmd_58(MMIO_iDATA8C);
 102   2                      break;
 103   2              case 0x59:
 104   2                      Cmd_59(0xFE,MMIO_iDATA8C,0);
 105   2                      break;
 106   2              case 0x5C:
 107   2                      Cmd_5C(0xFE);
 108   2                      break;
 109   2              case 0x5D:
 110   2                      Cmd_5D(MMIO_iDATA8C);
 111   2                      break;
 112   2              case 0x97:
 113   2                      Cmd_97(MMIO_iDATA8C);
 114   2                      break;
 115   2              case 0xB0:
 116   2                      Cmd_B0(0xFE,MMIO_iDATA8C);
C51 COMPILER V8.12   OEM_MAILBOX                                                           07/28/2018 12:03:52 PAGE 3   

 117   2                      break;
 118   2              case 0xB4:
 119   2                      Cmd_B4();
 120   2                      break;
 121   2              case 0x77:
 122   2                      //CacheDma(1,FSCEHighLevel);
 123   2              DisableAllInterrupt();
 124   2                      Erase_Eflash_1K(0x01,0x20,0x00);
 125   2              EnableAllInterrupt();
 126   2                      break;
 127   2              case 0x88:
 128   2                      //CacheDma(3,FSCEHighLevel);
 129   2                      //Copy_Eflash_1K(0x00,0x00,0x00, 0x01,0x20,0x00);
 130   2                      break;
 131   2              default:
 132   2                      break;
 133   2              }
 134   1      }
 135          
 136          //-----------------------------------------------------------------------------
 137          //
 138          //-----------------------------------------------------------------------------
 139          //-----------------------------------------------------------------------------
 140          void H2RAMprocess(void)
 141          {
 142   1              if( (MMIO_CMD_Ctrl & MMIO_Start_flage)==0 ) return;
 143   1              if( (MMIO_iCMD < 0x40) || (MMIO_iCMD >0x60) ) return;
 144   1              Clear_RAM_Range(MMIO_rDATA[0],0x07);    // Clear H2RAM return data space.
 145   1              //(H2RAM_Table[MMIO_iCMD>>4])();
 146   1      
 147   1              MMIO_rDATA_index = 0;
 148   1              Hook_MailBox(MMIO_iCMD);
 149   1      
 150   1              MMIO_iCMD = 0x00;
 151   1      
 152   1              MMIO_CMD_Ctrl &= 0xFD; // Stop Start
 153   1      }
 154          
 155          
 156          void VPC_interface(void)
 157          {
 158   1              if(nVPC_CMD)
 159   1              {
 160   2                      if(nVPC_CMD != 0x38) //ANGELAS072:add
 161   2                      RamDebug(nVPC_CMD);
 162   2                      uReserve07.fbit.nVPCDriverIn = 1;
 163   2      
 164   2                      switch(nVPC_CMD)
 165   2                      {
 166   3                      case VPCcmdQuery:                                       //0x10 Query VPC
 167   3                              nVPC_DATA = uVPCeventSource;
 168   3                              uVPCeventSource = 0;                    //Clear it after PM driver read.
 169   3                              break;
 170   3      
 171   3                      case VPCcmdRdBrightnessMax:                     //0x11 Read Brightness Max
 172   3                              //if ( (SYS_STATUS & 0x07) == 0x04 )    // Win8
 173   3                              if (( (SYS_STATUS & 0x07) >= 0x04 )&&( (SYS_STATUS & 0x07) <= 0x06))    // Win8,win8.1  or win10 ANGELAS01
             -0: add win10 mode
 174   3                              { nVPC_DATA = WIN8_BRI_MAX_STEP;}       //nVPC_DATA = 0x15;
 175   3                              else
 176   3                              { nVPC_DATA = BRIGHT_MAX_STEP; }        //nVPC_DATA = 0x10;
 177   3                              break;
C51 COMPILER V8.12   OEM_MAILBOX                                                           07/28/2018 12:03:52 PAGE 4   

 178   3      
 179   3                      case VPCcmdRdBrightness:                        //0x12 Read Brightness
 180   3                              nVPC_DATA = nBrightValue;
 181   3                              break;
 182   3      
 183   3                      case VPCcmdWrBrightness:                        //0x13 Write Brightness
 184   3                              nBrightValue = nVPC_DATA;
 185   3                              break;
 186   3      
 187   3                      case VPCcmdRdWlanStatus:                        //0x14 Read WLAN (1: enable, 0: disable)
 188   3                              if( nKillSwitchGET )
 189   3                                      nVPC_DATA = nWirelessLanGET; // need save to EEPROM
 190   3                              else
 191   3                                      nVPC_DATA = 0;
 192   3                  ECSMI_SCIEvent(WLANBTFOROSD);//:Add sent Qevent 0x42 for WLAN&BT on/off under win7.
 193   3                              break;
 194   3      
 195   3                      case VPCcmdWrWlanStatus:                        //0x15 Write WLAN
 196   3                              if( nKillSwitchGET )
 197   3                              {
 198   4                                      if ( IS_MASK_SET(DEVICEMODULE,WIRELESS_EXIST) )
 199   4                                      {
 200   5                                              if( nVPC_DATA )
 201   5                                              {
 202   6                                                      SET_MASK(DEVICEMODULE,WIRELESS);// Enable WLAN.
 203   6                                                      WLAN_OFF_Cnt = 1;                               // Delay 0~100msec.
 204   6                                                      SET_MASK(pDevStus, pWireless);  // bit1: 1:Wlan Enable.
 205   6                                              }
 206   5                                              else
 207   5                                              {
 208   6                                                      CLR_MASK(DEVICEMODULE,WIRELESS);// Disable WLAN.
 209   6                                                      WLAN_OFF_Cnt = 1;                               // Delay 0~100msec.
 210   6                                                      CLR_MASK(pDevStus, pWireless);  // bit1: 0:Wlan Disable.
 211   6                                              }
 212   5                          ECSMI_SCIEvent(WLANBTFOROSD);//:Add sent Qevent 0x42 for WLAN&BT on/off under win7.
 213   5                                      }
 214   4                                      else
 215   4                                      {
 216   5                                              CLR_MASK(DEVICEMODULE,WIRELESS);// Disable WLAN.
 217   5                                              WLAN_OFF_Cnt = 1;                               // Delay 0~100msec.
 218   5                                              CLR_MASK(pDevStus, pWireless);  // bit1: 0:Wlan Disable.
 219   5                                      }
 220   4                              }
 221   3                              break;
 222   3      
 223   3                      case VPCcmdRdBluetoothStatus:           //0x16 Read Bluetooth
 224   3                              if( nKillSwitchGET )
 225   3                                      nVPC_DATA = nBlueToothGET;
 226   3                              else
 227   3                                      nVPC_DATA = 0;
 228   3                  ECSMI_SCIEvent(WLANBTFOROSD);//:Add sent Qevent 0x42 for WLAN&BT on/off under win7.
 229   3                  break;
 230   3      
 231   3                      case VPCcmdWrBluetoothStatus:           //0x17 Write Bluetooth
 232   3                              if( nKillSwitchGET )
 233   3                              {
 234   4                                      if ( IS_MASK_SET(DEVICEMODULE,BLUETOOTH_EXIST) )
 235   4                                      {
 236   5                                              if( nVPC_DATA )
 237   5                                              {
 238   6                                                      nBlueToothEN;
 239   6                                                      SET_MASK(pDevStus, pBluetooth); // bit2: 1:Bluetooth Enable.
C51 COMPILER V8.12   OEM_MAILBOX                                                           07/28/2018 12:03:52 PAGE 5   

 240   6                                              }
 241   5                                              else
 242   5                                              {
 243   6                                                      nBlueToothDIS;
 244   6                                                      CLR_MASK(pDevStus, pBluetooth); // bit2: 0:Bluetooth Disable.
 245   6                                              }
 246   5                          ECSMI_SCIEvent(WLANBTFOROSD);//:Add sent Qevent 0x42 for WLAN&BT on/off under win7.
 247   5                                      }
 248   4                              }
 249   3                              break;
 250   3      
 251   3                      case VPCcmdRdInverterStatus:            //0x18 Read Inverter On/Off
 252   3                              if ( !Read_ENBKL_IN() )
 253   3                                      nVPC_DATA = 0;
 254   3                              else
 255   3                                      nVPC_DATA = 1;
 256   3                              break;
 257   3      
 258   3                      case VPCcmdRdNovoStatus:                        //0x19 Read Novo
 259   3                              nVPC_DATA = uNovoVPCCount;              //uNovoVPCCount count 2sec set uNovoVPCCount=1;
 260   3                              uNovoVPCCount = 0;
 261   3                              break;
 262   3      
 263   3                      case VPCcmdQuery2:                                      //0x1A Query2 VPC
 264   3                              nVPC_DATA = uVPCeventSource2;
 265   3                  uVPCeventSource2=0x00; 
 266   3                              break;
 267   3      
 268   3                      case VPCcmdRdTouchPadStatus:            //0x1B Read TouchPad
 269   3                      //      if(IS_MASK_SET(pDevStus, pENABLE_TP))//ANGELAG008: remove       // cmd 59 7A,7B.......
 270   3                                      if(IS_MASK_CLEAR(pDevStatus1, b7DisableTP)) //ANGELAG008: add 
 271   3                                      nVPC_DATA = 1;
 272   3                              else
 273   3                                      nVPC_DATA = 0;
 274   3                              break;
 275   3      
 276   3                      case VPCcmdWrTouchPadStatus:            // 0x1C Write TouchPad
 277   3                              // optimize ,add no tp driver mode
 278   3                              //Add VPC control touchpad function.
 279   3                      /*      if(uReserve07.fbit.nTPDriverIn ==0) //ANGELAG008: remove start
 280   3                              {
 281   3                                      if (IS_MASK_SET(pDevStus, pENABLE_TP))
 282   3                                      {
 283   3      
 284   3                                              ECSend2Port(2, 0xF5);
 285   3                          TPCLK_OUTPUT;
 286   3                          TPCLK_LOW();
 287   3                                              TouchPadCount = 3;
 288   3                                              CLR_MASK(pDevStus, pENABLE_TP);
 289   3                                      }
 290   3                                      else
 291   3                                      {
 292   3                                              TPCLK_OUTPUT;
 293   3                                      TPCLK_HI();
 294   3                          TPCLK_ALT;
 295   3                                              ECSend2Port(2, 0xF4);
 296   3                                              TouchPadCount = 3;
 297   3                                              SET_MASK(pDevStus, pENABLE_TP);
 298   3                                      }
 299   3                                      //Add Sent Q_EVENT to VPC show TP OSD.
 300   3                              uVPCeventSource = TouchPad;
 301   3                              uVPCeventSource2 = 0;
C51 COMPILER V8.12   OEM_MAILBOX                                                           07/28/2018 12:03:52 PAGE 6   

 302   3                                      ECSMI_SCIEvent(SDV_VPC_notify);
 303   3                                      //Add Sent Q_EVENT to VPC show TP OSD.          
 304   3                              }
 305   3                              else
 306   3                              {
 307   3                                      e0_prefix_code(0x51,MAKE_EVENT);
 308   3                                      CPL_MASK(pDevStus, pENABLE_TP);
 309   3                                      SET_MASK(StatusKeeper, b5TP_Event);
 310   3                                      e0_prefix_code(0x51,BREAK_EVENT);
 311   3                              }*/ //ANGELAG008: remove end
 312   3                              //ANGELAG008: add start
 313   3                                                              if(IS_MASK_SET(pDevStatus1,b5TPDRIVER_STATUS))
 314   3                                      {
 315   4                                       if((nVPC_DATA==0x01)&&IS_MASK_CLEAR(pDevStatus1,b7DisableTP)) //Set Enable Command, bu
             -t now state is Enable
 316   4                                              break;
 317   4                                        if((nVPC_DATA==0x00)&&IS_MASK_SET(pDevStatus1,b7DisableTP))   //Set Disable Command, but now state i
             -s Disable
 318   4                                              break;  
 319   4      
 320   4                                        if(IS_MASK_SET(pDevStatus1,b7DisableTP))  //enable TP
 321   4                                    {
 322   5                                              ECSMI_SCIEvent(0x3E);
 323   5                                              SET_MASK(pDevStatus3,b6EnDisTPSend); 
 324   5                                              if(IS_MASK_SET(pDevStatus1,b7DisableTP))
 325   5                                              {
 326   6                                                 SET_MASK(pDevStatus3,b7TPStateFormer);
 327   6                                              }
 328   5                                              else
 329   5                                              {
 330   6                                                 CLEAR_MASK(pDevStatus3,b7TPStateFormer);
 331   6                                              }                               
 332   5                                       }
 333   4                                   else  //Disable TP
 334   4                                   {
 335   5                                               ECSMI_SCIEvent(0x3F);
 336   5                                               SET_MASK(pDevStatus3,b6EnDisTPSend); 
 337   5                                               if(IS_MASK_SET(pDevStatus1,b7DisableTP))
 338   5                                               {
 339   6                                                      SET_MASK(pDevStatus3,b7TPStateFormer);
 340   6                                               }
 341   5                                               else
 342   5                                               {
 343   6                                                      CLEAR_MASK(pDevStatus3,b7TPStateFormer);
 344   6                                               }                                       
 345   5                                   }  
 346   4                                  }
 347   3                              //ANGELAG008: add end
 348   3                              // Add VPC control touchpad function.
 349   3                              // optimize ,add no tp driver mode.
 350   3                              break;
 351   3      
 352   3                      case VPCcmdRdCameraStatus:                      // 0x1D Read Camera
 353   3                              nVPC_DATA = nCameraPwrGET;              // need restore to EEPROM
 354   3                              break;
 355   3      
 356   3                      case VPCcmdWrCameraStatus:                      //0x1E Write Camera
 357   3                              if(nVPC_DATA)
 358   3                              { SET_MASK(pDevStus, pCamera); }        // Enable Camera Power.
 359   3                              else
 360   3                              { CLR_MASK(pDevStus, pCamera); }        // Disable Camera Power.
 361   3                              break;
C51 COMPILER V8.12   OEM_MAILBOX                                                           07/28/2018 12:03:52 PAGE 7   

 362   3      
 363   3                      case VPCcmdRd3GStatus:                          //0x1F Read 3G
 364   3                              if( nKillSwitchGET )
 365   3                                      nVPC_DATA = nWWAN3GLanGET;
 366   3                              else
 367   3                                      nVPC_DATA = 0;
 368   3                              break;
 369   3      
 370   3                      case VPCcmdWr3GStatus:                          //0x20 Write 3G
 371   3                              /*
 372   3                              if(nKillSwitchGET)
 373   3                              {
 374   3                                      pDevStus.bit.p3GDevice = nVPC_DATA;
 375   3                                      if(p3GDeviceGET)
 376   3                                              SET_MASK(DEVICEMODULE,WWAN_3G);
 377   3                                      else
 378   3                                              CLR_MASK(DEVICEMODULE,WWAN_3G);
 379   3                              }
 380   3                              */
 381   3                              break;
 382   3      
 383   3                      case VPCcmdRdODDStatus:                         //0x21 Read ODD Notify status
 384   3                              if ( IS_MASK_SET(uODDPWRsaving, uODD_PWRon) )   // Check bit0: ODD power on.
 385   3                              {
 386   4                                      CLR_MASK(uODDPWRsaving, uODD_PWRon);            // Clear bit0: ODD power on.
 387   4                                      nVPC_DATA = 0x01;                       // User press eject btn
 388   4                              }
 389   3                              else if( IS_MASK_SET(uODDPWRsaving, uODD_PWRoff1) )
 390   3                              {
 391   4                                      CLR_MASK(uODDPWRsaving, uODD_PWRoff1);          // Clear bit0: ODD power off.
 392   4                                      nVPC_DATA = 0x02;                       // power off
 393   4                              }
 394   3                              else if( IS_MASK_SET(uODDPWRsaving, uODD_InitEnd) )
 395   3                              {
 396   4                                      CLR_MASK(uODDPWRsaving, uODD_InitEnd);          // Clear bit6: ODD init End.
 397   4                                      nVPC_DATA = 0x03;                       // initial completion
 398   4                              }
 399   3                              break;
 400   3      
 401   3                      case VPCcmdWrDustModeStatus:            //0x22 Write DustMode
 402   3                              #if Lenovo_FAN_Dust                             // Dust mode
 403   3                              if(nVPC_DATA)
 404   3                              {
 405   4                                      //putchar('w');putchar('R');
 406   4                                      SET_MASK(SMartNoise, b5DedustingMode);
 407   4                                      SET_MASK(THERMAL_STATUS, INITOK);       // Enable Dust mode.
 408   4                              }
 409   3                              else
 410   3                              {
 411   4                                      //putchar('w');putchar('S');
 412   4                                      //CLR_MASK(SMartNoise, b5DedustingMode);
 413   4                                      StartFanClean = 0;                                              // stop dust mode
 414   4                                      CLR_MASK(THERMAL_STATUS, INITOK);               // Disable Dust mode.
 415   4                                      FAN_PWM = FAN_PWM_Min;                                  // PWM minimum.
 416   4                                      //SET_MASK(SMartNoise, b2StopReason);   // Dust mode by Cancel.
 417   4                                      SMartNoise = 0x04;
 418   4                              }
 419   3                              #endif  // Lenovo_FAN_Dust
 420   3                              break;
 421   3      
 422   3                      case VPCcmdRdAllRFStatus:                       //0x23 Read All RF Status
 423   3                              nVPC_DATA = nKillSwitchGET;
C51 COMPILER V8.12   OEM_MAILBOX                                                           07/28/2018 12:03:52 PAGE 8   

 424   3                              break;
 425   3      
 426   3                      case VPCcmdWrAllRFStatus:                       //0x24 Write All RF Status
 427   3                              break;
 428   3      
 429   3                      case VPCcmdRdCameraUtilityStatus:       //0x25 Read Camera Utility Status
 430   3                              nVPC_DATA = 0;
 431   3                              break;
 432   3      
 433   3                      case VPCcmdWrCameraUtilityStatus:       //0x26 Write Camera Utility Status
 434   3                              break;
 435   3      
 436   3                      case VPCcmdSetSuperPerformance:         //0x28 Set SuperPerformance mode
 437   3                              if( nVPC_DATA)
 438   3                              {
 439   4                                      //printf("ssp");
 440   4                                      SET_MASK(uVGATurboFun, uEnableGPS);
 441   4                                      SET_MASK(EM7FUNCTION,LSPRUNNING);       // Enable Super performance mode.
 442   4                              }
 443   3                              else
 444   3                              {
 445   4                                      //printf("dsp");
 446   4                                      CLR_MASK(uVGATurboFun, uEnableGPS);
 447   4                                      CLR_MASK(EM7FUNCTION,LSPRUNNING);       // Disable Super performance mode.
 448   4                              }
 449   3                              break;
 450   3      
 451   3                      case VPCcmdRdGCPUstatus:                        //0x29 Read GCPU notify status
 452   3                              if(nSwitchstateGET)
 453   3                              { nVPC_DATA = 0; }
 454   3                              else
 455   3                              { nVPC_DATA = 1; }
 456   3                              break;
 457   3      
 458   3                      case VPCcmdRdDustModeStatus:            //0x2B Read Dust mode status
 459   3                              #if Lenovo_FAN_Dust                     // Dust mode
 460   3                              if ( IS_MASK_SET(SMartNoise, b1FanCleanStart) )
 461   3                              {
 462   4                                      //putchar('r');putchar('R');
 463   4                                      nVPC_DATA = 0x03;       //Dust Mode running & support Dust mode
 464   4                              }
 465   3                              else
 466   3                              {
 467   4                                      if ( IS_MASK_CLEAR(SMartNoise, b2StopReason) )
 468   4                                      {
 469   5                                              //putchar('r');putchar('S');
 470   5                                              nVPC_DATA = 0x05;       //Dust Mode stopped & support Dust mode
 471   5                                      }
 472   4                                      else
 473   4                                      {
 474   5                                              nVPC_DATA = 0x85;       //Dust Mode running & support Dust mode
 475   5                                      }
 476   4                              }
 477   3                                      //ANGELAG008:add start
 478   3                      #else
                                                 nVPC_DATA = 0x00;
                                              //ANGELAG008:add end
                                      #endif  // Lenovo_FAN_Dust
 482   3                              break;
 483   3      
 484   3                      case VPCcmdRdSuperPerformance:          //0x2D Read status of SuperPerformance mode on EM7
 485   3                              nVPC_DATA = EM7FUNCTION;
C51 COMPILER V8.12   OEM_MAILBOX                                                           07/28/2018 12:03:52 PAGE 9   

 486   3                              break;
 487   3      
 488   3                      case VPCcmdRdOnekeyStatus:                      //0x31 Read OneKey theater
 489   3                              nVPC_DATA = pOneKeyAPPStatus;   //Bit0: onekey recovery Bit1:theater Bit2: security Bit3:PwrSaving
 490   3                              pOneKeyAPPStatus = 0;
 491   3                              break;
 492   3      
 493   3                      case VPCcmdRdGenenalstatus:                     //0x2F Read Genenal event status        //09110502 Isaac Start
 494   3                              //if( IS_MASK_SET(EM7FUNCTION,OVERTEMPATI) )                    // ATI graphic.
 495   3                              //{
 496   3                              //      nVPC_DATA = 0x08;                       //bit3
 497   3                              //      CLR_MASK(EM7FUNCTION,OVERTEMPATI);      // Disable Over Temp ATI.
 498   3                              //}
 499   3                              if ( IS_MASK_SET(LENOVOPMFW,BATTERY_MAIN_CAL) || IS_MASK_SET(LENOVOPMFW_Temp,BATTERY_CALIBRATION_OK) )  
             -// Battery Calibration
 500   3                              {
 501   4                                      CLR_MASK(LENOVOPMFW,BATTERY_MAIN_CAL);
 502   4                                      CLR_MASK(LENOVOPMFW,BATTERY_CAL_END);
 503   4                      CLR_MASK(LENOVOPMFW_Temp,BATTERY_CALIBRATION_OK);
 504   4                                      nVPC_DATA = 0x04;
 505   4                              }
 506   3                  if(IS_MASK_SET(EM9_NEWFUN,b0_FnPlus))
 507   3                  {
 508   4                      CLR_MASK(EM9_NEWFUN,b0_FnPlus);
 509   4                      nVPC_DATA = 0x10; 
 510   4                  }      
 511   3                  else if(IS_MASK_SET(EM9_NEWFUN,b1_FnMinus))
 512   3                  {
 513   4                      CLR_MASK(EM9_NEWFUN,b1_FnMinus);
 514   4                      nVPC_DATA = 0x20; 
 515   4                  }                                                       
 516   3                              #if Support_CPU_Auto
                          if( IS_MASK_SET(LENOVOPMFW_Temp,Auto_Mode_Change))
                          {
                              CLEAR_MASK(LENOVOPMFW_Temp,Auto_Mode_Change);
                              if(IS_MASK_SET(LENOVOPMFW_Temp,Auto_Mode_Off))
                              {
                                      nVPC_DATA = 0x02;
                              }
                              else // Auto_Mode_OFF
                              {
                                      nVPC_DATA = 0x00;
                              }
                          }
                                      #endif  // Support_CPU_Auto
 530   3                              break;
 531   3      
 532   3                      case VPCcmdWrQuietStatus:                       //0x32 Write Quiet Status
 533   3                              break;
 534   3      
 535   3                      case VPCcmdWrBacklightStatus:           //0x33 Write LCD backlight Status inverter
 536   3                              if( Read_BKOFF() )
 537   3                              {
 538   4                                      if( !nVPC_DATA )        // Turn off backlight.
 539   4                                      {
 540   5                                              //printf("\nDb");
 541   5                                              SET_MASK(cCmd, b3BkOff);
 542   5                                              SET_MASK(OEMControl, b1BkOff);//ANGELAG005:add
 543   5                                      }
 544   4                              }
 545   3                              else
 546   3                              {
C51 COMPILER V8.12   OEM_MAILBOX                                                           07/28/2018 12:03:52 PAGE 10  

 547   4                                      if( nVPC_DATA == 0x01 ) // Turn on backlight.
 548   4                                      {
 549   5                                              //printf("\nEb");
 550   5                                              CLR_MASK(cCmd, b3BkOff);
 551   5                                              CLR_MASK(OEMControl, b1BkOff);//ANGELAG005:add
 552   5                                      }
 553   4                              }
 554   3                              break;
 555   3      
 556   3                      //Add VPC 0x38 command.
 557   3                      case VPCcmdRdBatteryACStatus:                   //0x38 Read Battery\Adapter Plug in\Plug out status 
 558   3                  nVPC_DATA = 0x00;
 559   3                  if(IS_MASK_SET(SYS_STATUS,AC_ADP))
 560   3                  {
 561   4                      SET_MASK(nVPC_DATA, BIT0);
 562   4                      CLEAR_MASK(nVPC_DATA, BIT1);
 563   4                  }   
 564   3                              else
 565   3                              {
 566   4                      SET_MASK(nVPC_DATA, BIT1);
 567   4                      CLEAR_MASK(nVPC_DATA, BIT0);
 568   4                  }   
 569   3                              if(IS_MASK_SET(SEL_STATE0,PRESENT_A))
 570   3                  {
 571   4                      SET_MASK(nVPC_DATA, BIT2);
 572   4                      CLEAR_MASK(nVPC_DATA, BIT3);
 573   4                  }   
 574   3                              else
 575   3                              {
 576   4                      SET_MASK(nVPC_DATA, BIT3);
 577   4                      CLEAR_MASK(nVPC_DATA, BIT2);
 578   4                  }
 579   3                              
 580   3                              //Bit0: Adapter insert; Bit1: Adatper plugout ;
 581   3                              //Bit2: the main battery insert; Bit3: the main battery plugout;
 582   3                              //Bit4: the second battery insert  Bit5: the second battery plugout                     
 583   3                      break;
 584   3                      default:
 585   3                              break;
 586   3                      }
 587   2                      nVPC_CMD = 0x00;
 588   2              }
 589   1      }
 590          
 591          //ANGELAG008: add start
 592          void TPInfor_ToVPC(void)
 593          {
 594   1         if(SystemIsS0)
 595   1         {
 596   2            if(IS_MASK_SET(pDevStatus3,b6EnDisTPSend))
 597   2            {
 598   3               if((IS_MASK_SET(pDevStatus3,b7TPStateFormer))!=(IS_MASK_SET(pDevStatus1,b7DisableTP))) //ANGELAG0
             -26: modify b7DisableTP to b7TPStateFormer
 599   3               {
 600   4                  CLEAR_MASK(pDevStatus3,b6EnDisTPSend);
 601   4                              //if(uReserve07.fbit.nVPCDriverIn==1)   //ANGELAG047: remove // Check VPC driver
 602   4                              if ( IS_MASK_SET(SYS_MISC1, ACPI_OS) ) //ANGELAG047: add
 603   4                              {
 604   5                                uVPCeventSource = TouchPad;
 605   5                                uVPCeventSource2 = 0;
 606   5                                ECQEvent(SDV_VPC_notify);
 607   5                              }                       
C51 COMPILER V8.12   OEM_MAILBOX                                                           07/28/2018 12:03:52 PAGE 11  

 608   4               }
 609   3            } 
 610   2         }  
 611   1      }
 612          //ANGELAG008: add end
 613          
 614          void ThermalMailBox(void)
 615          {
 616   1              if(EXT_NAMESPACE_BANK)
 617   1              {
 618   2              RamDebug(EXT_NAMESPACE_BANK);
 619   2              RamDebug(EXT_NAMESPACE_INDEX);
 620   2                      switch(EXT_NAMESPACE_BANK)
 621   2                      {
 622   3                      case 0x81:
 623   3                              if (EXT_NAMESPACE_INDEX==0x02)
 624   3                                      EXT_NAMESPACE_DATA = (FAN_PWM/2);
 625   3                              if (EXT_NAMESPACE_INDEX==0x04)
 626   3                                      EXT_NAMESPACE_DATA = nAtmFanSpeed;
 627   3                              else if (EXT_NAMESPACE_INDEX==0x07)
 628   3                                      EXT_NAMESPACE_DATA = FAN_Tab_OFF;
 629   3                              else if (EXT_NAMESPACE_INDEX==0x08)
 630   3                                      EXT_NAMESPACE_DATA = FAN_Tab_LOW;
 631   3                              else if (EXT_NAMESPACE_INDEX==0x09)
 632   3                                      EXT_NAMESPACE_DATA = FAN_Tab_HI;
 633   3                              else if (EXT_NAMESPACE_INDEX==0x0A)
 634   3                                      EXT_NAMESPACE_DATA = THR_Turo_Rem;
 635   3                              else if (EXT_NAMESPACE_INDEX==0x0B)
 636   3                                      EXT_NAMESPACE_DATA = THR_PRO_OFF;
 637   3                              else if (EXT_NAMESPACE_INDEX==0x0C)
 638   3                                      EXT_NAMESPACE_DATA = THR_Turo_OFF;
 639   3                              else if (EXT_NAMESPACE_INDEX==0x0D)
 640   3                                      EXT_NAMESPACE_DATA = THR_PRO_ON;
 641   3                              else if (EXT_NAMESPACE_INDEX==0x0E)
 642   3                                      EXT_NAMESPACE_DATA = VFAN_Tab_OFF;
 643   3                              else if (EXT_NAMESPACE_INDEX==0x0F)
 644   3                                      EXT_NAMESPACE_DATA = VFAN_Tab_LOW;
 645   3                              else if (EXT_NAMESPACE_INDEX==0x10)
 646   3                                      EXT_NAMESPACE_DATA = VFAN_Tab_HI;
 647   3                              else if (EXT_NAMESPACE_INDEX==0x11)
 648   3                                      EXT_NAMESPACE_DATA = VTHR_Turo_Rem;
 649   3                              else if (EXT_NAMESPACE_INDEX==0x12)
 650   3                                      EXT_NAMESPACE_DATA = VTHR_PRO_OFF;
 651   3                              else if (EXT_NAMESPACE_INDEX==0x13)
 652   3                                      EXT_NAMESPACE_DATA = VTHR_Turo_OFF;
 653   3                              else if (EXT_NAMESPACE_INDEX==0x14)
 654   3                                      EXT_NAMESPACE_DATA = VTHR_PRO_ON;
 655   3                              break;
 656   3      
 657   3                      case 0x82:
 658   3                              break;
 659   3      
 660   3                      case 0x84:
 661   3                              if (EXT_NAMESPACE_INDEX==0x00)
 662   3                                      EXT_NAMESPACE_DATA = 0;
 663   3                              else if (EXT_NAMESPACE_INDEX==0x01)
 664   3                                      EXT_NAMESPACE_DATA = nRamTemp;
 665   3                              else if (EXT_NAMESPACE_INDEX==0x02)
 666   3                                      EXT_NAMESPACE_DATA = nVramTemp;
 667   3                              else if (EXT_NAMESPACE_INDEX==0x03)
 668   3                                      EXT_NAMESPACE_DATA = nNBTemp;
 669   3                      }
C51 COMPILER V8.12   OEM_MAILBOX                                                           07/28/2018 12:03:52 PAGE 12  

 670   2              RamDebug(EXT_NAMESPACE_DATA);
 671   2                      EXT_NAMESPACE_INDEX = 0;
 672   2                      EXT_NAMESPACE_BANK = 0;
 673   2              }
 674   1      }
 675          //------------------------------------------------------------
 676          // Debug function
 677          //------------------------------------------------------------
 678          #define DebugRamAddr 0xA00   //ANGELAS064:change '0xF00' to '0xA00'
 679          #define DebugRamRange 0xFF
 680          
 681          void RamDebug(unsigned char dbgcode)
 682          {
 683   1              PORT_BYTE_PNTR ClearIndex;
 684   1              PORT_BYTE_PNTR byte_register_pntr;
 685   1          BYTE index;
 686   1              BYTE i;
 687   1      
 688   1          byte_register_pntr = DebugRamAddr+DebugRamRange;
 689   1          index = *byte_register_pntr;
 690   1          *byte_register_pntr +=1;
 691   1      
 692   1          if ( *byte_register_pntr == DebugRamRange )
 693   1              {
 694   2                      *byte_register_pntr = 0;
 695   2              ClearIndex= DebugRamAddr;
 696   2      
 697   2                      for (i=0x00;i<DebugRamRange;i++)
 698   2              {
 699   3                      *ClearIndex=0x00;
 700   3                      ClearIndex++;
 701   3              }
 702   2              }
 703   1      
 704   1              byte_register_pntr = DebugRamAddr + index;
 705   1          *byte_register_pntr = dbgcode;
 706   1      }
 707          
 708          
 709          //ANGELAS064:add start
 710          void ClearDiagRam(void)
 711          {
 712   1              BYTE *ClearIndex;
 713   1              WORD i;
 714   1          ClearIndex= (XBYTE *)DiagNameSpace;
 715   1              for (i=0x00;i<=0xFF;i++)
 716   1              {
 717   2                      *ClearIndex=0x00;
 718   2                      ClearIndex++;
 719   2              }
 720   1      
 721   1              //Rdbg_index=0;  
 722   1      }
 723          void DiagSMBusOperation(void)     
 724          {
 725   1              BYTE result;
 726   1              BYTE HOSTx_x_State;
 727   1                               
 728   1              if( SMB_PRTC_Diag!= 0x00 )
 729   1              {
 730   2                      SMB_STS_Diag = 0x00;
 731   2      
C51 COMPILER V8.12   OEM_MAILBOX                                                           07/28/2018 12:03:52 PAGE 13  

 732   2                      SMB_PRTC_Diag = SMB_PRTC_Diag&0x0F; 
 733   2              #if 0
                              if((vOSSMbusComd_table[(SMB_PRTC & 0x0F)])()) 
                              {
                                      SMB_STS = 0x80;
                              }
                              else 
                              {
                                      if( IS_MASK_SET(HOSTA_A,BIT0) ) { SMB_STS = 0x1A; }
                                      else if( IS_MASK_SET(HOSTA_A,BIT2) ) { SMB_STS = 0x17; }
                                      else if( IS_MASK_SET(HOSTA_A,BIT3) ) { SMB_STS = 0x07; }
                                      else if( IS_MASK_SET(HOSTA_A,BIT4) ) { SMB_STS = 0x19; }
                                      else if( IS_MASK_SET(HOSTA_A,BIT5) ) { SMB_STS = 0x10; }
                                      else if( IS_MASK_SET(HOSTA_A,BIT6) ) { SMB_STS = 0x18; }
                              }
                      #else
 748   2              
 749   2                      if(SMB_PRTC_Diag == 0x04)               //0x04-Send Byte
 750   2                      {
 751   3                              result = bSMBusSendByte(SMB_EC_Chennel_Diag, SMB_ADDR_Diag, SMB_CMD_Diag );
 752   3                      }
 753   2                      else if(SMB_PRTC_Diag == 0x05)          //0x05-Receive Byte
 754   2                      {
 755   3                              result = bSMBusReceiveByte(SMB_EC_Chennel_Diag, SMB_ADDR_Diag, &SMB_DATA_Diag);
 756   3                      }
 757   2                      else if(SMB_PRTC_Diag == 0x06)          //0x06-Write Byte
 758   2                      {
 759   3                              result = bRWSMBus(SMB_EC_Chennel_Diag, SMbusWB, SMB_ADDR_Diag, SMB_CMD_Diag, &SMB_DATA_Diag, SMBus_NoPE
             -C);
 760   3                      }
 761   2                      else if(SMB_PRTC_Diag == 0x07)          //0x07-Read Byte
 762   2                      {
 763   3                              result = bRWSMBus(SMB_EC_Chennel_Diag, SMbusRB, SMB_ADDR_Diag, SMB_CMD_Diag, &SMB_DATA_Diag, SMBus_NoPE
             -C);
 764   3                      }
 765   2                      else if(SMB_PRTC_Diag == 0x08)          //0x08-Write Word
 766   2                      {
 767   3                              result = bRWSMBus(SMB_EC_Chennel_Diag, SMbusWW, SMB_ADDR_Diag, SMB_CMD_Diag, &SMB_DATA_Diag, SMBus_NoPE
             -C);
 768   3                      }
 769   2                      else if(SMB_PRTC_Diag == 0x09)          //0x09-Read Word
 770   2                      {
 771   3                              result =  bRWSMBus(SMB_EC_Chennel_Diag, SMbusRW, SMB_ADDR_Diag, SMB_CMD_Diag, &SMB_DATA_Diag, SMBus_NoP
             -EC);
 772   3                      }
 773   2                      else if(SMB_PRTC_Diag == 0x0A)          //0x0A-Write Block
 774   2                      {
 775   3                              result = bWSMBusBlock(SMB_EC_Chennel_Diag, SMbusWBK, SMB_ADDR_Diag, SMB_CMD_Diag, &SMB_DATA_Diag, SMB_B
             -CNT_Diag,SMBus_NoPEC);
 776   3                      }
 777   2                      else if(SMB_PRTC_Diag == 0x0B)          //0x0B-Read Block
 778   2                      {
 779   3                              result = bRSMBusBlock(SMB_EC_Chennel_Diag, SMbusRBK, SMB_ADDR_Diag, SMB_CMD_Diag, &SMB_DATA_Diag);
 780   3                      }
 781   2      
 782   2                      if(SMbusCh2 == SMB_EC_Chennel_Diag)
 783   2                      {
 784   3                          HOSTx_x_State = HOSTA_B;
 785   3                      }
 786   2                      else if(SMbusCh1 == SMB_EC_Chennel_Diag)
 787   2                      {
 788   3                              HOSTx_x_State = HOSTA_A;
C51 COMPILER V8.12   OEM_MAILBOX                                                           07/28/2018 12:03:52 PAGE 14  

 789   3                      }
 790   2                      else if(SMbusCh3== SMB_EC_Chennel_Diag)
 791   2                      {
 792   3                              HOSTx_x_State = HOSTA_C;
 793   3                      }
 794   2                                       
 795   2                      if(result)
 796   2                      {
 797   3                              SMB_STS_Diag = 0x80;
 798   3                      }
 799   2                      else
 800   2                      {
 801   3                              //SMB_STS = 0x5A;//W074>>>:Battery FW update channel use B.
 802   3                              if( IS_MASK_SET(HOSTx_x_State,BIT0) ) { SMB_STS_Diag = 0x1A; }
 803   3                              else if( IS_MASK_SET(HOSTx_x_State,BIT2) ) { SMB_STS_Diag = 0x17; }
 804   3                              else if( IS_MASK_SET(HOSTx_x_State,BIT3) ) { SMB_STS_Diag = 0x07; }
 805   3                              else if( IS_MASK_SET(HOSTx_x_State,BIT4) ) { SMB_STS_Diag = 0x19; }
 806   3                              else if( IS_MASK_SET(HOSTx_x_State,BIT5) ) { SMB_STS_Diag = 0x10; }
 807   3                              else if( IS_MASK_SET(HOSTx_x_State,BIT6) ) { SMB_STS_Diag = 0x18; }
 808   3                      }
 809   2                      //RamDebug(0x88);
 810   2                      //RamDebug(0xAA);
 811   2                      //RamDebug(result);
 812   2                      //RamDebug(HOSTx_x_State);
 813   2              #endif
 814   2                              
 815   2                      SMB_PRTC_Diag = 0x00;
 816   2              
 817   2                      //ECSMI_SCIEvent(ACPI_ACIN_SCI);        // toggle HOST
 818   2              }
 819   1      }
 820          
 821          void Diag_interface(void)
 822          {
 823   1          BYTE *Tmp_XPntr;  
 824   1              if(nDiagInterface_CMD)
 825   1              {
 826   2                  RamDebug(0xDC);  
 827   2              RamDebug(nDiagInterface_CMD);           
 828   2                      RamDebug(nDiagInterface_ECRegH);   
 829   2                      RamDebug(nDiagInterface_ECRegL);  
 830   2      
 831   2                      switch(nDiagInterface_CMD)
 832   2                      {
 833   3                      case DiagReadECReg:                                     //0x11 Read EC Register
 834   3                              nDiagInterface_DATA = *((XBYTE *)((nDiagInterface_ECRegH<<0x08)+nDiagInterface_ECRegL));
 835   3                              RamDebug(nDiagInterface_DATA);  
 836   3                              //uVPCeventSource = 0;                  //Clear it after AP read.
 837   3                              break;
 838   3                      case DiagWriteECReg:                                    //0x12 Write EC Register
 839   3                              *((XBYTE *)((nDiagInterface_ECRegH<<0x08)+nDiagInterface_ECRegL))= nDiagInterface_DATA;
 840   3                              RamDebug(nDiagInterface_DATA);  
 841   3                              //uVPCeventSource = 0;                  //Clear it after AP read.
 842   3                              break;  
 843   3              case DiagReadECRAM:                             //0x13 Read EC RAM
 844   3                  nDiagInterface_DATA = *((XBYTE *)((nDiagInterface_ECRegH<<0x08)+nDiagInterface_ECRegL));
 845   3                              RamDebug(nDiagInterface_DATA);  
 846   3                      break;
 847   3              case DiagWriteECRAM:                                    //0x14 Write EC RAM
 848   3                      *((XBYTE *)((nDiagInterface_ECRegH<<0x08)+nDiagInterface_ECRegL)) = nDiagInterface_DATA;
 849   3                              RamDebug(nDiagInterface_DATA); 
 850   3                      break;
C51 COMPILER V8.12   OEM_MAILBOX                                                           07/28/2018 12:03:52 PAGE 15  

 851   3              case DiagReadECSpace:                           //0x80 Read EC Register
 852   3                      nDiagInterface_DATA =   *((XBYTE *)(NameSpace+nDiagInterface_ECRegL));
 853   3                              RamDebug(nDiagInterface_DATA);  
 854   3                      break;
 855   3              case DiagWriteECSpace:                                  //0x81 Write EC Register
 856   3                      *((XBYTE *)(NameSpace+nDiagInterface_ECRegL)) = nDiagInterface_DATA;
 857   3                              RamDebug(nDiagInterface_DATA);  
 858   3                      break;                            
 859   3      
 860   3              case DiagSMBusOperate:                                  //0x20 Write EC Register
 861   3                  if(0x00 == SMB_EC_Chennel_Diag)
 862   3                                       SMB_EC_Chennel_Diag = SMbusCh2;
 863   3                              else 
 864   3                                       SMB_EC_Chennel_Diag--;
 865   3                      DiagSMBusOperation();
 866   3                      break;
 867   3                                       
 868   3              case DiagSimulateFnKey:                                 //0x21 Simulate Function Key
 869   3                  if((nDiagInterface_DATA>0)&&(nDiagInterface_DATA<=12))
 870   3                              {
 871   4                                  FunctionKeyDebounce=(nDiagInterface_DATA<<0x04)+10; //ANGELAS084:add
 872   4                                  (HotKey_Fn_Fx[nDiagInterface_DATA-1])(0);   //ANGELAS084:add
 873   4                          }  
 874   3                      break;
 875   3                      //MEILING013:S+
 876   3                      case DiagSimulateQEvent:
 877   3                              ECQEvent(nDiagInterface_DATA);
 878   3                              break;
 879   3                      //MEILING013:E+
 880   3              case DiagReadTemp:                                      //0x26 Read temperature
 881   3                  if(0x01 == nDiagInterface_DATA)
 882   3                              {
 883   4                                      nDiagInterface_DATA = nCpuTemp;
 884   4                          } 
 885   3                              else if(0x02 == nDiagInterface_DATA)
 886   3                              {
 887   4                                      nDiagInterface_DATA = VGA_TEMP;
 888   4                              }
 889   3                              else if(0x03 == nDiagInterface_DATA)
 890   3                              {
 891   4                                      //nDiagInterface_DATA = nVramTemp; //MEILING013:remove.
 892   4                                      nDiagInterface_DATA = EXTVGA_TEMP; //MEILING013:add.
 893   4                              }
 894   3                              else if(0x04 == nDiagInterface_DATA)
 895   3                              {
 896   4                                      //nDiagInterface_DATA = nNBTemp;  //MEILING013:remove.
 897   4                                      nDiagInterface_DATA = ThermistorCPU_TEMP; //MEILING013:add.
 898   4                              }
 899   3                              else if(0x05 == nDiagInterface_DATA)
 900   3                              {
 901   4                                      nDiagInterface_DATA = nRamTemp;
 902   4                              }
 903   3                              //MEILING013:S+
 904   3                              else if(0x06 == nDiagInterface_DATA)
 905   3                              {
 906   4                                      nDiagInterface_DATA = nVramTemp;
 907   4                              }
 908   3                              //MEILING013:E+
 909   3                      break;  
 910   3              case DiagReadFanSpeed:                                  //0x27 Read Fan Speed
 911   3                  if(0x01 == nDiagInterface_DATA)
 912   3                              {
C51 COMPILER V8.12   OEM_MAILBOX                                                           07/28/2018 12:03:52 PAGE 16  

 913   4                                  nDiagInterface_DATA = nAtmFanSpeed;
 914   4                          } 
 915   3                              else if(0x02 == nDiagInterface_DATA)
 916   3                              {
 917   4                                      //nDiagInterface_DATA = nAtmFan2Speed;
 918   4                                      nDiagInterface_DATA = 0x00; //MEILING013:add.
 919   4                              }
 920   3                              //MEILING013:S+
 921   3                              else if(0x03 == nDiagInterface_DATA)
 922   3                              {
 923   4                                      nDiagInterface_DATA = FAN_PWM;
 924   4                              }
 925   3                              else if(0x04 == nDiagInterface_DATA)
 926   3                              {
 927   4                                      //nDiagInterface_DATA = FAN2_PWM;
 928   4                                      nDiagInterface_DATA = 0x00;
 929   4                              }
 930   3                              //MEILING013:E+
 931   3                      break;  
 932   3              case DiagWriteFanSpeed:                                 //0x28 Write Fan Speed
 933   3                  if(nDiagInterface_DATA >= 0x80) //bi7 = 1: Fan2, //bit7 = 0: Fan1
 934   3                              {
 935   4                                  uReserve07.fbit.nFanManual = 1;//MEILING013:add.
 936   4                                  //DebugFan2RPMT = nDiagInterface_DATA -128;
 937   4                                  ManualFanPRM = nDiagInterface_DATA - 128; //MEILING013:add.
 938   4                          } 
 939   3                              else 
 940   3                              {
 941   4                                      //uReserve07.fbit.b7Fan2Manual = 1;//MEILING013:add.
 942   4                                      //DebugFan2RPMT = nDiagInterface_DATA;
 943   4                                      //ManualFan2PRM = nDiagInterface_DATA;  //MEILING013:add.
 944   4                              }
 945   3                      break;  
 946   3                      case DiagReadThermalTable:                                      //0x29 Read Thermal Table
 947   3                  /*
 948   3                         if(IS_MASK_CLEAR(nDiagInterface_DATA,FanNum)&&IS_MASK_CLEAR(nDiagInterface_DATA,FanType
             -)) //Fan1 CPU
 949   3                              {
 950   3                                      if(0x00 == (nDiagInterface_DATA&0x03))
 951   3                                              nDiagInterface_DATA = *ThermalTalbe1CPUDiag[(nDiagInterface_DATA&0x1C)>>0x02].FanOn;
 952   3                                      else if(0x01 == (nDiagInterface_DATA&0x03))
 953   3                                              nDiagInterface_DATA = *ThermalTalbe1CPUDiag[(nDiagInterface_DATA&0x1C)>>0x02].FanOff;
 954   3                                      else if(0x02 == (nDiagInterface_DATA&0x03))
 955   3                                              nDiagInterface_DATA = *ThermalTalbe1CPUDiag[(nDiagInterface_DATA&0x1C)>>0x02].RPM;
 956   3                            } 
 957   3                              else  if(IS_MASK_CLEAR(nDiagInterface_DATA,FanNum)&&IS_MASK_SET(nDiagInterface_DATA,FanType))  //Fan1 V
             -GA
 958   3                              {
 959   3                                      if(0x00 == (nDiagInterface_DATA&0x03))
 960   3                                              nDiagInterface_DATA = *ThermalTalbe1VGADiag[(nDiagInterface_DATA&0x1C)>>0x02].FanOn;
 961   3                                      else if(0x01 == (nDiagInterface_DATA&0x03))
 962   3                                              nDiagInterface_DATA = *ThermalTalbe1VGADiag[(nDiagInterface_DATA&0x1C)>>0x02].FanOff;
 963   3                                      else if(0x02 == (nDiagInterface_DATA&0x03))
 964   3                                              nDiagInterface_DATA = *ThermalTalbe1VGADiag[(nDiagInterface_DATA&0x1C)>>0x02].RPM;
 965   3                            } 
 966   3                         else  if(IS_MASK_SET(nDiagInterface_DATA,FanNum)&&IS_MASK_CLEAR(nDiagInterface_DATA,Fan
             -Type))  //Fan2 CPU
 967   3                              {
 968   3                                      if(0x00 == (nDiagInterface_DATA&0x03))
 969   3                                              nDiagInterface_DATA = *ThermalTalbe2CPUDiag[(nDiagInterface_DATA&0x1C)>>0x02].FanOn;
 970   3                                      else if(0x01 == (nDiagInterface_DATA&0x03))
 971   3                                              nDiagInterface_DATA = *ThermalTalbe2CPUDiag[(nDiagInterface_DATA&0x1C)>>0x02].FanOff;
C51 COMPILER V8.12   OEM_MAILBOX                                                           07/28/2018 12:03:52 PAGE 17  

 972   3                                      else if(0x02 == (nDiagInterface_DATA&0x03))
 973   3                                              nDiagInterface_DATA = *ThermalTalbe2CPUDiag[(nDiagInterface_DATA&0x1C)>>0x02].RPM;
 974   3                             }
 975   3                              else  if(IS_MASK_SET(nDiagInterface_DATA,FanNum)&&IS_MASK_SET(nDiagInterface_DATA,FanType))  //Fan2 VGA
 976   3                              {
 977   3                                      if(0x00 == (nDiagInterface_DATA&0x03))
 978   3                                      nDiagInterface_DATA = *ThermalTalbe2VGADiag[(nDiagInterface_DATA&0x1C)>>0x02].FanOn;
 979   3                                      else if(0x01 == (nDiagInterface_DATA&0x03))
 980   3                                              nDiagInterface_DATA = *ThermalTalbe2VGADiag[(nDiagInterface_DATA&0x1C)>>0x02].FanOff;
 981   3                                      else if(0x02 == (nDiagInterface_DATA&0x03))
 982   3                                              nDiagInterface_DATA = *ThermalTalbe2VGADiag[(nDiagInterface_DATA&0x1C)>>0x02].RPM;
 983   3                             }
 984   3                              */
 985   3                      break;  
 986   3                      case DiagWriteThermalTable:                                     //0x2A Read Thermal Table
 987   3                  /*
 988   3                              if(IS_MASK_CLEAR(nDiagInterface_DATA,FanNum)&&IS_MASK_CLEAR(nDiagInterface_DATA,FanType))
             - //Fan1 CPU
 989   3                              {
 990   3                                      if(0x00 == (nDiagInterface_DATA&0x03))
 991   3                                              *ThermalTalbe1CPUDiag[(nDiagInterface_DATA&0x1C)>>0x02].FanOn = nDiagInterface_DATA_High;
 992   3                                      else if(0x01 == (nDiagInterface_DATA&0x03))
 993   3                                              *ThermalTalbe1CPUDiag[(nDiagInterface_DATA&0x1C)>>0x02].FanOff = nDiagInterface_DATA_High;
 994   3                                      else if(0x02 == (nDiagInterface_DATA&0x03))
 995   3                                              *ThermalTalbe1CPUDiag[(nDiagInterface_DATA&0x1C)>>0x02].RPM = nDiagInterface_DATA_High;
 996   3                              } 
 997   3                              else  if(IS_MASK_CLEAR(nDiagInterface_DATA,FanNum)&&IS_MASK_SET(nDiagInterface_DATA,FanType))  //Fan1 V
             -GA
 998   3                              {
 999   3                                      if(0x00 == (nDiagInterface_DATA&0x03))
1000   3                                              *ThermalTalbe1VGADiag[(nDiagInterface_DATA&0x1C)>>0x02].FanOn = nDiagInterface_DATA_High;
1001   3                                      else if(0x01 == (nDiagInterface_DATA&0x03))
1002   3                                              *ThermalTalbe1VGADiag[(nDiagInterface_DATA&0x1C)>>0x02].FanOff = nDiagInterface_DATA_High;
1003   3                                      else if(0x02 == (nDiagInterface_DATA&0x03))
1004   3                                              *ThermalTalbe1VGADiag[(nDiagInterface_DATA&0x1C)>>0x02].RPM = nDiagInterface_DATA_High;
1005   3                            } 
1006   3                              else  if(IS_MASK_SET(nDiagInterface_DATA,FanNum)&&IS_MASK_CLEAR(nDiagInterface_DATA,FanType))  //Fan2 C
             -PU
1007   3                              {
1008   3                                      if(0x00 == (nDiagInterface_DATA&0x03))
1009   3                                              *ThermalTalbe2CPUDiag[(nDiagInterface_DATA&0x1C)>>0x02].FanOn = nDiagInterface_DATA_High;
1010   3                                      else if(0x01 == (nDiagInterface_DATA&0x03))
1011   3                                              *ThermalTalbe2CPUDiag[(nDiagInterface_DATA&0x1C)>>0x02].FanOff = nDiagInterface_DATA_High;
1012   3                                      else if(0x02 == (nDiagInterface_DATA&0x03))
1013   3                                              *ThermalTalbe2CPUDiag[(nDiagInterface_DATA&0x1C)>>0x02].RPM = nDiagInterface_DATA_High;
1014   3                             }
1015   3                              else  if(IS_MASK_SET(nDiagInterface_DATA,FanNum)&&IS_MASK_SET(nDiagInterface_DATA,FanType))  //Fan2 VGA
1016   3                              {
1017   3                                      if(0x00 == (nDiagInterface_DATA&0x03))
1018   3                                              *ThermalTalbe2VGADiag[(nDiagInterface_DATA&0x1C)>>0x02].FanOn = nDiagInterface_DATA_High;
1019   3                                      else if(0x01 == (nDiagInterface_DATA&0x03))
1020   3                                              *ThermalTalbe2VGADiag[(nDiagInterface_DATA&0x1C)>>0x02].FanOff = nDiagInterface_DATA_High;
1021   3                                      else if(0x02 == (nDiagInterface_DATA&0x03))
1022   3                                              *ThermalTalbe2VGADiag[(nDiagInterface_DATA&0x1C)>>0x02].RPM = nDiagInterface_DATA_High;
1023   3                             }
1024   3                              */
1025   3                      break;
1026   3              case DiagRecoverThermalTable:                                   //0x2B: real thermal table control
1027   3                  //InitThermalTable1();
1028   3                              //InitThermalTable2();
1029   3                      break;                                                           
1030   3                  case ClearAllDiagRam:                                 //0xFF Clear All Diag RAM
C51 COMPILER V8.12   OEM_MAILBOX                                                           07/28/2018 12:03:52 PAGE 18  

1031   3                          ClearDiagRam();                              
1032   3                  break;
1033   3                      default:
1034   3                              break;  
1035   3                      }
1036   2              }
1037   1              nDiagInterface_CMD = 0x00;
1038   1      }
1039          //ANGELAS064:add end
C51 COMPILER V8.12   OEM_MAILBOX                                                           07/28/2018 12:03:52 PAGE 19  

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION Com0162 (BEGIN)
0000         L?0355:
0000         L?0356:
0000 900000      E     MOV     DPTR,#SMB_EC_Chennel_Diag
0003 E0                MOVX    A,@DPTR
0004 FF                MOV     R7,A
0005 900000      E     MOV     DPTR,#SMB_ADDR_Diag
0008 E0                MOVX    A,@DPTR
0009 FB                MOV     R3,A
000A 900000      E     MOV     DPTR,#SMB_CMD_Diag
000D E0                MOVX    A,@DPTR
000E 900000      E     MOV     DPTR,#?_bRWSMBus?BYTE+03H
0011         L?0357:
0011 F0                MOVX    @DPTR,A
0012 7C00        E     MOV     R4,#HIGH SMB_DATA_Diag
0014 A3                INC     DPTR
0015 7400        E     MOV     A,#HIGH SMB_DATA_Diag
0017 F0                MOVX    @DPTR,A
0018 A3                INC     DPTR
0019 7400        E     MOV     A,#LOW SMB_DATA_Diag
001B F0                MOVX    @DPTR,A
001C 22                RET     
001D         L?0358:
001D 900000      E     MOV     DPTR,#MMIO_iDATA8C
0020 E0                MOVX    A,@DPTR
0021 900000      R     MOV     DPTR,#i
0024 F0                MOVX    @DPTR,A
0025 900000      E     MOV     DPTR,#MMIO_iDATA8D
0028 E0                MOVX    A,@DPTR
0029 900000      E     MOV     DPTR,#eEEPROMAddrsss
002C F0                MOVX    @DPTR,A
002D 900000      E     MOV     DPTR,#MMIO_iDATA8E
0030 E0                MOVX    A,@DPTR
0031 900000      E     MOV     DPTR,#eEEPROMBank
0034 F0                MOVX    @DPTR,A
0035 22                RET     
0036         L?0359:
0036         L?0360:
0036 900000      E     MOV     DPTR,#SMB_EC_Chennel_Diag
0039 E0                MOVX    A,@DPTR
003A FF                MOV     R7,A
003B 900000      E     MOV     DPTR,#SMB_ADDR_Diag
003E E0                MOVX    A,@DPTR
003F 22                RET     
0040         L?0361:
0040 E0                MOVX    A,@DPTR
0041 54FE              ANL     A,#0FEH
0043         L?0362:
0043 F0                MOVX    @DPTR,A
0044 900000      E     MOV     DPTR,#WLAN_OFF_Cnt
0047 7401              MOV     A,#01H
0049 F0                MOVX    @DPTR,A
004A 900000      E     MOV     DPTR,#pDevStus
004D 22                RET     
004E         L?0363:
004E         L?0364:
004E 900000      E     MOV     DPTR,#MMIO_iDATA8C
0051 E0                MOVX    A,@DPTR
0052 FD                MOV     R5,A
C51 COMPILER V8.12   OEM_MAILBOX                                                           07/28/2018 12:03:52 PAGE 20  

0053 7FFE              MOV     R7,#0FEH
0055 22                RET     
0056         L?0366:
0056         L?0367:
0056 E0                MOVX    A,@DPTR
0057 900000      E     MOV     DPTR,#nVPC_DATA
005A F0                MOVX    @DPTR,A
005B E4                CLR     A
005C 22                RET     
005D         L?0368:
005D 900000      E     MOV     DPTR,#nDiagInterface_ECRegH
0060 E0                MOVX    A,@DPTR
0061 FE                MOV     R6,A
0062         L?0369:
0062 900000      E     MOV     DPTR,#nDiagInterface_ECRegL
0065 E0                MOVX    A,@DPTR
0066 2400              ADD     A,#00H
0068 FF                MOV     R7,A
0069 22                RET     
             ; FUNCTION Com0162 (END)

             ; FUNCTION _Hook_MailBox (BEGIN)
                                           ; SOURCE LINE # 19
;---- Variable 'Cmd' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 20
                                           ; SOURCE LINE # 23
0000 EF                MOV     A,R7
0001 120000      E     LCALL   ?C?CCASE
0004 0000        R     DW      ?C0002
0006 40                DB      040H
0007 0000        R     DW      ?C0003
0009 41                DB      041H
000A 0000        R     DW      ?C0008
000C 42                DB      042H
000D 0000        R     DW      ?C0009
000F 43                DB      043H
0010 0000        R     DW      ?C0010
0012 45                DB      045H
0013 0000        R     DW      ?C0011
0015 46                DB      046H
0016 0000        R     DW      ?C0012
0018 47                DB      047H
0019 0000        R     DW      ?C0014
001B 4B                DB      04BH
001C 0000        R     DW      ?C0015
001E 4C                DB      04CH
001F 0000        R     DW      ?C0016
0021 4D                DB      04DH
0022 0000        R     DW      ?C0017
0024 4E                DB      04EH
0025 0000        R     DW      ?C0018
0027 4F                DB      04FH
0028 0000        R     DW      ?C0019
002A 51                DB      051H
002B 0000        R     DW      ?C0020
002D 52                DB      052H
002E 0000        R     DW      ?C0029
0030 58                DB      058H
0031 0000        R     DW      ?C0030
0033 59                DB      059H
0034 0000        R     DW      ?C0031
0036 5C                DB      05CH
C51 COMPILER V8.12   OEM_MAILBOX                                                           07/28/2018 12:03:52 PAGE 21  

0037 0000        R     DW      ?C0032
0039 5D                DB      05DH
003A 0000        R     DW      ?C0036
003C 77                DB      077H
003D 0000        R     DW      ?C0033
003F 97                DB      097H
0040 0000        R     DW      ?C0034
0042 B0                DB      0B0H
0043 0000        R     DW      ?C0035
0045 B4                DB      0B4H
0046 0000              DW      00H
0048 0000        R     DW      ?C0039
                                           ; SOURCE LINE # 24
                                           ; SOURCE LINE # 25
004A         ?C0002:
                                           ; SOURCE LINE # 26
004A 900000      E     MOV     DPTR,#MMIO_iDATA8C
004D E0                MOVX    A,@DPTR
004E FF                MOV     R7,A
004F 020000      E     LJMP    _Cmd_40
                                           ; SOURCE LINE # 27
                                           ; SOURCE LINE # 28
0052         ?C0003:
                                           ; SOURCE LINE # 29
0052 900000      E     MOV     DPTR,#MMIO_iDATA8C
0055 E0                MOVX    A,@DPTR
0056 B4A005            CJNE    A,#0A0H,?C0004
0059 7FFE              MOV     R7,#0FEH
005B 120000      E     LCALL   _Cmd_41_A0
005E         ?C0004:
                                           ; SOURCE LINE # 30
005E 900000      E     MOV     DPTR,#MMIO_iDATA8C
0061 E0                MOVX    A,@DPTR
0062 B4A105            CJNE    A,#0A1H,?C0005
0065 7FFE              MOV     R7,#0FEH
0067 120000      E     LCALL   _Cmd_41_A1
006A         ?C0005:
                                           ; SOURCE LINE # 31
006A 900000      E     MOV     DPTR,#MMIO_iDATA8C
006D E0                MOVX    A,@DPTR
006E B4A205            CJNE    A,#0A2H,?C0006
0071 7FFE              MOV     R7,#0FEH
0073 120000      E     LCALL   _Cmd_41_A2
0076         ?C0006:
                                           ; SOURCE LINE # 32
0076 900000      E     MOV     DPTR,#MMIO_iDATA8C
0079 E0                MOVX    A,@DPTR
007A 64A3              XRL     A,#0A3H
007C 6003              JZ      $ + 5H
007E 020000      R     LJMP    ?C0039
0081 7FFE              MOV     R7,#0FEH
0083 020000      E     LJMP    _Cmd_41_A3
                                           ; SOURCE LINE # 33
                                           ; SOURCE LINE # 34
0086         ?C0008:
                                           ; SOURCE LINE # 35
0086 900000      E     MOV     DPTR,#MMIO_iDATA8C
0089 E0                MOVX    A,@DPTR
008A FF                MOV     R7,A
008B 020000      E     LJMP    _Cmd_42
                                           ; SOURCE LINE # 36
                                           ; SOURCE LINE # 37
C51 COMPILER V8.12   OEM_MAILBOX                                                           07/28/2018 12:03:52 PAGE 22  

008E         ?C0009:
                                           ; SOURCE LINE # 38
008E 120000      R     LCALL   L?0363
0091 020000      E     LJMP    _Cmd_43
                                           ; SOURCE LINE # 39
                                           ; SOURCE LINE # 40
0094         ?C0010:
                                           ; SOURCE LINE # 41
0094 120000      R     LCALL   L?0363
0097 020000      E     LJMP    _Cmd_45
                                           ; SOURCE LINE # 42
                                           ; SOURCE LINE # 43
009A         ?C0011:
                                           ; SOURCE LINE # 44
009A 120000      R     LCALL   L?0364
009D 020000      E     LJMP    _Cmd_46
                                           ; SOURCE LINE # 45
                                           ; SOURCE LINE # 46
00A0         ?C0012:
                                           ; SOURCE LINE # 47
00A0 120000      R     LCALL   L?0364
00A3 020000      E     LJMP    _Cmd_47
                                           ; SOURCE LINE # 48
                                           ; SOURCE LINE # 49
                                           ; SOURCE LINE # 50
                                           ; SOURCE LINE # 51
                                           ; SOURCE LINE # 52
00A6         ?C0014:
                                           ; SOURCE LINE # 53
                                           ; SOURCE LINE # 54
                                           ; SOURCE LINE # 55
00A6 120000      R     LCALL   L?0358
                                           ; SOURCE LINE # 56
00A9 900000      E     MOV     DPTR,#MMIO_iDATA8F
                                           ; SOURCE LINE # 57
                                           ; SOURCE LINE # 58
                                           ; SOURCE LINE # 59
                                           ; SOURCE LINE # 60
                                           ; SOURCE LINE # 61
00AC 8013              SJMP    ?C0293
                                           ; SOURCE LINE # 63
00AE         ?C0015:
                                           ; SOURCE LINE # 64
                                           ; SOURCE LINE # 65
                                           ; SOURCE LINE # 66
00AE 120000      R     LCALL   L?0358
                                           ; SOURCE LINE # 67
00B1 900000      E     MOV     DPTR,#eEEPROMAddrsss
                                           ; SOURCE LINE # 68
00B4 8030              SJMP    ?C0294
                                           ; SOURCE LINE # 70
00B6         ?C0016:
                                           ; SOURCE LINE # 71
00B6 900000      E     MOV     DPTR,#MMIO_iDATA8C
00B9 E0                MOVX    A,@DPTR
00BA 900000      E     MOV     DPTR,#eEEPROMAddrsss
00BD F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 72
00BE 900000      E     MOV     DPTR,#MMIO_iDATA8D
00C1         ?C0293:
00C1 E0                MOVX    A,@DPTR
00C2 900000      E     MOV     DPTR,#eEEPROMData
C51 COMPILER V8.12   OEM_MAILBOX                                                           07/28/2018 12:03:52 PAGE 23  

00C5 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 73
00C6 900000      E     MOV     DPTR,#LENOVOPMFW_Temp
00C9 E0                MOVX    A,@DPTR
00CA 4410              ORL     A,#010H
00CC F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 74
00CD 120000      E     LCALL   Update_EEPROMMark
                                           ; SOURCE LINE # 75
00D0 900000      E     MOV     DPTR,#LENOVOPMFW_Temp
00D3 E0                MOVX    A,@DPTR
00D4 54EF              ANL     A,#0EFH
00D6 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 76
00D7 E4                CLR     A
00D8 FD                MOV     R5,A
00D9 7FFE              MOV     R7,#0FEH
00DB 020000      E     LJMP    _Data2PortDirect
                                           ; SOURCE LINE # 77
                                           ; SOURCE LINE # 78
00DE         ?C0017:
                                           ; SOURCE LINE # 79
00DE 900000      E     MOV     DPTR,#MMIO_iDATA8C
00E1 E0                MOVX    A,@DPTR
00E2 900000      E     MOV     DPTR,#eEEPROMAddrsss
00E5 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 80
00E6         ?C0294:
00E6 E0                MOVX    A,@DPTR
00E7 FD                MOV     R5,A
00E8 7FFE              MOV     R7,#0FEH
00EA 020000      E     LJMP    _Cmd_4E
                                           ; SOURCE LINE # 81
                                           ; SOURCE LINE # 82
00ED         ?C0018:
                                           ; SOURCE LINE # 83
00ED 020000      E     LJMP    Erase_EEPROMAll
                                           ; SOURCE LINE # 84
                                           ; SOURCE LINE # 85
00F0         ?C0019:
                                           ; SOURCE LINE # 86
00F0 7FFE              MOV     R7,#0FEH
00F2 020000      E     LJMP    _Cmd_51
                                           ; SOURCE LINE # 87
                                           ; SOURCE LINE # 88
00F5         ?C0020:
                                           ; SOURCE LINE # 89
00F5 900000      E     MOV     DPTR,#MMIO_iDATA8C
00F8 E0                MOVX    A,@DPTR
00F9 B4A005            CJNE    A,#0A0H,?C0021
00FC 7FFE              MOV     R7,#0FEH
00FE 120000      E     LCALL   _Cmd_52_A0
0101         ?C0021:
                                           ; SOURCE LINE # 90
0101 900000      E     MOV     DPTR,#MMIO_iDATA8C
0104 E0                MOVX    A,@DPTR
0105 B4A305            CJNE    A,#0A3H,?C0022
0108 7FFE              MOV     R7,#0FEH
010A 120000      E     LCALL   _Cmd_52_A3
010D         ?C0022:
                                           ; SOURCE LINE # 91
010D 900000      E     MOV     DPTR,#MMIO_iDATA8C
C51 COMPILER V8.12   OEM_MAILBOX                                                           07/28/2018 12:03:52 PAGE 24  

0110 E0                MOVX    A,@DPTR
0111 B4A405            CJNE    A,#0A4H,?C0023
0114 7FFE              MOV     R7,#0FEH
0116 120000      E     LCALL   _Cmd_52_A4
0119         ?C0023:
                                           ; SOURCE LINE # 92
0119 900000      E     MOV     DPTR,#MMIO_iDATA8C
011C E0                MOVX    A,@DPTR
011D B4A505            CJNE    A,#0A5H,?C0024
0120 7FFE              MOV     R7,#0FEH
0122 120000      E     LCALL   _Cmd_52_A5
0125         ?C0024:
                                           ; SOURCE LINE # 93
0125 900000      E     MOV     DPTR,#MMIO_iDATA8C
0128 E0                MOVX    A,@DPTR
0129 B4A605            CJNE    A,#0A6H,?C0025
012C 7FFE              MOV     R7,#0FEH
012E 120000      E     LCALL   _Cmd_52_A6
0131         ?C0025:
                                           ; SOURCE LINE # 94
0131 900000      E     MOV     DPTR,#MMIO_iDATA8C
0134 E0                MOVX    A,@DPTR
0135 64A7              XRL     A,#0A7H
0137 7046              JNZ     ?C0039
0139 7FFE              MOV     R7,#0FEH
013B 020000      E     LJMP    _Cmd_52_A7
                                           ; SOURCE LINE # 95
                                           ; SOURCE LINE # 96
                                           ; SOURCE LINE # 97
                                           ; SOURCE LINE # 98
                                           ; SOURCE LINE # 99
                                           ; SOURCE LINE # 100
013E         ?C0029:
                                           ; SOURCE LINE # 101
013E 900000      E     MOV     DPTR,#MMIO_iDATA8C
0141 E0                MOVX    A,@DPTR
0142 FF                MOV     R7,A
0143 020000      E     LJMP    _Cmd_58
                                           ; SOURCE LINE # 102
                                           ; SOURCE LINE # 103
0146         ?C0030:
                                           ; SOURCE LINE # 104
0146 900000      E     MOV     DPTR,#MMIO_iDATA8C
0149 E0                MOVX    A,@DPTR
014A FD                MOV     R5,A
014B E4                CLR     A
014C FB                MOV     R3,A
014D 7FFE              MOV     R7,#0FEH
014F 020000      E     LJMP    _Cmd_59
                                           ; SOURCE LINE # 105
                                           ; SOURCE LINE # 106
0152         ?C0031:
                                           ; SOURCE LINE # 107
0152 7FFE              MOV     R7,#0FEH
0154 020000      E     LJMP    _Cmd_5C
                                           ; SOURCE LINE # 108
                                           ; SOURCE LINE # 109
0157         ?C0032:
                                           ; SOURCE LINE # 110
0157 900000      E     MOV     DPTR,#MMIO_iDATA8C
015A E0                MOVX    A,@DPTR
015B FF                MOV     R7,A
C51 COMPILER V8.12   OEM_MAILBOX                                                           07/28/2018 12:03:52 PAGE 25  

015C 020000      E     LJMP    _Cmd_5D
                                           ; SOURCE LINE # 111
                                           ; SOURCE LINE # 112
015F         ?C0033:
                                           ; SOURCE LINE # 113
015F 900000      E     MOV     DPTR,#MMIO_iDATA8C
0162 E0                MOVX    A,@DPTR
0163 FF                MOV     R7,A
0164 020000      E     LJMP    _Cmd_97
                                           ; SOURCE LINE # 114
                                           ; SOURCE LINE # 115
0167         ?C0034:
                                           ; SOURCE LINE # 116
0167 120000      R     LCALL   L?0364
016A 020000      E     LJMP    _Cmd_B0
                                           ; SOURCE LINE # 117
                                           ; SOURCE LINE # 118
016D         ?C0035:
                                           ; SOURCE LINE # 119
016D 020000      E     LJMP    Cmd_B4
                                           ; SOURCE LINE # 120
                                           ; SOURCE LINE # 121
0170         ?C0036:
                                           ; SOURCE LINE # 123
0170 120000      E     LCALL   DisableAllInterrupt
                                           ; SOURCE LINE # 124
0173 E4                CLR     A
0174 FB                MOV     R3,A
0175 7D20              MOV     R5,#020H
0177 7F01              MOV     R7,#01H
0179 120000      E     LCALL   _Erase_Eflash_1K
                                           ; SOURCE LINE # 125
017C 120000      E     LCALL   EnableAllInterrupt
                                           ; SOURCE LINE # 126
                                           ; SOURCE LINE # 127
                                           ; SOURCE LINE # 130
                                           ; SOURCE LINE # 131
                                           ; SOURCE LINE # 132
                                           ; SOURCE LINE # 133
                                           ; SOURCE LINE # 134
017F         ?C0039:
017F 22                RET     
             ; FUNCTION _Hook_MailBox (END)

             ; FUNCTION H2RAMprocess (BEGIN)
                                           ; SOURCE LINE # 140
                                           ; SOURCE LINE # 141
                                           ; SOURCE LINE # 142
0000 900000      E     MOV     DPTR,#MMIO_CMD_Ctrl
0003 E0                MOVX    A,@DPTR
0004 30E136            JNB     ACC.1,?C0041
0007         ?C0040:
                                           ; SOURCE LINE # 143
0007 900000      E     MOV     DPTR,#MMIO_iCMD
000A E0                MOVX    A,@DPTR
000B C3                CLR     C
000C 9440              SUBB    A,#040H
000E 402D              JC      ?C0041
0010 E0                MOVX    A,@DPTR
0011 D3                SETB    C
0012 9460              SUBB    A,#060H
0014 5027              JNC     ?C0041
C51 COMPILER V8.12   OEM_MAILBOX                                                           07/28/2018 12:03:52 PAGE 26  

0016         ?C0042:
                                           ; SOURCE LINE # 144
0016 900000      E     MOV     DPTR,#MMIO_rDATA
0019 E0                MOVX    A,@DPTR
001A FF                MOV     R7,A
001B 7E00              MOV     R6,#00H
001D 7D07              MOV     R5,#07H
001F 7C00              MOV     R4,#00H
0021 120000      E     LCALL   _Clear_RAM_Range
                                           ; SOURCE LINE # 147
0024 E4                CLR     A
0025 900000      E     MOV     DPTR,#MMIO_rDATA_index
0028 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 148
0029 900000      E     MOV     DPTR,#MMIO_iCMD
002C E0                MOVX    A,@DPTR
002D FF                MOV     R7,A
002E 120000      R     LCALL   _Hook_MailBox
                                           ; SOURCE LINE # 150
0031 E4                CLR     A
0032 900000      E     MOV     DPTR,#MMIO_iCMD
0035 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 152
0036 900000      E     MOV     DPTR,#MMIO_CMD_Ctrl
0039 E0                MOVX    A,@DPTR
003A 54FD              ANL     A,#0FDH
003C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 153
003D         ?C0041:
003D 22                RET     
             ; FUNCTION H2RAMprocess (END)

             ; FUNCTION VPC_interface (BEGIN)
                                           ; SOURCE LINE # 156
                                           ; SOURCE LINE # 157
                                           ; SOURCE LINE # 158
0000 900000      E     MOV     DPTR,#nVPC_CMD
0003 E0                MOVX    A,@DPTR
0004 7003              JNZ     $ + 5H
0006 020000      R     LJMP    ?C0152
                                           ; SOURCE LINE # 159
                                           ; SOURCE LINE # 160
0009 E0                MOVX    A,@DPTR
000A 6438              XRL     A,#038H
000C 6005              JZ      ?C0045
                                           ; SOURCE LINE # 161
000E E0                MOVX    A,@DPTR
000F FF                MOV     R7,A
0010 120000      R     LCALL   _RamDebug
0013         ?C0045:
                                           ; SOURCE LINE # 162
0013 900000      E     MOV     DPTR,#uReserve07
0016 E0                MOVX    A,@DPTR
0017 4420              ORL     A,#020H
0019 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 164
001A 900000      E     MOV     DPTR,#nVPC_CMD
001D E0                MOVX    A,@DPTR
001E 120000      E     LCALL   ?C?CCASE
0021 0000        R     DW      ?C0047
0023 10                DB      010H
0024 0000        R     DW      ?C0048
C51 COMPILER V8.12   OEM_MAILBOX                                                           07/28/2018 12:03:52 PAGE 27  

0026 11                DB      011H
0027 0000        R     DW      ?C0051
0029 12                DB      012H
002A 0000        R     DW      ?C0052
002C 13                DB      013H
002D 0000        R     DW      ?C0053
002F 14                DB      014H
0030 0000        R     DW      ?C0058
0032 15                DB      015H
0033 0000        R     DW      ?C0064
0035 16                DB      016H
0036 0000        R     DW      ?C0069
0038 17                DB      017H
0039 0000        R     DW      ?C0074
003B 18                DB      018H
003C 0000        R     DW      ?C0079
003E 19                DB      019H
003F 0000        R     DW      ?C0080
0041 1A                DB      01AH
0042 0000        R     DW      ?C0081
0044 1B                DB      01BH
0045 0000        R     DW      ?C0084
0047 1C                DB      01CH
0048 0000        R     DW      ?C0094
004A 1D                DB      01DH
004B 0000        R     DW      ?C0097
004D 1E                DB      01EH
004E 0000        R     DW      ?C0100
0050 1F                DB      01FH
0051 0000        R     DW      ?C0106
0053 21                DB      021H
0054 0000        R     DW      ?C0112
0056 22                DB      022H
0057 0000        R     DW      ?C0115
0059 23                DB      023H
005A 0000        R     DW      ?C0119
005C 25                DB      025H
005D 0000        R     DW      ?C0121
005F 28                DB      028H
0060 0000        R     DW      ?C0124
0062 29                DB      029H
0063 0000        R     DW      ?C0127
0065 2B                DB      02BH
0066 0000        R     DW      ?C0132
0068 2D                DB      02DH
0069 0000        R     DW      ?C0134
006B 2F                DB      02FH
006C 0000        R     DW      ?C0133
006E 31                DB      031H
006F 0000        R     DW      ?C0141
0071 33                DB      033H
0072 0000        R     DW      ?C0146
0074 38                DB      038H
0075 0000              DW      00H
0077 0000        R     DW      ?C0046
                                           ; SOURCE LINE # 165
                                           ; SOURCE LINE # 166
0079         ?C0047:
                                           ; SOURCE LINE # 167
0079 900000      E     MOV     DPTR,#uVPCeventSource
                                           ; SOURCE LINE # 168
007C 120000      R     LCALL   L?0366
C51 COMPILER V8.12   OEM_MAILBOX                                                           07/28/2018 12:03:52 PAGE 28  

007F 900000      E     MOV     DPTR,#uVPCeventSource
0082 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 169
0083 020000      R     LJMP    ?C0046
                                           ; SOURCE LINE # 171
0086         ?C0048:
                                           ; SOURCE LINE # 173
0086 900000      E     MOV     DPTR,#SYS_STATUS
0089 E0                MOVX    A,@DPTR
008A 5407              ANL     A,#07H
008C C3                CLR     C
008D 9404              SUBB    A,#04H
008F 4011              JC      ?C0049
0091 E0                MOVX    A,@DPTR
0092 5407              ANL     A,#07H
0094 D3                SETB    C
0095 9406              SUBB    A,#06H
0097 5009              JNC     ?C0049
                                           ; SOURCE LINE # 174
0099 900000      E     MOV     DPTR,#nVPC_DATA
009C 7415              MOV     A,#015H
009E F0                MOVX    @DPTR,A
009F 020000      R     LJMP    ?C0046
00A2         ?C0049:
                                           ; SOURCE LINE # 176
00A2 900000      E     MOV     DPTR,#nVPC_DATA
00A5 740A              MOV     A,#0AH
00A7 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 177
00A8 020000      R     LJMP    ?C0046
                                           ; SOURCE LINE # 179
00AB         ?C0051:
                                           ; SOURCE LINE # 180
00AB 900000      E     MOV     DPTR,#nBrightValue
                                           ; SOURCE LINE # 181
00AE 020000      R     LJMP    ?C0295
                                           ; SOURCE LINE # 183
00B1         ?C0052:
                                           ; SOURCE LINE # 184
00B1 900000      E     MOV     DPTR,#nVPC_DATA
00B4 E0                MOVX    A,@DPTR
00B5 900000      E     MOV     DPTR,#nBrightValue
00B8 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 185
00B9 020000      R     LJMP    ?C0046
                                           ; SOURCE LINE # 187
00BC         ?C0053:
                                           ; SOURCE LINE # 188
00BC 900000      E     MOV     DPTR,#DEVICEMODULE
00BF E0                MOVX    A,@DPTR
00C0 30E412            JNB     ACC.4,?C0054
                                           ; SOURCE LINE # 189
00C3 E0                MOVX    A,@DPTR
00C4 30E004            JNB     ACC.0,?C0055
00C7 7F01              MOV     R7,#01H
00C9 8002              SJMP    ?C0056
00CB         ?C0055:
00CB 7F00              MOV     R7,#00H
00CD         ?C0056:
00CD 900000      E     MOV     DPTR,#nVPC_DATA
00D0 EF                MOV     A,R7
00D1 F0                MOVX    @DPTR,A
C51 COMPILER V8.12   OEM_MAILBOX                                                           07/28/2018 12:03:52 PAGE 29  

00D2 020000      R     LJMP    ?C0299
00D5         ?C0054:
                                           ; SOURCE LINE # 191
00D5 E4                CLR     A
00D6 900000      E     MOV     DPTR,#nVPC_DATA
00D9 F0                MOVX    @DPTR,A
00DA         ?C0057:
                                           ; SOURCE LINE # 192
                                           ; SOURCE LINE # 193
00DA 020000      R     LJMP    ?C0299
                                           ; SOURCE LINE # 195
00DD         ?C0058:
                                           ; SOURCE LINE # 196
00DD 900000      E     MOV     DPTR,#DEVICEMODULE
00E0 E0                MOVX    A,@DPTR
00E1 20E403            JB      ACC.4,$ + 6H
00E4 020000      R     LJMP    ?C0046
                                           ; SOURCE LINE # 197
                                           ; SOURCE LINE # 198
00E7 E0                MOVX    A,@DPTR
00E8 30E21E            JNB     ACC.2,?C0060
                                           ; SOURCE LINE # 199
                                           ; SOURCE LINE # 200
00EB 900000      E     MOV     DPTR,#nVPC_DATA
00EE E0                MOVX    A,@DPTR
00EF 900000      E     MOV     DPTR,#DEVICEMODULE
00F2 600C              JZ      ?C0061
                                           ; SOURCE LINE # 201
                                           ; SOURCE LINE # 202
00F4 E0                MOVX    A,@DPTR
00F5 4401              ORL     A,#01H
                                           ; SOURCE LINE # 203
                                           ; SOURCE LINE # 204
00F7 120000      R     LCALL   L?0362
00FA E0                MOVX    A,@DPTR
00FB 4402              ORL     A,#02H
00FD F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 205
00FE 8007              SJMP    ?C0062
0100         ?C0061:
                                           ; SOURCE LINE # 207
                                           ; SOURCE LINE # 208
                                           ; SOURCE LINE # 209
                                           ; SOURCE LINE # 210
0100 120000      R     LCALL   L?0361
0103 E0                MOVX    A,@DPTR
0104 54FD              ANL     A,#0FDH
0106 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 211
0107         ?C0062:
                                           ; SOURCE LINE # 212
0107         ?C0296:
                                           ; SOURCE LINE # 213
0107 805A              SJMP    ?C0299
0109         ?C0060:
                                           ; SOURCE LINE # 215
                                           ; SOURCE LINE # 216
0109 900000      E     MOV     DPTR,#DEVICEMODULE
                                           ; SOURCE LINE # 217
                                           ; SOURCE LINE # 218
010C 120000      R     LCALL   L?0361
                                           ; SOURCE LINE # 219
C51 COMPILER V8.12   OEM_MAILBOX                                                           07/28/2018 12:03:52 PAGE 30  

                                           ; SOURCE LINE # 220
                                           ; SOURCE LINE # 221
010F 020000      R     LJMP    ?C0298
                                           ; SOURCE LINE # 223
0112         ?C0064:
                                           ; SOURCE LINE # 224
0112 900000      E     MOV     DPTR,#DEVICEMODULE
0115 E0                MOVX    A,@DPTR
0116 30E411            JNB     ACC.4,?C0065
                                           ; SOURCE LINE # 225
0119 E0                MOVX    A,@DPTR
011A 30E104            JNB     ACC.1,?C0066
011D 7F01              MOV     R7,#01H
011F 8002              SJMP    ?C0067
0121         ?C0066:
0121 7F00              MOV     R7,#00H
0123         ?C0067:
0123 900000      E     MOV     DPTR,#nVPC_DATA
0126 EF                MOV     A,R7
0127 F0                MOVX    @DPTR,A
0128 8005              SJMP    ?C0068
012A         ?C0065:
                                           ; SOURCE LINE # 227
012A E4                CLR     A
012B 900000      E     MOV     DPTR,#nVPC_DATA
012E F0                MOVX    @DPTR,A
012F         ?C0068:
                                           ; SOURCE LINE # 228
012F         ?C0297:
                                           ; SOURCE LINE # 229
012F 8032              SJMP    ?C0299
                                           ; SOURCE LINE # 231
0131         ?C0069:
                                           ; SOURCE LINE # 232
0131 900000      E     MOV     DPTR,#DEVICEMODULE
0134 E0                MOVX    A,@DPTR
0135 20E403            JB      ACC.4,$ + 6H
0138 020000      R     LJMP    ?C0046
                                           ; SOURCE LINE # 233
                                           ; SOURCE LINE # 234
013B E0                MOVX    A,@DPTR
013C 20E303            JB      ACC.3,$ + 6H
013F 020000      R     LJMP    ?C0046
                                           ; SOURCE LINE # 235
                                           ; SOURCE LINE # 236
0142 900000      E     MOV     DPTR,#nVPC_DATA
0145 E0                MOVX    A,@DPTR
0146 900000      E     MOV     DPTR,#DEVICEMODULE
0149 600D              JZ      ?C0072
                                           ; SOURCE LINE # 237
                                           ; SOURCE LINE # 238
014B E0                MOVX    A,@DPTR
014C 4402              ORL     A,#02H
014E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 239
014F 900000      E     MOV     DPTR,#pDevStus
0152 E0                MOVX    A,@DPTR
0153 4404              ORL     A,#04H
0155 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 240
0156 800B              SJMP    ?C0073
0158         ?C0072:
C51 COMPILER V8.12   OEM_MAILBOX                                                           07/28/2018 12:03:52 PAGE 31  

                                           ; SOURCE LINE # 242
                                           ; SOURCE LINE # 243
0158 E0                MOVX    A,@DPTR
0159 54FD              ANL     A,#0FDH
015B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 244
015C 900000      E     MOV     DPTR,#pDevStus
015F E0                MOVX    A,@DPTR
0160 54FB              ANL     A,#0FBH
0162 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 245
0163         ?C0073:
                                           ; SOURCE LINE # 246
0163         ?C0299:
0163 7F42              MOV     R7,#042H
0165 120000      E     LCALL   _ECSMI_SCIEvent
                                           ; SOURCE LINE # 247
                                           ; SOURCE LINE # 248
                                           ; SOURCE LINE # 249
0168 020000      R     LJMP    ?C0046
                                           ; SOURCE LINE # 251
016B         ?C0074:
                                           ; SOURCE LINE # 252
016B 900000      E     MOV     DPTR,#GPDRJ
016E E0                MOVX    A,@DPTR
016F 30E503            JNB     ACC.5,?C0076
0172 D3                SETB    C
0173 8001              SJMP    ?C0077
0175         ?C0076:
0175 C3                CLR     C
0176         ?C0077:
0176 4024              JC      ?C0301
                                           ; SOURCE LINE # 253
0178 020000      R     LJMP    ?C0312
                                           ; SOURCE LINE # 258
017B         ?C0079:
                                           ; SOURCE LINE # 259
017B 900000      E     MOV     DPTR,#uNovoVPCCount
                                           ; SOURCE LINE # 260
017E 120000      R     LCALL   L?0366
0181 900000      E     MOV     DPTR,#uNovoVPCCount
0184 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 261
0185 020000      R     LJMP    ?C0046
                                           ; SOURCE LINE # 263
0188         ?C0080:
                                           ; SOURCE LINE # 264
0188 900000      E     MOV     DPTR,#uVPCeventSource2
                                           ; SOURCE LINE # 265
018B 120000      R     LCALL   L?0367
018E 900000      E     MOV     DPTR,#uVPCeventSource2
0191 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 266
0192 020000      R     LJMP    ?C0046
                                           ; SOURCE LINE # 268
0195         ?C0081:
                                           ; SOURCE LINE # 270
0195 900000      E     MOV     DPTR,#pDevStatus1
0198 E0                MOVX    A,@DPTR
0199 20E703            JB      ACC.7,?C0082
                                           ; SOURCE LINE # 271
019C         ?C0301:
C51 COMPILER V8.12   OEM_MAILBOX                                                           07/28/2018 12:03:52 PAGE 32  

019C 020000      R     LJMP    ?C0302
019F         ?C0082:
                                           ; SOURCE LINE # 273
019F         ?C0300:
                                           ; SOURCE LINE # 274
019F 020000      R     LJMP    ?C0312
                                           ; SOURCE LINE # 276
01A2         ?C0084:
                                           ; SOURCE LINE # 313
01A2 900000      E     MOV     DPTR,#pDevStatus1
01A5 E0                MOVX    A,@DPTR
01A6 20E503            JB      ACC.5,$ + 6H
01A9 020000      R     LJMP    ?C0046
                                           ; SOURCE LINE # 314
                                           ; SOURCE LINE # 315
01AC 900000      E     MOV     DPTR,#nVPC_DATA
01AF E0                MOVX    A,@DPTR
01B0 B4010A            CJNE    A,#01H,?C0086
01B3 900000      E     MOV     DPTR,#pDevStatus1
01B6 E0                MOVX    A,@DPTR
01B7 20E703            JB      ACC.7,$ + 6H
01BA 020000      R     LJMP    ?C0046
                                           ; SOURCE LINE # 316
01BD         ?C0086:
                                           ; SOURCE LINE # 317
01BD 900000      E     MOV     DPTR,#nVPC_DATA
01C0 E0                MOVX    A,@DPTR
01C1 700A              JNZ     ?C0087
01C3 900000      E     MOV     DPTR,#pDevStatus1
01C6 E0                MOVX    A,@DPTR
01C7 30E703            JNB     ACC.7,$ + 6H
01CA 020000      R     LJMP    ?C0046
                                           ; SOURCE LINE # 318
01CD         ?C0087:
                                           ; SOURCE LINE # 320
01CD 900000      E     MOV     DPTR,#pDevStatus1
01D0 E0                MOVX    A,@DPTR
01D1 30E70A            JNB     ACC.7,?C0088
                                           ; SOURCE LINE # 321
                                           ; SOURCE LINE # 322
01D4 7F3E              MOV     R7,#03EH
                                           ; SOURCE LINE # 323
                                           ; SOURCE LINE # 324
01D6 120000      R     LCALL   L?0365
01D9 30E711            JNB     ACC.7,?C0305
                                           ; SOURCE LINE # 325
                                           ; SOURCE LINE # 326
                                           ; SOURCE LINE # 327
01DC 8008              SJMP    ?C0304
01DE         ?C0088:
                                           ; SOURCE LINE # 334
                                           ; SOURCE LINE # 335
01DE 7F3F              MOV     R7,#03FH
                                           ; SOURCE LINE # 336
                                           ; SOURCE LINE # 337
01E0 120000      R     LCALL   L?0365
01E3 30E707            JNB     ACC.7,?C0092
                                           ; SOURCE LINE # 338
                                           ; SOURCE LINE # 339
01E6         ?C0304:
01E6 E0                MOVX    A,@DPTR
01E7 4480              ORL     A,#080H
C51 COMPILER V8.12   OEM_MAILBOX                                                           07/28/2018 12:03:52 PAGE 33  

01E9 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 340
01EA 020000      R     LJMP    ?C0046
01ED         ?C0092:
                                           ; SOURCE LINE # 342
                                           ; SOURCE LINE # 343
01ED         ?C0305:
01ED E0                MOVX    A,@DPTR
01EE 547F              ANL     A,#07FH
01F0 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 344
                                           ; SOURCE LINE # 345
                                           ; SOURCE LINE # 346
                                           ; SOURCE LINE # 350
01F1 020000      R     LJMP    ?C0046
                                           ; SOURCE LINE # 352
01F4         ?C0094:
                                           ; SOURCE LINE # 353
01F4 900000      E     MOV     DPTR,#LENOVODEVICE
01F7 E0                MOVX    A,@DPTR
01F8 30E405            JNB     ACC.4,?C0095
01FB 7F01              MOV     R7,#01H
01FD 020000      R     LJMP    ?C0307
0200         ?C0095:
0200 7F00              MOV     R7,#00H
0202         ?C0096:
                                           ; SOURCE LINE # 354
0202 020000      R     LJMP    ?C0307
                                           ; SOURCE LINE # 356
0205         ?C0097:
                                           ; SOURCE LINE # 357
0205 900000      E     MOV     DPTR,#nVPC_DATA
0208 E0                MOVX    A,@DPTR
0209 900000      E     MOV     DPTR,#pDevStus
020C 6007              JZ      ?C0098
                                           ; SOURCE LINE # 358
020E E0                MOVX    A,@DPTR
020F 4410              ORL     A,#010H
0211 F0                MOVX    @DPTR,A
0212 020000      R     LJMP    ?C0046
0215         ?C0098:
                                           ; SOURCE LINE # 360
0215 E0                MOVX    A,@DPTR
0216 54EF              ANL     A,#0EFH
0218 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 361
0219 020000      R     LJMP    ?C0046
                                           ; SOURCE LINE # 363
021C         ?C0100:
                                           ; SOURCE LINE # 364
021C 900000      E     MOV     DPTR,#DEVICEMODULE
021F E0                MOVX    A,@DPTR
0220 30E40C            JNB     ACC.4,?C0101
                                           ; SOURCE LINE # 365
0223 E0                MOVX    A,@DPTR
0224 30E604            JNB     ACC.6,?C0102
0227 7F01              MOV     R7,#01H
0229 8002              SJMP    ?C0103
022B         ?C0102:
022B 7F00              MOV     R7,#00H
022D         ?C0103:
022D         ?C0306:
C51 COMPILER V8.12   OEM_MAILBOX                                                           07/28/2018 12:03:52 PAGE 34  

022D 8079              SJMP    ?C0307
022F         ?C0101:
                                           ; SOURCE LINE # 367
022F         ?C0303:
                                           ; SOURCE LINE # 368
022F 020000      R     LJMP    ?C0312
                                           ; SOURCE LINE # 370
                                           ; SOURCE LINE # 381
                                           ; SOURCE LINE # 383
0232         ?C0106:
                                           ; SOURCE LINE # 384
0232 900000      E     MOV     DPTR,#uODDPWRsaving
0235 E0                MOVX    A,@DPTR
0236 30E007            JNB     ACC.0,?C0107
                                           ; SOURCE LINE # 385
                                           ; SOURCE LINE # 386
0239 E0                MOVX    A,@DPTR
023A 54FE              ANL     A,#0FEH
023C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 387
                                           ; SOURCE LINE # 388
023D 020000      R     LJMP    ?C0309
0240         ?C0107:
                                           ; SOURCE LINE # 389
0240 900000      E     MOV     DPTR,#uODDPWRsaving
0243 E0                MOVX    A,@DPTR
0244 30E20D            JNB     ACC.2,?C0109
                                           ; SOURCE LINE # 390
                                           ; SOURCE LINE # 391
0247 E0                MOVX    A,@DPTR
0248 54FB              ANL     A,#0FBH
024A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 392
024B 900000      E     MOV     DPTR,#nVPC_DATA
024E 7402              MOV     A,#02H
0250 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 393
0251 020000      R     LJMP    ?C0046
0254         ?C0109:
                                           ; SOURCE LINE # 394
0254 900000      E     MOV     DPTR,#uODDPWRsaving
0257 E0                MOVX    A,@DPTR
0258 20E603            JB      ACC.6,$ + 6H
025B 020000      R     LJMP    ?C0046
                                           ; SOURCE LINE # 395
                                           ; SOURCE LINE # 396
025E E0                MOVX    A,@DPTR
025F 54BF              ANL     A,#0BFH
0261 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 397
                                           ; SOURCE LINE # 398
                                           ; SOURCE LINE # 399
0262 020000      R     LJMP    ?C0310
                                           ; SOURCE LINE # 401
0265         ?C0112:
                                           ; SOURCE LINE # 403
0265 900000      E     MOV     DPTR,#nVPC_DATA
0268 E0                MOVX    A,@DPTR
0269 600C              JZ      ?C0113
                                           ; SOURCE LINE # 404
                                           ; SOURCE LINE # 406
026B 900000      E     MOV     DPTR,#SMartNoise
C51 COMPILER V8.12   OEM_MAILBOX                                                           07/28/2018 12:03:52 PAGE 35  

026E E0                MOVX    A,@DPTR
026F 4420              ORL     A,#020H
0271 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 407
0272 900000      E     MOV     DPTR,#THERMAL_STATUS
                                           ; SOURCE LINE # 408
0275 804B              SJMP    ?C0311
0277         ?C0113:
                                           ; SOURCE LINE # 410
                                           ; SOURCE LINE # 413
0277 E4                CLR     A
0278 900000      E     MOV     DPTR,#StartFanClean
027B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 414
027C 900000      E     MOV     DPTR,#THERMAL_STATUS
027F E0                MOVX    A,@DPTR
0280 54F7              ANL     A,#0F7H
0282 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 415
0283 900000      E     MOV     DPTR,#CTR2
0286 E0                MOVX    A,@DPTR
0287 FD                MOV     R5,A
0288 7F1E              MOV     R7,#01EH
028A 120000      E     LCALL   _Cal_PWM_Duty
028D 900000      E     MOV     DPTR,#DCR5
0290 EF                MOV     A,R7
0291 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 417
0292 900000      E     MOV     DPTR,#SMartNoise
0295 7404              MOV     A,#04H
0297 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 418
                                           ; SOURCE LINE # 420
0298 020000      R     LJMP    ?C0046
                                           ; SOURCE LINE # 422
029B         ?C0115:
                                           ; SOURCE LINE # 423
029B 900000      E     MOV     DPTR,#DEVICEMODULE
029E E0                MOVX    A,@DPTR
029F 30E404            JNB     ACC.4,?C0116
02A2 7F01              MOV     R7,#01H
02A4 8002              SJMP    ?C0117
02A6         ?C0116:
02A6 7F00              MOV     R7,#00H
02A8         ?C0117:
02A8         ?C0307:
02A8 900000      E     MOV     DPTR,#nVPC_DATA
02AB EF                MOV     A,R7
02AC F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 424
02AD 020000      R     LJMP    ?C0046
                                           ; SOURCE LINE # 426
                                           ; SOURCE LINE # 427
                                           ; SOURCE LINE # 429
02B0         ?C0119:
                                           ; SOURCE LINE # 430
02B0         ?C0308:
                                           ; SOURCE LINE # 431
02B0 8028              SJMP    ?C0312
                                           ; SOURCE LINE # 433
                                           ; SOURCE LINE # 434
                                           ; SOURCE LINE # 436
C51 COMPILER V8.12   OEM_MAILBOX                                                           07/28/2018 12:03:52 PAGE 36  

02B2         ?C0121:
                                           ; SOURCE LINE # 437
02B2 900000      E     MOV     DPTR,#nVPC_DATA
02B5 E0                MOVX    A,@DPTR
02B6 900000      E     MOV     DPTR,#uVGATurboFun
02B9 600E              JZ      ?C0122
                                           ; SOURCE LINE # 438
                                           ; SOURCE LINE # 440
02BB E0                MOVX    A,@DPTR
02BC 4401              ORL     A,#01H
02BE F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 441
02BF 900000      E     MOV     DPTR,#EM7FUNCTION
02C2         ?C0311:
02C2 E0                MOVX    A,@DPTR
02C3 4408              ORL     A,#08H
02C5 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 442
02C6 020000      R     LJMP    ?C0046
02C9         ?C0122:
                                           ; SOURCE LINE # 444
                                           ; SOURCE LINE # 446
02C9 E0                MOVX    A,@DPTR
02CA 54FE              ANL     A,#0FEH
02CC F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 447
02CD 900000      E     MOV     DPTR,#EM7FUNCTION
                                           ; SOURCE LINE # 448
                                           ; SOURCE LINE # 449
02D0 020000      R     LJMP    ?C0313
                                           ; SOURCE LINE # 451
02D3         ?C0124:
                                           ; SOURCE LINE # 452
02D3 900000      E     MOV     DPTR,#SWITCHABLE
02D6 E0                MOVX    A,@DPTR
02D7 30E303            JNB     ACC.3,?C0125
                                           ; SOURCE LINE # 453
02DA         ?C0312:
02DA E4                CLR     A
02DB 8033              SJMP    ?C0314
02DD         ?C0125:
                                           ; SOURCE LINE # 455
02DD         ?C0302:
02DD         ?C0309:
02DD 900000      E     MOV     DPTR,#nVPC_DATA
02E0 7401              MOV     A,#01H
02E2 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 456
02E3 020000      R     LJMP    ?C0046
                                           ; SOURCE LINE # 458
02E6         ?C0127:
                                           ; SOURCE LINE # 460
02E6 900000      E     MOV     DPTR,#SMartNoise
02E9 E0                MOVX    A,@DPTR
02EA 30E109            JNB     ACC.1,?C0128
                                           ; SOURCE LINE # 461
                                           ; SOURCE LINE # 463
02ED         ?C0310:
02ED 900000      E     MOV     DPTR,#nVPC_DATA
02F0 7403              MOV     A,#03H
02F2 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 464
C51 COMPILER V8.12   OEM_MAILBOX                                                           07/28/2018 12:03:52 PAGE 37  

02F3 020000      R     LJMP    ?C0046
02F6         ?C0128:
                                           ; SOURCE LINE # 466
                                           ; SOURCE LINE # 467
02F6 900000      E     MOV     DPTR,#SMartNoise
02F9 E0                MOVX    A,@DPTR
02FA 900000      E     MOV     DPTR,#nVPC_DATA
02FD 20E206            JB      ACC.2,?C0130
                                           ; SOURCE LINE # 468
                                           ; SOURCE LINE # 470
0300 7405              MOV     A,#05H
0302 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 471
0303 020000      R     LJMP    ?C0046
0306         ?C0130:
                                           ; SOURCE LINE # 473
                                           ; SOURCE LINE # 474
0306 7485              MOV     A,#085H
0308 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 475
                                           ; SOURCE LINE # 476
                                           ; SOURCE LINE # 482
0309 020000      R     LJMP    ?C0046
                                           ; SOURCE LINE # 484
030C         ?C0132:
                                           ; SOURCE LINE # 485
030C 900000      E     MOV     DPTR,#EM7FUNCTION
030F         ?C0295:
030F E0                MOVX    A,@DPTR
0310         ?C0314:
0310 900000      E     MOV     DPTR,#nVPC_DATA
0313 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 486
0314 020000      R     LJMP    ?C0046
                                           ; SOURCE LINE # 488
0317         ?C0133:
                                           ; SOURCE LINE # 489
0317 900000      E     MOV     DPTR,#pOneKeyAPPStatus
                                           ; SOURCE LINE # 490
031A 120000      R     LCALL   L?0367
031D 900000      E     MOV     DPTR,#pOneKeyAPPStatus
0320 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 491
0321 020000      R     LJMP    ?C0046
                                           ; SOURCE LINE # 493
0324         ?C0134:
                                           ; SOURCE LINE # 499
0324 900000      E     MOV     DPTR,#LENOVOPMFW
0327 E0                MOVX    A,@DPTR
0328 20E207            JB      ACC.2,?C0136
032B 900000      E     MOV     DPTR,#LENOVOPMFW_Temp
032E E0                MOVX    A,@DPTR
032F 30E118            JNB     ACC.1,?C0135
0332         ?C0136:
                                           ; SOURCE LINE # 500
                                           ; SOURCE LINE # 501
0332 900000      E     MOV     DPTR,#LENOVOPMFW
0335 E0                MOVX    A,@DPTR
0336 54FB              ANL     A,#0FBH
0338 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 502
0339 E0                MOVX    A,@DPTR
C51 COMPILER V8.12   OEM_MAILBOX                                                           07/28/2018 12:03:52 PAGE 38  

033A 54FE              ANL     A,#0FEH
033C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 503
033D 900000      E     MOV     DPTR,#LENOVOPMFW_Temp
0340 E0                MOVX    A,@DPTR
0341 54FD              ANL     A,#0FDH
0343 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 504
0344 900000      E     MOV     DPTR,#nVPC_DATA
0347 7404              MOV     A,#04H
0349 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 505
034A         ?C0135:
                                           ; SOURCE LINE # 506
034A 900000      E     MOV     DPTR,#EM9_NEWFUN
034D E0                MOVX    A,@DPTR
034E 30E00D            JNB     ACC.0,?C0137
                                           ; SOURCE LINE # 507
                                           ; SOURCE LINE # 508
0351 E0                MOVX    A,@DPTR
0352 54FE              ANL     A,#0FEH
0354 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 509
0355 900000      E     MOV     DPTR,#nVPC_DATA
0358 7410              MOV     A,#010H
035A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 510
035B 020000      R     LJMP    ?C0046
035E         ?C0137:
                                           ; SOURCE LINE # 511
035E 900000      E     MOV     DPTR,#EM9_NEWFUN
0361 E0                MOVX    A,@DPTR
0362 20E103            JB      ACC.1,$ + 6H
0365 020000      R     LJMP    ?C0046
                                           ; SOURCE LINE # 512
                                           ; SOURCE LINE # 513
0368 E0                MOVX    A,@DPTR
0369 54FD              ANL     A,#0FDH
036B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 514
036C 900000      E     MOV     DPTR,#nVPC_DATA
036F 7420              MOV     A,#020H
0371 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 515
                                           ; SOURCE LINE # 530
0372 8072              SJMP    ?C0046
                                           ; SOURCE LINE # 532
                                           ; SOURCE LINE # 533
                                           ; SOURCE LINE # 535
0374         ?C0141:
                                           ; SOURCE LINE # 536
0374 900000      E     MOV     DPTR,#GPDRC
0377 E0                MOVX    A,@DPTR
0378 30E016            JNB     ACC.0,?C0142
                                           ; SOURCE LINE # 537
                                           ; SOURCE LINE # 538
037B 900000      E     MOV     DPTR,#nVPC_DATA
037E E0                MOVX    A,@DPTR
037F 7065              JNZ     ?C0046
                                           ; SOURCE LINE # 539
                                           ; SOURCE LINE # 541
0381 900000      E     MOV     DPTR,#cCmd
C51 COMPILER V8.12   OEM_MAILBOX                                                           07/28/2018 12:03:52 PAGE 39  

0384 E0                MOVX    A,@DPTR
0385 4408              ORL     A,#08H
0387 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 542
0388 900000      E     MOV     DPTR,#OEMControl
038B E0                MOVX    A,@DPTR
038C 4402              ORL     A,#02H
038E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 543
                                           ; SOURCE LINE # 544
038F 8055              SJMP    ?C0046
0391         ?C0142:
                                           ; SOURCE LINE # 546
                                           ; SOURCE LINE # 547
0391 900000      E     MOV     DPTR,#nVPC_DATA
0394 E0                MOVX    A,@DPTR
0395 6401              XRL     A,#01H
0397 704D              JNZ     ?C0046
                                           ; SOURCE LINE # 548
                                           ; SOURCE LINE # 550
0399 900000      E     MOV     DPTR,#cCmd
039C E0                MOVX    A,@DPTR
039D 54F7              ANL     A,#0F7H
039F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 551
03A0 900000      E     MOV     DPTR,#OEMControl
03A3         ?C0298:
03A3 E0                MOVX    A,@DPTR
03A4 54FD              ANL     A,#0FDH
03A6 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 552
                                           ; SOURCE LINE # 553
                                           ; SOURCE LINE # 554
03A7 803D              SJMP    ?C0046
                                           ; SOURCE LINE # 557
03A9         ?C0146:
                                           ; SOURCE LINE # 558
03A9 E4                CLR     A
03AA 900000      E     MOV     DPTR,#nVPC_DATA
03AD F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 559
03AE 900000      E     MOV     DPTR,#SYS_STATUS
03B1 E0                MOVX    A,@DPTR
03B2 900000      E     MOV     DPTR,#nVPC_DATA
03B5 30E70A            JNB     ACC.7,?C0147
                                           ; SOURCE LINE # 560
                                           ; SOURCE LINE # 561
03B8 E0                MOVX    A,@DPTR
03B9 4401              ORL     A,#01H
03BB F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 562
03BC E0                MOVX    A,@DPTR
03BD 54FD              ANL     A,#0FDH
03BF F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 563
03C0 8008              SJMP    ?C0148
03C2         ?C0147:
                                           ; SOURCE LINE # 565
                                           ; SOURCE LINE # 566
03C2 E0                MOVX    A,@DPTR
03C3 4402              ORL     A,#02H
03C5 F0                MOVX    @DPTR,A
C51 COMPILER V8.12   OEM_MAILBOX                                                           07/28/2018 12:03:52 PAGE 40  

                                           ; SOURCE LINE # 567
03C6 E0                MOVX    A,@DPTR
03C7 54FE              ANL     A,#0FEH
03C9 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 568
03CA         ?C0148:
                                           ; SOURCE LINE # 569
03CA 900000      E     MOV     DPTR,#SEL_STATE0
03CD E0                MOVX    A,@DPTR
03CE 900000      E     MOV     DPTR,#nVPC_DATA
03D1 30E00A            JNB     ACC.0,?C0149
                                           ; SOURCE LINE # 570
                                           ; SOURCE LINE # 571
03D4 E0                MOVX    A,@DPTR
03D5 4404              ORL     A,#04H
03D7 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 572
03D8         ?C0313:
03D8 E0                MOVX    A,@DPTR
03D9 54F7              ANL     A,#0F7H
03DB F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 573
03DC 8008              SJMP    ?C0046
03DE         ?C0149:
                                           ; SOURCE LINE # 575
                                           ; SOURCE LINE # 576
03DE E0                MOVX    A,@DPTR
03DF 4408              ORL     A,#08H
03E1 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 577
03E2 E0                MOVX    A,@DPTR
03E3 54FB              ANL     A,#0FBH
03E5 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 578
                                           ; SOURCE LINE # 583
                                           ; SOURCE LINE # 584
                                           ; SOURCE LINE # 585
                                           ; SOURCE LINE # 586
03E6         ?C0046:
                                           ; SOURCE LINE # 587
03E6 E4                CLR     A
03E7 900000      E     MOV     DPTR,#nVPC_CMD
03EA F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 588
                                           ; SOURCE LINE # 589
03EB         ?C0152:
03EB 22                RET     
03EC         L?0365:
03EC 120000      E     LCALL   _ECSMI_SCIEvent
03EF 900000      E     MOV     DPTR,#pDevStatus3
03F2 E0                MOVX    A,@DPTR
03F3 4440              ORL     A,#040H
03F5 F0                MOVX    @DPTR,A
03F6 900000      E     MOV     DPTR,#pDevStatus1
03F9 E0                MOVX    A,@DPTR
03FA 900000      E     MOV     DPTR,#pDevStatus3
03FD 22                RET     
             ; FUNCTION VPC_interface (END)

             ; FUNCTION TPInfor_ToVPC (BEGIN)
                                           ; SOURCE LINE # 592
                                           ; SOURCE LINE # 593
C51 COMPILER V8.12   OEM_MAILBOX                                                           07/28/2018 12:03:52 PAGE 41  

                                           ; SOURCE LINE # 594
0000 900000      E     MOV     DPTR,#SysPowState
0003 E0                MOVX    A,@DPTR
0004 6411              XRL     A,#011H
0006 7041              JNZ     ?C0161
                                           ; SOURCE LINE # 595
                                           ; SOURCE LINE # 596
0008 900000      E     MOV     DPTR,#pDevStatus3
000B E0                MOVX    A,@DPTR
000C FF                MOV     R7,A
000D 30E639            JNB     ACC.6,?C0161
                                           ; SOURCE LINE # 597
                                           ; SOURCE LINE # 598
0010 900000      E     MOV     DPTR,#pDevStatus1
0013 E0                MOVX    A,@DPTR
0014 30E704            JNB     ACC.7,?C0156
0017 7E01              MOV     R6,#01H
0019 8002              SJMP    ?C0157
001B         ?C0156:
001B 7E00              MOV     R6,#00H
001D         ?C0157:
001D EF                MOV     A,R7
001E 30E704            JNB     ACC.7,?C0158
0021 7F01              MOV     R7,#01H
0023 8002              SJMP    ?C0159
0025         ?C0158:
0025 7F00              MOV     R7,#00H
0027         ?C0159:
0027 EF                MOV     A,R7
0028 6E                XRL     A,R6
0029 601E              JZ      ?C0161
                                           ; SOURCE LINE # 599
                                           ; SOURCE LINE # 600
002B 900000      E     MOV     DPTR,#pDevStatus3
002E E0                MOVX    A,@DPTR
002F 54BF              ANL     A,#0BFH
0031 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 602
0032 900000      E     MOV     DPTR,#SYS_MISC1
0035 E0                MOVX    A,@DPTR
0036 30E710            JNB     ACC.7,?C0161
                                           ; SOURCE LINE # 603
                                           ; SOURCE LINE # 604
0039 900000      E     MOV     DPTR,#uVPCeventSource
003C 7420              MOV     A,#020H
003E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 605
003F E4                CLR     A
0040 900000      E     MOV     DPTR,#uVPCeventSource2
0043 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 606
0044 7F44              MOV     R7,#044H
0046 120000      E     LCALL   _ECQEvent
                                           ; SOURCE LINE # 607
                                           ; SOURCE LINE # 608
                                           ; SOURCE LINE # 609
                                           ; SOURCE LINE # 610
                                           ; SOURCE LINE # 611
0049         ?C0161:
0049 22                RET     
             ; FUNCTION TPInfor_ToVPC (END)

C51 COMPILER V8.12   OEM_MAILBOX                                                           07/28/2018 12:03:52 PAGE 42  

             ; FUNCTION ThermalMailBox (BEGIN)
                                           ; SOURCE LINE # 614
                                           ; SOURCE LINE # 615
                                           ; SOURCE LINE # 616
0000 900000      E     MOV     DPTR,#EXT_NAMESPACE_BANK
0003 E0                MOVX    A,@DPTR
0004 7003              JNZ     $ + 5H
0006 020000      R     LJMP    ?C0204
                                           ; SOURCE LINE # 617
                                           ; SOURCE LINE # 618
0009 E0                MOVX    A,@DPTR
000A FF                MOV     R7,A
000B 120000      R     LCALL   _RamDebug
                                           ; SOURCE LINE # 619
000E 900000      E     MOV     DPTR,#EXT_NAMESPACE_INDEX
0011 E0                MOVX    A,@DPTR
0012 FF                MOV     R7,A
0013 120000      R     LCALL   _RamDebug
                                           ; SOURCE LINE # 620
0016 900000      E     MOV     DPTR,#EXT_NAMESPACE_BANK
0019 E0                MOVX    A,@DPTR
001A 247C              ADD     A,#07CH
001C 7003              JNZ     $ + 5H
001E 020000      R     LJMP    ?C0196
0021 2403              ADD     A,#03H
0023 6003              JZ      $ + 5H
0025 020000      R     LJMP    ?C0163
                                           ; SOURCE LINE # 621
                                           ; SOURCE LINE # 622
0028         ?C0164:
                                           ; SOURCE LINE # 623
0028 900000      E     MOV     DPTR,#EXT_NAMESPACE_INDEX
002B E0                MOVX    A,@DPTR
002C B4020A            CJNE    A,#02H,?C0165
                                           ; SOURCE LINE # 624
002F 900000      E     MOV     DPTR,#DCR5
0032 E0                MOVX    A,@DPTR
0033 C3                CLR     C
0034 13                RRC     A
0035 900000      E     MOV     DPTR,#EXT_NAMESPACE_DATA
0038 F0                MOVX    @DPTR,A
0039         ?C0165:
                                           ; SOURCE LINE # 625
0039 900000      E     MOV     DPTR,#EXT_NAMESPACE_INDEX
003C E0                MOVX    A,@DPTR
003D B40406            CJNE    A,#04H,?C0166
                                           ; SOURCE LINE # 626
0040 900000      E     MOV     DPTR,#nAtmFanSpeed
0043 020000      R     LJMP    ?C0329
0046         ?C0166:
                                           ; SOURCE LINE # 627
0046 900000      E     MOV     DPTR,#EXT_NAMESPACE_INDEX
0049 E0                MOVX    A,@DPTR
004A B40706            CJNE    A,#07H,?C0168
                                           ; SOURCE LINE # 628
004D 900000      E     MOV     DPTR,#FAN_Tab_OFF
0050         ?C0315:
0050 020000      R     LJMP    ?C0329
0053         ?C0168:
                                           ; SOURCE LINE # 629
0053 900000      E     MOV     DPTR,#EXT_NAMESPACE_INDEX
0056 E0                MOVX    A,@DPTR
C51 COMPILER V8.12   OEM_MAILBOX                                                           07/28/2018 12:03:52 PAGE 43  

0057 B40806            CJNE    A,#08H,?C0170
                                           ; SOURCE LINE # 630
005A 900000      E     MOV     DPTR,#FAN_Tab_LOW
005D         ?C0316:
005D 020000      R     LJMP    ?C0329
0060         ?C0170:
                                           ; SOURCE LINE # 631
0060 900000      E     MOV     DPTR,#EXT_NAMESPACE_INDEX
0063 E0                MOVX    A,@DPTR
0064 B40906            CJNE    A,#09H,?C0172
                                           ; SOURCE LINE # 632
0067 900000      E     MOV     DPTR,#FAN_Tab_HI
006A         ?C0317:
006A 020000      R     LJMP    ?C0329
006D         ?C0172:
                                           ; SOURCE LINE # 633
006D 900000      E     MOV     DPTR,#EXT_NAMESPACE_INDEX
0070 E0                MOVX    A,@DPTR
0071 B40A06            CJNE    A,#0AH,?C0174
                                           ; SOURCE LINE # 634
0074 900000      E     MOV     DPTR,#THR_Turo_Rem
0077         ?C0318:
0077 020000      R     LJMP    ?C0329
007A         ?C0174:
                                           ; SOURCE LINE # 635
007A 900000      E     MOV     DPTR,#EXT_NAMESPACE_INDEX
007D E0                MOVX    A,@DPTR
007E B40B06            CJNE    A,#0BH,?C0176
                                           ; SOURCE LINE # 636
0081 900000      E     MOV     DPTR,#THR_PRO_OFF
0084         ?C0319:
0084 020000      R     LJMP    ?C0329
0087         ?C0176:
                                           ; SOURCE LINE # 637
0087 900000      E     MOV     DPTR,#EXT_NAMESPACE_INDEX
008A E0                MOVX    A,@DPTR
008B B40C05            CJNE    A,#0CH,?C0178
                                           ; SOURCE LINE # 638
008E 900000      E     MOV     DPTR,#THR_Turo_OFF
0091         ?C0320:
0091 8073              SJMP    ?C0329
0093         ?C0178:
                                           ; SOURCE LINE # 639
0093 900000      E     MOV     DPTR,#EXT_NAMESPACE_INDEX
0096 E0                MOVX    A,@DPTR
0097 B40D05            CJNE    A,#0DH,?C0180
                                           ; SOURCE LINE # 640
009A 900000      E     MOV     DPTR,#THR_PRO_ON
009D         ?C0321:
009D 8067              SJMP    ?C0329
009F         ?C0180:
                                           ; SOURCE LINE # 641
009F 900000      E     MOV     DPTR,#EXT_NAMESPACE_INDEX
00A2 E0                MOVX    A,@DPTR
00A3 B40E05            CJNE    A,#0EH,?C0182
                                           ; SOURCE LINE # 642
00A6 900000      E     MOV     DPTR,#VFAN_Tab_OFF
00A9         ?C0322:
00A9 805B              SJMP    ?C0329
00AB         ?C0182:
                                           ; SOURCE LINE # 643
00AB 900000      E     MOV     DPTR,#EXT_NAMESPACE_INDEX
C51 COMPILER V8.12   OEM_MAILBOX                                                           07/28/2018 12:03:52 PAGE 44  

00AE E0                MOVX    A,@DPTR
00AF B40F05            CJNE    A,#0FH,?C0184
                                           ; SOURCE LINE # 644
00B2 900000      E     MOV     DPTR,#VFAN_Tab_LOW
00B5         ?C0323:
00B5 804F              SJMP    ?C0329
00B7         ?C0184:
                                           ; SOURCE LINE # 645
00B7 900000      E     MOV     DPTR,#EXT_NAMESPACE_INDEX
00BA E0                MOVX    A,@DPTR
00BB B41005            CJNE    A,#010H,?C0186
                                           ; SOURCE LINE # 646
00BE 900000      E     MOV     DPTR,#VFAN_Tab_HI
00C1         ?C0324:
00C1 8043              SJMP    ?C0329
00C3         ?C0186:
                                           ; SOURCE LINE # 647
00C3 900000      E     MOV     DPTR,#EXT_NAMESPACE_INDEX
00C6 E0                MOVX    A,@DPTR
00C7 B41105            CJNE    A,#011H,?C0188
                                           ; SOURCE LINE # 648
00CA 900000      E     MOV     DPTR,#VTHR_Turo_Rem
00CD         ?C0325:
00CD 8037              SJMP    ?C0329
00CF         ?C0188:
                                           ; SOURCE LINE # 649
00CF 900000      E     MOV     DPTR,#EXT_NAMESPACE_INDEX
00D2 E0                MOVX    A,@DPTR
00D3 B41205            CJNE    A,#012H,?C0190
                                           ; SOURCE LINE # 650
00D6 900000      E     MOV     DPTR,#VTHR_PRO_OFF
00D9         ?C0326:
00D9 802B              SJMP    ?C0329
00DB         ?C0190:
                                           ; SOURCE LINE # 651
00DB 900000      E     MOV     DPTR,#EXT_NAMESPACE_INDEX
00DE E0                MOVX    A,@DPTR
00DF B41305            CJNE    A,#013H,?C0192
                                           ; SOURCE LINE # 652
00E2 900000      E     MOV     DPTR,#VTHR_Turo_OFF
00E5         ?C0327:
00E5 801F              SJMP    ?C0329
00E7         ?C0192:
                                           ; SOURCE LINE # 653
00E7 900000      E     MOV     DPTR,#EXT_NAMESPACE_INDEX
00EA E0                MOVX    A,@DPTR
00EB 6414              XRL     A,#014H
00ED 7036              JNZ     ?C0163
                                           ; SOURCE LINE # 654
00EF 900000      E     MOV     DPTR,#VTHR_PRO_ON
00F2         ?C0328:
                                           ; SOURCE LINE # 655
00F2 8012              SJMP    ?C0329
                                           ; SOURCE LINE # 657
                                           ; SOURCE LINE # 658
                                           ; SOURCE LINE # 660
00F4         ?C0196:
                                           ; SOURCE LINE # 661
00F4 900000      E     MOV     DPTR,#EXT_NAMESPACE_INDEX
00F7 E0                MOVX    A,@DPTR
00F8 7002              JNZ     ?C0197
                                           ; SOURCE LINE # 662
C51 COMPILER V8.12   OEM_MAILBOX                                                           07/28/2018 12:03:52 PAGE 45  

00FA 8025              SJMP    ?C0332
00FC         ?C0197:
                                           ; SOURCE LINE # 663
00FC 900000      E     MOV     DPTR,#EXT_NAMESPACE_INDEX
00FF E0                MOVX    A,@DPTR
0100 B40106            CJNE    A,#01H,?C0199
                                           ; SOURCE LINE # 664
0103 900000      E     MOV     DPTR,#nRamTemp
0106         ?C0329:
0106 E0                MOVX    A,@DPTR
0107         ?C0330:
0107 8018              SJMP    ?C0332
0109         ?C0199:
                                           ; SOURCE LINE # 665
0109 900000      E     MOV     DPTR,#EXT_NAMESPACE_INDEX
010C E0                MOVX    A,@DPTR
010D B40206            CJNE    A,#02H,?C0201
                                           ; SOURCE LINE # 666
0110 900000      E     MOV     DPTR,#nVramTemp
0113 E0                MOVX    A,@DPTR
0114         ?C0331:
0114 800B              SJMP    ?C0332
0116         ?C0201:
                                           ; SOURCE LINE # 667
0116 900000      E     MOV     DPTR,#EXT_NAMESPACE_INDEX
0119 E0                MOVX    A,@DPTR
011A B40308            CJNE    A,#03H,?C0163
                                           ; SOURCE LINE # 668
011D 900000      E     MOV     DPTR,#nNBTemp
0120 E0                MOVX    A,@DPTR
0121         ?C0332:
0121 900000      E     MOV     DPTR,#EXT_NAMESPACE_DATA
0124 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 669
0125         ?C0163:
                                           ; SOURCE LINE # 670
0125 900000      E     MOV     DPTR,#EXT_NAMESPACE_DATA
0128 E0                MOVX    A,@DPTR
0129 FF                MOV     R7,A
012A 120000      R     LCALL   _RamDebug
                                           ; SOURCE LINE # 671
012D E4                CLR     A
012E 900000      E     MOV     DPTR,#EXT_NAMESPACE_INDEX
0131 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 672
0132 900000      E     MOV     DPTR,#EXT_NAMESPACE_BANK
0135 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 673
                                           ; SOURCE LINE # 674
0136         ?C0204:
0136 22                RET     
             ; FUNCTION ThermalMailBox (END)

             ; FUNCTION _RamDebug (BEGIN)
                                           ; SOURCE LINE # 681
;---- Variable 'dbgcode' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 682
                                           ; SOURCE LINE # 688
;---- Variable 'byte_register_pntr' assigned to Register 'R4/R5' ----
0000 7DFF              MOV     R5,#0FFH
0002 7C0A              MOV     R4,#0AH
                                           ; SOURCE LINE # 689
C51 COMPILER V8.12   OEM_MAILBOX                                                           07/28/2018 12:03:52 PAGE 46  

0004 8D82              MOV     DPL,R5
0006 8C83              MOV     DPH,R4
0008 E0                MOVX    A,@DPTR
;---- Variable 'index' assigned to Register 'R1' ----
0009 F9                MOV     R1,A
                                           ; SOURCE LINE # 690
000A E0                MOVX    A,@DPTR
000B 04                INC     A
000C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 692
000D E0                MOVX    A,@DPTR
000E B4FF27            CJNE    A,#0FFH,?C0205
                                           ; SOURCE LINE # 693
                                           ; SOURCE LINE # 694
0011 E4                CLR     A
0012 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 695
0013 900000      R     MOV     DPTR,#ClearIndex
0016 740A              MOV     A,#0AH
0018 F0                MOVX    @DPTR,A
0019 A3                INC     DPTR
001A E4                CLR     A
001B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 697
;---- Variable 'i' assigned to Register 'R6' ----
001C FE                MOV     R6,A
001D         ?C0206:
                                           ; SOURCE LINE # 698
                                           ; SOURCE LINE # 699
001D 900000      R     MOV     DPTR,#ClearIndex
0020 E0                MOVX    A,@DPTR
0021 FA                MOV     R2,A
0022 A3                INC     DPTR
0023 E0                MOVX    A,@DPTR
0024 F582              MOV     DPL,A
0026 8A83              MOV     DPH,R2
0028 E4                CLR     A
0029 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 700
002A 900000      R     MOV     DPTR,#ClearIndex
002D 75F001            MOV     B,#01H
0030 120000      E     LCALL   ?C?IILDX
                                           ; SOURCE LINE # 701
0033 0E                INC     R6
0034 EE                MOV     A,R6
0035 B4FFE5            CJNE    A,#0FFH,?C0206
                                           ; SOURCE LINE # 702
0038         ?C0205:
                                           ; SOURCE LINE # 704
0038 CE                XCH     A,R6
0039 E9                MOV     A,R1
003A CE                XCH     A,R6
003B E9                MOV     A,R1
003C 2400              ADD     A,#00H
003E FD                MOV     R5,A
003F E4                CLR     A
0040 340A              ADDC    A,#0AH
                                           ; SOURCE LINE # 705
0042 8D82              MOV     DPL,R5
0044 F583              MOV     DPH,A
0046 EF                MOV     A,R7
0047 F0                MOVX    @DPTR,A
C51 COMPILER V8.12   OEM_MAILBOX                                                           07/28/2018 12:03:52 PAGE 47  

                                           ; SOURCE LINE # 706
0048 22                RET     
             ; FUNCTION _RamDebug (END)

             ; FUNCTION ClearDiagRam (BEGIN)
                                           ; SOURCE LINE # 710
                                           ; SOURCE LINE # 711
                                           ; SOURCE LINE # 714
0000 7B01              MOV     R3,#01H
0002 7A0F              MOV     R2,#0FH
0004 7900              MOV     R1,#00H
;---- Variable 'ClearIndex' assigned to Register 'R1/R2/R3' ----
                                           ; SOURCE LINE # 715
0006 E4                CLR     A
0007 900000      R     MOV     DPTR,#i
000A F0                MOVX    @DPTR,A
000B A3                INC     DPTR
000C F0                MOVX    @DPTR,A
000D         ?C0210:
                                           ; SOURCE LINE # 716
                                           ; SOURCE LINE # 717
000D E4                CLR     A
000E 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 718
0011 04                INC     A
0012 29                ADD     A,R1
0013 F9                MOV     R1,A
0014 E4                CLR     A
0015 3A                ADDC    A,R2
0016 FA                MOV     R2,A
                                           ; SOURCE LINE # 719
0017 900000      R     MOV     DPTR,#i
001A E4                CLR     A
001B 75F001            MOV     B,#01H
001E 120000      E     LCALL   ?C?IILDX
0021 900000      R     MOV     DPTR,#i
0024 E0                MOVX    A,@DPTR
0025 B401E5            CJNE    A,#01H,?C0210
0028 A3                INC     DPTR
0029 E0                MOVX    A,@DPTR
002A B400E0            CJNE    A,#00H,?C0210
                                           ; SOURCE LINE # 722
002D         ?C0213:
002D 22                RET     
             ; FUNCTION ClearDiagRam (END)

             ; FUNCTION DiagSMBusOperation (BEGIN)
                                           ; SOURCE LINE # 723
                                           ; SOURCE LINE # 724
                                           ; SOURCE LINE # 728
0000 900000      E     MOV     DPTR,#SMB_PRTC_Diag
0003 E0                MOVX    A,@DPTR
0004 7003              JNZ     $ + 5H
0006 020000      R     LJMP    ?C0248
                                           ; SOURCE LINE # 729
                                           ; SOURCE LINE # 730
0009 E4                CLR     A
000A 900000      E     MOV     DPTR,#SMB_STS_Diag
000D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 732
000E 900000      E     MOV     DPTR,#SMB_PRTC_Diag
0011 E0                MOVX    A,@DPTR
C51 COMPILER V8.12   OEM_MAILBOX                                                           07/28/2018 12:03:52 PAGE 48  

0012 540F              ANL     A,#0FH
0014 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 749
0015 E0                MOVX    A,@DPTR
0016 B4040F            CJNE    A,#04H,?C0215
                                           ; SOURCE LINE # 750
                                           ; SOURCE LINE # 751
0019 120000      R     LCALL   L?0359
001C FD                MOV     R5,A
001D 900000      E     MOV     DPTR,#SMB_CMD_Diag
0020 E0                MOVX    A,@DPTR
0021 FB                MOV     R3,A
0022 120000      E     LCALL   _bSMBusSendByte
                                           ; SOURCE LINE # 752
0025 020000      R     LJMP    ?C0339
0028         ?C0215:
                                           ; SOURCE LINE # 753
0028 900000      E     MOV     DPTR,#SMB_PRTC_Diag
002B E0                MOVX    A,@DPTR
002C B4050E            CJNE    A,#05H,?C0217
                                           ; SOURCE LINE # 754
                                           ; SOURCE LINE # 755
002F 120000      R     LCALL   L?0359
0032 FD                MOV     R5,A
0033 7A00        E     MOV     R2,#HIGH SMB_DATA_Diag
0035 7B00        E     MOV     R3,#LOW SMB_DATA_Diag
0037 120000      E     LCALL   _bSMBusReceiveByte
003A         ?C0333:
                                           ; SOURCE LINE # 756
003A 020000      R     LJMP    ?C0339
003D         ?C0217:
                                           ; SOURCE LINE # 757
003D 900000      E     MOV     DPTR,#SMB_PRTC_Diag
0040 E0                MOVX    A,@DPTR
0041 6406              XRL     A,#06H
0043 700E              JNZ     ?C0219
                                           ; SOURCE LINE # 758
                                           ; SOURCE LINE # 759
0045 120000      R     LCALL   L?0355
0048 E4                CLR     A
0049 A3                INC     DPTR
004A F0                MOVX    @DPTR,A
004B 7D88              MOV     R5,#088H
004D 120000      E     LCALL   _bRWSMBus
0050         ?C0334:
                                           ; SOURCE LINE # 760
0050 020000      R     LJMP    ?C0339
0053         ?C0219:
                                           ; SOURCE LINE # 761
0053 900000      E     MOV     DPTR,#SMB_PRTC_Diag
0056 E0                MOVX    A,@DPTR
0057 6407              XRL     A,#07H
0059 700E              JNZ     ?C0221
                                           ; SOURCE LINE # 762
                                           ; SOURCE LINE # 763
005B 120000      R     LCALL   L?0355
005E E4                CLR     A
005F A3                INC     DPTR
0060 F0                MOVX    @DPTR,A
0061 7D08              MOV     R5,#08H
0063 120000      E     LCALL   _bRWSMBus
0066         ?C0335:
C51 COMPILER V8.12   OEM_MAILBOX                                                           07/28/2018 12:03:52 PAGE 49  

                                           ; SOURCE LINE # 764
0066 020000      R     LJMP    ?C0339
0069         ?C0221:
                                           ; SOURCE LINE # 765
0069 900000      E     MOV     DPTR,#SMB_PRTC_Diag
006C E0                MOVX    A,@DPTR
006D 6408              XRL     A,#08H
006F 700E              JNZ     ?C0223
                                           ; SOURCE LINE # 766
                                           ; SOURCE LINE # 767
0071 120000      R     LCALL   L?0356
0074 E4                CLR     A
0075 A3                INC     DPTR
0076 F0                MOVX    @DPTR,A
0077 7D8C              MOV     R5,#08CH
0079 120000      E     LCALL   _bRWSMBus
007C         ?C0336:
                                           ; SOURCE LINE # 768
007C 020000      R     LJMP    ?C0339
007F         ?C0223:
                                           ; SOURCE LINE # 769
007F 900000      E     MOV     DPTR,#SMB_PRTC_Diag
0082 E0                MOVX    A,@DPTR
0083 6409              XRL     A,#09H
0085 700D              JNZ     ?C0225
                                           ; SOURCE LINE # 770
                                           ; SOURCE LINE # 771
0087 120000      R     LCALL   L?0356
008A E4                CLR     A
008B A3                INC     DPTR
008C F0                MOVX    @DPTR,A
008D 7D0C              MOV     R5,#0CH
008F 120000      E     LCALL   _bRWSMBus
0092         ?C0337:
                                           ; SOURCE LINE # 772
0092 8042              SJMP    ?C0339
0094         ?C0225:
                                           ; SOURCE LINE # 773
0094 900000      E     MOV     DPTR,#SMB_PRTC_Diag
0097 E0                MOVX    A,@DPTR
0098 640A              XRL     A,#0AH
009A 7020              JNZ     ?C0227
                                           ; SOURCE LINE # 774
                                           ; SOURCE LINE # 775
009C 120000      R     LCALL   L?0360
009F FB                MOV     R3,A
00A0 900000      E     MOV     DPTR,#SMB_CMD_Diag
00A3 E0                MOVX    A,@DPTR
00A4 900000      E     MOV     DPTR,#?_bWSMBusBlock?BYTE+03H
00A7 120000      R     LCALL   L?0357
00AA 900000      E     MOV     DPTR,#SMB_BCNT_Diag
00AD E0                MOVX    A,@DPTR
00AE 900000      E     MOV     DPTR,#?_bWSMBusBlock?BYTE+06H
00B1 F0                MOVX    @DPTR,A
00B2 E4                CLR     A
00B3 A3                INC     DPTR
00B4 F0                MOVX    @DPTR,A
00B5 7D94              MOV     R5,#094H
00B7 120000      E     LCALL   _bWSMBusBlock
00BA         ?C0338:
                                           ; SOURCE LINE # 776
00BA 801A              SJMP    ?C0339
C51 COMPILER V8.12   OEM_MAILBOX                                                           07/28/2018 12:03:52 PAGE 50  

00BC         ?C0227:
                                           ; SOURCE LINE # 777
00BC 900000      E     MOV     DPTR,#SMB_PRTC_Diag
00BF E0                MOVX    A,@DPTR
00C0 B40B18            CJNE    A,#0BH,?C0216
                                           ; SOURCE LINE # 778
                                           ; SOURCE LINE # 779
00C3 120000      R     LCALL   L?0360
00C6 FB                MOV     R3,A
00C7 900000      E     MOV     DPTR,#SMB_CMD_Diag
00CA E0                MOVX    A,@DPTR
00CB 900000      E     MOV     DPTR,#?_bRSMBusBlock?BYTE+03H
00CE 120000      R     LCALL   L?0357
00D1 7D14              MOV     R5,#014H
00D3 120000      E     LCALL   _bRSMBusBlock
00D6         ?C0339:
00D6 900000      R     MOV     DPTR,#result
00D9 EF                MOV     A,R7
00DA F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 780
00DB         ?C0216:
                                           ; SOURCE LINE # 782
00DB 900000      E     MOV     DPTR,#SMB_EC_Chennel_Diag
00DE E0                MOVX    A,@DPTR
00DF B40105            CJNE    A,#01H,?C0230
                                           ; SOURCE LINE # 783
                                           ; SOURCE LINE # 784
00E2 900000      E     MOV     DPTR,#HOSTA_B
                                           ; SOURCE LINE # 785
00E5 8015              SJMP    ?C0341
00E7         ?C0230:
                                           ; SOURCE LINE # 786
00E7 900000      E     MOV     DPTR,#SMB_EC_Chennel_Diag
00EA E0                MOVX    A,@DPTR
00EB 7005              JNZ     ?C0232
                                           ; SOURCE LINE # 787
                                           ; SOURCE LINE # 788
00ED 900000      E     MOV     DPTR,#HOSTA_A
00F0         ?C0340:
                                           ; SOURCE LINE # 789
00F0 800A              SJMP    ?C0341
00F2         ?C0232:
                                           ; SOURCE LINE # 790
00F2 900000      E     MOV     DPTR,#SMB_EC_Chennel_Diag
00F5 E0                MOVX    A,@DPTR
00F6 B40208            CJNE    A,#02H,?C0231
                                           ; SOURCE LINE # 791
                                           ; SOURCE LINE # 792
00F9 900000      E     MOV     DPTR,#HOSTA_C
00FC         ?C0341:
00FC E0                MOVX    A,@DPTR
00FD 900000      R     MOV     DPTR,#HOSTx_x_State
0100 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 793
0101         ?C0231:
                                           ; SOURCE LINE # 795
0101 900000      R     MOV     DPTR,#result
0104 E0                MOVX    A,@DPTR
0105 6008              JZ      ?C0235
                                           ; SOURCE LINE # 796
                                           ; SOURCE LINE # 797
0107 900000      E     MOV     DPTR,#SMB_STS_Diag
C51 COMPILER V8.12   OEM_MAILBOX                                                           07/28/2018 12:03:52 PAGE 51  

010A 7480              MOV     A,#080H
010C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 798
010D 804A              SJMP    ?C0236
010F         ?C0235:
                                           ; SOURCE LINE # 800
                                           ; SOURCE LINE # 802
010F 900000      R     MOV     DPTR,#HOSTx_x_State
0112 E0                MOVX    A,@DPTR
0113 FF                MOV     R7,A
0114 30E008            JNB     ACC.0,?C0237
0117 900000      E     MOV     DPTR,#SMB_STS_Diag
011A 741A              MOV     A,#01AH
011C F0                MOVX    @DPTR,A
011D 803A              SJMP    ?C0236
011F         ?C0237:
                                           ; SOURCE LINE # 803
011F EF                MOV     A,R7
0120 30E208            JNB     ACC.2,?C0239
0123 900000      E     MOV     DPTR,#SMB_STS_Diag
0126 7417              MOV     A,#017H
0128 F0                MOVX    @DPTR,A
0129 802E              SJMP    ?C0236
012B         ?C0239:
                                           ; SOURCE LINE # 804
012B EF                MOV     A,R7
012C 30E308            JNB     ACC.3,?C0241
012F 900000      E     MOV     DPTR,#SMB_STS_Diag
0132 7407              MOV     A,#07H
0134 F0                MOVX    @DPTR,A
0135 8022              SJMP    ?C0236
0137         ?C0241:
                                           ; SOURCE LINE # 805
0137 EF                MOV     A,R7
0138 30E408            JNB     ACC.4,?C0243
013B 900000      E     MOV     DPTR,#SMB_STS_Diag
013E 7419              MOV     A,#019H
0140 F0                MOVX    @DPTR,A
0141 8016              SJMP    ?C0236
0143         ?C0243:
                                           ; SOURCE LINE # 806
0143 EF                MOV     A,R7
0144 30E508            JNB     ACC.5,?C0245
0147 900000      E     MOV     DPTR,#SMB_STS_Diag
014A 7410              MOV     A,#010H
014C F0                MOVX    @DPTR,A
014D 800A              SJMP    ?C0236
014F         ?C0245:
                                           ; SOURCE LINE # 807
014F EF                MOV     A,R7
0150 30E606            JNB     ACC.6,?C0236
0153 900000      E     MOV     DPTR,#SMB_STS_Diag
0156 7418              MOV     A,#018H
0158 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 808
0159         ?C0236:
                                           ; SOURCE LINE # 815
0159 E4                CLR     A
015A 900000      E     MOV     DPTR,#SMB_PRTC_Diag
015D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 818
                                           ; SOURCE LINE # 819
C51 COMPILER V8.12   OEM_MAILBOX                                                           07/28/2018 12:03:52 PAGE 52  

015E         ?C0248:
015E 22                RET     
             ; FUNCTION DiagSMBusOperation (END)

             ; FUNCTION Diag_interface (BEGIN)
                                           ; SOURCE LINE # 821
                                           ; SOURCE LINE # 822
                                           ; SOURCE LINE # 824
0000 900000      E     MOV     DPTR,#nDiagInterface_CMD
0003 E0                MOVX    A,@DPTR
0004 7003              JNZ     $ + 5H
0006 020000      R     LJMP    ?C0249
                                           ; SOURCE LINE # 825
                                           ; SOURCE LINE # 826
0009 7FDC              MOV     R7,#0DCH
000B 120000      R     LCALL   _RamDebug
                                           ; SOURCE LINE # 827
000E 900000      E     MOV     DPTR,#nDiagInterface_CMD
0011 E0                MOVX    A,@DPTR
0012 FF                MOV     R7,A
0013 120000      R     LCALL   _RamDebug
                                           ; SOURCE LINE # 828
0016 900000      E     MOV     DPTR,#nDiagInterface_ECRegH
0019 E0                MOVX    A,@DPTR
001A FF                MOV     R7,A
001B 120000      R     LCALL   _RamDebug
                                           ; SOURCE LINE # 829
001E 900000      E     MOV     DPTR,#nDiagInterface_ECRegL
0021 E0                MOVX    A,@DPTR
0022 FF                MOV     R7,A
0023 120000      R     LCALL   _RamDebug
                                           ; SOURCE LINE # 831
0026 900000      E     MOV     DPTR,#nDiagInterface_CMD
0029 E0                MOVX    A,@DPTR
002A 120000      E     LCALL   ?C?CCASE
002D 0000        R     DW      ?C0251
002F 11                DB      011H
0030 0000        R     DW      ?C0252
0032 12                DB      012H
0033 0000        R     DW      ?C0253
0035 13                DB      013H
0036 0000        R     DW      ?C0252
0038 14                DB      014H
0039 0000        R     DW      ?C0257
003B 20                DB      020H
003C 0000        R     DW      ?C0260
003E 21                DB      021H
003F 0000        R     DW      ?C0262
0041 22                DB      022H
0042 0000        R     DW      ?C0263
0044 26                DB      026H
0045 0000        R     DW      ?C0275
0047 27                DB      027H
0048 0000        R     DW      ?C0283
004A 28                DB      028H
004B 0000        R     DW      ?C0255
004D 80                DB      080H
004E 0000        R     DW      ?C0256
0050 81                DB      081H
0051 0000        R     DW      ?C0289
0053 FF                DB      0FFH
0054 0000              DW      00H
C51 COMPILER V8.12   OEM_MAILBOX                                                           07/28/2018 12:03:52 PAGE 53  

0056 0000        R     DW      ?C0249
                                           ; SOURCE LINE # 832
                                           ; SOURCE LINE # 833
0058         ?C0251:
                                           ; SOURCE LINE # 834
                                           ; SOURCE LINE # 835
                                           ; SOURCE LINE # 837
0058 8002              SJMP    ?C0342
                                           ; SOURCE LINE # 838
005A         ?C0252:
                                           ; SOURCE LINE # 839
                                           ; SOURCE LINE # 840
                                           ; SOURCE LINE # 842
005A 8009              SJMP    ?C0343
                                           ; SOURCE LINE # 843
005C         ?C0253:
                                           ; SOURCE LINE # 844
005C         ?C0342:
005C 7C00              MOV     R4,#00H
005E 120000      R     LCALL   L?0368
0061 EC                MOV     A,R4
0062 3E                ADDC    A,R6
                                           ; SOURCE LINE # 845
                                           ; SOURCE LINE # 846
0063 8019              SJMP    ?C0344
                                           ; SOURCE LINE # 847
0065         ?C0343:
0065 900000      E     MOV     DPTR,#nDiagInterface_DATA
0068 E0                MOVX    A,@DPTR
0069 FD                MOV     R5,A
006A 7A00              MOV     R2,#00H
006C 120000      R     LCALL   L?0368
006F EA                MOV     A,R2
0070 3E                ADDC    A,R6
0071 8F82              MOV     DPL,R7
0073 F583              MOV     DPH,A
0075 ED                MOV     A,R5
                                           ; SOURCE LINE # 849
                                           ; SOURCE LINE # 850
0076 8025              SJMP    ?C0345
                                           ; SOURCE LINE # 851
0078         ?C0255:
                                           ; SOURCE LINE # 852
0078 120000      R     LCALL   L?0369
007B E4                CLR     A
007C 3404              ADDC    A,#04H
007E         ?C0344:
007E 8F82              MOV     DPL,R7
0080 F583              MOV     DPH,A
0082 E0                MOVX    A,@DPTR
0083 900000      E     MOV     DPTR,#nDiagInterface_DATA
0086 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 853
                                           ; SOURCE LINE # 854
0087 8018              SJMP    ?C0346
                                           ; SOURCE LINE # 855
0089         ?C0256:
                                           ; SOURCE LINE # 856
0089 900000      E     MOV     DPTR,#nDiagInterface_DATA
008C E0                MOVX    A,@DPTR
008D FF                MOV     R7,A
008E 900000      E     MOV     DPTR,#nDiagInterface_ECRegL
C51 COMPILER V8.12   OEM_MAILBOX                                                           07/28/2018 12:03:52 PAGE 54  

0091 E0                MOVX    A,@DPTR
0092 2400              ADD     A,#00H
0094 FD                MOV     R5,A
0095 E4                CLR     A
0096 3404              ADDC    A,#04H
0098 8D82              MOV     DPL,R5
009A F583              MOV     DPH,A
009C EF                MOV     A,R7
009D         ?C0345:
009D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 857
009E 900000      E     MOV     DPTR,#nDiagInterface_DATA
00A1         ?C0346:
00A1 E0                MOVX    A,@DPTR
00A2 FF                MOV     R7,A
00A3 120000      R     LCALL   _RamDebug
                                           ; SOURCE LINE # 858
00A6 020000      R     LJMP    ?C0249
                                           ; SOURCE LINE # 860
00A9         ?C0257:
                                           ; SOURCE LINE # 861
00A9 900000      E     MOV     DPTR,#SMB_EC_Chennel_Diag
00AC E0                MOVX    A,@DPTR
00AD 7004              JNZ     ?C0258
                                           ; SOURCE LINE # 862
00AF 04                INC     A
00B0 F0                MOVX    @DPTR,A
00B1 8006              SJMP    ?C0259
00B3         ?C0258:
                                           ; SOURCE LINE # 864
00B3 900000      E     MOV     DPTR,#SMB_EC_Chennel_Diag
00B6 E0                MOVX    A,@DPTR
00B7 14                DEC     A
00B8 F0                MOVX    @DPTR,A
00B9         ?C0259:
                                           ; SOURCE LINE # 865
00B9 120000      R     LCALL   DiagSMBusOperation
                                           ; SOURCE LINE # 866
00BC 020000      R     LJMP    ?C0249
                                           ; SOURCE LINE # 868
00BF         ?C0260:
                                           ; SOURCE LINE # 869
00BF 900000      E     MOV     DPTR,#nDiagInterface_DATA
00C2 E0                MOVX    A,@DPTR
00C3 D3                SETB    C
00C4 9400              SUBB    A,#00H
00C6 5003              JNC     $ + 5H
00C8 020000      R     LJMP    ?C0249
00CB E0                MOVX    A,@DPTR
00CC D3                SETB    C
00CD 940C              SUBB    A,#0CH
00CF 4003              JC      $ + 5H
00D1 020000      R     LJMP    ?C0249
                                           ; SOURCE LINE # 870
                                           ; SOURCE LINE # 871
00D4 E0                MOVX    A,@DPTR
00D5 FF                MOV     R7,A
00D6 C4                SWAP    A
00D7 54F0              ANL     A,#0F0H
00D9 240A              ADD     A,#0AH
00DB 900000      E     MOV     DPTR,#FunctionKeyDebounce
00DE F0                MOVX    @DPTR,A
C51 COMPILER V8.12   OEM_MAILBOX                                                           07/28/2018 12:03:52 PAGE 55  

                                           ; SOURCE LINE # 872
00DF 900000      E     MOV     DPTR,#nDiagInterface_DATA
00E2 E0                MOVX    A,@DPTR
00E3 75F003            MOV     B,#03H
00E6 900000      E     MOV     DPTR,#HotKey_Fn_Fx-03H
00E9 120000      E     LCALL   ?C?OFFXADD
00EC 120000      E     LCALL   ?C?PLDCODE
00EF 8982              MOV     DPL,R1
00F1 8A83              MOV     DPH,R2
00F3 E4                CLR     A
00F4 FF                MOV     R7,A
00F5 120000      E     LCALL   ?C?ICALL2
                                           ; SOURCE LINE # 873
                                           ; SOURCE LINE # 874
00F8 020000      R     LJMP    ?C0249
                                           ; SOURCE LINE # 876
00FB         ?C0262:
                                           ; SOURCE LINE # 877
00FB 900000      E     MOV     DPTR,#nDiagInterface_DATA
00FE E0                MOVX    A,@DPTR
00FF FF                MOV     R7,A
0100 120000      E     LCALL   _ECQEvent
                                           ; SOURCE LINE # 878
0103 020000      R     LJMP    ?C0249
                                           ; SOURCE LINE # 880
0106         ?C0263:
                                           ; SOURCE LINE # 881
0106 900000      E     MOV     DPTR,#nDiagInterface_DATA
0109 E0                MOVX    A,@DPTR
010A B40105            CJNE    A,#01H,?C0264
                                           ; SOURCE LINE # 882
                                           ; SOURCE LINE # 883
010D 900000      E     MOV     DPTR,#nCpuTemp
                                           ; SOURCE LINE # 884
0110 805E              SJMP    ?C0353
0112         ?C0264:
                                           ; SOURCE LINE # 885
0112 900000      E     MOV     DPTR,#nDiagInterface_DATA
0115 E0                MOVX    A,@DPTR
0116 B40205            CJNE    A,#02H,?C0266
                                           ; SOURCE LINE # 886
                                           ; SOURCE LINE # 887
0119 900000      E     MOV     DPTR,#VGA_TEMP
011C         ?C0347:
                                           ; SOURCE LINE # 888
011C 8052              SJMP    ?C0353
011E         ?C0266:
                                           ; SOURCE LINE # 889
011E 900000      E     MOV     DPTR,#nDiagInterface_DATA
0121 E0                MOVX    A,@DPTR
0122 B40305            CJNE    A,#03H,?C0268
                                           ; SOURCE LINE # 890
                                           ; SOURCE LINE # 892
0125 900000      E     MOV     DPTR,#EXTVGA_TEMP
0128         ?C0348:
                                           ; SOURCE LINE # 893
0128 8046              SJMP    ?C0353
012A         ?C0268:
                                           ; SOURCE LINE # 894
012A 900000      E     MOV     DPTR,#nDiagInterface_DATA
012D E0                MOVX    A,@DPTR
012E B40405            CJNE    A,#04H,?C0270
C51 COMPILER V8.12   OEM_MAILBOX                                                           07/28/2018 12:03:52 PAGE 56  

                                           ; SOURCE LINE # 895
                                           ; SOURCE LINE # 897
0131 900000      E     MOV     DPTR,#ThermistorCPU_TEMP
0134         ?C0349:
                                           ; SOURCE LINE # 898
0134 803A              SJMP    ?C0353
0136         ?C0270:
                                           ; SOURCE LINE # 899
0136 900000      E     MOV     DPTR,#nDiagInterface_DATA
0139 E0                MOVX    A,@DPTR
013A B40505            CJNE    A,#05H,?C0272
                                           ; SOURCE LINE # 900
                                           ; SOURCE LINE # 901
013D 900000      E     MOV     DPTR,#nRamTemp
0140         ?C0350:
                                           ; SOURCE LINE # 902
0140 802E              SJMP    ?C0353
0142         ?C0272:
                                           ; SOURCE LINE # 904
0142 900000      E     MOV     DPTR,#nDiagInterface_DATA
0145 E0                MOVX    A,@DPTR
0146 6406              XRL     A,#06H
0148 7057              JNZ     ?C0249
                                           ; SOURCE LINE # 905
                                           ; SOURCE LINE # 906
014A 900000      E     MOV     DPTR,#nVramTemp
014D         ?C0351:
                                           ; SOURCE LINE # 907
                                           ; SOURCE LINE # 909
014D 8021              SJMP    ?C0353
                                           ; SOURCE LINE # 910
014F         ?C0275:
                                           ; SOURCE LINE # 911
014F 900000      E     MOV     DPTR,#nDiagInterface_DATA
0152 E0                MOVX    A,@DPTR
0153 B40105            CJNE    A,#01H,?C0276
                                           ; SOURCE LINE # 912
                                           ; SOURCE LINE # 913
0156 900000      E     MOV     DPTR,#nAtmFanSpeed
0159         ?C0352:
                                           ; SOURCE LINE # 914
0159 8015              SJMP    ?C0353
015B         ?C0276:
                                           ; SOURCE LINE # 915
015B 900000      E     MOV     DPTR,#nDiagInterface_DATA
015E E0                MOVX    A,@DPTR
015F B40204            CJNE    A,#02H,?C0278
                                           ; SOURCE LINE # 916
                                           ; SOURCE LINE # 918
0162 E4                CLR     A
0163 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 919
0164 803B              SJMP    ?C0249
0166         ?C0278:
                                           ; SOURCE LINE # 921
0166 900000      E     MOV     DPTR,#nDiagInterface_DATA
0169 E0                MOVX    A,@DPTR
016A B4030A            CJNE    A,#03H,?C0280
                                           ; SOURCE LINE # 922
                                           ; SOURCE LINE # 923
016D 900000      E     MOV     DPTR,#DCR5
0170         ?C0353:
C51 COMPILER V8.12   OEM_MAILBOX                                                           07/28/2018 12:03:52 PAGE 57  

0170 E0                MOVX    A,@DPTR
0171 900000      E     MOV     DPTR,#nDiagInterface_DATA
0174 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 924
0175 802A              SJMP    ?C0249
0177         ?C0280:
                                           ; SOURCE LINE # 925
0177 900000      E     MOV     DPTR,#nDiagInterface_DATA
017A E0                MOVX    A,@DPTR
017B B40423            CJNE    A,#04H,?C0249
                                           ; SOURCE LINE # 926
                                           ; SOURCE LINE # 928
017E E4                CLR     A
017F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 929
                                           ; SOURCE LINE # 931
0180 801F              SJMP    ?C0249
                                           ; SOURCE LINE # 932
0182         ?C0283:
                                           ; SOURCE LINE # 933
0182 900000      E     MOV     DPTR,#nDiagInterface_DATA
0185 E0                MOVX    A,@DPTR
0186 C3                CLR     C
0187 9480              SUBB    A,#080H
0189 4016              JC      ?C0249
                                           ; SOURCE LINE # 934
                                           ; SOURCE LINE # 935
018B 900000      E     MOV     DPTR,#uReserve07
018E E0                MOVX    A,@DPTR
018F 4440              ORL     A,#040H
0191 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 937
0192 900000      E     MOV     DPTR,#nDiagInterface_DATA
0195 E0                MOVX    A,@DPTR
0196 2480              ADD     A,#080H
0198 900000      E     MOV     DPTR,#ManualFanPRM
019B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 938
019C 8003              SJMP    ?C0249
                                           ; SOURCE LINE # 940
                                           ; SOURCE LINE # 944
                                           ; SOURCE LINE # 945
                                           ; SOURCE LINE # 946
                                           ; SOURCE LINE # 985
                                           ; SOURCE LINE # 986
                                           ; SOURCE LINE # 1025
                                           ; SOURCE LINE # 1026
                                           ; SOURCE LINE # 1029
                                           ; SOURCE LINE # 1030
019E         ?C0289:
                                           ; SOURCE LINE # 1031
019E 120000      R     LCALL   ClearDiagRam
                                           ; SOURCE LINE # 1032
                                           ; SOURCE LINE # 1033
                                           ; SOURCE LINE # 1034
                                           ; SOURCE LINE # 1035
                                           ; SOURCE LINE # 1036
01A1         ?C0249:
                                           ; SOURCE LINE # 1037
01A1 E4                CLR     A
01A2 900000      E     MOV     DPTR,#nDiagInterface_CMD
01A5 F0                MOVX    @DPTR,A
C51 COMPILER V8.12   OEM_MAILBOX                                                           07/28/2018 12:03:52 PAGE 58  

                                           ; SOURCE LINE # 1038
01A6 22                RET     
             ; FUNCTION Diag_interface (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   2852    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----      10
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)

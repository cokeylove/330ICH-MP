C51 COMPILER V8.12   OEM_SCANTABS                                                          07/28/2018 12:03:44 PAGE 1   


C51 COMPILER V8.12, COMPILATION OF MODULE OEM_SCANTABS
OBJECT MODULE PLACED IN Code\OEM\OEM_SCANTABS.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE Code\OEM\OEM_SCANTABS.C LA WL(1) CD OT(9,SIZE) NOAREGS OR INCDIR(.\Code\COR
                    -E\INCLUDE\;.\Code\OEM\INCLUDE\;.\Code\CHIP\INCLUDE\)

line level    source

   1          /*-----------------------------------------------------------------
   2           * TITLE: OEM_SCANTABS.C - RC Table(s) for Scan Matix
   3           *
   4           * Copyright (c) 1983-2007, Insyde Software Corporation. All Rights Reserved.
   5           *
   6           * You may not reproduce, distribute, publish, display, perform, modify, adapt,
   7           * transmit, broadcast, present, recite, release, license or otherwise exploit
   8           * any part of this publication in any form, by any means, without the prior
   9           * written permission of Insyde Software Corporation.
  10           *----------------------------------------------------------------*/
  11          
  12          #include <CORE_INCLUDE.H>
  13          #include <OEM_INCLUDE.H>
  14          
  15          const unsigned char code Rc_ROM_Tables[] =
  16          {       // 15" US,UK and JP
  17              // Scanner Table 1  - 16 x 8 Scan Table 
  18              //00   01    02    03     04    05     06    07     08    09    10    11     12    13    14    15
  19                  0x76,0xE3,0x61,0x00,0x34,0x33,0xE5,0x64,0x52,0x00,0xE4,0x00,0x8A,0x00,0xED,0x00, // 00  
  20                  0x0D,0xE2,0x58,0x00,0x2C,0xFB,0x5B,0xE6,0x54,0x88,0x66,0x00,0x00,0x77,0x00,0x00, // 01  
  21                  0x15,0x24,0x1D,0x00,0x2D,0x3C,0x43,0x44,0xF9,0x00,0x6A,0x00,0xF2,0x00,0x00,0x82, // 02  
  22                  0x0E,0xE1,0xE0,0x8C,0x2E,0x36,0x55,0xE7,0x4E,0x00,0xE8,0x91,0x00,0xF0,0xF4,0xF6, // 03  //LMLNANO002:chan
             -ge [3,11] from 0xF2 to 0x00, [3,13] from 0xF3 to 0x00, [3,15] from 0xF5 to 0xF6.
  23                  0x1C,0x23,0x1B,0x00,0x2B,0x3B,0x42,0x4B,0x4C,0x00,0x5D,0x00,0x00,0x00,0x8E,0x84, // 04  
  24                  0x16,0x26,0x1E,0x00,0x25,0x3D,0x3E,0x46,0x45,0x00,0xE9,0xEA,0xF3,0xEB,0x00,0xF7, // 05  //LMLNANO002:chan
             -ge [5,14] from 0xF7 to 0x00, [5,15] from 0xF6 to 0xF7.
  25                  0x1A,0xFA,0x22,0x8D,0x2A,0x3A,0x41,0x49,0x5D,0x89,0x5A,0x00,0x00,0x00,0xF0,0x00, // 06  
  26                  0x67,0x00,0x00,0x00,0xF8,0x31,0x51,0x13,0x4A,0x00,0xFD,0xEE,0x8B,0xEC,0xEF,0x00, // 07  
  27          //------------------------------------------------------------------------------------
  28          //       00    01    02    03    04    05    06    07    08    09    0A    0B    0C    0D    0E    0F
  29          //------------------------------------------------------------------------------------
  30          // 0- 110  115   45     x     35    36    117  132   41     x    116     x     60     x      83    x
  31          // 1-  16   114   30    x      21    22    28    118   27    44    15     x      x      90     x     x
  32          // 2-  17    19    18    x      20    23    24    25    26     x     14      x     125   x      x     127
  33          // 3-   1    113  112   58     6      7     13   119   12     x    120    126   x       x     80    81
  34          // 4-  31    33    32    x      34    37    38    39    40     x     29     x      x       x     59    129
  35          // 5-   2      4     3      x       5      8      9    10    11     x    121   122   124  123    x     85
  36          // 6-  46    48    47   64     49    52    53    54    42    57    43     x      x       x     76     x
  37          // 7- 131    x     x      x      50    51    56   133    55     x     61    84     62    89    79     x
  38          //------------------------------------------------------------------------------------
  39          //------------------------------------------------------------------------------------
  40          //      00    01    02    03    04    05    06    07    08    09    0A    0B    0C    0D    0E    0F
  41          //------------------------------------------------------------------------------------
  42          // 0- Esc   F4    \|     x      G      H     F6   132    '"      x     F5     x     LAlt   x     UpAr   x
  43          // 1- Tab   F3  Caps   x      T      Y     ]}    F7     [{   LShf  Back   x     x    Nums   x      x
  44          // 2-  Q     E    W      x       R     U      I      O      P      x ¢F14     x     Del    x       x    LW
             -in
  45          // 3- `~    F2   F1    LCtr   5%   6^   +=   F8     -_     x     F9    126   x      x     Play   Prev
  46          // 4-  A     D    S      x        F     J       K     L      ;:      x     \|     x      x      x      Fn 
             -   129
  47          // 5-  1!   3#  2@    x       4$    7&   8*    9(     0)      x    F10   F11   PrSc  F12    x    Next
  48          // 6-  Z     C    X     RCtr    V     M     ,<    .>     #~  RShf  Entr   x      x      x      Ins    x
  49          // 7- 131   x    x      x       B      N     56   133   /?     x    Spce  DnAr RAlt  RiAr  LeAr   x
  50          //------------------------------------------------------------------------------------
C51 COMPILER V8.12   OEM_SCANTABS                                                          07/28/2018 12:03:44 PAGE 2   

  51          };
  52          
  53          const unsigned char code Rc_ROM_Tables_15BR[] =
  54          {       // 15" Brazil
  55              // Scanner Table 1  - 16 x 8 Scan Table
  56              //00   01    02    03     04     05    06    07    08    09    10     11    12    13     14    15
  57                  0x76,0xE3,0x61,0x00,0x34,0x33,0xE5,0x64,0x52,0x00,0xE4,0x00,0x8A,0x00,0xED,0x00, // 00 
  58                  0x0D,0xE2,0x58,0x00,0x2C,0xFB,0x5B,0xE6,0x54,0x88,0x66,0x00,0x00,0x77,0x00,0x00, // 01  
  59                  0x15,0x24,0x1D,0x00,0x2D,0x3C,0x43,0x44,0xF9,0x00,0x6A,0x00,0xF2,0x00,0x00,0x82, // 02  
  60                  0x0E,0xE1,0xE0,0x8C,0x2E,0x36,0x55,0xE7,0x4E,0x00,0xE8,0x91,0x00,0xF0,0xF4,0xF6, // 03   //LMLNANO002:cha
             -nge [3,11] from 0xF2 to 0x00, [3,13] from 0xF3 to 0x00, [3,15] from 0xF5 to 0xF6.
  61                  0x1C,0x23,0x1B,0x00,0x2B,0x3B,0x42,0x4B,0x4C,0x00,0x5D,0x00,0x00,0x00,0x8E,0x84, // 04  
  62                  0x16,0x26,0x1E,0x00,0x25,0x3D,0x3E,0x46,0x45,0x00,0xE9,0xEA,0xF3,0xEB,0x00,0xF7, // 05  //LMLNANO002:chan
             -ge [5,14] from 0xF7 to 0x00, [5,15] from 0xF6 to 0xF7.  
  63                  0x1A,0xFA,0x22,0x51,0x2A,0x3A,0x41,0x49,0x5D,0x89,0x5A,0x00,0x00,0x00,0xF0,0x00, // 06 
  64                  0x67,0x00,0x00,0x00,0xF8,0x31,0x00,0x13,0x4A,0x00,0xFD,0xEE,0x8B,0xEC,0xEF,0x00, // 07
  65          //------------------------------------------------------------------------------------
  66          //        00    01    02    03    04    05    06    07    08    09    0A    0B    0C    0D    0E    0F
  67          //------------------------------------------------------------------------------------
  68          // 0-  110   115   45    x     35    36   117   132   41     x    116    x     60     x      83    x
  69          // 1-  16    114    30    x     21    22    28   118   27     44   15     x      x      90     x     x
  70          // 2-  17     19    18     x     20    23    24    25    26     x    14      x    125    x       x    127
  71          // 3-   1     113  112   58     6     7      13   119   12     x    120   126   x       x      80   81
  72          // 4-  31     33     32    x     34    37    38    39    40     x    29      x      x      x      59   129
  73          // 5-   2       4      3     x       5     8       9    10    11     x    121  122   124   123    x     85
  74          // 6-  46     48    47    56    49    52    53    54    42     57   43     x      x      x      76     x
  75          // 7- 131     x      x     x      50    51    x    133    55     x     61    84    62    89     79     x
  76          //------------------------------------------------------------------------------------
  77          //------------------------------------------------------------------------------------
  78          //       00    01    02    03    04    05    06    07    08    09    0A    0B    0C    0D    0E    0F
  79          //------------------------------------------------------------------------------------
  80          // 0- Esc    F4     \|    x      G     H      F6   132    '"     x      F5     x     LAlt   x     UpAr   x
  81          // 1- Tab   F3   Caps   x      T     Y      ]}    F7     [{   LShf  Back   x      x    Nums   x     x
  82          // 2-  Q     E      W     x      R     U       I     O      P      x  ¢F14     x     Del    x       x    L
             -Win
  83          // 3- `~    F2    F1   LCtr   5%   6^    +=   F8     -_    x      F9    126    x      x     Play  Prev
  84          // 4-  A     D      S      x      F     J       K     L       ;:     x      \|      x      x      x      F
             -n   129
  85          // 5-  1!   3#    2@    x     4$    7&    8*    9(     0)     x      F10  F11   PrSc  F12     x   Next
  86          // 6-  Z     C      X     56     V     M      ,<    .>     #~  RShf   Entr   x      x      x      Ins   x 
  87          // 7- 131   x      x      x      B     N      x    133    /?    x      Spce DnAr RAlt  RiAr   LeAr  x
  88          //------------------------------------------------------------------------------------
  89          };
  90          
  91          const unsigned char code EtKey_ROM_Tables[] =
  92          {       //16   17   18          // 19X8 Scan Table
  93                  0x6C,0x90,0x00,
  94                  0x6B,0x75,0x00,
  95                  0x7D,0x7B,0x00,  
  96                  0x74,0x79,0x00, 
  97                  0x69,0x73,0x00,
  98                  0x70,0x72,0x00,
  99                  0x7C,0x81,0x00,
 100                  0x7A,0x71,0x00,
 101          //------------------
 102          //     16    17    18
 103          //------------------
 104          // 0- 91    95    x
 105          // 1- 92    96    x
 106          // 2- 101  105   x
 107          // 3- 102  106   x
 108          // 4- 93    97    x
C51 COMPILER V8.12   OEM_SCANTABS                                                          07/28/2018 12:03:44 PAGE 3   

 109          // 5- 99    98    x
 110          // 6- 100  108   x
 111          // 7- 103  104   x
 112          //------------------
 113          //------------------
 114          //     16   17   18
 115          //------------------
 116          // 0- 7    /      x
 117          // 1- 4    8      x
 118          // 2- 9    -      x
 119          // 3- 6    +      x
 120          // 4- 1    5      x
 121          // 5- 0    2      x
 122          // 6- *   Enter  x
 123          // 7- 3    .       x
 124          //------------------
 125          };
 126          
 127          const unsigned char code Rc_ROM_Tables_14[] =
 128          {       // 14" US, UK and JP.
 129              // Scanner Table 1  - 16 x 8 Scan Table
 130              //00   01    02    03     04     05    06    07    08    09    10     11    12    13     14    15
 131                  0x76,0xE3,0x61,0x00,0x34,0x33,0xE5,0x64,0x52,0x00,0xE4,0x00,0x8A,0x00,0xED,0x00, // 00 
 132                  0x0D,0xE2,0x58,0x00,0x2C,0xFB,0x5B,0xE6,0x54,0x88,0x66,0x00,0x00,0x00,0x00,0x00, // 01  
 133                  0x15,0x24,0x1D,0x00,0x2D,0x3C,0x43,0x44,0xF9,0x00,0x6A,0x00,0x00,0x00,0x00,0x82, // 02   //LMLNANO002:cha
             -nge [2,,12] from 0xF2 to 0x00.  
 134                  0x0E,0xE1,0xE0,0x8C,0x2E,0x36,0x55,0xE7,0x4E,0x00,0xE8,0x91,0x00,0xF0,0x00,0x00, // 03   //LMLNANO002:cha
             -nge [3,11] from 0xF2 to 0x00,[3,13] from 0xF3 to 0x00.
 135                  0x1C,0x23,0x1B,0x00,0x2B,0x3B,0x42,0x4B,0x4C,0x00,0x5D,0x00,0x00,0x00,0x8E,0x84, // 04  
 136                  0x16,0x26,0x1E,0x00,0x25,0x3D,0x3E,0x46,0x45,0x00,0xE9,0xEA,0xF1,0xEB,0x00,0x00, // 05  //LMLNANO002:chan
             -ge [5,12] from 0xF3 to 0xF1.
 137                  0x1A,0xFA,0x22,0x8D,0x2A,0x3A,0x41,0x49,0x5D,0x89,0x5A,0x00,0x00,0x00,0xF2,0x00, // 06  //LMLNANO002:chan
             -ge [6,14] from 0xF0 to 0xF2.
 138                  0x67,0x00,0x00,0x00,0xF8,0x31,0x51,0x13,0x4A,0x00,0xFD,0xEE,0x8B,0xEC,0xEF,0x00, // 07   
 139          //------------------------------------------------------------------------------------
 140          //       00    01    02    03    04    05    06    07    08    09    0A    0B    0C    0D    0E    0F
 141          //------------------------------------------------------------------------------------
 142          // 0- 110  115    45    x     35    36   117   132   41     x    116    x     60     x     83    x
 143          // 1-  16   114    30    x     21    22    28   118   27     44    15    x      x      x      x     x
 144          // 2-  17   19     18     x     20    23    24    25    26     x     14     x     x      x      x    127
 145          // 3-   1   113   112   58     6      7     13   119   12     x    120   126   x      x      x    81
 146          // 4-  31   33     32     x     34    37    38    39    40     x     29     x     x      x      59   129
 147          // 5-   2    4       3      x      5      8      9     10    11     x    121   122  124  123   86    85
 148          // 6-  46   48     47    64    49   52     53    54    42    57    43     x     x      x      76     x
 149          // 7- 131   x      x      x     50    51    56    133   55     x    61     84   62     89    79     x
 150          //------------------------------------------------------------------------------------
 151          //------------------------------------------------------------------------------------
 152          //       00    01    02    03    04    05    06    07    08    09    0A    0B    0C    0D    0E    0F
 153          //------------------------------------------------------------------------------------
 154          // 0- Esc    F4    \|     x      G      H    F6    132    '"     x      F5     x     LAlt    x    UpAr  x
 155          // 1- Tab   F3  Caps   x       T      Y    ]}     F7     [{   LShf  Back   x      x      x      x      x
 156          // 2-  Q      E     W     x      R      U     I      O       P     x      14     x       x     x      x   
             -  LWin
 157          // 3- `~    F2    F1   LCtr   5%   6^   +=    F8     -_    x      F9    126    x      x     x      x
 158          // 4-  A      D     S     x       F      J     K      L       ;:     x      \|     x       x      x     Fn
             -    129
 159          // 5-  1!   3#   2@    x      4$    7&   8*    9(      0)     x     F10   F11   PrSc  F12   x      x
 160          // 6-  Z     C      X   RCtr    V      M    ,<    .>      #~  RShf  Entr   x       x     x     Del     x
 161          // 7- 131   x      x     x      B       N    56   133    /?    x     Spce  DnAr RAlt  RiAr  LeAr   x
 162          //------------------------------------------------------------------------------------
 163          };
 164          
C51 COMPILER V8.12   OEM_SCANTABS                                                          07/28/2018 12:03:44 PAGE 4   

 165          const unsigned char code Rc_ROM_Tables_14BR[] =
 166          {       // 14" Brazil
 167              // Scanner Table 1  - 16 x 8 Scan Table
 168              //00   01    02    03     04     05    06    07    08    09    10     11    12    13     14    15 
 169                  0x76,0xE3,0x61,0x00,0x34,0x33,0xE5,0x64,0x52,0x00,0xE4,0x00,0x8A,0x00,0xED,0x00, // 00  
 170                  0x0D,0xE2,0x58,0x00,0x2C,0xFB,0x5B,0xE6,0x54,0x88,0x66,0x00,0x00,0x00,0x00,0x00, // 01  
 171                  0x15,0x24,0x1D,0x00,0x2D,0x3C,0x43,0x44,0xF9,0x00,0x6A,0x00,0x00,0x00,0x00,0x82, // 02   //LMLNANO002:cha
             -nge [2,,12] from 0xF2 to 0x00. 
 172                  0x0E,0xE1,0xE0,0x8C,0x2E,0x36,0x55,0xE7,0x4E,0x00,0xE8,0x91,0x00,0xF0,0x00,0x00, // 03   //LMLNANO002:cha
             -nge [3,11] from 0xF2 to 0x00, [3,13] from 0xF3 to 0x00.   
 173                  0x1C,0x23,0x1B,0x00,0x2B,0x3B,0x42,0x4B,0x4C,0x00,0x5D,0x00,0x00,0x00,0x8E,0x84, // 04  
 174                  0x16,0x26,0x1E,0x00,0x25,0x3D,0x3E,0x46,0x45,0x00,0xE9,0xEA,0xF1,0xEB,0x00,0x00, // 05   //LMLNANO002:cha
             -nge [5,12] from 0xF3 to 0xF1. 
 175                  0x1A,0xFA,0x22,0x51,0x2A,0x3A,0x41,0x49,0x5D,0x89,0x5A,0x00,0x00,0x00,0xF2,0x00, // 06   //LMLNANO002:cha
             -nge [6,14] from 0xF0 to 0xF2.
 176                  0x67,0x00,0x00,0x00,0xF8,0x31,0x00,0x13,0x4A,0x00,0xFD,0xEE,0x8B,0xEC,0xEF,0x00, // 07 
 177          };
 178          
 179          const unsigned char code EtKey_ROM_Tables_1[] =
 180          {       //16   17   18          // 19X8 Scan Table
 181                  0x00,0x00,0x00,
 182                  0x00,0x00,0x00,
 183                  0x00,0x00,0x00,
 184                  0x00,0x00,0x00,
 185                  0x00,0x00,0x00,
 186                  0x00,0x00,0x00,
 187                  0x00,0x00,0x00,
 188                  0x00,0x00,0x00,
 189          };
 190          
 191          
 192          const unsigned char code KB_S3WakeUP_Tables[] =
 193          {
 194              // Scanner Table 1
 195                  //00   01   02   03   04   05   06   07   08   09   10   11   12   13   14   15
 196                  0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55, //
 197                  0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55, //
 198                  0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55, //
 199                  0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55, //
 200                  0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55, //
 201                  0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55, //
 202                  0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55, //
 203                  0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55  //
 204          };
 205          
 206          const unsigned char code EtKey_S3WakeUP_Tables[] =
 207          {       //16   17   18          // 19X8 Scan Table
 208                  0x55,0x55,0x55,
 209                  0x55,0x55,0x55,
 210                  0x55,0x55,0x55,
 211                  0x55,0x55,0x55,
 212                  0x55,0x55,0x55,
 213                  0x55,0x55,0x55,
 214                  0x55,0x55,0x55,
 215                  0x55,0x55,0x55,
 216          };
 217          
 218          //----------------------------------------------------------------------------
 219          // The function of hotkey Fn + F1
 220          //----------------------------------------------------------------------------
 221          void HotKey_Fn_F1(BYTE event)
 222          {
C51 COMPILER V8.12   OEM_SCANTABS                                                          07/28/2018 12:03:44 PAGE 5   

 223   1              //MUTE
 224   1              if(IS_MASK_SET(SYS_MISC1,ACPI_OS))//: REMOVE MBID_READY judge
 225   1              {
 226   2                      if ( event == MAKE_EVENT )
 227   2                      {
 228   3                          Buffer_Key(0xE0);   /* Buffer E0h prefix */
 229   3                          Buffer_Key(0x23);   /* Buffer base code */
 230   3                      }
 231   2                      else
 232   2                      {
 233   3                              if ( event == BREAK_EVENT )
 234   3                              {
 235   4                              Buffer_Key(0xE0);       /* Buffer E0h prefix */
 236   4                              Buffer_Key(0xF0);       /* Buffer base code */
 237   4                              Buffer_Key(0x23);       /* Buffer base code */
 238   4                              }
 239   3                      }
 240   2              }
 241   1      }
 242          
 243          //----------------------------------------------------------------------------
 244          // The function of hotkey Fn + F2
 245          //----------------------------------------------------------------------------
 246          void HotKey_Fn_F2(BYTE event)
 247          {
 248   1              if(IS_MASK_SET(SYS_MISC1,ACPI_OS))// : REMOVE MBID_READY judge
 249   1              {
 250   2                      if ((event == MAKE_EVENT)||(event == REPEAT_EVENT))
 251   2                      {
 252   3                              Buffer_Key(0xE0);       /* Buffer E0h prefix */
 253   3                              Buffer_Key(0x21);       /* Buffer base code */
 254   3                      }
 255   2                      else
 256   2                      {
 257   3                              if (event == BREAK_EVENT)
 258   3                              {
 259   4                                      Buffer_Key(0xE0);       /* Buffer E0h prefix */
 260   4                                      Buffer_Key(0xF0);       /* Buffer E0h prefix */
 261   4                                      Buffer_Key(0x21);       /* Buffer base code */
 262   4                              } 
 263   3                      }
 264   2               }
 265   1      }
 266          
 267          //----------------------------------------------------------------------------
 268          // The function of hotkey Fn + F3
 269          //----------------------------------------------------------------------------
 270          void HotKey_Fn_F3(BYTE event)
 271          {
 272   1              if(IS_MASK_SET(SYS_MISC1,ACPI_OS))//// : REMOVE MBID_READY judge
 273   1              {
 274   2                      if ((event == MAKE_EVENT)||(event == REPEAT_EVENT))
 275   2                      {
 276   3                              Buffer_Key(0xE0);       /* Buffer E0h prefix */
 277   3                              Buffer_Key(0x32);       /* Buffer base code */
 278   3                      }
 279   2                      else
 280   2                      {
 281   3                              if (event == BREAK_EVENT)
 282   3                              {
 283   4                                      Buffer_Key(0xE0);       /* Buffer E0h prefix */
 284   4                                      Buffer_Key(0xF0);       /* Buffer E0h prefix */
C51 COMPILER V8.12   OEM_SCANTABS                                                          07/28/2018 12:03:44 PAGE 6   

 285   4                                      Buffer_Key(0x32);       /* Buffer base code */  
 286   4                              }
 287   3                      } 
 288   2              }  
 289   1      }
 290          
 291          //----------------------------------------------------------------------------
 292          // The function of hotkey Fn + F4
 293          //----------------------------------------------------------------------------
 294          void HotKey_Fn_F4(BYTE event)
 295          {
 296   1              //MEILING029:S+ add send QEvent to APP for mic function.
 297   1              if(event == MAKE_EVENT)
 298   1          {
 299   2                      if ( IS_MASK_SET(SYS_MISC1, ACPI_OS) )
 300   2                      {
 301   3                      uVPCeventSource = 0;
 302   3                          uVPCeventSource2 = App_Control_Mic;
 303   3                              ECSMI_SCIEvent(SDV_VPC_notify);     
 304   3                      }
 305   2          }
 306   1              //MEILING029:E+.
 307   1              
 308   1              //MEILING029:S- remove send scan code to driver for mic function.
 309   1              //MEILING018:S+ add Mic enable/disable function.
 310   1              /*if(IS_MASK_SET(SYS_MISC1,ACPI_OS))
 311   1              {
 312   1                      
 313   1                      if (event == MAKE_EVENT)
 314   1                      {       
 315   1                              Buffer_Key(0xE0);       
 316   1                              Buffer_Key(0x53);
 317   1                      }
 318   1              }*/
 319   1              //MEILING018:E+.
 320   1              //MEILING029:E-.
 321   1              
 322   1              //MEILING006: S- remove close current window function.
 323   1              /*if(IS_MASK_SET(SYS_MISC1,ACPI_OS))
 324   1               {
 325   1                      if (event == MAKE_EVENT)
 326   1                      {       
 327   1                              Buffer_Key(0x11);       // ALT  
 328   1                              Buffer_Key(0x0C);       // F4 
 329   1                       }
 330   1                      else
 331   1                      {
 332   1                              if (event == BREAK_EVENT)
 333   1                              {
 334   1                                      Buffer_Key(0xF0);       
 335   1                                      Buffer_Key(0x11);       
 336   1                                      Buffer_Key(0xF0);       
 337   1                                      Buffer_Key(0x0C);       
 338   1                              }
 339   1                      }
 340   1              }*/
 341   1              //MEILING006: E-.
 342   1      }
 343          
 344          //----------------------------------------------------------------------------
 345          // The function of hotkey Fn + F5
 346          //----------------------------------------------------------------------------
C51 COMPILER V8.12   OEM_SCANTABS                                                          07/28/2018 12:03:44 PAGE 7   

 347          void HotKey_Fn_F5(BYTE event)
 348          {
 349   1              if(IS_MASK_SET(SYS_MISC1,ACPI_OS))
 350   1              {
 351   2                      if ((event == MAKE_EVENT)||(event == REPEAT_EVENT))
 352   2                      {
 353   3                              Buffer_Key(0x03);
 354   3                      }
 355   2                      else
 356   2                      {       
 357   3                              if((event == BREAK_EVENT))
 358   3                              {
 359   4                                      Buffer_Key(0xF0);
 360   4                                      Buffer_Key(0x03);
 361   4                              }
 362   3                      }
 363   2              }  
 364   1      }
 365          
 366          //----------------------------------------------------------------------------
 367          // The function of hotkey Fn + F6
 368          //----------------------------------------------------------------------------
 369          void HotKey_Fn_F6(BYTE event)
 370          {
 371   1              if ( (IS_MASK_SET(SYS_MISC1, ACPI_OS)) && (TouchPadCount == 0))
 372   1              {
 373   2          /*  if(event == MAKE_EVENT) //ANGELAG008: remove start
 374   2              {
 375   2                              if(uReserve07.fbit.nTPDriverIn ==0)
 376   2                              {
 377   2                                      if (IS_MASK_SET(pDevStus, pENABLE_TP))
 378   2                                      {                                       
 379   2                                              ECSend2Port(2, 0xF5);
 380   2                          TPCLK_OUTPUT;
 381   2                          TPCLK_LOW();
 382   2                          TouchPadCount = 3;
 383   2                                              CLR_MASK(pDevStus, pENABLE_TP);
 384   2                                      }
 385   2                                      else
 386   2                                      {
 387   2      
 388   2                          TPCLK_OUTPUT;
 389   2                          TPCLK_HI();
 390   2                          TPCLK_ALT;
 391   2                                              ECSend2Port(2, 0xF4);
 392   2                                              TouchPadCount = 3;
 393   2                                              SET_MASK(pDevStus, pENABLE_TP);
 394   2                                      }
 395   2                              }
 396   2                              else
 397   2                              {
 398   2                                      e0_prefix_code(0x51,event);
 399   2                                      CPL_MASK(pDevStus, pENABLE_TP);
 400   2                                      SET_MASK(StatusKeeper, b5TP_Event);
 401   2                              }
 402   2      
 403   2                              if (uReserve07.fbit.nVPCDriverIn==1)    // Check VPC driver.
 404   2                              {
 405   2                                      uVPCeventSource = TouchPad;
 406   2                                      uVPCeventSource2 = 0;
 407   2                                      ECSMI_SCIEvent(SDV_VPC_notify);
 408   2                              }
C51 COMPILER V8.12   OEM_SCANTABS                                                          07/28/2018 12:03:44 PAGE 8   

 409   2                      }
 410   2                      else if(event == BREAK_EVENT && uReserve07.fbit.nTPDriverIn==1)
 411   2                      {
 412   2                              e0_prefix_code(0x51,event);
 413   2                      }*/ //ANGELAG008: remove end
 414   2      //ANGELAG008: add start
 415   2                      if(event == MAKE_EVENT)
 416   2                      {
 417   3                              if(IS_MASK_SET(pDevStatus1,b5TPDRIVER_STATUS)) 
 418   3                              {
 419   4                                        if(IS_MASK_SET(pDevStatus1,b7DisableTP)) 
 420   4                                        {
 421   5                                              CLEAR_MASK(pDevStatus1,b1F6DisableTP);
 422   5                                              ECSMI_SCIEvent(0x3E);
 423   5                                              SET_MASK(pDevStatus3,b6EnDisTPSend); 
 424   5                                              if(IS_MASK_SET(pDevStatus1,b7DisableTP))
 425   5                                              {
 426   6                                                 SET_MASK(pDevStatus3,b7TPStateFormer);
 427   6                                              }
 428   5                                              else
 429   5                                              {
 430   6                                                 CLEAR_MASK(pDevStatus3,b7TPStateFormer);
 431   6                                              }                                               
 432   5                                       }
 433   4                                       else  //Disable TP
 434   4                                       {
 435   5                                               SET_MASK(pDevStatus1,b1F6DisableTP);
 436   5                                               ECSMI_SCIEvent(0x3F);
 437   5                                               SET_MASK(pDevStatus3,b6EnDisTPSend); 
 438   5                                               if(IS_MASK_SET(pDevStatus1,b7DisableTP))
 439   5                                               {
 440   6                                                      SET_MASK(pDevStatus3,b7TPStateFormer);
 441   6                                               }
 442   5                                               else
 443   5                                               {
 444   6                                                      CLEAR_MASK(pDevStatus3,b7TPStateFormer);
 445   6                                               }                      
 446   5                                       }      
 447   4                              }
 448   3      
 449   3                      }
 450   2      //ANGELAG008: add end
 451   2          }
 452   1      }
 453          
 454          //----------------------------------------------------------------------------
 455          // The function of hotkey Fn + F7
 456          //----------------------------------------------------------------------------
 457          void HotKey_Fn_F7(BYTE event)
 458          {
 459   1              //MEILING018:S+ add airplane fuciton.
 460   1              //MEILING006: S-remove airplane fuciton.
 461   1          if(event == MAKE_EVENT)
 462   1          {
 463   2                      if ( IS_MASK_SET(SYS_MISC1, ACPI_OS) )
 464   2                      {
 465   3                      uVPCeventSource = 0;
 466   3                          uVPCeventSource2 = App_Control_RF;
 467   3                              ECSMI_SCIEvent(SDV_VPC_notify);     
 468   3                              //ECSMI_SCIEvent(F7_Airplan_notify); 
 469   3                      }
 470   2          }
C51 COMPILER V8.12   OEM_SCANTABS                                                          07/28/2018 12:03:44 PAGE 9   

 471   1          //MEILING006: E-.
 472   1          //MEILING018:E+.
 473   1      }
 474          
 475          //----------------------------------------------------------------------------
 476          // The function of hotkey Fn + F8
 477          //----------------------------------------------------------------------------
 478          void HotKey_Fn_F8(BYTE event)
 479          {
 480   1              //MEILING029:S+ add camera enable/disable function.
 481   1              if(event == MAKE_EVENT)
 482   1          {
 483   2                      if ( IS_MASK_SET(SYS_MISC1, ACPI_OS) )
 484   2                      {
 485   3                      nCameraPwrCHG;
 486   3                          uVPCeventSource = Camera;
 487   3                          uVPCeventSource2 = 0;
 488   3                              ECSMI_SCIEvent(SDV_VPC_notify);
 489   3                              CPL_MASK(pDevStus, pCamera);   
 490   3                      }
 491   2          }
 492   1              //MEILING029:E+.
 493   1              
 494   1              //MEILING018:S- remove airplane fuciton.
 495   1              //MEILING006: S+ add airplane fuciton.
 496   1          /*if(event == MAKE_EVENT)
 497   1              {
 498   1                      if ( IS_MASK_SET(SYS_MISC1, ACPI_OS) )
 499   1                      {
 500   1                      uVPCeventSource = 0;
 501   1                          uVPCeventSource2 = App_Control_RF;
 502   1                              ECSMI_SCIEvent(SDV_VPC_notify);     
 503   1                              //ECSMI_SCIEvent(F7_Airplan_notify); 
 504   1                      }
 505   1              }*/
 506   1          //MEILING006: E+.
 507   1          //MEILING018:E-.
 508   1      
 509   1              //MEILING006: S- remove view app function.
 510   1              /*if(IS_MASK_SET(SYS_MISC1,ACPI_OS))
 511   1              {
 512   1                      if (event == MAKE_EVENT)
 513   1                      {
 514   1                              Buffer_Key(0x14);        
 515   1                      Buffer_Key(0x11);        
 516   1                      Buffer_Key(0x0D);       
 517   1                      }
 518   1                      else
 519   1                      {
 520   1                              if (event == BREAK_EVENT)
 521   1                              {
 522   1                                      Buffer_Key(0xF0);
 523   1                                      Buffer_Key(0x14);
 524   1                                      Buffer_Key(0xF0);
 525   1                                      Buffer_Key(0x11);
 526   1                                      Buffer_Key(0xF0);
 527   1                                      Buffer_Key(0x0D);
 528   1                              }
 529   1                      }
 530   1               }*/
 531   1               //MEILING006: E-.
 532   1      }
C51 COMPILER V8.12   OEM_SCANTABS                                                          07/28/2018 12:03:44 PAGE 10  

 533          
 534          //----------------------------------------------------------------------------
 535          // The function of hotkey Fn + F9
 536          //----------------------------------------------------------------------------
 537          void HotKey_Fn_F9(BYTE event)
 538          {
 539   1              //MEILING018:S+ add Lock Screen function.
 540   1              if(IS_MASK_SET(SYS_MISC1,ACPI_OS))
 541   1          {
 542   2                      if ((event == MAKE_EVENT)||(event == REPEAT_EVENT))
 543   2                      {
 544   3                              Buffer_Key(0xE0); //"WIN" key
 545   3                              Buffer_Key(0x1F); 
 546   3                              Buffer_Key(0x4B); //"L" key
 547   3                      }
 548   2                      else
 549   2                      {
 550   3                              if (event == BREAK_EVENT)
 551   3                              {
 552   4                                      Buffer_Key(0xF0);
 553   4                                      Buffer_Key(0x4B);
 554   4                                      Buffer_Key(0xE0);
 555   4                                      Buffer_Key(0xF0);
 556   4                                      Buffer_Key(0x1F);
 557   4                              }
 558   3                      }
 559   2              }  
 560   1              //MEILING018:E+.
 561   1      
 562   1              //MEILING018:S- remove projector function.
 563   1              //MEILING006: S+ add change display mode function.(Fixed The display mode auto change to the nearly mode 
             -when change the mode via lenovo hotkey)
 564   1              /*if(IS_MASK_CLEAR(ACPI_HOTKEY, HotkeyDisable))
 565   1              {
 566   1                      if(event == MAKE_EVENT)
 567   1                      {
 568   1                              if ( IS_MASK_SET(SYS_MISC1, ACPI_OS) )
 569   1                              {
 570   1                                      if( IS_MASK_CLEAR(SysStatus, FnF3WinKeyDn) )
 571   1                                      {
 572   1                                              e0_prefix_code(0x1F,event); // Win Key.
 573   1                                              SET_MASK(SysStatus, FnF3WinKeyDn);
 574   1                                      }
 575   1                                      simple_code(0x4D,event);                // P Key.
 576   1                              }
 577   1                      }
 578   1              
 579   1                      if (event == BREAK_EVENT)
 580   1                      {
 581   1                              if ( IS_MASK_SET(SYS_MISC1, ACPI_OS) )
 582   1                              {
 583   1                                      simple_code(0x4D,event);        // P Key.
 584   1                                      SET_MASK(SysStatus, FnF3PKeyUp);
 585   1                              }
 586   1                      }
 587   1              }
 588   1              else
 589   1              {
 590   1                      if(IS_MASK_SET(SYS_MISC1,ACPI_OS))
 591   1              {
 592   1                              if ((event == MAKE_EVENT)||(event == REPEAT_EVENT))
 593   1                              {
C51 COMPILER V8.12   OEM_SCANTABS                                                          07/28/2018 12:03:44 PAGE 11  

 594   1                                      Buffer_Key(0xE0);
 595   1                                      Buffer_Key(0x1F);
 596   1                                      Buffer_Key(0x4D);
 597   1                              }
 598   1                              else
 599   1                              {
 600   1                                      if (event == BREAK_EVENT)
 601   1                                      {
 602   1                                              Buffer_Key(0xF0);
 603   1                                              Buffer_Key(0x4D);
 604   1                                              Buffer_Key(0xE0);
 605   1                                              Buffer_Key(0xF0);
 606   1                                              Buffer_Key(0x1F);
 607   1                                      }
 608   1                              }
 609   1                      }
 610   1              }*/
 611   1              //MEILING006: E+.
 612   1              //MEILING018:E-.
 613   1              
 614   1              //MEILING006: S- remove turn on/off backlight function.
 615   1              /*if(event == MAKE_EVENT)
 616   1              {
 617   1                      if ( IS_MASK_CLEAR(pProject0, b0DispToggleEn) )
 618   1                      {
 619   1                              SET_MASK(pProject0,b0DispToggleEn);
 620   1                              SET_MASK(cCmd, b3BkOff);        // Turn off backlight.
 621   1                      }
 622   1                      else
 623   1                      {
 624   1                              CLR_MASK(cCmd, b3BkOff);        // Turn on backlight.
 625   1                              uVPCeventSource = Inverter;
 626   1                      uVPCeventSource2 = 0;
 627   1                              ECSMI_SCIEvent(SDV_VPC_notify);
 628   1                      }
 629   1              }*/
 630   1          //MEILING006: E-.
 631   1      }
 632          
 633          //----------------------------------------------------------------------------
 634          // The function of hotkey Fn + F10
 635          //----------------------------------------------------------------------------
 636          void HotKey_Fn_F10(BYTE event)
 637          {
 638   1              //MEILING018:S+ add projector function.(Fixed The display mode auto change to the nearly mode when change
             - the mode via lenovo hotkey)
 639   1              if(IS_MASK_SET(ACPI_HOTKEY, HotkeyDisable))
 640   1              {
 641   2                      if(event == MAKE_EVENT)
 642   2                      {
 643   3                              if ( IS_MASK_SET(SYS_MISC1, ACPI_OS) )
 644   3                              {
 645   4                                      if( IS_MASK_CLEAR(SysStatus, FnF3WinKeyDn) )
 646   4                                      {
 647   5                                              e0_prefix_code(0x1F,event); // Win Key.
 648   5                                              SET_MASK(SysStatus, FnF3WinKeyDn);
 649   5                                      }
 650   4                                      simple_code(0x4D,event);                // P Key.
 651   4                              }
 652   3                      }
 653   2              
 654   2                      if (event == BREAK_EVENT)
C51 COMPILER V8.12   OEM_SCANTABS                                                          07/28/2018 12:03:44 PAGE 12  

 655   2                      {
 656   3                              if ( IS_MASK_SET(SYS_MISC1, ACPI_OS) )
 657   3                              {
 658   4                                      simple_code(0x4D,event);        // P Key.
 659   4                                      SET_MASK(SysStatus, FnF3PKeyUp);
 660   4                              }
 661   3                      }
 662   2              }
 663   1              else
 664   1              {
 665   2                      if(IS_MASK_SET(SYS_MISC1,ACPI_OS))
 666   2              {
 667   3                              if ((event == MAKE_EVENT)||(event == REPEAT_EVENT))
 668   3                              {
 669   4                                      Buffer_Key(0xE0);
 670   4                                      Buffer_Key(0x1F);
 671   4                                      Buffer_Key(0x4D);
 672   4                              }
 673   3                              else
 674   3                              {
 675   4                                      if (event == BREAK_EVENT)
 676   4                                      {
 677   5                                              Buffer_Key(0xF0);
 678   5                                              Buffer_Key(0x4D);
 679   5                                              Buffer_Key(0xE0);
 680   5                                              Buffer_Key(0xF0);
 681   5                                              Buffer_Key(0x1F);
 682   5                                      }
 683   4                              }
 684   3                      }
 685   2              }
 686   1              //MEILING018:E+.
 687   1              
 688   1              //MEILING006: S- remove change display mode function.
 689   1              /*if(IS_MASK_SET(SYS_MISC1,ACPI_OS))
 690   1              {
 691   1                      if ((event == MAKE_EVENT)||(event == REPEAT_EVENT))
 692   1                      {
 693   1                              Buffer_Key(0xE0);
 694   1                              Buffer_Key(0x1F);
 695   1                              Buffer_Key(0x4D);
 696   1                      }
 697   1                      else
 698   1                      {
 699   1                              if (event == BREAK_EVENT)
 700   1                              {
 701   1                                      Buffer_Key(0xF0);
 702   1                                      Buffer_Key(0x4D);
 703   1                                      Buffer_Key(0xE0);
 704   1                                      Buffer_Key(0xF0);
 705   1                                      Buffer_Key(0x1F);
 706   1                              }
 707   1                      }
 708   1              }*/
 709   1              //MEILING006: E-.
 710   1      }
 711          
 712          //----------------------------------------------------------------------------
 713          // The function of hotkey Fn + F11
 714          //----------------------------------------------------------------------------
 715          void HotKey_Fn_F11(BYTE event)
 716          {
C51 COMPILER V8.12   OEM_SCANTABS                                                          07/28/2018 12:03:44 PAGE 13  

 717   1          if( event != BREAK_EVENT )
 718   1          {
 719   2              if( cBrightDnDelayCnt == 0 )
 720   2              {
 721   3                      cBrightDnDelayCnt = Timer_5;
 722   3                      uVPCeventSource = VPCeventBrightness;
 723   3                      uVPCeventSource2 = 0;
 724   3                  // Support for Windows 7 brightness control.
 725   3                      if( (SYS_STATUS & 0x07) != 0 )          // Check DOS mode.
 726   3                      { 
 727   4                              if( (SYS_STATUS & 0x07) == 0x03 )       
 728   4                      {
 729   5                              if( nBrightValue != 0 )
 730   5                                      {
 731   6                                              nBrightValue--;
 732   6                                              cRecoveryBrightValue = nBrightValue;
 733   6                                      }
 734   5                          if (uReserve07.fbit.nVPCDriverIn==1)        // Check VPC driver.
 735   5                          { 
 736   6                                          ECQEvent(SDV_VPC_notify);
 737   6                              ECQEvent(LCD_BRIG_DEC_EVENT); 
 738   6                          }
 739   5                      }
 740   4                      else
 741   4                      {
 742   5                                      ECQEvent(LCD_BRIG_DEC_EVENT); 
 743   5                      }
 744   4                  }   // 0x11 inform bios.
 745   3                  //Support for Windows 7 brightness control.
 746   3                      else
 747   3                      {
 748   4                              if( nBrightValue != 0 )
 749   4                              {
 750   5                                      nBrightValue--;
 751   5                                      cRecoveryBrightValue = nBrightValue;
 752   5                              }
 753   4                      }
 754   3              }
 755   2              else
 756   2              { 
 757   3                      cBrightDnDelayCnt--; 
 758   3                      }
 759   2          }
 760   1          else if( event == BREAK_EVENT )
 761   1          { 
 762   2              cBrightDnDelayCnt = 0; 
 763   2              }
 764   1      
 765   1      }
 766          
 767          //----------------------------------------------------------------------------
 768          // The function of hotkey Fn + F12                      [ Win + M ->  Win + Q ->  ESC ]
 769          //----------------------------------------------------------------------------
 770          void HotKey_Fn_F12(BYTE event)
 771          {
 772   1              if( event != BREAK_EVENT )
 773   1          {
 774   2              if( cBrightUpDelayCnt == 0 )
 775   2              {
 776   3                  cBrightUpDelayCnt = Timer_5;
 777   3                      uVPCeventSource = VPCeventBrightness;
 778   3                  uVPCeventSource2 = 0;
C51 COMPILER V8.12   OEM_SCANTABS                                                          07/28/2018 12:03:44 PAGE 14  

 779   3                  //G80:+S Support for Windows 7 brightness control.
 780   3                      if( (SYS_STATUS & 0x07) != 0 )          // Check DOS mode.
 781   3                      { 
 782   4                              if( (SYS_STATUS & 0x07) == 0x03 )       
 783   4                      {
 784   5                              if( nBrightValue < (BRIGHT_MAX_STEP - 1) )
 785   5                                      {
 786   6                                              nBrightValue++;
 787   6                                              cRecoveryBrightValue = nBrightValue;
 788   6                                      }
 789   5                          if (uReserve07.fbit.nVPCDriverIn==1)        // Check VPC driver.
 790   5                          { 
 791   6                                          ECQEvent(SDV_VPC_notify);
 792   6                              ECQEvent(LCD_BRIG_INC_EVENT); 
 793   6                          }
 794   5                      }
 795   4                      else
 796   4                      {
 797   5                                      ECQEvent(LCD_BRIG_INC_EVENT); 
 798   5                      }
 799   4                  }   // 0x11 inform bios.
 800   3                  //Support for Windows 7 brightness control.
 801   3                  else
 802   3                      {
 803   4                              if( nBrightValue < (BRIGHT_MAX_STEP - 1) )
 804   4                              {
 805   5                                      nBrightValue++;
 806   5                                      cRecoveryBrightValue = nBrightValue;
 807   5                              }
 808   4                      }
 809   3              }
 810   2              else    
 811   2              { 
 812   3                      cBrightUpDelayCnt--;      //Modify the Windows 7 brightness control caused by mistake.
 813   3              }
 814   2              }
 815   1              else if( event == BREAK_EVENT )
 816   1              {
 817   2                      cBrightUpDelayCnt = 0;
 818   2          }
 819   1      }
 820          
 821          //----------------------------------------------------------------------------
 822          // The function of hotkey Fn +Plus
 823          //----------------------------------------------------------------------------
 824          void HotKey_Fn_Plus(BYTE event)
 825          {
 826   1          if(event == MAKE_EVENT)
 827   1          {
 828   2                      if ( IS_MASK_SET(SYS_MISC1, ACPI_OS) )
 829   2                      {    
 830   3                              // if(IS_MASK_SET(EM9_NEWFUN, b7_ShiftPress))  
 831   3                  {      
 832   4                          SET_MASK(EM9_NEWFUN, b0_FnPlus);
 833   4                              uVPCeventSource = General;
 834   4                              uVPCeventSource2 = 0;
 835   4                                      ECSMI_SCIEvent(SDV_VPC_notify);
 836   4                  }
 837   3                      }
 838   2          }
 839   1      }
 840          //----------------------------------------------------------------------------
C51 COMPILER V8.12   OEM_SCANTABS                                                          07/28/2018 12:03:44 PAGE 15  

 841          // The function of hotkey Fn +Plus
 842          //----------------------------------------------------------------------------
 843          void HotKey_Fn_Minus(BYTE event)
 844          {
 845   1          if(event == MAKE_EVENT)
 846   1          {
 847   2                      if ( IS_MASK_SET(SYS_MISC1, ACPI_OS) )
 848   2                      {
 849   3                              // if(IS_MASK_SET(EM9_NEWFUN, b7_ShiftPress))  
 850   3                  {      
 851   4                              SET_MASK(EM9_NEWFUN, b1_FnMinus);
 852   4                              uVPCeventSource = General;
 853   4                              uVPCeventSource2 = 0;
 854   4                                      ECSMI_SCIEvent(SDV_VPC_notify);
 855   4                  }
 856   3              }
 857   2          }
 858   1      }
 859          
 860          //----------------------------------------------------------------------------
 861          // The function of hotkey Fn + ESC
 862          //----------------------------------------------------------------------------
 863          void HotKey_Fn_ESC(BYTE event)
 864          {
 865   1              #if HotKey_WebCam
                  if(event == MAKE_EVENT)
                  {
                              if ( IS_MASK_SET(SYS_MISC1, ACPI_OS) )
                              {
                              nCameraPwrCHG;
                                  uVPCeventSource = VPCeventCamera;
                                  uVPCeventSource2 = 0;
                                      ECSMI_SCIEvent(SDV_VPC_notify);
                                      CPL_MASK(pDevStus, pCamera);
                              }
                  }
                      #endif  // HotKey_WebCam
 878   1      }
 879          
 880          //----------------------------------------------------------------------------
 881          // The function of hotkey Fn + up arrow
 882          //----------------------------------------------------------------------------
 883          void HotKey_Fn_UP(BYTE event)
 884          {
 885   1          //if((SYS_STATUS & 0x07) == 0x02)   // linpus
 886   1          //{
 887   1          //    e0_prefix_code(0x7F,event);   // ScanCode 0x54.
 888   1          //}
 889   1          //else
 890   1          //{
 891   1              /* 
 892   1              if( event != BREAK_EVENT )
 893   1              {
 894   1                      if( cBrightUpDelayCnt == 0 )
 895   1                  {
 896   1                              cBrightUpDelayCnt = Timer_5;
 897   1                              uVPCeventSource = VPCeventBrightness;
 898   1                              uVPCeventSource2 = 0;
 899   1                              if( (SYS_STATUS & 0x07) != 0 )          // Check DOS mode.
 900   1                              { ECQEvent(LCD_BRIG_INC_EVENT); }       // 0x12 inform bios.
 901   1                              else
 902   1                              {
C51 COMPILER V8.12   OEM_SCANTABS                                                          07/28/2018 12:03:44 PAGE 16  

 903   1                                      if( nBrightValue < (BRIGHT_MAX_STEP - 1) )
 904   1                                      {
 905   1                                              nBrightValue++;
 906   1                                              cRecoveryBrightValue = nBrightValue;
 907   1                                      }
 908   1                                      //if (uReserve07.fbit.nVPCDriverIn==1)  // Check VPC driver.
 909   1                                      //{ ECQEvent(SDV_VPC_notify); }                 // 0x44 for Levono used.
 910   1                              }
 911   1                      }
 912   1                  else
 913   1                  { cBrightUpDelayCnt--; }
 914   1              }
 915   1              else if( event == BREAK_EVENT )
 916   1              {
 917   1                  cBrightUpDelayCnt = 0;
 918   1              }
 919   1              */        
 920   1          //}
 921   1      }
 922          
 923          //----------------------------------------------------------------------------
 924          // The function of hotkey Fn + down arrow
 925          //----------------------------------------------------------------------------
 926          void HotKey_Fn_DOWN(BYTE event)
 927          {
 928   1          //if((SYS_STATUS & 0x07) == 0x02)   // linpus
 929   1          //{
 930   1          //    e0_prefix_code(0x73,event);   // ScanCode 0x4C.
 931   1          //}
 932   1          //else
 933   1          //{
 934   1              /*
 935   1             if( event != BREAK_EVENT )
 936   1              {
 937   1                      if( cBrightDnDelayCnt == 0 )
 938   1                  {
 939   1                      cBrightDnDelayCnt = Timer_5;
 940   1                              uVPCeventSource = VPCeventBrightness;
 941   1                          uVPCeventSource2 = 0;
 942   1                              if( (SYS_STATUS & 0x07) != 0 )          // Check DOS mode.
 943   1                              { ECQEvent(LCD_BRIG_DEC_EVENT); }       // 0x11 inform bios.
 944   1                              else
 945   1                              {
 946   1                                      if( nBrightValue != 0 )
 947   1                                      {
 948   1                                              nBrightValue--;
 949   1                                              cRecoveryBrightValue = nBrightValue;
 950   1                                      }
 951   1                                      //if (uReserve07.fbit.nVPCDriverIn==1)  // Check VPC driver.
 952   1                              //{ ECQEvent(SDV_VPC_notify); } // 0x44 for Levono used.
 953   1                              }
 954   1                      }
 955   1                      else
 956   1                      { cBrightDnDelayCnt--; }
 957   1              }
 958   1              else if( event == BREAK_EVENT )
 959   1              { cBrightDnDelayCnt = 0; }
 960   1              //}
 961   1              */   
 962   1      }
 963          
 964          //----------------------------------------------------------------------------
C51 COMPILER V8.12   OEM_SCANTABS                                                          07/28/2018 12:03:44 PAGE 17  

 965          // The function of hotkey Fn + left arrow
 966          //----------------------------------------------------------------------------
 967          void HotKey_Fn_LEFT(BYTE event)
 968          {
 969   1          if(event == MAKE_EVENT)
 970   1          {
 971   2                      if ( IS_MASK_SET(SYS_MISC1, ACPI_OS) )
 972   2                      {       
 973   3                      SET_MASK(EM9_NEWFUN, b0_FnPlus);
 974   3                          uVPCeventSource = General;
 975   3                          uVPCeventSource2 = 0;
 976   3                              ECSMI_SCIEvent(SDV_VPC_notify);
 977   3                      }
 978   2          }  
 979   1      }
 980          
 981          //----------------------------------------------------------------------------
 982          // The function of hotkey Fn + right arrow
 983          //----------------------------------------------------------------------------
 984          void HotKey_Fn_RIGHT(BYTE event)
 985          {
 986   1          if(event == MAKE_EVENT)
 987   1          {
 988   2                      if ( IS_MASK_SET(SYS_MISC1, ACPI_OS) )
 989   2                      {  
 990   3                      SET_MASK(EM9_NEWFUN, b1_FnMinus);
 991   3                          uVPCeventSource = General;
 992   3                          uVPCeventSource2 = 0;
 993   3                              ECSMI_SCIEvent(SDV_VPC_notify);
 994   3              }
 995   2          }
 996   1      }
 997          
 998          //----------------------------------------------------------------------------
 999          // The function of hotkey Fn + Space
1000          //---------------------------------------------------------------------------
1001          
1002          //ELMERZH001:S+ add PWM control Keyboard backlight,transplant code from 720s.  
1003          void HotKey_Fn_Space(BYTE event)
1004          {
1005   1      /*
1006   1              if (event == MAKE_EVENT)
1007   1              {
1008   1                      if(0x00==LED_KB_PWM_Step)   
1009   1              {
1010   1                  LED_KB_PWM_Step=LED_KB_PWM_Step+2;   
1011   1              }     
1012   1              else
1013   1              {
1014   1                  LED_KB_PWM_Step++;
1015   1              }  
1016   1                      CLR_MASK(EMStatusBit, b2KBLEDChk);
1017   1                      CLR_MASK(EMStatusBit, b0SetKBLEDON);
1018   1                      UpdateLEDBL_delay = 6;                  // Delay 3 sec for Update LED Back Light.
1019   1              }
1020   1      */
1021   1      
1022   1              //72JERRY022: S+Modify GPIO setting follow SIT.
1023   1              if(SystemIsS5 || SystemIsS3)
1024   1              {
1025   2                      return;
1026   2              }
C51 COMPILER V8.12   OEM_SCANTABS                                                          07/28/2018 12:03:44 PAGE 18  

1027   1      
1028   1              
1029   1              if (event == MAKE_EVENT)
1030   1              {
1031   2                      LED_KB_PWM_Step += 2; //COKEYXU010:Modify KB BKL to just on/off
1032   2                      if(LED_KB_PWM_Step > 2)
1033   2                      {
1034   3                              LED_KB_PWM_Step=0;
1035   3                      }
1036   2      //72JERRY036:s+ Modify KB backlight control for lenovo app setting.
1037   2                      if(LED_KB_PWM_Step!=0)
1038   2                      {
1039   3                              SET_MASK(EMStatusBit, b0SetKBLEDON);
1040   3                      }
1041   2                      else
1042   2                      {
1043   3                              CLEAR_MASK(EMStatusBit, b0SetKBLEDON);
1044   3                      }
1045   2      //72JERRY036: e+Modify KB backlight control for lenovo app setting.     
1046   2                      UpdateLEDBL_delay = 0;                  // COKEYXU010: Delay 0 sec for Update LED Back Light.
1047   2                      if(uReserve07.fbit.nVPCDriverIn==1)
1048   2                      {
1049   3                              uVPCeventSource = General;
1050   3                      uVPCeventSource2 = 0;
1051   3                              ECSMI_SCIEvent(SDV_VPC_notify);
1052   3                      }
1053   2      //72JERRY022: E+Modify GPIO setting follow SIT.
1054   2              }
1055   1      }
1056          //ELMERZH001: E+ add PWM control Keyboard backlight,transplant code from 720s. 
1057          
1058          const FUNCT_PTR_V_B code HotKey_Fn_Fx[] =
1059          {
1060                  HotKey_Fn_F1,           // Fn + F1
1061                  HotKey_Fn_F2,           // Fn + F2
1062                  HotKey_Fn_F3,           // Fn + F3
1063                  HotKey_Fn_F4,       // Fn + F4
1064                  HotKey_Fn_F5,           // Fn + F5
1065                  HotKey_Fn_F6,           // Fn + F6
1066                  HotKey_Fn_F7,           // Fn + F7
1067                  HotKey_Fn_F8,       // Fn + F8
1068                  HotKey_Fn_F9,           // Fn + F9
1069                  HotKey_Fn_F10,          // Fn + F10
1070                  HotKey_Fn_F11,          // Fn + F11
1071                  HotKey_Fn_F12,          // Fn + F12
1072                  HotKey_Fn_ESC,          // Fn + ESC
1073          //      HotKey_Fn_UP,           // Fn + up arrow
1074          //      HotKey_Fn_DOWN,         // Fn + down arrow
1075              HotKey_Fn_Plus,     // Fn+Plus
1076              HotKey_Fn_Minus,    // Fn+Plus
1077                  HotKey_Fn_LEFT,         // Fn + left arrow   //:Used for Fn+ "+"(small keyboard)
1078                  HotKey_Fn_RIGHT,        // Fn + right arrow  //:Used for Fn+ "-"(small keyboard)
1079                  HotKey_Fn_Space,        // Fn + Space
1080          };
1081          
1082          //---------------------------------------------------------------------------
1083          //      Numpad 7 Home   [B0h]
1084          //      Numpad 8 UP     [B1h]
1085          //      Numpad 9 PGUp   [B2h]
1086          //      Numpad *                [B3h]
1087          //      Numpad 4 Left   [B4h]
1088          //      Numpad 5                [B5h]
C51 COMPILER V8.12   OEM_SCANTABS                                                          07/28/2018 12:03:44 PAGE 19  

1089          //      Numpad 6 Right  [B6h]
1090          //      Numpad -                [B7h]
1091          //      Numpad 1 End    [B8h]
1092          //      Numpad 2 Down   [B9h]
1093          //      Numpad 3 PGDn   [BAh]
1094          //      Numpad +                [BBh]
1095          //      Numpad 0 Ins    [BCh]
1096          //      Numpad . Del    [BDh]
1097          //      Numpad /        [BEh]
1098          //---------------------------------------------------------------------------
1099          
1100          const BYTE code ss2_9C[] =      // Numpad 7
1101          {
1102              0x3D,   // Normal           // 7
1103              0xB0,   // Numlock
1104              0xB0,   // Fn
1105              0xB0    // Fn+Numlock
1106          };
1107          
1108          const BYTE code ss2_9D[] =      // Numpad 8
1109          {
1110              0x3E,   // Normal           // 8
1111              0xB1,   // Numlock
1112              0xB1,   // Fn
1113              0xB1    // Fn+Numlock
1114          };
1115          
1116          const BYTE code ss2_9E[] =      // Numpad 9
1117          {
1118              0x46,   // Normal           // 9
1119              0xB2,   // Numlock
1120              0xB2,   // Fn
1121              0xB2    // Fn+Numlock
1122          };
1123          
1124          const BYTE code ss2_9F[] =      // Numpad 0
1125          {
1126              0x45,   // Normal           // 0
1127              0xBE,   // Numlock
1128              0xBE,   // Fn
1129              0xBE    // Fn+Numlock
1130          };
1131          
1132          const BYTE code ss2_A0[] =      // Numpad U
1133          {
1134              0x3C,   // Normal           // U
1135              0xB4,   // Numlock
1136              0xB4,   // Fn
1137              0xB4    // Fn+Numlock
1138          };
1139          
1140          const BYTE code ss2_A1[] =      // Numpad I
1141          {
1142              0x43,   // Normal           // I
1143              0xB5,   // Numlock
1144              0xB5,   // Fn
1145              0xB5    // Fn+Numlock
1146          };
1147          
1148          const BYTE code ss2_A2[] =      // Numpad O
1149          {
1150              0x44,   // Normal           // O
C51 COMPILER V8.12   OEM_SCANTABS                                                          07/28/2018 12:03:44 PAGE 20  

1151              0xB6,   // Numlock
1152              0xB6,   // Fn
1153              0xB6    // Fn+Numlock
1154          };
1155          
1156          const BYTE code ss2_A3[] =      // Numpad P
1157          {
1158              0x4D,   // Normal           // P
1159              0xB3,   // Numlock
1160              0xB3,   // Fn
1161              0xB3    // Fn+Numlock
1162          };
1163          
1164          const BYTE code ss2_A4[] =      // Numpad J
1165          {
1166              0x3B,   // Normal           // J
1167              0xB8,   // Numlock
1168              0xB8,   // Fn
1169              0xB8    // Fn+Numlock
1170          };
1171          
1172          const BYTE code ss2_A5[] =      // Numpad K
1173          {
1174              0x42,   // Normal           // K
1175              0xB9,   // Numlock
1176              0xB9,   // Fn
1177              0xB9    // Fn+Numlock
1178          };
1179          
1180          const BYTE code ss2_A6[] =      // Numpad L
1181          {
1182              0x4B,   // Normal           // L
1183              0xBA,   // Numlock
1184              0xBA,   // Fn
1185              0xBA    // Fn+Numlock
1186          };
1187          
1188          const BYTE code ss2_A7[] =      // Numpad ;:
1189          {
1190              0x4C,   // Normal           // ;:
1191              0xB7,   // Numlock
1192              0xB7,   // Fn
1193              0xB7    // Fn+Numlock
1194          };
1195          
1196          const BYTE code ss2_A8[] =      // Numpad M
1197          {
1198              0x3A,   // Normal           // M
1199              0xBC,   // Numlock
1200              0xBC,   // Fn
1201              0xBC    // Fn+Numlock
1202          };
1203          
1204          const BYTE code ss2_A9[] =      // Numpad ,<
1205          {
1206              0x41,   // Normal           // ,<
1207              0x41,   // Numlock
1208              0x41,   // Fn
1209              0x41    // Fn+Numlock
1210          };
1211          
1212          const BYTE code ss2_AA[] =      // Numpad .>
C51 COMPILER V8.12   OEM_SCANTABS                                                          07/28/2018 12:03:44 PAGE 21  

1213          {
1214              0x49,   // Normal           // .>
1215              0xBD,   // Numlock
1216              0xBD,   // Fn
1217              0xBD    // Fn+Numlock
1218          };
1219          
1220          const BYTE code ss2_AB[] =      // Numpad /?
1221          {
1222              0x4A,   // Normal           // /?
1223              0xBB,   // Numlock
1224              0xBB,   // Fn
1225              0xBB    // Fn+Numlock
1226          };
1227          
1228          const BYTE code ss2_AC[] =
1229          {
1230              0x5A,   // Normal
1231              0x81,   // Fn
1232          };
1233          //----------------------------------------------------------------
1234          // Function key F1 ~ F12
1235          //----------------------------------------------------------------
1236          const BYTE code ss2_AD[] =      // F1
1237          {
1238              0x05,   // Normal
1239                  //0x86,   // Sleep event
1240              0xD0,   // Fn
1241          };
1242          
1243          const BYTE code ss2_AE[] =      // F2
1244          {
1245              0x06,   // Normal
1246              0xD1,   // Fn
1247          };
1248          
1249          const BYTE code ss2_AF[] =      // F3
1250          {
1251              0x04,   // Normal
1252              0xD2,   // Fn
1253          };
1254          
1255          const BYTE code ss2_B0[] =      // F4
1256          {
1257              0x0C,   // Normal
1258              0xD3,   // Fn
1259          };
1260          
1261          const BYTE code ss2_B1[] =      // F5
1262          {
1263              0x03,   // Normal
1264              0xD4,   // Fn
1265          };
1266          
1267          const BYTE code ss2_B2[] =      // F6
1268          {
1269              0x0B,   // Normal
1270              0xD5,   // Fn
1271          };
1272          
1273          const BYTE code ss2_B3[] =      // F7
1274          {
C51 COMPILER V8.12   OEM_SCANTABS                                                          07/28/2018 12:03:44 PAGE 22  

1275              0x80,   // Normal
1276              0xD6,   // Fn
1277          };
1278          
1279          const BYTE code ss2_B4[] =      // F8
1280          {
1281              0x0A,   // Normal
1282              0xD7,   // Num Lk   //T08H: from 0x77 to 0xD7 
1283          };
1284          
1285          const BYTE code ss2_B5[] =      // F9
1286          {
1287              0x01,   // Normal
1288                  //0x9F,   // Play/Pause event
1289                  0xD8,
1290          };
1291          
1292          const BYTE code ss2_B6[] =      // F10
1293          {
1294              0x09,   // Normal
1295                  //0x9E,   // Stop event
1296                  0xD9,
1297          };
1298          
1299          const BYTE code ss2_B7[] =      // F11
1300          {
1301              0x78,   // Normal
1302                  //0x9D,   // Prev Track event
1303                  0xDA,
1304          };
1305          
1306          const BYTE code ss2_B8[] =      // F12
1307          {
1308              0x07,   // Normal
1309              //0x9C,   // Next Track event
1310              0xDB,
1311          };
1312          
1313          /* ----------------------------------------------------------------------------
1314           * FUNCTION: sskey2_A2_table
1315           *
1316           * The A2_TABLE structure contains the following.
1317           *
1318           * BYTE comb;  Bit   Setting Combination Key
1319           *            ---   -----------------------
1320           *             7    Hook_calc_index_comb_BIT7
1321           *             6    Hook_calc_index_comb_BIT6
1322           *             5    Fn
1323           *             4    Numlock
1324           *             3    Ctrl
1325           *             2    Alt
1326           *             1    Shift
1327           *             0    reserved
1328           *
1329           * BYTE *pntr; Pointer to array for key.
1330           * ------------------------------------------------------------------------- */
1331          const A2_TABLE sskey2_A2_table[] =
1332          {                                                                                       // Keyboard matrix index
1333                  // Keypad -->
1334              {0x30, ss2_9C },    /* index = 00h */       // 0x9C
1335              {0x30, ss2_9D },    /* index = 01h */       // 0x9D
1336              {0x30, ss2_9E },    /* index = 02h */       // 0x9E
C51 COMPILER V8.12   OEM_SCANTABS                                                          07/28/2018 12:03:44 PAGE 23  

1337              {0x30, ss2_9F },    /* index = 03h */       // 0x9F
1338              {0x30, ss2_A0 },    /* index = 04h */       // 0xA0
1339              {0x30, ss2_A1 },    /* index = 05h */       // 0xA1
1340              {0x30, ss2_A2 },    /* index = 06h */       // 0xA2
1341              {0x30, ss2_A3 },    /* index = 07h */       // 0xA3
1342              {0x30, ss2_A4 },    /* index = 08h */       // 0xA4
1343              {0x30, ss2_A5 },    /* index = 09h */       // 0xA5
1344              {0x30, ss2_A6 },    /* index = 0Ah */       // 0xA6
1345              {0x30, ss2_A7 },    /* index = 0Bh */       // 0xA7
1346              {0x30, ss2_A8 },    /* index = 0Ch */       // 0xA8
1347              {0x30, ss2_A9 },    /* index = 0Dh */       // 0xA9
1348              {0x30, ss2_AA },    /* index = 0Eh */       // 0xAA
1349              {0x30, ss2_AB },    /* index = 0Fh */       // 0xAB
1350              {0x20, ss2_AC },    /* index = 10h */       // 0xAC
1351                  // Keypad <--
1352          
1353                  // F1~F12 hotkeys -->
1354              {0x20, ss2_AD },    /* index = 11h */       // 0xAD
1355              {0x20, ss2_AE },    /* index = 12h */       // 0xAE
1356              {0x20, ss2_AF },    /* index = 13h */       // 0xAF
1357              {0x20, ss2_B0 },    /* index = 14h */       // 0xB0
1358              {0x20, ss2_B1 },    /* index = 15h */       // 0xB1
1359              {0x20, ss2_B2 },    /* index = 16h */       // 0xB2
1360              {0x20, ss2_B3 },    /* index = 17h */       // 0xB3
1361              {0x20, ss2_B4 },    /* index = 18h */       // 0xB4
1362              {0x20, ss2_B5 },    /* index = 19h */       // 0xB5
1363              {0x20, ss2_B6 },    /* index = 1Ah */       // 0xB6
1364              {0x20, ss2_B7 },    /* index = 1Bh */       // 0xB7
1365              {0x20, ss2_B8 }     /* index = 1Ch */       // 0xB8
1366              // F1~F12 hotkeys <--
1367          };
1368                                                                                                  // Reserved 0xB9 ~ 0xDF
1369          
1370          /* ----------------------------------------------------------------------------
1371           * FUNCTION: sskey2_overlay_table
1372           * ------------------------------------------------------------------------- */
1373          const BYTE code sskey2_overlay_table[] =
1374          {//Normal   Fn          // Keyboard matrix index
1375                  0x05,0xD0,      // E0H    F1 <-> Mute 
1376                  0x06,0xD1,      // E1H  F2 <-> Vol Down 
1377                  0x04,0xD2,      // E2H  F3 <-> Vol Up   
1378                  0x0C,0xD3,  // E3H    F4 <-> Mic            
1379                  0x03,0xD4,      // E4H    F5 <-> Reflash                        
1380                  0x0B,0xD5,  // E5H    F6 <-> Touchpad
1381                  0x80,0xD6,  // E6H    F7 <-> Airplane
1382                  0x0A,0xD7,  // E7H    F8 <-> Camera        
1383                  0x01,0xD8,  // E8H    F9 <-> Screen Lock        
1384                  0x09,0xD9,  // E9H    F10 <-> Display mode
1385                  0x78,0xDA,      // EAH    F11 <-> Brightness Down         
1386                  0x07,0xDB,      // EBH    F12 <-> Brightness Up  
1387                  0x9B,0x95,  // ECH      RightArrow <-> End  //MEILING004:change (0x76,0x00) to (0x95,0x9B)  //MEILING015:sw
             -itch the function order.       
1388                  0x98,0x96,      // EDH  UpArrow <-> PgUp  //MEILING004:change (0x98,0x00) to (0x96,0x98)         //MEILING015:switch t
             -he function order. 
1389                  0x99,0x97,      // EEH  DnArrow <-> PgDn //MEILING004:change (0x99,0x00) to (0x97,0x99)    //MEILING015:switch 
             -the function order. 
1390                  0x9A,0x94,      // EFH  LeftArrow <-> Home  //MEILING004:change (0x9A,0x00) to (0x94,0x9A)  //MEILING015:switch
             - the function order.   
1391                  0xC2,0xC2,      // F0H  Insert          
1392                  0xC3,0xC2,  // F1H      PrtSc <-> Insert  //LMLNANO002:add PrtSc/Insert key.            
1393                  0xC0,0xC0,  // F2H      Delete
1394                  0xC3,0xC3,  // F3h      PrtSc                                    
C51 COMPILER V8.12   OEM_SCANTABS                                                          07/28/2018 12:03:44 PAGE 24  

1395                  0x9F,0x9F,  // F4h      Play/Pause   //MEILING007:change to Play/Pause event.                            
1396                  0x9E,0x9E,  // F5h      Stop        //MEILING007:change to Stop event.           
1397                  0x9D,0x9D,  // F6h      Prev Track  //MEILING007:change to Prev Track event.    //MEILING032:modify "Prev Track"
             - to "Fast Backward".  //MEILING034:change "www.Back" to "Prev Track".           
1398                  0x9C,0x9C,  // F7h      Next Track  //MEILING007:change to Next Track event.    //MEILING032:modify "Next Track"
             - to "Fast Forward".   //MEILING034:change "www.Forward" to "Next Track".                       
1399                  0x32,0x92,      // F8h  B <-> Break  //MEILING020:change (0x94,0x91) to (0x32,0x92)                       
1400                  0x4D,0x91,      // F9h  P <-> Pause  //MEILING020:change (0x96,0x7E) to (0x4D,0x91)     
1401                  0x21,0x7E,  // FAh      C <-> SrcLk  //MEILING020:change (0x97,0xC2) to (0x21,0x7E)
1402                  0x35,0x93,      // FBh  Y <-> SysRq //MEILING020:change (0x95,0x92) to (0x1B,0x93)  //MEILING027:change (0x1B,0
             -x93) to (0x35,0x93). 
1403                  0x76,0xDC,      // FCh          
1404                  0x29,0xE1,      // FDh   Space <-> KB Backlight
1405                  0x5A,0x81,      // FEh  
1406                  0xC5,0xC5,      // FFh  
1407          };
1408                                                                                                          
1409          const BYTE code sskey2_overlay_table1[] =
1410          {//Normal   Fn          // Keyboard matrix index
1411                  0xD0,0x05,      // E0H    Mute <-> F1            
1412                  0xD1,0x06,      // E1H  Vol Down <-> F2          
1413                  0xD2,0x04,      // E2H  Vol Up <-> F3              
1414                  0xD3,0x0C,  // E3H    Mic <-> F4            
1415                  0xD4,0x03,      // E4H    Reflash <-> F5                        
1416                  0xD5,0x0B,  // E5H    Touchpad <-> F6
1417                  0xD6,0x80,  // E6H    Camera <-> F7
1418                  0xD7,0x0A,  // E7H    Airplane <-> F8           
1419                  0xD8,0x01,  // E8H    Display mode <-> F9        
1420                  0xD9,0x09,  // E9H    F10           
1421                  0xDA,0x78,      // EAH    Brightness Down <-> F11                       
1422                  0xDB,0x07,  // EBH    Brightness Up <-> F12               
1423                  0x9B,0x95,  // ECH    RightArrow <-> End  //MEILING004:change (0x00,0x76) to (0x9B,0x95)         
1424                  0x98,0x96,      // EDH  UpArrow <-> PgUp   //MEILING004:change (0x00,0x98) to (0x98,0x96)       
1425                  0x99,0x97,      // EEH  DnArrow <-> PgDn  //MEILING004:change (0x00,0x99) to (0x99,0x97)        
1426                  0x9A,0x94,      // EFH  LeftArrow <-> Home  //MEILING004:change (0x00,0x9A) to (0x9A,0x94)       
1427                  0xC2,0xC2,      // F0H  Insert          
1428                  0xC3,0xC2,  // F1H      PrtSc <-> Insert  //LMLNANO002:add PrtSc/Insert key.            
1429                  0xC0,0xC0,  // F2H    Delete
1430                  0xC3,0xC3,  // F3h      PrtSc                                    
1431                  0x9F,0x9F,  // F4h      Play/Pause   //MEILING007:change to Play/Pause event.                            
1432                  0x9E,0x9E,  // F5h      Stop        //MEILING007:change to Stop event.           
1433                  0x9D,0x9D,  // F6h      Prev Track  //MEILING007:change to Prev Track event.    //MEILING032:modify "Prev Track"
             - to "Fast Backward".  //MEILING034:change "www.Back" to "Prev Track".                   
1434                  0x9C,0x9C,  // F7h      Next Track  //MEILING007:change to Next Track event.    //MEILING032:modify "Prev Track"
             - to "Fast Backward".  //MEILING034:change "www.Forward" to "Next Track".                               
1435                  0x32,0x92,      // F8h  B <-> Break  //MEILING020:change (0x94,0x91) to (0x32,0x92)                       
1436                  0x4D,0x91,      // F9h  P <-> Pause  //MEILING020:change (0x96,0x7E) to (0x4D,0x91)     
1437                  0x21,0x7E,  // FAh      C <-> SrcLk  //MEILING020:change (0x97,0xC2) to (0x21,0x7E)
1438                  0x35,0x93,      // FBh  Y <-> SysRq //MEILING020:change (0x95,0x92) to (0x1B,0x93)  //MEILING027:change (0x1B,0
             -x93) to (0x35,0x93). 
1439                  0xDC,0x76,      // FCh  
1440                  0x29,0xE1,      // FDh  Space <-> KB Backlight  
1441                  0x81,0x5A,      // FEh          
1442                  0xC5,0xC5,      // FFh  
1443          };
1444                                                                                                          // Reserved 0xEE ~ 0xFF
1445          /* ----------------------------------------------------------------------------
1446           * Insyde Software Key Number 2
1447           *
1448           * 00h         Null
1449           * 01h - 7Fh   Same as IBM Scan Code, Set2
1450           * 80h - BFh   Pre-Index for generation Scan Code, Set2
C51 COMPILER V8.12   OEM_SCANTABS                                                          07/28/2018 12:03:44 PAGE 25  

1451           * C0h - DFh   Pre-Index for PPK function
1452           * C0h - DFh   Pre-Index for SMI function
1453           * ------------------------------------------------------------------------- */
1454          /* ----------------------------------------------------------------------------
1455           * FUNCTION: sskey3_80_table - Insyde Software Key Number 2
1456           * 80h - BFh   Pre-Index for generation Scan Code, Set2
1457           * ------------------------------------------------------------------------- */
1458          const BYTE code sskey3_80_table[] =
1459          {
1460          //-----------------------------------------------------------------
1461          // Index from keyboard matrix
1462          //-----------------------------------------------------------------
1463                                                                                  // Keyboard matrix index
1464              0x83,       DO_SIMPLE_CODE,         // [80h] F7 (118)
1465              0x5A,       DO_E0_PREFIX_CODE,      // [81h] Numpad Enter (108)
1466              0x1F,       DO_E0_PREFIX_CODE,      // [82h] Windows Left
1467              0x27,       DO_E0_PREFIX_CODE,      // [83h] Windows Right
1468              0x2F,       DO_E0_PREFIX_CODE,      // [84h] Application
1469              0x37,       DO_E0_PREFIX_CODE,      // [85h] Power event
1470              0x3F,       DO_E0_PREFIX_CODE,      // [86h] Sleep event
1471              0x5E,       DO_E0_PREFIX_CODE,              // [87h] Wake event
1472              LShift, DO_CONTROL_EFFECT,          // [88h] 12 Shift(L)
1473              RShift, DO_CONTROL_EFFECT,          // [89h] 59 Shift(R)
1474              LAlt,       DO_CONTROL_EFFECT,      // [8Ah] 11 Alt(L)
1475              RAlt,       DO_CONTROL_EFFECT_E0,   // [8Bh] E0 11 Alt(R)
1476              LCtrl,      DO_CONTROL_EFFECT,              // [8Ch] 14 Crtl(L)
1477              RCtrl,      DO_CONTROL_EFFECT_E0,   // [8Dh] E0 14 Ctrl(R)
1478              FN,         DO_CONTROL_EFFECT,      // [8Eh] Fn
1479              OVLAY,      DO_CONTROL_EFFECT,              // [8Fh] Overlay
1480              0x4A,       DO_E0_PREFIX_CODE,      // [90h] Reserved msmart "key pad /"
1481              0x00,       DO_SPECIAL_CODE,        // [91h] Pause (126)
1482              0x01,       DO_SPECIAL_CODE,        // [92h] Break
1483              0x84,       DO_SIMPLE_CODE,         // [93h] (124) Alt-Case (SysRq)
1484              0x6C,       DO_E0_PREFIX_CODE,      // [94h] Home
1485              0x69,       DO_E0_PREFIX_CODE,      // [95h] End
1486              0x7D,       DO_E0_PREFIX_CODE,      // [96h] Page up
1487              0x7A,       DO_E0_PREFIX_CODE,      // [97h] Page down
1488              0x75,       DO_E0_PREFIX_CODE,      // [98h] UP arrow
1489              0x72,       DO_E0_PREFIX_CODE,      // [99h] Down arrow
1490              0x6B,       DO_E0_PREFIX_CODE,      // [9Ah] Left arrow
1491              0x74,       DO_E0_PREFIX_CODE,      // [9Bh] Right arrow
1492          
1493          //-----------------------------------------------------------------
1494          // For MicroSoft enhance keyboard feature.
1495          //-----------------------------------------------------------------
1496              0x4D, DO_E0_PREFIX_CODE,            // [9Ch] Next Track event
1497              0x15, DO_E0_PREFIX_CODE,            // [9Dh] Prev Track event
1498              0x3B, DO_E0_PREFIX_CODE,            // [9Eh] Stop event
1499              0x34, DO_E0_PREFIX_CODE,            // [9Fh] Play/Pause event
1500              0x23, DO_E0_PREFIX_CODE,            // [A0h] Mute event
1501              0x32, DO_E0_PREFIX_CODE,            // [A1h] Volume Up event
1502              0x21, DO_E0_PREFIX_CODE,            // [A2h] Volume Down event
1503              0x48, DO_E0_PREFIX_CODE,            // [A3h] Mail event
1504              0x10, DO_E0_PREFIX_CODE,            // [A4h] Search event
1505              0x3A, DO_E0_PREFIX_CODE,            // [A5h] Web/Home event
1506              0x38, DO_E0_PREFIX_CODE,            // [A6h] Back event
1507              0x30, DO_E0_PREFIX_CODE,            // [A7h] Forward event
1508              0x28, DO_E0_PREFIX_CODE,            // [A8h] Stop event
1509              0x20, DO_E0_PREFIX_CODE,            // [A9h] Refresh event
1510              0x18, DO_E0_PREFIX_CODE,            // [AAh] Favorites event
1511              0x2B, DO_E0_PREFIX_CODE,            // [ABh] Caluator event
1512              0x40, DO_E0_PREFIX_CODE,            // [ACh] My Computer event
C51 COMPILER V8.12   OEM_SCANTABS                                                          07/28/2018 12:03:44 PAGE 26  

1513              0x50, DO_E0_PREFIX_CODE,            // [ADh] Media event
1514              0x00, DO_SIMPLE_CODE,               // [AEh] Reserved
1515              0x00, DO_SIMPLE_CODE,               // [AFh] Reserved
1516          
1517          //-----------------------------------------------------------------
1518          // Index from sskey2_A2_table
1519          //-----------------------------------------------------------------
1520                  0x6C, DO_SIMPLE_CODE,                   // Numpad 7 Home        [B0h]
1521                  0x75, DO_SIMPLE_CODE,                   // Numpad 8 UP          [B1h]
1522                  0x7D, DO_SIMPLE_CODE,           // Numpad 9 PGUp        [B2h]
1523                  0x7C, DO_SIMPLE_CODE,           // Numpad *             [B3h]
1524                  0x6B, DO_SIMPLE_CODE,           // Numpad 4 Left        [B4h]
1525                  0x73, DO_SIMPLE_CODE,           // Numpad 5             [B5h]
1526                  0x74, DO_SIMPLE_CODE,           // Numpad 6 Right       [B6h]
1527                  0x7B, DO_SIMPLE_CODE,           // Numpad -             [B7h]
1528                  0x69, DO_SIMPLE_CODE,           // Numpad 1 End         [B8h]
1529                  0x72, DO_SIMPLE_CODE,           // Numpad 2 Down        [B9h]
1530                  0x7A, DO_SIMPLE_CODE,           // Numpad 3 PGDn        [BAh]
1531                  0x79, DO_SIMPLE_CODE,           // Numpad +             [BBh]
1532                  0x70, DO_SIMPLE_CODE,           // Numpad 0 Ins         [BCh]
1533                  0x71, DO_SIMPLE_CODE,                   // Numpad . Del         [BDh]
1534                  0x4A, DO_E0_PREFIX_CODE,                // Numpad /             [BEh]
1535          
1536                  0x00, DO_SIMPLE_CODE,                   // Reserved             [BFh]
1537          
1538              0x71, DO_E0_PREFIX_CODE,            // Delete               [C0h]
1539              0x84, DO_SIMPLE_CODE,               // SysRq                        [C1h]
1540              0x70, DO_E0_PREFIX_CODE,            // Insert                       [C2h]
1541              0x7C, DO_E0_PREFIX_CODE,            // Print Screen [C3h]
1542                  0x41, DO_E0_PREFIX_CODE,        // Euro Sign            [C4h]
1543                  0x49, DO_E0_PREFIX_CODE,        // Dollar Sign          [C5h]
1544                  0x00, DO_SIMPLE_CODE,                   // Reserved             [C6h]
1545                  0x00, DO_SIMPLE_CODE,                   // Reserved             [C7h]
1546                  0x00, DO_SIMPLE_CODE,                   // Reserved             [C8h]
1547                  0x00, DO_SIMPLE_CODE,                   // Reserved             [C9h]
1548                  0x00, DO_SIMPLE_CODE,                   // Reserved             [CAh]
1549                  0x00, DO_SIMPLE_CODE,                   // Reserved             [CBh]
1550                  0x00, DO_SIMPLE_CODE,                   // Reserved             [CCh]
1551                  0x00, DO_SIMPLE_CODE,                   // Reserved             [CDh]
1552                  0x00, DO_SIMPLE_CODE,                   // Reserved             [CEh]
1553                  0x00, DO_SIMPLE_CODE,                   // Reserved             [CFh]
1554          
1555          // Function key F1 ~ F12
1556              0   , DO_COSTOMER_FUNCTION,         // Function key F1      [D0h]
1557              1   , DO_COSTOMER_FUNCTION,         // Function key F2      [D1h]
1558              2   , DO_COSTOMER_FUNCTION,         // Function key F3      [D2h]
1559              3   , DO_COSTOMER_FUNCTION,         // Function key F4      [D3h]
1560              4   , DO_COSTOMER_FUNCTION,         // Function key F5      [D4h]
1561              5   , DO_COSTOMER_FUNCTION,         // Function key F6      [D5h]
1562              6   , DO_COSTOMER_FUNCTION,         // Function key F7      [D6h]
1563              7   , DO_COSTOMER_FUNCTION,         // Function key F8      [D7h]
1564              8   , DO_COSTOMER_FUNCTION,         // Function key F9      [D8h]
1565              9   , DO_COSTOMER_FUNCTION,         // Function key F10     [D9h]
1566              10  , DO_COSTOMER_FUNCTION,         // Function key F11     [DAh]
1567              11  , DO_COSTOMER_FUNCTION,         // Function key F12     [DBh]
1568                  12      , DO_COSTOMER_FUNCTION,         // Function key Esc     [DCh]
1569                  13      , DO_COSTOMER_FUNCTION,         // Function key Up arrow        [DDh]
1570                  14      , DO_COSTOMER_FUNCTION,         // Function key Down arrow      [DEh]
1571                  15      , DO_COSTOMER_FUNCTION,         // Function key Left arrow      [DFh]
1572                  16      , DO_COSTOMER_FUNCTION,         // Function key Right arrow     [E0h]
1573                  17      , DO_COSTOMER_FUNCTION,         // Function key Right arrow     [E1h]
1574          };
C51 COMPILER V8.12   OEM_SCANTABS                                                          07/28/2018 12:03:44 PAGE 27  

1575          
1576                                                                                  // Reserved 0xE0 ~ 0xFF
1577          
1578          //-----------------------------------------------------------------
1579          // The function of checking boot hotkey Dino 1024
1580          //-----------------------------------------------------------------
1581          #define DebugkeyFn              0x8E    // Fn
1582          #define DebugKeyEqu             0x55    // =
1583          #define DebugKeyS                       0x1B    // S
1584          #define DebugKeyA                       0x1C    // A
1585          #define DebugKeyR                       0x2D    // R
1586          #define DebugKeyN                       0x31    // N
1587          #define DebugKeyI                       0x43    // I
1588          #define DebugKeyO                       0x44    // O
1589          #define DebugKeyP                       0x4D    // P//change "Fn+D"to"Fn+D+P".
1590          #define DebugKeyD                       0x23    // D  
1591          #define DebugKeyV                       0x2A    // V  ADD //ANGELAS032: add
1592          #define Crisiskey05                     0xE1    // F2    //ANGELAG001: add
1593          #define Crisiskey06                     0xEB    // F12  //ANGELAG001: add
1594          
1595          //ANGELAG001:S+ add CrisisHotkey05 function.
1596          void CrisisHotkey05(BYTE event)
1597          {
1598   1              /*if((IS_MASK_CLEAR(ACPI_HOTKEY, HotkeyDisable))&&(FnStatus == 1))//ANGELAG052: remove start  //"Fn+F2"
1599   1              {
1600   1                      SET_MASK(F2_Pressed, F2Flag); 
1601   1                      CLEAR_MASK(F2_Pressed, F12Flag); 
1602   1              }
1603   1              else if((IS_MASK_SET(ACPI_HOTKEY, HotkeyDisable))&&(FnStatus == 0))//"F2"
1604   1              { */ //ANGELAG052: remove end
1605   1                      SET_MASK(F2_Pressed, F2Flag); 
1606   1                      CLEAR_MASK(F2_Pressed, F12Flag); 
1607   1              //} //ANGELAG052: remove
1608   1      }
1609          
1610          void CrisisHotkey06(BYTE event)
1611          {
1612   1              /*if((IS_MASK_CLEAR(ACPI_HOTKEY, HotkeyDisable))&&(FnStatus == 1))//"Fn+F12" //ANGELAG052: remove start
1613   1              {
1614   1                      SET_MASK(F2_Pressed, F12Flag); 
1615   1                      CLEAR_MASK(F2_Pressed, F2Flag); 
1616   1              }
1617   1              else if((IS_MASK_SET(ACPI_HOTKEY, HotkeyDisable))&&(FnStatus == 0))//"F12"
1618   1              { */ //ANGELAG052: remove end
1619   1                      SET_MASK(F2_Pressed, F12Flag); 
1620   1                      CLEAR_MASK(F2_Pressed, F2Flag); 
1621   1      //      } //ANGELAG052: remove
1622   1      }
1623          //ANGELAG001:E+.
1624          
1625          void FnHotkey01(BYTE event)
1626          {
1627   1              if(event == BREAK_EVENT)
1628   1              {
1629   2                      DebugCombineKey=0x00;
1630   2              }
1631   1              else if(event == MAKE_EVENT)
1632   1              {
1633   2                      DebugCombineKey=1;
1634   2              }
1635   1      }
1636          
C51 COMPILER V8.12   OEM_SCANTABS                                                          07/28/2018 12:03:44 PAGE 28  

1637          void FnHotkey02(BYTE event)
1638          {
1639   1              if(event == MAKE_EVENT)
1640   1              {
1641   2                      if (DebugCombineKey==1)
1642   2                              DebugCombineKey=2;
1643   2                      else
1644   2                              DebugCombineKey=0;
1645   2              }
1646   1      }
1647          
1648          void FnHotkey03(BYTE event)
1649          {
1650   1              if(event == MAKE_EVENT)
1651   1              {
1652   2                      if (DebugCombineKey==2)
1653   2                              DebugCombineKey=3;
1654   2                      else
1655   2                              DebugCombineKey=0;
1656   2              }
1657   1      }
1658          
1659          void FnHotkey04(BYTE event)
1660          {
1661   1          if(IS_MASK_CLEAR(LENOVOPMFW_Temp,EEPROM_Token))
1662   1          {
1663   2              if(event == MAKE_EVENT)
1664   2              {
1665   3                      if (DebugCombineKey==3)
1666   3                      {
1667   4                              DebugCombineKey=4;
1668   4                              eEEPROMBank= 0x07;
1669   4                              eEEPROMAddrsss = 0xF1;                          // Save to B7 F1 (0x0001B7F1)
1670   4                              eEEPROMData     = BRAM3F;
1671   4                              Update_EEPROMMark();
1672   4                              eUpdateEEPROMCnt = 2;
1673   4                              cSPIEEPROM.fbit.cSPI_ROMCopyStart=1;
1674   4                      }
1675   3                      else
1676   3                              DebugCombineKey=0;
1677   3              }
1678   2          }
1679   1      }
1680          
1681          const sBootHotKeyStruct code asBootHotKeyStruct[]=
1682          {
1683                  { DebugkeyFn,   FnHotkey01      },
1684                  { DebugKeyEqu,  FnHotkey02      },
1685                  { DebugKeyS,    FnHotkey03      },
1686                  { DebugKeyA,    FnHotkey04      },
1687          };
1688          
1689          void CheckBootHotKey(matrix, event)
1690          {
1691   1              BYTE index;
1692   1              for(index=0x00; index<(sizeof(asBootHotKeyStruct)/sizeof(sBootHotKeyStruct)); index++)
1693   1              {
1694   2                      if(matrix==asBootHotKeyStruct[index].matrix)
1695   2                      {
1696   3                              (asBootHotKeyStruct[index].pfunction)(event);
1697   3                              return;
1698   3                      }
C51 COMPILER V8.12   OEM_SCANTABS                                                          07/28/2018 12:03:44 PAGE 29  

1699   2              }
1700   1              DebugCombineKey=0x00;
1701   1      }
1702          
1703          //change "Fn+D"to"Fn+D+P".
1704          void FnHotkeyPort80Log01(BYTE event)
1705          {
1706   1              /*if(event == BREAK_EVENT)
1707   1              {
1708   1                      CombineKeyRN=0x00;
1709   1              }
1710   1              else if(event == MAKE_EVENT)
1711   1              {
1712   1                      CombineKeyRN=1;
1713   1              }*/
1714   1      
1715   1              if((event == MAKE_EVENT)&&(FnStatus == 1))
1716   1              {
1717   2                      CombineKeyRN=1;
1718   2              }
1719   1              //ANGELAS091: s+Optimize ANGELAS032 ( press "fn+s" then release "S", flag can't be clear.)
1720   1              else if(event == BREAK_EVENT)
1721   1              {
1722   2                      CombineKeyRN=0;
1723   2              }
1724   1              //ANGELAS091:e+ Optimize ANGELAS032 ( press "fn+s" then release "S", flag can't be clear.)
1725   1      }
1726          // change "Fn+D"to"Fn+D+P".
1727          
1728          void FnHotkeyPort80Log02(BYTE event)
1729          {
1730   1              if(event == MAKE_EVENT)
1731   1              {
1732   2                      if (CombineKeyRN==1)
1733   2                              CombineKeyRN=2;
1734   2                      else
1735   2                              CombineKeyRN=0;
1736   2              }
1737   1      }
1738          
1739          void FnHotkeyPort80Log03(BYTE event)
1740          {
1741   1              /*if(event == MAKE_EVENT)
1742   1              {
1743   1                      if (CombineKeyRN==2)
1744   1                              CombineKeyRN=3;
1745   1                      else
1746   1                              CombineKeyRN=0;
1747   1              }*/
1748   1              // 0ptimize"Fn+R"crisis recover bios follow lenovo spec(press "Fn+R" then press power button  that will e
             -nter crisis recover bios on DC or AC mode).
1749   1              if(IS_MASK_CLEAR(SYS_MISC1,BATCRISIS_FLAG))
1750   1              {
1751   2                      if(((event == MAKE_EVENT)||(event==REPEAT_EVENT))&&(FnStatus == 1))
1752   2                      {
1753   3                              SET_MASK(SYS_MISC1,Crisis_On);
1754   3                      }
1755   2                      else 
1756   2                      {
1757   3                              CLEAR_MASK(SYS_MISC1,Crisis_On);
1758   3                      }
1759   2              }
C51 COMPILER V8.12   OEM_SCANTABS                                                          07/28/2018 12:03:44 PAGE 30  

1760   1      }
1761          
1762          void FnHotkeyPort80Log04(BYTE event)
1763          {
1764   1              if(event == MAKE_EVENT)
1765   1              {
1766   2                      if (CombineKeyRN==3)
1767   2                      {
1768   3                              CombineKeyRN=4;
1769   3                              SET_MASK(CombineKeyStatus, b0FnRN);
1770   3                      }
1771   2                      else
1772   2                              CombineKeyRN=0;
1773   2              }
1774   1      }
1775          void FnHotkeyPort80Log05(BYTE event)
1776          {
1777   1              if((event == MAKE_EVENT)&&(FnStatus == 1)&&(CombineKeyRN==1))//change "Fn+D"to"Fn+D+P".
1778   1              {
1779   2                      SET_MASK(P80CMOSSts,P80CMOSDis);
1780   2                      SET_MASK(ACPI_HOTKEY, b6Cmd_NoShut);//when battery mode press FN+D£¬do not cut power¡£
1781   2              }
1782   1      }
1783          const sBootHotKeyStruct code asCheckRNStruct[]=
1784          {
1785                  { DebugKeyD,            FnHotkeyPort80Log01     },//change "Fn+D"to"Fn+D+P".
1786                  //{ DebugKeyEqu,        FnHotkeyPort80Log02     },
1787                  { DebugKeyR,        FnHotkeyPort80Log03 },
1788                  //{ DebugKeyN,          FnHotkeyPort80Log04     },
1789                  //{ DebugKeyP,      FnHotkeyPort80Log05 },//change "Fn+D"to"Fn+D+P".  //MEILING026:remove.
1790                  { DebugKeyO,        FnHotkeyPort80Log05 }, //MEILING026:add.
1791                  { Crisiskey05,      CrisisHotkey05      }, //ANGELAG001: add
1792                  { Crisiskey06,      CrisisHotkey06      }, //ANGELAG001:add.
1793          };
1794          void CheckRNHotKey(matrix, event)
1795          {
1796   1              BYTE index;
1797   1              for(index=0x00; index<(sizeof(asCheckRNStruct)/sizeof(sBootHotKeyStruct)); index++)
1798   1              {
1799   2                      if(matrix==asCheckRNStruct[index].matrix)
1800   2                      {
1801   3                              (asCheckRNStruct[index].pfunction)(event);
1802   3                              return;
1803   3                      }
1804   2              }
1805   1              CombineKeyRN=0;
1806   1      }
1807          
1808          void FnHotkeyGPIO01(BYTE event)
1809          {
1810   1              if(event == BREAK_EVENT)
1811   1              {
1812   2                      CombineKeyIO=0x00;
1813   2              }
1814   1              else if(event == MAKE_EVENT)
1815   1              {
1816   2                      CombineKeyIO=1;
1817   2              }
1818   1      
1819   1      }
1820          
1821          void FnHotkeyGPIO02(BYTE event)
C51 COMPILER V8.12   OEM_SCANTABS                                                          07/28/2018 12:03:44 PAGE 31  

1822          {
1823   1              if(event == MAKE_EVENT)
1824   1              {
1825   2                      if (CombineKeyIO==1)
1826   2                              CombineKeyIO=2;
1827   2                      else
1828   2                              CombineKeyIO=0;
1829   2              }
1830   1      }
1831          
1832          void FnHotkeyGPIO03(BYTE event)
1833          {
1834   1              if(event == MAKE_EVENT)
1835   1              {
1836   2                      if (CombineKeyIO==2)
1837   2                              CombineKeyIO=3;
1838   2                      else
1839   2                              CombineKeyIO=0;
1840   2              }
1841   1      
1842   1      }
1843          
1844          void FnHotkeyGPIO04(BYTE event)
1845          {
1846   1              if(event == MAKE_EVENT)
1847   1              {
1848   2                      if (CombineKeyIO==3)
1849   2                      {
1850   3                              GPIO_STATUS = 0;
1851   3                              if ( Read_RSMRST() )                            // bit0:GPIO_RSMRST
1852   3                              { SET_MASK(GPIO_STATUS,GPIO_RSMRST); }
1853   3                              if ( Read_PM_PWRBTN() )                         // bit1:GPIO_PBTN_OUT
1854   3                              { SET_MASK(GPIO_STATUS,GPIO_PBTN_OUT); }
1855   3                              if ( Read_VDDQ_PGOOD() )                                // bit2:GPIO_VDDQ_PGOOD
1856   3                              { SET_MASK(GPIO_STATUS,GPIO_VDDQ_PGOOD); }
1857   3                              if ( Read_SLPS3() )                                     // bit3:GPIO_PM_SLP_S3
1858   3                              { SET_MASK(GPIO_STATUS,GPIO_PM_SLP_S3); }
1859   3                              if ( Read_SLPS4() )                                     // bit4:GPIO_PM_SLP_S4
1860   3                              { SET_MASK(GPIO_STATUS,GPIO_PM_SLP_S4); }
1861   3                                                                                                      // bit5:GPIO_PM_SLP_S5
1862   3                              if ( Read_VR_ON() )                                     // bit6:GPIO_VR_ON
1863   3                              { SET_MASK(GPIO_STATUS,GPIO_VR_ON); }
1864   3                              if ( Read_PCH_PWROK() )                         // bit7:GPIO_PCH_PWROK
1865   3                              { SET_MASK(GPIO_STATUS,GPIO_PCH_PWROK); }
1866   3      
1867   3                              CombineKeyIO=4;
1868   3                  if(IS_MASK_CLEAR(LENOVOPMFW_Temp,EEPROM_Token))
1869   3                  {
1870   4      
1871   4                              eEEPROMBank= 0x07;
1872   4                              eEEPROMAddrsss = 0xEF;                          // Save to B7 EF (0x0001B7EF)
1873   4                              eEEPROMData     = GPIO_STATUS;
1874   4                              Update_EEPROMMark();
1875   4                              eUpdateEEPROMCnt = 2;
1876   4                              cSPIEEPROM.fbit.cSPI_ROMCopyStart=1;
1877   4                  }
1878   3      
1879   3                      }
1880   2                      else
1881   2                      { CombineKeyIO=0; }
1882   2              }
1883   1      }
C51 COMPILER V8.12   OEM_SCANTABS                                                          07/28/2018 12:03:44 PAGE 32  

1884          
1885          const sBootHotKeyStruct code asCheckIOStruct[]=
1886          {
1887                  { DebugkeyFn,   FnHotkeyGPIO01  },
1888                  { DebugKeyEqu,  FnHotkeyGPIO02  },
1889                  { DebugKeyI,    FnHotkeyGPIO03  },
1890                  { DebugKeyO,    FnHotkeyGPIO04  },
1891          };
1892          void CheckIOHotKey(matrix, event)
1893          {
1894   1              BYTE index;
1895   1              for(index=0x00; index<(sizeof(asCheckIOStruct)/sizeof(sBootHotKeyStruct)); index++)
1896   1              {
1897   2                      if(matrix==asCheckIOStruct[index].matrix)
1898   2                      {
1899   3                              (asCheckIOStruct[index].pfunction)(event);
1900   3                              return;
1901   3                      }
1902   2              }
1903   1              CombineKeyIO=0;
1904   1      }
1905          
1906          //ANGELAS032: s+ add
1907          #if shipmodesupport 
1908          void FnHotkeyBattShip01(BYTE event)
1909          {
1910   1              if((event == MAKE_EVENT)&&(FnStatus == 1))
1911   1              {
1912   2                      CombineKeyShip=1;
1913   2              }
1914   1              //ANGELAS056:add start
1915   1              if((event == MAKE_EVENT) && (CombineKeyShip1==1))//ANGELAS090: Optimize ANGELAS032.change CombineKeyShip 
             -to CombineKeyShip1
1916   1              { 
1917   2                      //COKEYXU012: S+ Modify for AC cannot power on system after enter shipmode
1918   2                      if(SystemIsDSX)
1919   2                      {
1920   3                              ShipModeEn=0xA5;
1921   3                              PWSeqStep = 1;
1922   3                              PowSeqDelay = 0x00;
1923   3                              SysPowState = SYSTEM_DSX_S5;
1924   3                      }
1925   2                      //COKEYXU012: E+ Modify for AC cannot power on system after enter shipmode
1926   2              }
1927   1              //ANGELAS056:add end
1928   1              //ANGELAS091:s+ Optimize ANGELAS032 ( press "fn+s" then release "S", flag can't be clear.)
1929   1              if(event == BREAK_EVENT)
1930   1              {
1931   2                      CombineKeyShip=0x00;
1932   2                      CombineKeyShip1=0x00; 
1933   2              }
1934   1              //ANGELAS091:e+ Optimize ANGELAS032 ( press "fn+s" then release "S", flag can't be clear.)
1935   1      }
1936          
1937          void FnHotkeyBattShip02(BYTE event)
1938          {
1939   1              if((event == MAKE_EVENT) && (CombineKeyShip==1))
1940   1              {
1941   2                      //COKEYXU012: S+ Modify for AC cannot power on system after enter shipmode              
1942   2                      if(SystemIsDSX)
1943   2                      {
1944   3                              ShipModeEn=0xA5;
C51 COMPILER V8.12   OEM_SCANTABS                                                          07/28/2018 12:03:44 PAGE 33  

1945   3                              PWSeqStep = 1;
1946   3                              PowSeqDelay = 0x00;
1947   3                              SysPowState = SYSTEM_DSX_S5;
1948   3                      }
1949   2                      //COKEYXU012: E+ Modify for AC cannot power on system after enter shipmode
1950   2              }
1951   1              //ANGELAS056:add start
1952   1              if((event == MAKE_EVENT)&&(FnStatus == 1))
1953   1              {
1954   2                      CombineKeyShip1=1;
1955   2              }
1956   1              //ANGELAS056:add end
1957   1              //ANGELAS091: s+Optimize ANGELAS032 ( press "fn+s" then release "S", flag can't be clear.)
1958   1              if(event == BREAK_EVENT)
1959   1              {
1960   2                      CombineKeyShip=0x00;
1961   2                      CombineKeyShip1=0x00; 
1962   2              }
1963   1              //ANGELAS091:e+ Optimize ANGELAS032 ( press "fn+s" then release "S", flag can't be clear.)
1964   1      }
1965          const sBootHotKeyStruct code asBattShipHotKeyStruct[]=
1966          {
1967                  { DebugKeyS,            FnHotkeyBattShip01      },
1968                  { DebugKeyV,        FnHotkeyBattShip02  },  //Fn+S+V
1969          };
1970          void CheckBattShipHotKey(matrix, event)
1971          {
1972   1              BYTE index;
1973   1              for(index=0x00; index<(sizeof(asBattShipHotKeyStruct)/sizeof(sBootHotKeyStruct)); index++)
1974   1              {
1975   2                      if(matrix==asBattShipHotKeyStruct[index].matrix)
1976   2                      {
1977   3                              (asBattShipHotKeyStruct[index].pfunction)(event);
1978   3                              return;
1979   3                      }
1980   2              }
1981   1              CombineKeyShip=0x00;
1982   1              CombineKeyShip1=0x00; //ANGELAS056:add
1983   1      }
1984          #endif
1985          //ANGELAS032:e+ add
1986          //----------------------------------------------------------------------------
1987          // table_entry : value of keyboard matrix table. for example Rc_ROM_Tables[]
1988          // event : key MAKE_EVENT or BREAK_EVENT or REPEAT_EVENT
1989          //----------------------------------------------------------------------------
1990          void OEM_Hook_Send_Key(BYTE table_entry, BYTE event)
1991          {
1992   1              //if(SystemIsS0)
1993   1              //{             
1994   1                      CheckBootHotKey(table_entry,event);
1995   1                      CheckRNHotKey(table_entry,event);
1996   1                      CheckIOHotKey(table_entry,event);
1997   1                      //ANGELAS032: s+ add
1998   1                      #if shipmodesupport
1999   1                      if((!Read_AC_IN())&&(SystemIsDSX))
2000   1                      {
2001   2                              CheckBattShipHotKey(table_entry,event);
2002   2                      }
2003   1                      #endif
2004   1                      //ANGELAS032: e+ add
2005   1              //}     
2006   1      }
C51 COMPILER V8.12   OEM_SCANTABS                                                          07/28/2018 12:03:44 PAGE 34  

2007          
2008          //----------------------------------------------------------------------------
2009          // Return : 0xFF --> Send_Key function will be break; (no any scan code to host)
2010          //----------------------------------------------------------------------------
2011          BYTE OEM_Hook_Skip_Send_Key(void)
2012          {
2013   1          return(0x00);
2014   1      }
2015          
2016          //-----------------------------------------------------------------------------
2017          // Keyboard hook function (KSO0 - KSO15)
2018          // KSIValus : keyboard KSI
2019          // KSOValus : keyboard KSO
2020          //-----------------------------------------------------------------------------
2021          void Hook_keyboard(BYTE KSIValus, BYTE KSOValus)
2022          {
2023   1      
2024   1      }
2025          
2026          //-----------------------------------------------------------------------------
2027          // Keyboard hook function (KSO16 - KSO17 and GPIO KSO)
2028          // KSIValus : keyboard KSI
2029          // KSOValus : keyboard KSO
2030          //-----------------------------------------------------------------------------
2031          void Et_Hook_keyboard(BYTE KSIValus, BYTE KSOValus)
2032          {
2033   1      
2034   1      }
2035          
2036          /* ---------------------------------------------------------------------------
2037           * FUNCTION: Hook_Setup_Scanner_Pntr - to define the possible scanner tables
2038           *
2039           *     0   Rc_RAM_Table
2040           *     1   ROM Table 1
2041           *     ...
2042           * ------------------------------------------------------------------------ */
2043          void Hook_Setup_Scanner_Pntr(void)
2044          {
2045   1              #if SUPPORT_KB_RAM_TABLE
2046   1              Scanner_RAM_Pntr = &KB_RAM_Table;
2047   1              Extendkey_RAM_Pntr = &ExKB_RAM_Table;
2048   1              LoadKBMatrixToRAM();
2049   1              #else
                      Scanner_Table_Pntr = &Rc_ROM_Tables;
                      Extendkey_Table_Pntr = &EtKey_ROM_Tables;
                      #endif
2053   1      }
2054          
2055          /* ----------------------------------------------------------------------------
2056           * FUNCTION: LoadKBMatrixToRAM
2057           * ------------------------------------------------------------------------- */
2058          void LoadKBMatrixToRAM(void)
2059          {
2060   1              //if( uMBID & 0x40 )  //15'' for Zx10 //martin0219 check
2061   1          //if( uMBID & 0x01 )   //15'' for Zx10 // check G48
2062   1          //if( ( uMBID & 0x03 == 0x01 ) ||( uMBID & 0x03 == 0x02 ) ) //ANGELAS008: Modidy board ID for check 15
             -" and 17"
2063   1          if( uMBID & 0x01 )   //15''  //ANGELAS009: Remove ANGELAS008
2064   1          {
2065   2                      if ( (cKBStatus & 0x03) != 0x03 )
2066   2                      {
2067   3                      for( ITempB06=0; ITempB06<0x80; ITempB06++ )    //15" US,UK and JP.
C51 COMPILER V8.12   OEM_SCANTABS                                                          07/28/2018 12:03:44 PAGE 35  

2068   3                      {
2069   4                              Tmp_XPntr = ( KB_RAM_Table + ITempB06 );
2070   4                          *Tmp_XPntr = Rc_ROM_Tables[ITempB06];
2071   4                      }
2072   3                      }
2073   2                      else
2074   2                      {
2075   3                          for( ITempB06=0; ITempB06<0x80; ITempB06++ )        //15" Brazil.
2076   3                      {
2077   4                              Tmp_XPntr = ( KB_RAM_Table + ITempB06 );
2078   4                          *Tmp_XPntr = Rc_ROM_Tables_15BR[ITempB06];
2079   4                      }
2080   3                      }
2081   2      
2082   2              for( ITempB06=0; ITempB06<0x18; ITempB06++ )
2083   2              {
2084   3                  Tmp_XPntr = ( ExKB_RAM_Table + ITempB06 );
2085   3                  *Tmp_XPntr = EtKey_ROM_Tables[ITempB06];
2086   3              }
2087   2          }
2088   1          else     //14'' for Zx10 // check
2089   1          {
2090   2                      if ( (cKBStatus & 0x03) != 0x03 )
2091   2                      {
2092   3                      for( ITempB06=0; ITempB06<0x80; ITempB06++ )    //14" US,UK and JP.
2093   3                      {
2094   4                              Tmp_XPntr = ( KB_RAM_Table + ITempB06 );
2095   4                          *Tmp_XPntr = Rc_ROM_Tables_14[ITempB06];
2096   4                      }
2097   3                      }
2098   2                      else
2099   2                      {
2100   3                          for( ITempB06=0; ITempB06<0x80; ITempB06++ )        //14" Brazil.
2101   3                      {
2102   4                          Tmp_XPntr = ( KB_RAM_Table + ITempB06 );
2103   4                          *Tmp_XPntr = Rc_ROM_Tables_14BR[ITempB06];
2104   4                      }
2105   3                      }
2106   2      
2107   2              for( ITempB06=0; ITempB06<0x18; ITempB06++ )
2108   2              {
2109   3                  Tmp_XPntr = ( ExKB_RAM_Table + ITempB06 );
2110   3                  *Tmp_XPntr = EtKey_ROM_Tables_1[ITempB06];
2111   3              }
2112   2          }
2113   1      }
2114          
2115          //-----------------------------------------------------------------------------
2116          // The function of setting GPIO scan pin to high
2117          //-----------------------------------------------------------------------------
2118          void Hook_SetGPIOScanPinH(void)
2119          {
2120   1      
2121   1      }
2122          
2123          //-----------------------------------------------------------------------------
2124          // The function of setting GPIO scan pin to low
2125          //-----------------------------------------------------------------------------
2126          void Hook_SetGPIOScanPinL(void)
2127          {
2128   1      
2129   1      }
C51 COMPILER V8.12   OEM_SCANTABS                                                          07/28/2018 12:03:44 PAGE 36  

2130          
2131          //-----------------------------------------------------------------------------
2132          // The function of setting GPIO scan pin output
2133          //-----------------------------------------------------------------------------
2134          void Hook_SetGPIOScanPinCtrl(void)
2135          {
2136   1      
2137   1      }
2138          
2139          //-----------------------------------------------------------------------------
2140          // Fn key make
2141          //-----------------------------------------------------------------------------
2142          void Hook_Fn_Key_Make(void)
2143          {
2144   1              if ( IS_MASK_SET(cCmd, b6TestBtnEn) )
2145   1              {
2146   2                      Buffer_Key(0xE0);                   //
2147   2              Buffer_Key(0x16);                       // page down make
2148   2                      F_Service_SEND = 1;
2149   2              }
2150   1              FnStatus = 1;                                                   // for factory
2151   1      
2152   1      }
2153          
2154          //-----------------------------------------------------------------------------
2155          // Fn key break
2156          //-----------------------------------------------------------------------------
2157          void Hook_Fn_Key_Break(void)
2158          {
2159   1              //MEILING006: S+Fixed The display mode auto change to the nearly mode when change the mode via lenovo hot
             -key.
2160   1              if ( IS_MASK_SET(SysStatus, FnF3WinKeyDn) ) //FnF3PKeyUp
2161   1              {
2162   2                      if(IS_MASK_CLEAR(SysStatus, FnF3PKeyUp))
2163   2                      {
2164   3                              simple_code(0x4D,BREAK_EVENT);  // P Key.
2165   3                      }
2166   2                      e0_prefix_code(0x1F,BREAK_EVENT);       // Win Key.
2167   2              
2168   2                      SysStatus &= 0xF3;      // Clear Win+P Key.
2169   2              
2170   2                      F_Service_SEND = 1;
2171   2                      RamDebug(0x04);
2172   2              }
2173   1              //MEILING006: E+Fixed The display mode auto change to the nearly mode when change the mode via lenovo hot
             -key.
2174   1      
2175   1              if ( IS_MASK_SET(cCmd, b6TestBtnEn) )
2176   1              {
2177   2                      Buffer_Key(0xE0);                                       //
2178   2                      Buffer_Key(0xF0);                                       //
2179   2                      Buffer_Key(0x16);                                       // page down make
2180   2                      F_Service_SEND = 1;
2181   2              }
2182   1              FnStatus = 0;                                                   // for factory
2183   1      }
2184          
2185          //-----------------------------------------------------------------------------
2186          // Return : 0xFF --> sskey2_A2_table contains bit6
2187          //-----------------------------------------------------------------------------
2188          BYTE Hook_calc_index_comb_BIT6(void)
2189          {
C51 COMPILER V8.12   OEM_SCANTABS                                                          07/28/2018 12:03:44 PAGE 37  

2190   1          return(0x00);
2191   1      }
2192          
2193          //-----------------------------------------------------------------------------
2194          // Return : 0xFF --> sskey2_A2_table contains bit7
2195          //-----------------------------------------------------------------------------
2196          BYTE Hook_calc_index_comb_BIT7(void)
2197          {
2198   1          return(0x00);
2199   1      }
C51 COMPILER V8.12   OEM_SCANTABS                                                          07/28/2018 12:03:44 PAGE 38  

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION Com0105 (BEGIN)
0000         L?0262:
0000 AF00        E     MOV     R7,ITempB06
0002 EF                MOV     A,R7
0003         L?0263:
0003 93                MOVC    A,@A+DPTR
0004 FF                MOV     R7,A
0005 18                DEC     R0
0006 E6                MOV     A,@R0
0007 FC                MOV     R4,A
0008 08                INC     R0
0009 E6                MOV     A,@R0
000A F582              MOV     DPL,A
000C 8C83              MOV     DPH,R4
000E EF                MOV     A,R7
000F F0                MOVX    @DPTR,A
0010 0500        E     INC     ITempB06
0012 E500        E     MOV     A,ITempB06
0014 22                RET     
0015         L?0264:
0015 900000      E     MOV     DPTR,#EM9_NEWFUN
0018 E0                MOVX    A,@DPTR
0019 4401              ORL     A,#01H
001B         L?0265:
001B F0                MOVX    @DPTR,A
001C         L?0266:
001C 7402              MOV     A,#02H
001E         L?0267:
001E 900000      E     MOV     DPTR,#uVPCeventSource
0021         L?0268:
0021 F0                MOVX    @DPTR,A
0022 E4                CLR     A
0023 900000      E     MOV     DPTR,#uVPCeventSource2
0026 F0                MOVX    @DPTR,A
0027 22                RET     
0028         L?0269:
0028         L?0270:
0028 AF00        E     MOV     R7,ITempB06
002A 7400        E     MOV     A,#LOW KB_RAM_Table
002C 2F                ADD     A,R7
002D F582              MOV     DPL,A
002F E4                CLR     A
0030 3400        E     ADDC    A,#HIGH KB_RAM_Table
0032         L?0271:
0032 AF82              MOV     R7,DPL
0034 7800        E     MOV     R0,#LOW Tmp_XPntr
0036 F6                MOV     @R0,A
0037 08                INC     R0
0038 EF                MOV     A,R7
0039 F6                MOV     @R0,A
003A 22                RET     
003B         L?0272:
003B         L?0273:
003B EE                MOV     A,R6
003C F0                MOVX    @DPTR,A
003D A3                INC     DPTR
003E EF                MOV     A,R7
003F F0                MOVX    @DPTR,A
0040 A3                INC     DPTR
C51 COMPILER V8.12   OEM_SCANTABS                                                          07/28/2018 12:03:44 PAGE 39  

0041 EC                MOV     A,R4
0042 F0                MOVX    @DPTR,A
0043 A3                INC     DPTR
0044 ED                MOV     A,R5
0045 F0                MOVX    @DPTR,A
0046 E4                CLR     A
0047 A3                INC     DPTR
0048 F0                MOVX    @DPTR,A
0049 22                RET     
004A         L?0274:
004A 900000      E     MOV     DPTR,#ShipModeEn
004D 74A5              MOV     A,#0A5H
004F F0                MOVX    @DPTR,A
0050 900000      E     MOV     DPTR,#PWSeqStep
0053 7401              MOV     A,#01H
0055 F0                MOVX    @DPTR,A
0056 E4                CLR     A
0057 900000      E     MOV     DPTR,#PowSeqDelay
005A F0                MOVX    @DPTR,A
005B A3                INC     DPTR
005C F0                MOVX    @DPTR,A
005D 900000      E     MOV     DPTR,#SysPowState
0060 7460              MOV     A,#060H
0062 F0                MOVX    @DPTR,A
0063 22                RET     
0064         L?0275:
0064         L?0276:
0064 A3                INC     DPTR
0065 E0                MOVX    A,@DPTR
0066 FF                MOV     R7,A
0067 A3                INC     DPTR
0068 E0                MOVX    A,@DPTR
0069 25E0              ADD     A,ACC
006B 25E0              ADD     A,ACC
006D 22                RET     
006E         L?0277:
006E         L?0278:
006E F583              MOV     DPH,A
0070 120000      E     LCALL   ?C?PLDCODE
0073 8982              MOV     DPL,R1
0075 8A83              MOV     DPH,R2
0077 22                RET     
0078         L?0279:
0078         L?0280:
0078 900000      R     MOV     DPTR,#table_entry
007B E0                MOVX    A,@DPTR
007C FF                MOV     R7,A
007D 7E00              MOV     R6,#00H
007F A3                INC     DPTR
0080 E0                MOVX    A,@DPTR
0081 FD                MOV     R5,A
0082 7C00              MOV     R4,#00H
0084 22                RET     
0085         L?0282:
0085         L?0283:
0085 EF                MOV     A,R7
0086 F0                MOVX    @DPTR,A
0087 900000      E     MOV     DPTR,#SYS_MISC1
008A E0                MOVX    A,@DPTR
008B 22                RET     
008C         L?0284:
008C         L?0285:
C51 COMPILER V8.12   OEM_SCANTABS                                                          07/28/2018 12:03:44 PAGE 40  

008C E4                CLR     A
008D 900000      E     MOV     DPTR,#CombineKeyShip
0090 F0                MOVX    @DPTR,A
0091 900000      E     MOV     DPTR,#CombineKeyShip1
0094 F0                MOVX    @DPTR,A
0095 22                RET     
0096         L?0286:
0096 E0                MOVX    A,@DPTR
0097 14                DEC     A
0098         L?0287:
0098 F0                MOVX    @DPTR,A
0099 E0                MOVX    A,@DPTR
009A 900000      E     MOV     DPTR,#cRecoveryBrightValue
009D F0                MOVX    @DPTR,A
009E 22                RET     
009F         L?0288:
009F         L?0289:
009F 900000      E     MOV     DPTR,#uReserve07
00A2 E0                MOVX    A,@DPTR
00A3 C4                SWAP    A
00A4 13                RRC     A
00A5 5407              ANL     A,#07H
00A7 22                RET     
00A8         L?0290:
00A8 900000      E     MOV     DPTR,#eUpdateEEPROMCnt
00AB 7402              MOV     A,#02H
00AD F0                MOVX    @DPTR,A
00AE 900000      E     MOV     DPTR,#cSPIEEPROM
00B1 E0                MOVX    A,@DPTR
00B2 4404              ORL     A,#04H
00B4 F0                MOVX    @DPTR,A
00B5 22                RET     
00B6         L?0291:
00B6 AF00        E     MOV     R7,ITempB06
00B8 7400        E     MOV     A,#LOW ExKB_RAM_Table
00BA 2F                ADD     A,R7
00BB F582              MOV     DPL,A
00BD E4                CLR     A
00BE 3400        E     ADDC    A,#HIGH ExKB_RAM_Table
00C0 22                RET     
00C1         L?0292:
00C1 900000      E     MOV     DPTR,#eEEPROMBank
00C4 7407              MOV     A,#07H
00C6 F0                MOVX    @DPTR,A
00C7 900000      E     MOV     DPTR,#eEEPROMAddrsss
00CA 22                RET     
             ; FUNCTION Com0105 (END)

             ; FUNCTION _HotKey_Fn_F1 (BEGIN)
                                           ; SOURCE LINE # 221
0000 900000      R     MOV     DPTR,#event
                                           ; SOURCE LINE # 222
                                           ; SOURCE LINE # 224
0003 120000      R     LCALL   L?0282
0006 30E720            JNB     ACC.7,?C0005
                                           ; SOURCE LINE # 225
                                           ; SOURCE LINE # 226
0009 900000      R     MOV     DPTR,#event
000C E0                MOVX    A,@DPTR
000D 7004              JNZ     ?C0002
                                           ; SOURCE LINE # 227
                                           ; SOURCE LINE # 228
C51 COMPILER V8.12   OEM_SCANTABS                                                          07/28/2018 12:03:44 PAGE 41  

000F 7FE0              MOV     R7,#0E0H
                                           ; SOURCE LINE # 229
                                           ; SOURCE LINE # 230
0011 800E              SJMP    ?C0251
0013         ?C0002:
                                           ; SOURCE LINE # 232
                                           ; SOURCE LINE # 233
0013 900000      R     MOV     DPTR,#event
0016 E0                MOVX    A,@DPTR
0017 B4010F            CJNE    A,#01H,?C0005
                                           ; SOURCE LINE # 234
                                           ; SOURCE LINE # 235
001A 7FE0              MOV     R7,#0E0H
001C 120000      E     LCALL   _Buffer_Key
                                           ; SOURCE LINE # 236
001F 7FF0              MOV     R7,#0F0H
0021         ?C0251:
0021 120000      E     LCALL   _Buffer_Key
                                           ; SOURCE LINE # 237
0024 7F23              MOV     R7,#023H
0026 120000      E     LCALL   _Buffer_Key
                                           ; SOURCE LINE # 238
                                           ; SOURCE LINE # 239
                                           ; SOURCE LINE # 240
                                           ; SOURCE LINE # 241
0029         ?C0005:
0029 22                RET     
             ; FUNCTION _HotKey_Fn_F1 (END)

             ; FUNCTION _HotKey_Fn_F2 (BEGIN)
                                           ; SOURCE LINE # 246
0000 900000      R     MOV     DPTR,#event
                                           ; SOURCE LINE # 247
                                           ; SOURCE LINE # 248
0003 120000      R     LCALL   L?0282
0006 30E723            JNB     ACC.7,?C0011
                                           ; SOURCE LINE # 249
                                           ; SOURCE LINE # 250
0009 900000      R     MOV     DPTR,#event
000C E0                MOVX    A,@DPTR
000D 6003              JZ      ?C0008
000F B40204            CJNE    A,#02H,?C0007
0012         ?C0008:
                                           ; SOURCE LINE # 251
                                           ; SOURCE LINE # 252
0012 7FE0              MOV     R7,#0E0H
                                           ; SOURCE LINE # 253
                                           ; SOURCE LINE # 254
0014 800E              SJMP    ?C0252
0016         ?C0007:
                                           ; SOURCE LINE # 256
                                           ; SOURCE LINE # 257
0016 900000      R     MOV     DPTR,#event
0019 E0                MOVX    A,@DPTR
001A B4010F            CJNE    A,#01H,?C0011
                                           ; SOURCE LINE # 258
                                           ; SOURCE LINE # 259
001D 7FE0              MOV     R7,#0E0H
001F 120000      E     LCALL   _Buffer_Key
                                           ; SOURCE LINE # 260
0022 7FF0              MOV     R7,#0F0H
0024         ?C0252:
C51 COMPILER V8.12   OEM_SCANTABS                                                          07/28/2018 12:03:44 PAGE 42  

0024 120000      E     LCALL   _Buffer_Key
                                           ; SOURCE LINE # 261
0027 7F21              MOV     R7,#021H
0029 120000      E     LCALL   _Buffer_Key
                                           ; SOURCE LINE # 262
                                           ; SOURCE LINE # 263
                                           ; SOURCE LINE # 264
                                           ; SOURCE LINE # 265
002C         ?C0011:
002C 22                RET     
             ; FUNCTION _HotKey_Fn_F2 (END)

             ; FUNCTION _HotKey_Fn_F3 (BEGIN)
                                           ; SOURCE LINE # 270
0000 900000      R     MOV     DPTR,#event
                                           ; SOURCE LINE # 271
                                           ; SOURCE LINE # 272
0003 120000      R     LCALL   L?0283
0006 30E723            JNB     ACC.7,?C0017
                                           ; SOURCE LINE # 273
                                           ; SOURCE LINE # 274
0009 900000      R     MOV     DPTR,#event
000C E0                MOVX    A,@DPTR
000D 6003              JZ      ?C0014
000F B40204            CJNE    A,#02H,?C0013
0012         ?C0014:
                                           ; SOURCE LINE # 275
                                           ; SOURCE LINE # 276
0012 7FE0              MOV     R7,#0E0H
                                           ; SOURCE LINE # 277
                                           ; SOURCE LINE # 278
0014 800E              SJMP    ?C0253
0016         ?C0013:
                                           ; SOURCE LINE # 280
                                           ; SOURCE LINE # 281
0016 900000      R     MOV     DPTR,#event
0019 E0                MOVX    A,@DPTR
001A B4010F            CJNE    A,#01H,?C0017
                                           ; SOURCE LINE # 282
                                           ; SOURCE LINE # 283
001D 7FE0              MOV     R7,#0E0H
001F 120000      E     LCALL   _Buffer_Key
                                           ; SOURCE LINE # 284
0022 7FF0              MOV     R7,#0F0H
0024         ?C0253:
0024 120000      E     LCALL   _Buffer_Key
                                           ; SOURCE LINE # 285
0027 7F32              MOV     R7,#032H
0029 120000      E     LCALL   _Buffer_Key
                                           ; SOURCE LINE # 286
                                           ; SOURCE LINE # 287
                                           ; SOURCE LINE # 288
                                           ; SOURCE LINE # 289
002C         ?C0017:
002C 22                RET     
             ; FUNCTION _HotKey_Fn_F3 (END)

             ; FUNCTION _HotKey_Fn_F4 (BEGIN)
                                           ; SOURCE LINE # 294
;---- Variable 'event' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 295
                                           ; SOURCE LINE # 297
C51 COMPILER V8.12   OEM_SCANTABS                                                          07/28/2018 12:03:44 PAGE 43  

0000 EF                MOV     A,R7
0001 7016              JNZ     ?C0020
                                           ; SOURCE LINE # 298
                                           ; SOURCE LINE # 299
0003 900000      E     MOV     DPTR,#SYS_MISC1
0006 E0                MOVX    A,@DPTR
0007 30E70F            JNB     ACC.7,?C0020
                                           ; SOURCE LINE # 300
                                           ; SOURCE LINE # 301
000A E4                CLR     A
000B 900000      E     MOV     DPTR,#uVPCeventSource
000E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 302
000F 900000      E     MOV     DPTR,#uVPCeventSource2
0012 04                INC     A
0013 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 303
0014 7F44              MOV     R7,#044H
0016 120000      E     LCALL   _ECSMI_SCIEvent
                                           ; SOURCE LINE # 304
                                           ; SOURCE LINE # 305
                                           ; SOURCE LINE # 342
0019         ?C0020:
0019 22                RET     
             ; FUNCTION _HotKey_Fn_F4 (END)

             ; FUNCTION _HotKey_Fn_F5 (BEGIN)
                                           ; SOURCE LINE # 347
0000 900000      R     MOV     DPTR,#event
                                           ; SOURCE LINE # 348
                                           ; SOURCE LINE # 349
0003 120000      R     LCALL   L?0283
0006 30E71C            JNB     ACC.7,?C0026
                                           ; SOURCE LINE # 350
                                           ; SOURCE LINE # 351
0009 900000      R     MOV     DPTR,#event
000C E0                MOVX    A,@DPTR
000D 6011              JZ      ?C0254
000F B40202            CJNE    A,#02H,?C0022
0012         ?C0023:
                                           ; SOURCE LINE # 352
                                           ; SOURCE LINE # 353
                                           ; SOURCE LINE # 354
0012 800C              SJMP    ?C0254
0014         ?C0022:
                                           ; SOURCE LINE # 356
                                           ; SOURCE LINE # 357
0014 900000      R     MOV     DPTR,#event
0017 E0                MOVX    A,@DPTR
0018 B4010A            CJNE    A,#01H,?C0026
                                           ; SOURCE LINE # 358
                                           ; SOURCE LINE # 359
001B 7FF0              MOV     R7,#0F0H
001D 120000      E     LCALL   _Buffer_Key
                                           ; SOURCE LINE # 360
0020         ?C0254:
0020 7F03              MOV     R7,#03H
0022 120000      E     LCALL   _Buffer_Key
                                           ; SOURCE LINE # 361
                                           ; SOURCE LINE # 362
                                           ; SOURCE LINE # 363
                                           ; SOURCE LINE # 364
C51 COMPILER V8.12   OEM_SCANTABS                                                          07/28/2018 12:03:44 PAGE 44  

0025         ?C0026:
0025 22                RET     
             ; FUNCTION _HotKey_Fn_F5 (END)

             ; FUNCTION _HotKey_Fn_F6 (BEGIN)
                                           ; SOURCE LINE # 369
;---- Variable 'event' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 370
                                           ; SOURCE LINE # 371
0000 900000      E     MOV     DPTR,#SYS_MISC1
0003 E0                MOVX    A,@DPTR
0004 30E73A            JNB     ACC.7,?C0036
0007 900000      E     MOV     DPTR,#TouchPadCount
000A E0                MOVX    A,@DPTR
000B 7034              JNZ     ?C0036
                                           ; SOURCE LINE # 372
                                           ; SOURCE LINE # 415
000D EF                MOV     A,R7
000E 7031              JNZ     ?C0036
                                           ; SOURCE LINE # 416
                                           ; SOURCE LINE # 417
0010 900000      E     MOV     DPTR,#pDevStatus1
0013 E0                MOVX    A,@DPTR
0014 30E52A            JNB     ACC.5,?C0036
                                           ; SOURCE LINE # 418
                                           ; SOURCE LINE # 419
0017 E0                MOVX    A,@DPTR
0018 30E70E            JNB     ACC.7,?C0030
                                           ; SOURCE LINE # 420
                                           ; SOURCE LINE # 421
001B E0                MOVX    A,@DPTR
001C 54FD              ANL     A,#0FDH
001E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 422
001F 7F3E              MOV     R7,#03EH
                                           ; SOURCE LINE # 423
                                           ; SOURCE LINE # 424
0021 120000      R     LCALL   L?0281
0024 30E716            JNB     ACC.7,?C0256
                                           ; SOURCE LINE # 425
                                           ; SOURCE LINE # 426
                                           ; SOURCE LINE # 427
0027 800F              SJMP    ?C0255
0029         ?C0030:
                                           ; SOURCE LINE # 434
                                           ; SOURCE LINE # 435
0029 900000      E     MOV     DPTR,#pDevStatus1
002C E0                MOVX    A,@DPTR
002D 4402              ORL     A,#02H
002F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 436
0030 7F3F              MOV     R7,#03FH
                                           ; SOURCE LINE # 437
                                           ; SOURCE LINE # 438
0032 120000      R     LCALL   L?0281
0035 30E705            JNB     ACC.7,?C0034
                                           ; SOURCE LINE # 439
                                           ; SOURCE LINE # 440
0038         ?C0255:
0038 E0                MOVX    A,@DPTR
0039 4480              ORL     A,#080H
003B F0                MOVX    @DPTR,A
C51 COMPILER V8.12   OEM_SCANTABS                                                          07/28/2018 12:03:44 PAGE 45  

                                           ; SOURCE LINE # 441
003C 22                RET     
003D         ?C0034:
                                           ; SOURCE LINE # 443
                                           ; SOURCE LINE # 444
003D         ?C0256:
003D E0                MOVX    A,@DPTR
003E 547F              ANL     A,#07FH
0040 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 445
                                           ; SOURCE LINE # 446
                                           ; SOURCE LINE # 447
                                           ; SOURCE LINE # 449
                                           ; SOURCE LINE # 451
                                           ; SOURCE LINE # 452
0041         ?C0036:
0041 22                RET     
0042         L?0281:
0042 120000      E     LCALL   _ECSMI_SCIEvent
0045 900000      E     MOV     DPTR,#pDevStatus3
0048 E0                MOVX    A,@DPTR
0049 4440              ORL     A,#040H
004B F0                MOVX    @DPTR,A
004C 900000      E     MOV     DPTR,#pDevStatus1
004F E0                MOVX    A,@DPTR
0050 900000      E     MOV     DPTR,#pDevStatus3
0053 22                RET     
             ; FUNCTION _HotKey_Fn_F6 (END)

             ; FUNCTION _HotKey_Fn_F7 (BEGIN)
                                           ; SOURCE LINE # 457
;---- Variable 'event' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 458
                                           ; SOURCE LINE # 461
0000 EF                MOV     A,R7
0001 7017              JNZ     ?C0039
                                           ; SOURCE LINE # 462
                                           ; SOURCE LINE # 463
0003 900000      E     MOV     DPTR,#SYS_MISC1
0006 E0                MOVX    A,@DPTR
0007 30E710            JNB     ACC.7,?C0039
                                           ; SOURCE LINE # 464
                                           ; SOURCE LINE # 465
000A E4                CLR     A
000B 900000      E     MOV     DPTR,#uVPCeventSource
000E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 466
000F 900000      E     MOV     DPTR,#uVPCeventSource2
0012 7420              MOV     A,#020H
0014 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 467
0015 7F44              MOV     R7,#044H
0017 120000      E     LCALL   _ECSMI_SCIEvent
                                           ; SOURCE LINE # 469
                                           ; SOURCE LINE # 470
                                           ; SOURCE LINE # 473
001A         ?C0039:
001A 22                RET     
             ; FUNCTION _HotKey_Fn_F7 (END)

             ; FUNCTION _HotKey_Fn_F8 (BEGIN)
                                           ; SOURCE LINE # 478
C51 COMPILER V8.12   OEM_SCANTABS                                                          07/28/2018 12:03:44 PAGE 46  

;---- Variable 'event' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 479
                                           ; SOURCE LINE # 481
0000 EF                MOV     A,R7
0001 701F              JNZ     ?C0042
                                           ; SOURCE LINE # 482
                                           ; SOURCE LINE # 483
0003 900000      E     MOV     DPTR,#SYS_MISC1
0006 E0                MOVX    A,@DPTR
0007 30E718            JNB     ACC.7,?C0042
                                           ; SOURCE LINE # 484
                                           ; SOURCE LINE # 485
000A 900000      E     MOV     DPTR,#LENOVODEVICE
000D E0                MOVX    A,@DPTR
000E 6410              XRL     A,#010H
0010 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 486
0011 7480              MOV     A,#080H
                                           ; SOURCE LINE # 487
0013 120000      R     LCALL   L?0267
                                           ; SOURCE LINE # 488
0016 7F44              MOV     R7,#044H
0018 120000      E     LCALL   _ECSMI_SCIEvent
                                           ; SOURCE LINE # 489
001B 900000      E     MOV     DPTR,#pDevStus
001E E0                MOVX    A,@DPTR
001F 6410              XRL     A,#010H
0021 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 490
                                           ; SOURCE LINE # 491
                                           ; SOURCE LINE # 532
0022         ?C0042:
0022 22                RET     
             ; FUNCTION _HotKey_Fn_F8 (END)

             ; FUNCTION _HotKey_Fn_F9 (BEGIN)
                                           ; SOURCE LINE # 537
0000 900000      R     MOV     DPTR,#event
                                           ; SOURCE LINE # 538
                                           ; SOURCE LINE # 540
0003 120000      R     LCALL   L?0283
0006 30E737            JNB     ACC.7,?C0048
                                           ; SOURCE LINE # 541
                                           ; SOURCE LINE # 542
0009 900000      R     MOV     DPTR,#event
000C E0                MOVX    A,@DPTR
000D 6003              JZ      ?C0045
000F B4020E            CJNE    A,#02H,?C0044
0012         ?C0045:
                                           ; SOURCE LINE # 543
                                           ; SOURCE LINE # 544
0012 7FE0              MOV     R7,#0E0H
0014 120000      E     LCALL   _Buffer_Key
                                           ; SOURCE LINE # 545
0017 7F1F              MOV     R7,#01FH
0019 120000      E     LCALL   _Buffer_Key
                                           ; SOURCE LINE # 546
001C 7F4B              MOV     R7,#04BH
                                           ; SOURCE LINE # 547
001E 801D              SJMP    ?C0257
0020         ?C0044:
                                           ; SOURCE LINE # 549
C51 COMPILER V8.12   OEM_SCANTABS                                                          07/28/2018 12:03:44 PAGE 47  

                                           ; SOURCE LINE # 550
0020 900000      R     MOV     DPTR,#event
0023 E0                MOVX    A,@DPTR
0024 B40119            CJNE    A,#01H,?C0048
                                           ; SOURCE LINE # 551
                                           ; SOURCE LINE # 552
0027 7FF0              MOV     R7,#0F0H
0029 120000      E     LCALL   _Buffer_Key
                                           ; SOURCE LINE # 553
002C 7F4B              MOV     R7,#04BH
002E 120000      E     LCALL   _Buffer_Key
                                           ; SOURCE LINE # 554
0031 7FE0              MOV     R7,#0E0H
0033 120000      E     LCALL   _Buffer_Key
                                           ; SOURCE LINE # 555
0036 7FF0              MOV     R7,#0F0H
0038 120000      E     LCALL   _Buffer_Key
                                           ; SOURCE LINE # 556
003B 7F1F              MOV     R7,#01FH
003D         ?C0257:
003D 120000      E     LCALL   _Buffer_Key
                                           ; SOURCE LINE # 557
                                           ; SOURCE LINE # 558
                                           ; SOURCE LINE # 559
                                           ; SOURCE LINE # 631
0040         ?C0048:
0040 22                RET     
             ; FUNCTION _HotKey_Fn_F9 (END)

             ; FUNCTION _HotKey_Fn_F10 (BEGIN)
                                           ; SOURCE LINE # 636
0000 900000      R     MOV     DPTR,#event
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 637
                                           ; SOURCE LINE # 639
0005 900000      E     MOV     DPTR,#ACPI_HOTKEY
0008 E0                MOVX    A,@DPTR
0009 30E348            JNB     ACC.3,?C0049
                                           ; SOURCE LINE # 640
                                           ; SOURCE LINE # 641
000C 900000      R     MOV     DPTR,#event
000F E0                MOVX    A,@DPTR
0010 FD                MOV     R5,A
0011 7024              JNZ     ?C0050
                                           ; SOURCE LINE # 642
                                           ; SOURCE LINE # 643
0013 900000      E     MOV     DPTR,#SYS_MISC1
0016 E0                MOVX    A,@DPTR
0017 30E71D            JNB     ACC.7,?C0050
                                           ; SOURCE LINE # 644
                                           ; SOURCE LINE # 645
001A 900000      E     MOV     DPTR,#SysStatus
001D E0                MOVX    A,@DPTR
001E 20E20C            JB      ACC.2,?C0052
                                           ; SOURCE LINE # 646
                                           ; SOURCE LINE # 647
0021 7F1F              MOV     R7,#01FH
0023 120000      E     LCALL   _e0_prefix_code
                                           ; SOURCE LINE # 648
0026 900000      E     MOV     DPTR,#SysStatus
0029 E0                MOVX    A,@DPTR
C51 COMPILER V8.12   OEM_SCANTABS                                                          07/28/2018 12:03:44 PAGE 48  

002A 4404              ORL     A,#04H
002C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 649
002D         ?C0052:
                                           ; SOURCE LINE # 650
002D 900000      R     MOV     DPTR,#event
0030 E0                MOVX    A,@DPTR
0031 FD                MOV     R5,A
0032 7F4D              MOV     R7,#04DH
0034 120000      E     LCALL   _simple_code
                                           ; SOURCE LINE # 651
                                           ; SOURCE LINE # 652
0037         ?C0050:
                                           ; SOURCE LINE # 654
0037 900000      R     MOV     DPTR,#event
003A E0                MOVX    A,@DPTR
003B FD                MOV     R5,A
003C 6401              XRL     A,#01H
003E 7052              JNZ     ?C0061
                                           ; SOURCE LINE # 655
                                           ; SOURCE LINE # 656
0040 900000      E     MOV     DPTR,#SYS_MISC1
0043 E0                MOVX    A,@DPTR
0044 30E74B            JNB     ACC.7,?C0061
                                           ; SOURCE LINE # 657
                                           ; SOURCE LINE # 658
0047 7F4D              MOV     R7,#04DH
0049 120000      E     LCALL   _simple_code
                                           ; SOURCE LINE # 659
004C 900000      E     MOV     DPTR,#SysStatus
004F E0                MOVX    A,@DPTR
0050 4408              ORL     A,#08H
0052 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 660
                                           ; SOURCE LINE # 661
                                           ; SOURCE LINE # 662
0053 22                RET     
0054         ?C0049:
                                           ; SOURCE LINE # 664
                                           ; SOURCE LINE # 665
0054 900000      E     MOV     DPTR,#SYS_MISC1
0057 E0                MOVX    A,@DPTR
0058 30E737            JNB     ACC.7,?C0061
                                           ; SOURCE LINE # 666
                                           ; SOURCE LINE # 667
005B 900000      R     MOV     DPTR,#event
005E E0                MOVX    A,@DPTR
005F 6003              JZ      ?C0058
0061 B4020E            CJNE    A,#02H,?C0057
0064         ?C0058:
                                           ; SOURCE LINE # 668
                                           ; SOURCE LINE # 669
0064 7FE0              MOV     R7,#0E0H
0066 120000      E     LCALL   _Buffer_Key
                                           ; SOURCE LINE # 670
0069 7F1F              MOV     R7,#01FH
006B 120000      E     LCALL   _Buffer_Key
                                           ; SOURCE LINE # 671
006E 7F4D              MOV     R7,#04DH
                                           ; SOURCE LINE # 672
0070 801D              SJMP    ?C0258
0072         ?C0057:
C51 COMPILER V8.12   OEM_SCANTABS                                                          07/28/2018 12:03:44 PAGE 49  

                                           ; SOURCE LINE # 674
                                           ; SOURCE LINE # 675
0072 900000      R     MOV     DPTR,#event
0075 E0                MOVX    A,@DPTR
0076 B40119            CJNE    A,#01H,?C0061
                                           ; SOURCE LINE # 676
                                           ; SOURCE LINE # 677
0079 7FF0              MOV     R7,#0F0H
007B 120000      E     LCALL   _Buffer_Key
                                           ; SOURCE LINE # 678
007E 7F4D              MOV     R7,#04DH
0080 120000      E     LCALL   _Buffer_Key
                                           ; SOURCE LINE # 679
0083 7FE0              MOV     R7,#0E0H
0085 120000      E     LCALL   _Buffer_Key
                                           ; SOURCE LINE # 680
0088 7FF0              MOV     R7,#0F0H
008A 120000      E     LCALL   _Buffer_Key
                                           ; SOURCE LINE # 681
008D 7F1F              MOV     R7,#01FH
008F         ?C0258:
008F 120000      E     LCALL   _Buffer_Key
                                           ; SOURCE LINE # 682
                                           ; SOURCE LINE # 683
                                           ; SOURCE LINE # 684
                                           ; SOURCE LINE # 685
                                           ; SOURCE LINE # 710
0092         ?C0061:
0092 22                RET     
             ; FUNCTION _HotKey_Fn_F10 (END)

             ; FUNCTION _HotKey_Fn_F11 (BEGIN)
                                           ; SOURCE LINE # 715
0000 900000      R     MOV     DPTR,#event
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 716
                                           ; SOURCE LINE # 717
0005 6401              XRL     A,#01H
0007 604C              JZ      ?C0062
                                           ; SOURCE LINE # 718
                                           ; SOURCE LINE # 719
0009 900000      E     MOV     DPTR,#cBrightDnDelayCnt
000C E0                MOVX    A,@DPTR
000D 703F              JNZ     ?C0063
                                           ; SOURCE LINE # 720
                                           ; SOURCE LINE # 721
000F 7405              MOV     A,#05H
0011 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 722
0012 900000      E     MOV     DPTR,#uVPCeventSource
0015 7410              MOV     A,#010H
                                           ; SOURCE LINE # 723
0017 120000      R     LCALL   L?0268
                                           ; SOURCE LINE # 725
001A 900000      E     MOV     DPTR,#SYS_STATUS
001D E0                MOVX    A,@DPTR
001E 5407              ANL     A,#07H
0020 6022              JZ      ?C0064
                                           ; SOURCE LINE # 726
                                           ; SOURCE LINE # 727
0022 E0                MOVX    A,@DPTR
C51 COMPILER V8.12   OEM_SCANTABS                                                          07/28/2018 12:03:44 PAGE 50  

0023 5407              ANL     A,#07H
0025 6403              XRL     A,#03H
0027 7016              JNZ     ?C0065
                                           ; SOURCE LINE # 728
                                           ; SOURCE LINE # 729
0029 900000      E     MOV     DPTR,#nBrightValue
002C E0                MOVX    A,@DPTR
002D 6003              JZ      ?C0066
                                           ; SOURCE LINE # 730
                                           ; SOURCE LINE # 731
                                           ; SOURCE LINE # 732
002F 120000      R     LCALL   L?0286
                                           ; SOURCE LINE # 733
0032         ?C0066:
                                           ; SOURCE LINE # 734
0032 120000      R     LCALL   L?0288
0035 30E029            JNB     ACC.0,?C0074
                                           ; SOURCE LINE # 735
                                           ; SOURCE LINE # 736
0038 7F44              MOV     R7,#044H
003A 120000      E     LCALL   _ECQEvent
                                           ; SOURCE LINE # 737
                                           ; SOURCE LINE # 738
                                           ; SOURCE LINE # 739
003D 8000              SJMP    ?C0259
003F         ?C0065:
                                           ; SOURCE LINE # 741
                                           ; SOURCE LINE # 742
003F         ?C0259:
003F 7F11              MOV     R7,#011H
0041 020000      E     LJMP    _ECQEvent
                                           ; SOURCE LINE # 743
                                           ; SOURCE LINE # 744
0044         ?C0064:
                                           ; SOURCE LINE # 747
                                           ; SOURCE LINE # 748
0044 900000      E     MOV     DPTR,#nBrightValue
0047 E0                MOVX    A,@DPTR
0048 6017              JZ      ?C0074
                                           ; SOURCE LINE # 749
                                           ; SOURCE LINE # 750
                                           ; SOURCE LINE # 751
004A 120000      R     LCALL   L?0286
                                           ; SOURCE LINE # 752
                                           ; SOURCE LINE # 753
                                           ; SOURCE LINE # 754
004D 22                RET     
004E         ?C0063:
                                           ; SOURCE LINE # 756
                                           ; SOURCE LINE # 757
004E 900000      E     MOV     DPTR,#cBrightDnDelayCnt
0051 E0                MOVX    A,@DPTR
0052 14                DEC     A
0053 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 758
                                           ; SOURCE LINE # 759
0054 22                RET     
0055         ?C0062:
                                           ; SOURCE LINE # 760
0055 900000      R     MOV     DPTR,#event
0058 E0                MOVX    A,@DPTR
0059 B40105            CJNE    A,#01H,?C0074
C51 COMPILER V8.12   OEM_SCANTABS                                                          07/28/2018 12:03:44 PAGE 51  

                                           ; SOURCE LINE # 761
                                           ; SOURCE LINE # 762
005C E4                CLR     A
005D 900000      E     MOV     DPTR,#cBrightDnDelayCnt
0060 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 763
                                           ; SOURCE LINE # 765
0061         ?C0074:
0061 22                RET     
             ; FUNCTION _HotKey_Fn_F11 (END)

             ; FUNCTION _HotKey_Fn_F12 (BEGIN)
                                           ; SOURCE LINE # 770
0000 900000      R     MOV     DPTR,#event
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 771
                                           ; SOURCE LINE # 772
0005 6401              XRL     A,#01H
0007 6056              JZ      ?C0075
                                           ; SOURCE LINE # 773
                                           ; SOURCE LINE # 774
0009 900000      E     MOV     DPTR,#cBrightUpDelayCnt
000C E0                MOVX    A,@DPTR
000D 7049              JNZ     ?C0076
                                           ; SOURCE LINE # 775
                                           ; SOURCE LINE # 776
000F 7405              MOV     A,#05H
0011 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 777
0012 900000      E     MOV     DPTR,#uVPCeventSource
0015 7410              MOV     A,#010H
                                           ; SOURCE LINE # 778
0017 120000      R     LCALL   L?0268
                                           ; SOURCE LINE # 780
001A 900000      E     MOV     DPTR,#SYS_STATUS
001D E0                MOVX    A,@DPTR
001E 5407              ANL     A,#07H
0020 6027              JZ      ?C0077
                                           ; SOURCE LINE # 781
                                           ; SOURCE LINE # 782
0022 E0                MOVX    A,@DPTR
0023 5407              ANL     A,#07H
0025 6403              XRL     A,#03H
0027 701B              JNZ     ?C0078
                                           ; SOURCE LINE # 783
                                           ; SOURCE LINE # 784
0029 900000      E     MOV     DPTR,#nBrightValue
002C E0                MOVX    A,@DPTR
002D C3                CLR     C
002E 9409              SUBB    A,#09H
0030 5005              JNC     ?C0079
                                           ; SOURCE LINE # 785
                                           ; SOURCE LINE # 786
0032 E0                MOVX    A,@DPTR
0033 04                INC     A
                                           ; SOURCE LINE # 787
0034 120000      R     LCALL   L?0287
                                           ; SOURCE LINE # 788
0037         ?C0079:
                                           ; SOURCE LINE # 789
0037 120000      R     LCALL   L?0288
C51 COMPILER V8.12   OEM_SCANTABS                                                          07/28/2018 12:03:44 PAGE 52  

003A 30E02E            JNB     ACC.0,?C0087
                                           ; SOURCE LINE # 790
                                           ; SOURCE LINE # 791
003D 7F44              MOV     R7,#044H
003F 120000      E     LCALL   _ECQEvent
                                           ; SOURCE LINE # 792
                                           ; SOURCE LINE # 793
                                           ; SOURCE LINE # 794
0042 8000              SJMP    ?C0260
0044         ?C0078:
                                           ; SOURCE LINE # 796
                                           ; SOURCE LINE # 797
0044         ?C0260:
0044 7F12              MOV     R7,#012H
0046 020000      E     LJMP    _ECQEvent
                                           ; SOURCE LINE # 798
                                           ; SOURCE LINE # 799
0049         ?C0077:
                                           ; SOURCE LINE # 802
                                           ; SOURCE LINE # 803
0049 900000      E     MOV     DPTR,#nBrightValue
004C E0                MOVX    A,@DPTR
004D C3                CLR     C
004E 9409              SUBB    A,#09H
0050 5019              JNC     ?C0087
                                           ; SOURCE LINE # 804
                                           ; SOURCE LINE # 805
0052 E0                MOVX    A,@DPTR
0053 04                INC     A
                                           ; SOURCE LINE # 806
0054 120000      R     LCALL   L?0287
                                           ; SOURCE LINE # 807
                                           ; SOURCE LINE # 808
                                           ; SOURCE LINE # 809
0057 22                RET     
0058         ?C0076:
                                           ; SOURCE LINE # 811
                                           ; SOURCE LINE # 812
0058 900000      E     MOV     DPTR,#cBrightUpDelayCnt
005B E0                MOVX    A,@DPTR
005C 14                DEC     A
005D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 813
                                           ; SOURCE LINE # 814
005E 22                RET     
005F         ?C0075:
                                           ; SOURCE LINE # 815
005F 900000      R     MOV     DPTR,#event
0062 E0                MOVX    A,@DPTR
0063 B40105            CJNE    A,#01H,?C0087
                                           ; SOURCE LINE # 816
                                           ; SOURCE LINE # 817
0066 E4                CLR     A
0067 900000      E     MOV     DPTR,#cBrightUpDelayCnt
006A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 818
                                           ; SOURCE LINE # 819
006B         ?C0087:
006B 22                RET     
             ; FUNCTION _HotKey_Fn_F12 (END)

             ; FUNCTION _HotKey_Fn_Plus (BEGIN)
C51 COMPILER V8.12   OEM_SCANTABS                                                          07/28/2018 12:03:44 PAGE 53  

                                           ; SOURCE LINE # 824
;---- Variable 'event' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 825
                                           ; SOURCE LINE # 826
0000 EF                MOV     A,R7
0001 700F              JNZ     ?C0090
                                           ; SOURCE LINE # 827
                                           ; SOURCE LINE # 828
0003 900000      E     MOV     DPTR,#SYS_MISC1
0006 E0                MOVX    A,@DPTR
0007 30E708            JNB     ACC.7,?C0090
                                           ; SOURCE LINE # 829
                                           ; SOURCE LINE # 831
                                           ; SOURCE LINE # 832
                                           ; SOURCE LINE # 833
                                           ; SOURCE LINE # 834
000A 120000      R     LCALL   L?0264
                                           ; SOURCE LINE # 835
000D 7F44              MOV     R7,#044H
000F 120000      E     LCALL   _ECSMI_SCIEvent
                                           ; SOURCE LINE # 836
                                           ; SOURCE LINE # 837
                                           ; SOURCE LINE # 838
                                           ; SOURCE LINE # 839
0012         ?C0090:
0012 22                RET     
             ; FUNCTION _HotKey_Fn_Plus (END)

             ; FUNCTION _HotKey_Fn_Minus (BEGIN)
                                           ; SOURCE LINE # 843
;---- Variable 'event' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 844
                                           ; SOURCE LINE # 845
0000 EF                MOV     A,R7
0001 7015              JNZ     ?C0093
                                           ; SOURCE LINE # 846
                                           ; SOURCE LINE # 847
0003 900000      E     MOV     DPTR,#SYS_MISC1
0006 E0                MOVX    A,@DPTR
0007 30E70E            JNB     ACC.7,?C0093
                                           ; SOURCE LINE # 848
                                           ; SOURCE LINE # 850
                                           ; SOURCE LINE # 851
000A 900000      E     MOV     DPTR,#EM9_NEWFUN
000D E0                MOVX    A,@DPTR
000E 4402              ORL     A,#02H
                                           ; SOURCE LINE # 852
                                           ; SOURCE LINE # 853
0010 120000      R     LCALL   L?0265
                                           ; SOURCE LINE # 854
0013 7F44              MOV     R7,#044H
0015 120000      E     LCALL   _ECSMI_SCIEvent
                                           ; SOURCE LINE # 855
                                           ; SOURCE LINE # 856
                                           ; SOURCE LINE # 857
                                           ; SOURCE LINE # 858
0018         ?C0093:
0018 22                RET     
             ; FUNCTION _HotKey_Fn_Minus (END)

             ; FUNCTION _HotKey_Fn_ESC (BEGIN)
                                           ; SOURCE LINE # 863
C51 COMPILER V8.12   OEM_SCANTABS                                                          07/28/2018 12:03:44 PAGE 54  

0000 900000      R     MOV     DPTR,#event
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 864
                                           ; SOURCE LINE # 878
0005 22                RET     
             ; FUNCTION _HotKey_Fn_ESC (END)

             ; FUNCTION _HotKey_Fn_UP (BEGIN)
                                           ; SOURCE LINE # 883
0000 900000      R     MOV     DPTR,#event
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 884
                                           ; SOURCE LINE # 921
0005 22                RET     
             ; FUNCTION _HotKey_Fn_UP (END)

             ; FUNCTION _HotKey_Fn_DOWN (BEGIN)
                                           ; SOURCE LINE # 926
0000 900000      R     MOV     DPTR,#event
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 927
                                           ; SOURCE LINE # 962
0005 22                RET     
             ; FUNCTION _HotKey_Fn_DOWN (END)

             ; FUNCTION _HotKey_Fn_LEFT (BEGIN)
                                           ; SOURCE LINE # 967
;---- Variable 'event' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 968
                                           ; SOURCE LINE # 969
0000 EF                MOV     A,R7
0001 700F              JNZ     ?C0099
                                           ; SOURCE LINE # 970
                                           ; SOURCE LINE # 971
0003 900000      E     MOV     DPTR,#SYS_MISC1
0006 E0                MOVX    A,@DPTR
0007 30E708            JNB     ACC.7,?C0099
                                           ; SOURCE LINE # 972
                                           ; SOURCE LINE # 973
                                           ; SOURCE LINE # 974
                                           ; SOURCE LINE # 975
000A 120000      R     LCALL   L?0264
                                           ; SOURCE LINE # 976
000D 7F44              MOV     R7,#044H
000F 120000      E     LCALL   _ECSMI_SCIEvent
                                           ; SOURCE LINE # 977
                                           ; SOURCE LINE # 978
                                           ; SOURCE LINE # 979
0012         ?C0099:
0012 22                RET     
             ; FUNCTION _HotKey_Fn_LEFT (END)

             ; FUNCTION _HotKey_Fn_RIGHT (BEGIN)
                                           ; SOURCE LINE # 984
;---- Variable 'event' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 985
                                           ; SOURCE LINE # 986
0000 EF                MOV     A,R7
0001 7015              JNZ     ?C0102
C51 COMPILER V8.12   OEM_SCANTABS                                                          07/28/2018 12:03:44 PAGE 55  

                                           ; SOURCE LINE # 987
                                           ; SOURCE LINE # 988
0003 900000      E     MOV     DPTR,#SYS_MISC1
0006 E0                MOVX    A,@DPTR
0007 30E70E            JNB     ACC.7,?C0102
                                           ; SOURCE LINE # 989
                                           ; SOURCE LINE # 990
000A 900000      E     MOV     DPTR,#EM9_NEWFUN
000D E0                MOVX    A,@DPTR
000E 4402              ORL     A,#02H
                                           ; SOURCE LINE # 991
                                           ; SOURCE LINE # 992
0010 120000      R     LCALL   L?0265
                                           ; SOURCE LINE # 993
0013 7F44              MOV     R7,#044H
0015 120000      E     LCALL   _ECSMI_SCIEvent
                                           ; SOURCE LINE # 994
                                           ; SOURCE LINE # 995
                                           ; SOURCE LINE # 996
0018         ?C0102:
0018 22                RET     
             ; FUNCTION _HotKey_Fn_RIGHT (END)

             ; FUNCTION _HotKey_Fn_Space (BEGIN)
                                           ; SOURCE LINE # 1003
;---- Variable 'event' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 1004
                                           ; SOURCE LINE # 1023
0000 900000      E     MOV     DPTR,#SysPowState
0003 E0                MOVX    A,@DPTR
0004 6455              XRL     A,#055H
0006 603D              JZ      ?C0105
0008 E0                MOVX    A,@DPTR
0009 6433              XRL     A,#033H
000B 6038              JZ      ?C0105
                                           ; SOURCE LINE # 1024
                                           ; SOURCE LINE # 1026
000D         ?C0103:
                                           ; SOURCE LINE # 1029
000D EF                MOV     A,R7
000E 7035              JNZ     ?C0105
                                           ; SOURCE LINE # 1030
                                           ; SOURCE LINE # 1031
0010 900000      E     MOV     DPTR,#LED_KB_PWM_Step
0013 E0                MOVX    A,@DPTR
0014 2402              ADD     A,#02H
0016 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1032
0017 E0                MOVX    A,@DPTR
0018 D3                SETB    C
0019 9402              SUBB    A,#02H
001B 4002              JC      ?C0107
                                           ; SOURCE LINE # 1033
                                           ; SOURCE LINE # 1034
001D E4                CLR     A
001E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1035
001F         ?C0107:
                                           ; SOURCE LINE # 1037
001F 900000      E     MOV     DPTR,#LED_KB_PWM_Step
0022 E0                MOVX    A,@DPTR
0023 900000      E     MOV     DPTR,#EMStatusBit
C51 COMPILER V8.12   OEM_SCANTABS                                                          07/28/2018 12:03:44 PAGE 56  

0026 6006              JZ      ?C0108
                                           ; SOURCE LINE # 1038
                                           ; SOURCE LINE # 1039
0028 E0                MOVX    A,@DPTR
0029 4401              ORL     A,#01H
002B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1040
002C 8004              SJMP    ?C0109
002E         ?C0108:
                                           ; SOURCE LINE # 1042
                                           ; SOURCE LINE # 1043
002E E0                MOVX    A,@DPTR
002F 54FE              ANL     A,#0FEH
0031 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1044
0032         ?C0109:
                                           ; SOURCE LINE # 1046
0032 E4                CLR     A
0033 900000      E     MOV     DPTR,#UpdateLEDBL_delay
0036 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1047
0037 120000      R     LCALL   L?0289
003A 30E008            JNB     ACC.0,?C0105
                                           ; SOURCE LINE # 1048
                                           ; SOURCE LINE # 1049
                                           ; SOURCE LINE # 1050
003D 120000      R     LCALL   L?0266
                                           ; SOURCE LINE # 1051
0040 7F44              MOV     R7,#044H
0042 120000      E     LCALL   _ECSMI_SCIEvent
                                           ; SOURCE LINE # 1052
                                           ; SOURCE LINE # 1054
                                           ; SOURCE LINE # 1055
0045         ?C0105:
0045 22                RET     
             ; FUNCTION _HotKey_Fn_Space (END)

             ; FUNCTION _CrisisHotkey05 (BEGIN)
                                           ; SOURCE LINE # 1596
0000 900000      R     MOV     DPTR,#event
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1597
                                           ; SOURCE LINE # 1605
0005 900000      E     MOV     DPTR,#F2_Pressed
0008 E0                MOVX    A,@DPTR
0009 4401              ORL     A,#01H
000B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1606
000C E0                MOVX    A,@DPTR
000D 54FD              ANL     A,#0FDH
000F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1608
0010 22                RET     
             ; FUNCTION _CrisisHotkey05 (END)

             ; FUNCTION _CrisisHotkey06 (BEGIN)
                                           ; SOURCE LINE # 1610
0000 900000      R     MOV     DPTR,#event
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1611
C51 COMPILER V8.12   OEM_SCANTABS                                                          07/28/2018 12:03:44 PAGE 57  

                                           ; SOURCE LINE # 1619
0005 900000      E     MOV     DPTR,#F2_Pressed
0008 E0                MOVX    A,@DPTR
0009 4402              ORL     A,#02H
000B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1620
000C E0                MOVX    A,@DPTR
000D 54FE              ANL     A,#0FEH
000F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1622
0010 22                RET     
             ; FUNCTION _CrisisHotkey06 (END)

             ; FUNCTION _FnHotkey01 (BEGIN)
                                           ; SOURCE LINE # 1625
;---- Variable 'event' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 1626
                                           ; SOURCE LINE # 1627
0000 EF                MOV     A,R7
0001 B40106            CJNE    A,#01H,?C0113
                                           ; SOURCE LINE # 1628
                                           ; SOURCE LINE # 1629
0004 E4                CLR     A
0005 900000      E     MOV     DPTR,#DebugCombineKey
0008 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1630
0009 22                RET     
000A         ?C0113:
                                           ; SOURCE LINE # 1631
000A EF                MOV     A,R7
000B 7005              JNZ     ?C0116
                                           ; SOURCE LINE # 1632
                                           ; SOURCE LINE # 1633
000D 900000      E     MOV     DPTR,#DebugCombineKey
0010 04                INC     A
0011 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1634
                                           ; SOURCE LINE # 1635
0012         ?C0116:
0012 22                RET     
             ; FUNCTION _FnHotkey01 (END)

             ; FUNCTION _FnHotkey02 (BEGIN)
                                           ; SOURCE LINE # 1637
;---- Variable 'event' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 1638
                                           ; SOURCE LINE # 1639
0000 EF                MOV     A,R7
0001 7010              JNZ     ?C0120
                                           ; SOURCE LINE # 1640
                                           ; SOURCE LINE # 1641
0003 900000      E     MOV     DPTR,#DebugCombineKey
0006 E0                MOVX    A,@DPTR
0007 B40104            CJNE    A,#01H,?C0118
                                           ; SOURCE LINE # 1642
000A 7402              MOV     A,#02H
000C F0                MOVX    @DPTR,A
000D 22                RET     
000E         ?C0118:
                                           ; SOURCE LINE # 1644
000E E4                CLR     A
000F 900000      E     MOV     DPTR,#DebugCombineKey
C51 COMPILER V8.12   OEM_SCANTABS                                                          07/28/2018 12:03:44 PAGE 58  

0012 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1645
                                           ; SOURCE LINE # 1646
0013         ?C0120:
0013 22                RET     
             ; FUNCTION _FnHotkey02 (END)

             ; FUNCTION _FnHotkey03 (BEGIN)
                                           ; SOURCE LINE # 1648
;---- Variable 'event' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 1649
                                           ; SOURCE LINE # 1650
0000 EF                MOV     A,R7
0001 7010              JNZ     ?C0124
                                           ; SOURCE LINE # 1651
                                           ; SOURCE LINE # 1652
0003 900000      E     MOV     DPTR,#DebugCombineKey
0006 E0                MOVX    A,@DPTR
0007 B40204            CJNE    A,#02H,?C0122
                                           ; SOURCE LINE # 1653
000A 7403              MOV     A,#03H
000C F0                MOVX    @DPTR,A
000D 22                RET     
000E         ?C0122:
                                           ; SOURCE LINE # 1655
000E E4                CLR     A
000F 900000      E     MOV     DPTR,#DebugCombineKey
0012 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1656
                                           ; SOURCE LINE # 1657
0013         ?C0124:
0013 22                RET     
             ; FUNCTION _FnHotkey03 (END)

             ; FUNCTION _FnHotkey04 (BEGIN)
                                           ; SOURCE LINE # 1659
;---- Variable 'event' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 1660
                                           ; SOURCE LINE # 1661
0000 900000      E     MOV     DPTR,#LENOVOPMFW_Temp
0003 E0                MOVX    A,@DPTR
0004 20E427            JB      ACC.4,?C0129
                                           ; SOURCE LINE # 1662
                                           ; SOURCE LINE # 1663
0007 EF                MOV     A,R7
0008 7024              JNZ     ?C0129
                                           ; SOURCE LINE # 1664
                                           ; SOURCE LINE # 1665
000A 900000      E     MOV     DPTR,#DebugCombineKey
000D E0                MOVX    A,@DPTR
000E B40318            CJNE    A,#03H,?C0127
                                           ; SOURCE LINE # 1666
                                           ; SOURCE LINE # 1667
0011 7404              MOV     A,#04H
0013 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1668
                                           ; SOURCE LINE # 1669
0014 120000      R     LCALL   L?0292
0017 74F1              MOV     A,#0F1H
0019 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1670
001A 9022BF            MOV     DPTR,#022BFH
C51 COMPILER V8.12   OEM_SCANTABS                                                          07/28/2018 12:03:44 PAGE 59  

001D E0                MOVX    A,@DPTR
001E 900000      E     MOV     DPTR,#eEEPROMData
0021 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1671
0022 120000      E     LCALL   Update_EEPROMMark
                                           ; SOURCE LINE # 1672
                                           ; SOURCE LINE # 1673
0025 120000      R     LCALL   L?0290
                                           ; SOURCE LINE # 1674
0028 22                RET     
0029         ?C0127:
                                           ; SOURCE LINE # 1676
0029 E4                CLR     A
002A 900000      E     MOV     DPTR,#DebugCombineKey
002D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1677
                                           ; SOURCE LINE # 1678
                                           ; SOURCE LINE # 1679
002E         ?C0129:
002E 22                RET     
             ; FUNCTION _FnHotkey04 (END)

             ; FUNCTION _CheckBootHotKey (BEGIN)
                                           ; SOURCE LINE # 1689
0000 900000      R     MOV     DPTR,#matrix
                                           ; SOURCE LINE # 1690
                                           ; SOURCE LINE # 1692
0003 120000      R     LCALL   L?0272
0006         ?C0130:
0006 900000      R     MOV     DPTR,#index
0009 E0                MOVX    A,@DPTR
000A FF                MOV     R7,A
000B C3                CLR     C
000C 9404              SUBB    A,#04H
000E 5037              JNC     ?C0131
                                           ; SOURCE LINE # 1693
                                           ; SOURCE LINE # 1694
0010 EF                MOV     A,R7
0011 25E0              ADD     A,ACC
0013 25E0              ADD     A,ACC
0015 2400        R     ADD     A,#LOW asBootHotKeyStruct
0017 F582              MOV     DPL,A
0019 E4                CLR     A
001A 3400        R     ADDC    A,#HIGH asBootHotKeyStruct
001C F583              MOV     DPH,A
001E E4                CLR     A
001F 93                MOVC    A,@A+DPTR
0020 FF                MOV     R7,A
0021 900000      R     MOV     DPTR,#matrix
0024 E0                MOVX    A,@DPTR
0025 7003              JNZ     ?C0247
0027 A3                INC     DPTR
0028 E0                MOVX    A,@DPTR
0029 6F                XRL     A,R7
002A         ?C0247:
002A 7013              JNZ     ?C0132
                                           ; SOURCE LINE # 1695
                                           ; SOURCE LINE # 1696
002C 900000      R     MOV     DPTR,#event
002F 120000      R     LCALL   L?0275
0032 2400        R     ADD     A,#LOW asBootHotKeyStruct+01H
0034 F582              MOV     DPL,A
C51 COMPILER V8.12   OEM_SCANTABS                                                          07/28/2018 12:03:44 PAGE 60  

0036 E4                CLR     A
0037 3400        R     ADDC    A,#HIGH asBootHotKeyStruct+01H
0039 120000      R     LCALL   L?0277
003C 020000      E     LJMP    ?C?ICALL2
                                           ; SOURCE LINE # 1698
                                           ; SOURCE LINE # 1699
003F         ?C0132:
003F 900000      R     MOV     DPTR,#index
0042 E0                MOVX    A,@DPTR
0043 04                INC     A
0044 F0                MOVX    @DPTR,A
0045 80BF              SJMP    ?C0130
0047         ?C0131:
                                           ; SOURCE LINE # 1700
0047 E4                CLR     A
0048 900000      E     MOV     DPTR,#DebugCombineKey
004B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1701
004C         ?C0134:
004C 22                RET     
             ; FUNCTION _CheckBootHotKey (END)

             ; FUNCTION _FnHotkeyPort80Log01 (BEGIN)
                                           ; SOURCE LINE # 1704
;---- Variable 'event' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 1705
                                           ; SOURCE LINE # 1715
0000 EF                MOV     A,R7
0001 700E              JNZ     ?C0135
0003 900000      E     MOV     DPTR,#FnStatus
0006 E0                MOVX    A,@DPTR
0007 B40107            CJNE    A,#01H,?C0135
                                           ; SOURCE LINE # 1716
                                           ; SOURCE LINE # 1717
000A 900000      E     MOV     DPTR,#CombineKeyRN
000D 7401              MOV     A,#01H
000F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1718
0010 22                RET     
0011         ?C0135:
                                           ; SOURCE LINE # 1720
0011 EF                MOV     A,R7
0012 B40105            CJNE    A,#01H,?C0138
                                           ; SOURCE LINE # 1721
                                           ; SOURCE LINE # 1722
0015 E4                CLR     A
0016 900000      E     MOV     DPTR,#CombineKeyRN
0019 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1723
                                           ; SOURCE LINE # 1725
001A         ?C0138:
001A 22                RET     
             ; FUNCTION _FnHotkeyPort80Log01 (END)

             ; FUNCTION _FnHotkeyPort80Log02 (BEGIN)
                                           ; SOURCE LINE # 1728
;---- Variable 'event' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 1729
                                           ; SOURCE LINE # 1730
0000 EF                MOV     A,R7
0001 7010              JNZ     ?C0142
                                           ; SOURCE LINE # 1731
C51 COMPILER V8.12   OEM_SCANTABS                                                          07/28/2018 12:03:44 PAGE 61  

                                           ; SOURCE LINE # 1732
0003 900000      E     MOV     DPTR,#CombineKeyRN
0006 E0                MOVX    A,@DPTR
0007 B40104            CJNE    A,#01H,?C0140
                                           ; SOURCE LINE # 1733
000A 7402              MOV     A,#02H
000C F0                MOVX    @DPTR,A
000D 22                RET     
000E         ?C0140:
                                           ; SOURCE LINE # 1735
000E E4                CLR     A
000F 900000      E     MOV     DPTR,#CombineKeyRN
0012 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1736
                                           ; SOURCE LINE # 1737
0013         ?C0142:
0013 22                RET     
             ; FUNCTION _FnHotkeyPort80Log02 (END)

             ; FUNCTION _FnHotkeyPort80Log03 (BEGIN)
                                           ; SOURCE LINE # 1739
;---- Variable 'event' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 1740
                                           ; SOURCE LINE # 1749
0000 900000      E     MOV     DPTR,#SYS_MISC1
0003 E0                MOVX    A,@DPTR
0004 20E31C            JB      ACC.3,?C0147
                                           ; SOURCE LINE # 1750
                                           ; SOURCE LINE # 1751
0007 EF                MOV     A,R7
0008 6003              JZ      ?C0145
000A B4020F            CJNE    A,#02H,?C0144
000D         ?C0145:
000D 900000      E     MOV     DPTR,#FnStatus
0010 E0                MOVX    A,@DPTR
0011 B40108            CJNE    A,#01H,?C0144
                                           ; SOURCE LINE # 1752
                                           ; SOURCE LINE # 1753
0014 900000      E     MOV     DPTR,#SYS_MISC1
0017 E0                MOVX    A,@DPTR
0018 4440              ORL     A,#040H
001A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1754
001B 22                RET     
001C         ?C0144:
                                           ; SOURCE LINE # 1756
                                           ; SOURCE LINE # 1757
001C 900000      E     MOV     DPTR,#SYS_MISC1
001F E0                MOVX    A,@DPTR
0020 54BF              ANL     A,#0BFH
0022 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1758
                                           ; SOURCE LINE # 1759
                                           ; SOURCE LINE # 1760
0023         ?C0147:
0023 22                RET     
             ; FUNCTION _FnHotkeyPort80Log03 (END)

             ; FUNCTION _FnHotkeyPort80Log04 (BEGIN)
                                           ; SOURCE LINE # 1762
;---- Variable 'event' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 1763
C51 COMPILER V8.12   OEM_SCANTABS                                                          07/28/2018 12:03:44 PAGE 62  

                                           ; SOURCE LINE # 1764
0000 EF                MOV     A,R7
0001 7017              JNZ     ?C0151
                                           ; SOURCE LINE # 1765
                                           ; SOURCE LINE # 1766
0003 900000      E     MOV     DPTR,#CombineKeyRN
0006 E0                MOVX    A,@DPTR
0007 B4030B            CJNE    A,#03H,?C0149
                                           ; SOURCE LINE # 1767
                                           ; SOURCE LINE # 1768
000A 7404              MOV     A,#04H
000C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1769
000D 900000      E     MOV     DPTR,#CombineKeyStatus
0010 E0                MOVX    A,@DPTR
0011 4401              ORL     A,#01H
0013 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1770
0014 22                RET     
0015         ?C0149:
                                           ; SOURCE LINE # 1772
0015 E4                CLR     A
0016 900000      E     MOV     DPTR,#CombineKeyRN
0019 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1773
                                           ; SOURCE LINE # 1774
001A         ?C0151:
001A 22                RET     
             ; FUNCTION _FnHotkeyPort80Log04 (END)

             ; FUNCTION _FnHotkeyPort80Log05 (BEGIN)
                                           ; SOURCE LINE # 1775
;---- Variable 'event' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 1776
                                           ; SOURCE LINE # 1777
0000 EF                MOV     A,R7
0001 701C              JNZ     ?C0153
0003 900000      E     MOV     DPTR,#FnStatus
0006 E0                MOVX    A,@DPTR
0007 B40115            CJNE    A,#01H,?C0153
000A 900000      E     MOV     DPTR,#CombineKeyRN
000D E0                MOVX    A,@DPTR
000E B4010E            CJNE    A,#01H,?C0153
                                           ; SOURCE LINE # 1778
                                           ; SOURCE LINE # 1779
0011 900000      E     MOV     DPTR,#P80CMOSSts
0014 E0                MOVX    A,@DPTR
0015 4401              ORL     A,#01H
0017 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1780
0018 900000      E     MOV     DPTR,#ACPI_HOTKEY
001B E0                MOVX    A,@DPTR
001C 4440              ORL     A,#040H
001E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1781
                                           ; SOURCE LINE # 1782
001F         ?C0153:
001F 22                RET     
             ; FUNCTION _FnHotkeyPort80Log05 (END)

             ; FUNCTION _CheckRNHotKey (BEGIN)
                                           ; SOURCE LINE # 1794
C51 COMPILER V8.12   OEM_SCANTABS                                                          07/28/2018 12:03:44 PAGE 63  

0000 900000      R     MOV     DPTR,#matrix
                                           ; SOURCE LINE # 1795
                                           ; SOURCE LINE # 1797
0003 120000      R     LCALL   L?0272
0006         ?C0154:
0006 900000      R     MOV     DPTR,#index
0009 E0                MOVX    A,@DPTR
000A FF                MOV     R7,A
000B C3                CLR     C
000C 9405              SUBB    A,#05H
000E 5037              JNC     ?C0155
                                           ; SOURCE LINE # 1798
                                           ; SOURCE LINE # 1799
0010 EF                MOV     A,R7
0011 25E0              ADD     A,ACC
0013 25E0              ADD     A,ACC
0015 2400        R     ADD     A,#LOW asCheckRNStruct
0017 F582              MOV     DPL,A
0019 E4                CLR     A
001A 3400        R     ADDC    A,#HIGH asCheckRNStruct
001C F583              MOV     DPH,A
001E E4                CLR     A
001F 93                MOVC    A,@A+DPTR
0020 FF                MOV     R7,A
0021 900000      R     MOV     DPTR,#matrix
0024 E0                MOVX    A,@DPTR
0025 7003              JNZ     ?C0248
0027 A3                INC     DPTR
0028 E0                MOVX    A,@DPTR
0029 6F                XRL     A,R7
002A         ?C0248:
002A 7013              JNZ     ?C0156
                                           ; SOURCE LINE # 1800
                                           ; SOURCE LINE # 1801
002C 900000      R     MOV     DPTR,#event
002F 120000      R     LCALL   L?0275
0032 2400        R     ADD     A,#LOW asCheckRNStruct+01H
0034 F582              MOV     DPL,A
0036 E4                CLR     A
0037 3400        R     ADDC    A,#HIGH asCheckRNStruct+01H
0039 120000      R     LCALL   L?0277
003C 020000      E     LJMP    ?C?ICALL2
                                           ; SOURCE LINE # 1803
                                           ; SOURCE LINE # 1804
003F         ?C0156:
003F 900000      R     MOV     DPTR,#index
0042 E0                MOVX    A,@DPTR
0043 04                INC     A
0044 F0                MOVX    @DPTR,A
0045 80BF              SJMP    ?C0154
0047         ?C0155:
                                           ; SOURCE LINE # 1805
0047 E4                CLR     A
0048 900000      E     MOV     DPTR,#CombineKeyRN
004B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1806
004C         ?C0158:
004C 22                RET     
             ; FUNCTION _CheckRNHotKey (END)

             ; FUNCTION _FnHotkeyGPIO01 (BEGIN)
                                           ; SOURCE LINE # 1808
C51 COMPILER V8.12   OEM_SCANTABS                                                          07/28/2018 12:03:44 PAGE 64  

;---- Variable 'event' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 1809
                                           ; SOURCE LINE # 1810
0000 EF                MOV     A,R7
0001 B40106            CJNE    A,#01H,?C0159
                                           ; SOURCE LINE # 1811
                                           ; SOURCE LINE # 1812
0004 E4                CLR     A
0005 900000      E     MOV     DPTR,#CombineKeyIO
0008 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1813
0009 22                RET     
000A         ?C0159:
                                           ; SOURCE LINE # 1814
000A EF                MOV     A,R7
000B 7005              JNZ     ?C0162
                                           ; SOURCE LINE # 1815
                                           ; SOURCE LINE # 1816
000D 900000      E     MOV     DPTR,#CombineKeyIO
0010 04                INC     A
0011 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1817
                                           ; SOURCE LINE # 1819
0012         ?C0162:
0012 22                RET     
             ; FUNCTION _FnHotkeyGPIO01 (END)

             ; FUNCTION _FnHotkeyGPIO02 (BEGIN)
                                           ; SOURCE LINE # 1821
;---- Variable 'event' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 1822
                                           ; SOURCE LINE # 1823
0000 EF                MOV     A,R7
0001 7010              JNZ     ?C0166
                                           ; SOURCE LINE # 1824
                                           ; SOURCE LINE # 1825
0003 900000      E     MOV     DPTR,#CombineKeyIO
0006 E0                MOVX    A,@DPTR
0007 B40104            CJNE    A,#01H,?C0164
                                           ; SOURCE LINE # 1826
000A 7402              MOV     A,#02H
000C F0                MOVX    @DPTR,A
000D 22                RET     
000E         ?C0164:
                                           ; SOURCE LINE # 1828
000E E4                CLR     A
000F 900000      E     MOV     DPTR,#CombineKeyIO
0012 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1829
                                           ; SOURCE LINE # 1830
0013         ?C0166:
0013 22                RET     
             ; FUNCTION _FnHotkeyGPIO02 (END)

             ; FUNCTION _FnHotkeyGPIO03 (BEGIN)
                                           ; SOURCE LINE # 1832
;---- Variable 'event' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 1833
                                           ; SOURCE LINE # 1834
0000 EF                MOV     A,R7
0001 7010              JNZ     ?C0170
                                           ; SOURCE LINE # 1835
C51 COMPILER V8.12   OEM_SCANTABS                                                          07/28/2018 12:03:44 PAGE 65  

                                           ; SOURCE LINE # 1836
0003 900000      E     MOV     DPTR,#CombineKeyIO
0006 E0                MOVX    A,@DPTR
0007 B40204            CJNE    A,#02H,?C0168
                                           ; SOURCE LINE # 1837
000A 7403              MOV     A,#03H
000C F0                MOVX    @DPTR,A
000D 22                RET     
000E         ?C0168:
                                           ; SOURCE LINE # 1839
000E E4                CLR     A
000F 900000      E     MOV     DPTR,#CombineKeyIO
0012 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1840
                                           ; SOURCE LINE # 1842
0013         ?C0170:
0013 22                RET     
             ; FUNCTION _FnHotkeyGPIO03 (END)

             ; FUNCTION _FnHotkeyGPIO04 (BEGIN)
                                           ; SOURCE LINE # 1844
;---- Variable 'event' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 1845
                                           ; SOURCE LINE # 1846
0000 EF                MOV     A,R7
0001 6003              JZ      $ + 5H
0003 020000      R     LJMP    ?C0182
                                           ; SOURCE LINE # 1847
                                           ; SOURCE LINE # 1848
0006 900000      E     MOV     DPTR,#CombineKeyIO
0009 E0                MOVX    A,@DPTR
000A 6403              XRL     A,#03H
000C 6003              JZ      $ + 5H
000E 020000      R     LJMP    ?C0172
                                           ; SOURCE LINE # 1849
                                           ; SOURCE LINE # 1850
0011 900000      E     MOV     DPTR,#GPIO_STATUS
0014 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1851
0015 900000      E     MOV     DPTR,#GPDRH
0018 E0                MOVX    A,@DPTR
0019 30E007            JNB     ACC.0,?C0173
                                           ; SOURCE LINE # 1852
001C 900000      E     MOV     DPTR,#GPIO_STATUS
001F E0                MOVX    A,@DPTR
0020 4401              ORL     A,#01H
0022 F0                MOVX    @DPTR,A
0023         ?C0173:
                                           ; SOURCE LINE # 1853
0023 900000      E     MOV     DPTR,#GPDRF
0026 E0                MOVX    A,@DPTR
0027 30E107            JNB     ACC.1,?C0174
                                           ; SOURCE LINE # 1854
002A 900000      E     MOV     DPTR,#GPIO_STATUS
002D E0                MOVX    A,@DPTR
002E 4402              ORL     A,#02H
0030 F0                MOVX    @DPTR,A
0031         ?C0174:
                                           ; SOURCE LINE # 1855
0031 900000      E     MOV     DPTR,#GPDRE
0034 E0                MOVX    A,@DPTR
0035 30E207            JNB     ACC.2,?C0175
C51 COMPILER V8.12   OEM_SCANTABS                                                          07/28/2018 12:03:44 PAGE 66  

                                           ; SOURCE LINE # 1856
0038 900000      E     MOV     DPTR,#GPIO_STATUS
003B E0                MOVX    A,@DPTR
003C 4404              ORL     A,#04H
003E F0                MOVX    @DPTR,A
003F         ?C0175:
                                           ; SOURCE LINE # 1857
003F 900000      E     MOV     DPTR,#GPDRD
0042 E0                MOVX    A,@DPTR
0043 30E007            JNB     ACC.0,?C0176
                                           ; SOURCE LINE # 1858
0046 900000      E     MOV     DPTR,#GPIO_STATUS
0049 E0                MOVX    A,@DPTR
004A 4408              ORL     A,#08H
004C F0                MOVX    @DPTR,A
004D         ?C0176:
                                           ; SOURCE LINE # 1859
004D 900000      E     MOV     DPTR,#GPDRD
0050 E0                MOVX    A,@DPTR
0051 30E107            JNB     ACC.1,?C0177
                                           ; SOURCE LINE # 1860
0054 900000      E     MOV     DPTR,#GPIO_STATUS
0057 E0                MOVX    A,@DPTR
0058 4410              ORL     A,#010H
005A F0                MOVX    @DPTR,A
005B         ?C0177:
                                           ; SOURCE LINE # 1862
005B 900000      E     MOV     DPTR,#GPDRI
005E E0                MOVX    A,@DPTR
005F 30E407            JNB     ACC.4,?C0178
                                           ; SOURCE LINE # 1863
0062 900000      E     MOV     DPTR,#GPIO_STATUS
0065 E0                MOVX    A,@DPTR
0066 4440              ORL     A,#040H
0068 F0                MOVX    @DPTR,A
0069         ?C0178:
                                           ; SOURCE LINE # 1864
0069 900000      E     MOV     DPTR,#GPDRH
006C E0                MOVX    A,@DPTR
006D 30E607            JNB     ACC.6,?C0179
                                           ; SOURCE LINE # 1865
0070 900000      E     MOV     DPTR,#GPIO_STATUS
0073 E0                MOVX    A,@DPTR
0074 4480              ORL     A,#080H
0076 F0                MOVX    @DPTR,A
0077         ?C0179:
                                           ; SOURCE LINE # 1867
0077 900000      E     MOV     DPTR,#CombineKeyIO
007A 7404              MOV     A,#04H
007C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1868
007D 900000      E     MOV     DPTR,#LENOVOPMFW_Temp
0080 E0                MOVX    A,@DPTR
0081 20E41A            JB      ACC.4,?C0182
                                           ; SOURCE LINE # 1869
                                           ; SOURCE LINE # 1871
                                           ; SOURCE LINE # 1872
0084 120000      R     LCALL   L?0292
0087 74EF              MOV     A,#0EFH
0089 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1873
008A 900000      E     MOV     DPTR,#GPIO_STATUS
C51 COMPILER V8.12   OEM_SCANTABS                                                          07/28/2018 12:03:44 PAGE 67  

008D E0                MOVX    A,@DPTR
008E 900000      E     MOV     DPTR,#eEEPROMData
0091 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1874
0092 120000      E     LCALL   Update_EEPROMMark
                                           ; SOURCE LINE # 1875
                                           ; SOURCE LINE # 1876
0095 120000      R     LCALL   L?0290
                                           ; SOURCE LINE # 1877
                                           ; SOURCE LINE # 1879
0098 22                RET     
0099         ?C0172:
                                           ; SOURCE LINE # 1881
0099 E4                CLR     A
009A 900000      E     MOV     DPTR,#CombineKeyIO
009D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1882
                                           ; SOURCE LINE # 1883
009E         ?C0182:
009E 22                RET     
             ; FUNCTION _FnHotkeyGPIO04 (END)

             ; FUNCTION _CheckIOHotKey (BEGIN)
                                           ; SOURCE LINE # 1892
0000 900000      R     MOV     DPTR,#matrix
                                           ; SOURCE LINE # 1893
                                           ; SOURCE LINE # 1895
0003 120000      R     LCALL   L?0273
0006         ?C0183:
0006 900000      R     MOV     DPTR,#index
0009 E0                MOVX    A,@DPTR
000A FF                MOV     R7,A
000B C3                CLR     C
000C 9404              SUBB    A,#04H
000E 5037              JNC     ?C0184
                                           ; SOURCE LINE # 1896
                                           ; SOURCE LINE # 1897
0010 EF                MOV     A,R7
0011 25E0              ADD     A,ACC
0013 25E0              ADD     A,ACC
0015 2400        R     ADD     A,#LOW asCheckIOStruct
0017 F582              MOV     DPL,A
0019 E4                CLR     A
001A 3400        R     ADDC    A,#HIGH asCheckIOStruct
001C F583              MOV     DPH,A
001E E4                CLR     A
001F 93                MOVC    A,@A+DPTR
0020 FF                MOV     R7,A
0021 900000      R     MOV     DPTR,#matrix
0024 E0                MOVX    A,@DPTR
0025 7003              JNZ     ?C0249
0027 A3                INC     DPTR
0028 E0                MOVX    A,@DPTR
0029 6F                XRL     A,R7
002A         ?C0249:
002A 7013              JNZ     ?C0185
                                           ; SOURCE LINE # 1898
                                           ; SOURCE LINE # 1899
002C 900000      R     MOV     DPTR,#event
002F 120000      R     LCALL   L?0276
0032 2400        R     ADD     A,#LOW asCheckIOStruct+01H
0034 F582              MOV     DPL,A
C51 COMPILER V8.12   OEM_SCANTABS                                                          07/28/2018 12:03:44 PAGE 68  

0036 E4                CLR     A
0037 3400        R     ADDC    A,#HIGH asCheckIOStruct+01H
0039 120000      R     LCALL   L?0278
003C 020000      E     LJMP    ?C?ICALL2
                                           ; SOURCE LINE # 1901
                                           ; SOURCE LINE # 1902
003F         ?C0185:
003F 900000      R     MOV     DPTR,#index
0042 E0                MOVX    A,@DPTR
0043 04                INC     A
0044 F0                MOVX    @DPTR,A
0045 80BF              SJMP    ?C0183
0047         ?C0184:
                                           ; SOURCE LINE # 1903
0047 E4                CLR     A
0048 900000      E     MOV     DPTR,#CombineKeyIO
004B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1904
004C         ?C0187:
004C 22                RET     
             ; FUNCTION _CheckIOHotKey (END)

             ; FUNCTION _FnHotkeyBattShip01 (BEGIN)
                                           ; SOURCE LINE # 1908
;---- Variable 'event' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 1909
                                           ; SOURCE LINE # 1910
0000 EF                MOV     A,R7
0001 700D              JNZ     ?C0188
0003 900000      E     MOV     DPTR,#FnStatus
0006 E0                MOVX    A,@DPTR
0007 B40106            CJNE    A,#01H,?C0188
                                           ; SOURCE LINE # 1911
                                           ; SOURCE LINE # 1912
000A 900000      E     MOV     DPTR,#CombineKeyShip
000D 7401              MOV     A,#01H
000F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1913
0010         ?C0188:
                                           ; SOURCE LINE # 1915
0010 EF                MOV     A,R7
0011 7011              JNZ     ?C0189
0013 900000      E     MOV     DPTR,#CombineKeyShip1
0016 E0                MOVX    A,@DPTR
0017 B4010A            CJNE    A,#01H,?C0189
                                           ; SOURCE LINE # 1916
                                           ; SOURCE LINE # 1918
001A 900000      E     MOV     DPTR,#SysPowState
001D E0                MOVX    A,@DPTR
001E B46603            CJNE    A,#066H,?C0189
                                           ; SOURCE LINE # 1919
                                           ; SOURCE LINE # 1920
                                           ; SOURCE LINE # 1921
                                           ; SOURCE LINE # 1922
                                           ; SOURCE LINE # 1923
0021 120000      R     LCALL   L?0274
                                           ; SOURCE LINE # 1924
                                           ; SOURCE LINE # 1926
0024         ?C0189:
                                           ; SOURCE LINE # 1929
0024 EF                MOV     A,R7
0025 B40103            CJNE    A,#01H,?C0192
C51 COMPILER V8.12   OEM_SCANTABS                                                          07/28/2018 12:03:44 PAGE 69  

                                           ; SOURCE LINE # 1930
                                           ; SOURCE LINE # 1931
                                           ; SOURCE LINE # 1932
0028 120000      R     LCALL   L?0284
                                           ; SOURCE LINE # 1933
                                           ; SOURCE LINE # 1935
002B         ?C0192:
002B 22                RET     
             ; FUNCTION _FnHotkeyBattShip01 (END)

             ; FUNCTION _FnHotkeyBattShip02 (BEGIN)
                                           ; SOURCE LINE # 1937
;---- Variable 'event' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 1938
                                           ; SOURCE LINE # 1939
0000 EF                MOV     A,R7
0001 7011              JNZ     ?C0193
0003 900000      E     MOV     DPTR,#CombineKeyShip
0006 E0                MOVX    A,@DPTR
0007 B4010A            CJNE    A,#01H,?C0193
                                           ; SOURCE LINE # 1940
                                           ; SOURCE LINE # 1942
000A 900000      E     MOV     DPTR,#SysPowState
000D E0                MOVX    A,@DPTR
000E B46603            CJNE    A,#066H,?C0193
                                           ; SOURCE LINE # 1943
                                           ; SOURCE LINE # 1944
                                           ; SOURCE LINE # 1945
                                           ; SOURCE LINE # 1946
                                           ; SOURCE LINE # 1947
0011 120000      R     LCALL   L?0274
                                           ; SOURCE LINE # 1948
                                           ; SOURCE LINE # 1950
0014         ?C0193:
                                           ; SOURCE LINE # 1952
0014 EF                MOV     A,R7
0015 700D              JNZ     ?C0195
0017 900000      E     MOV     DPTR,#FnStatus
001A E0                MOVX    A,@DPTR
001B B40106            CJNE    A,#01H,?C0195
                                           ; SOURCE LINE # 1953
                                           ; SOURCE LINE # 1954
001E 900000      E     MOV     DPTR,#CombineKeyShip1
0021 7401              MOV     A,#01H
0023 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1955
0024         ?C0195:
                                           ; SOURCE LINE # 1958
0024 EF                MOV     A,R7
0025 B40103            CJNE    A,#01H,?C0197
                                           ; SOURCE LINE # 1959
                                           ; SOURCE LINE # 1960
                                           ; SOURCE LINE # 1961
0028 120000      R     LCALL   L?0284
                                           ; SOURCE LINE # 1962
                                           ; SOURCE LINE # 1964
002B         ?C0197:
002B 22                RET     
             ; FUNCTION _FnHotkeyBattShip02 (END)

             ; FUNCTION _CheckBattShipHotKey (BEGIN)
                                           ; SOURCE LINE # 1970
C51 COMPILER V8.12   OEM_SCANTABS                                                          07/28/2018 12:03:44 PAGE 70  

0000 900000      R     MOV     DPTR,#matrix
                                           ; SOURCE LINE # 1971
                                           ; SOURCE LINE # 1973
0003 120000      R     LCALL   L?0273
0006         ?C0198:
0006 900000      R     MOV     DPTR,#index
0009 E0                MOVX    A,@DPTR
000A FF                MOV     R7,A
000B C3                CLR     C
000C 9402              SUBB    A,#02H
000E 5037              JNC     ?C0199
                                           ; SOURCE LINE # 1974
                                           ; SOURCE LINE # 1975
0010 EF                MOV     A,R7
0011 25E0              ADD     A,ACC
0013 25E0              ADD     A,ACC
0015 2400        R     ADD     A,#LOW asBattShipHotKeyStruct
0017 F582              MOV     DPL,A
0019 E4                CLR     A
001A 3400        R     ADDC    A,#HIGH asBattShipHotKeyStruct
001C F583              MOV     DPH,A
001E E4                CLR     A
001F 93                MOVC    A,@A+DPTR
0020 FF                MOV     R7,A
0021 900000      R     MOV     DPTR,#matrix
0024 E0                MOVX    A,@DPTR
0025 7003              JNZ     ?C0250
0027 A3                INC     DPTR
0028 E0                MOVX    A,@DPTR
0029 6F                XRL     A,R7
002A         ?C0250:
002A 7013              JNZ     ?C0200
                                           ; SOURCE LINE # 1976
                                           ; SOURCE LINE # 1977
002C 900000      R     MOV     DPTR,#event
002F 120000      R     LCALL   L?0276
0032 2400        R     ADD     A,#LOW asBattShipHotKeyStruct+01H
0034 F582              MOV     DPL,A
0036 E4                CLR     A
0037 3400        R     ADDC    A,#HIGH asBattShipHotKeyStruct+01H
0039 120000      R     LCALL   L?0278
003C 020000      E     LJMP    ?C?ICALL2
                                           ; SOURCE LINE # 1979
                                           ; SOURCE LINE # 1980
003F         ?C0200:
003F 900000      R     MOV     DPTR,#index
0042 E0                MOVX    A,@DPTR
0043 04                INC     A
0044 F0                MOVX    @DPTR,A
0045 80BF              SJMP    ?C0198
0047         ?C0199:
                                           ; SOURCE LINE # 1981
                                           ; SOURCE LINE # 1982
0047 120000      R     LCALL   L?0285
                                           ; SOURCE LINE # 1983
004A         ?C0202:
004A 22                RET     
             ; FUNCTION _CheckBattShipHotKey (END)

             ; FUNCTION _OEM_Hook_Send_Key (BEGIN)
                                           ; SOURCE LINE # 1990
0000 900000      R     MOV     DPTR,#table_entry
C51 COMPILER V8.12   OEM_SCANTABS                                                          07/28/2018 12:03:44 PAGE 71  

0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
0005 A3                INC     DPTR
0006 ED                MOV     A,R5
0007 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1991
                                           ; SOURCE LINE # 1994
0008 7E00              MOV     R6,#00H
000A 7C00              MOV     R4,#00H
000C 120000      R     LCALL   _CheckBootHotKey
                                           ; SOURCE LINE # 1995
000F 120000      R     LCALL   L?0279
0012 120000      R     LCALL   _CheckRNHotKey
                                           ; SOURCE LINE # 1996
0015 120000      R     LCALL   L?0279
0018 120000      R     LCALL   _CheckIOHotKey
                                           ; SOURCE LINE # 1999
001B 900000      E     MOV     DPTR,#GPDRB
001E E0                MOVX    A,@DPTR
001F 30E003            JNB     ACC.0,?C0204
0022 D3                SETB    C
0023 8001              SJMP    ?C0205
0025         ?C0204:
0025 C3                CLR     C
0026         ?C0205:
0026 400D              JC      ?C0206
0028 900000      E     MOV     DPTR,#SysPowState
002B E0                MOVX    A,@DPTR
002C B46606            CJNE    A,#066H,?C0206
                                           ; SOURCE LINE # 2000
                                           ; SOURCE LINE # 2001
002F 120000      R     LCALL   L?0280
0032 120000      R     LCALL   _CheckBattShipHotKey
                                           ; SOURCE LINE # 2002
                                           ; SOURCE LINE # 2006
0035         ?C0206:
0035 22                RET     
             ; FUNCTION _OEM_Hook_Send_Key (END)

             ; FUNCTION OEM_Hook_Skip_Send_Key (BEGIN)
                                           ; SOURCE LINE # 2011
                                           ; SOURCE LINE # 2012
                                           ; SOURCE LINE # 2013
0000 7F00              MOV     R7,#00H
                                           ; SOURCE LINE # 2014
0002         ?C0207:
0002 22                RET     
             ; FUNCTION OEM_Hook_Skip_Send_Key (END)

             ; FUNCTION _Hook_keyboard (BEGIN)
                                           ; SOURCE LINE # 2021
0000 900000      R     MOV     DPTR,#KSIValus
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
0005 A3                INC     DPTR
0006 ED                MOV     A,R5
0007 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2022
                                           ; SOURCE LINE # 2024
0008 22                RET     
             ; FUNCTION _Hook_keyboard (END)

C51 COMPILER V8.12   OEM_SCANTABS                                                          07/28/2018 12:03:44 PAGE 72  

             ; FUNCTION _Et_Hook_keyboard (BEGIN)
                                           ; SOURCE LINE # 2031
0000 900000      R     MOV     DPTR,#KSIValus
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
0005 A3                INC     DPTR
0006 ED                MOV     A,R5
0007 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2032
                                           ; SOURCE LINE # 2034
0008 22                RET     
             ; FUNCTION _Et_Hook_keyboard (END)

             ; FUNCTION Hook_Setup_Scanner_Pntr (BEGIN)
                                           ; SOURCE LINE # 2043
                                           ; SOURCE LINE # 2044
                                           ; SOURCE LINE # 2046
0000 7800        E     MOV     R0,#LOW Scanner_RAM_Pntr
0002 7400        E     MOV     A,#HIGH KB_RAM_Table
0004 F6                MOV     @R0,A
0005 08                INC     R0
0006 7400        E     MOV     A,#LOW KB_RAM_Table
0008 F6                MOV     @R0,A
                                           ; SOURCE LINE # 2047
0009 7E00        E     MOV     R6,#HIGH ExKB_RAM_Table
000B 7F00        E     MOV     R7,#LOW ExKB_RAM_Table
000D 7800        E     MOV     R0,#LOW Extendkey_RAM_Pntr
000F 7400        E     MOV     A,#HIGH ExKB_RAM_Table
0011 F6                MOV     @R0,A
0012 08                INC     R0
0013 7400        E     MOV     A,#LOW ExKB_RAM_Table
0015 F6                MOV     @R0,A
                                           ; SOURCE LINE # 2048
0016 020000      R     LJMP    LoadKBMatrixToRAM
             ; FUNCTION Hook_Setup_Scanner_Pntr (END)

             ; FUNCTION LoadKBMatrixToRAM (BEGIN)
                                           ; SOURCE LINE # 2058
                                           ; SOURCE LINE # 2059
                                           ; SOURCE LINE # 2063
0000 900000      E     MOV     DPTR,#uMBID
0003 E0                MOVX    A,@DPTR
0004 30E040            JNB     ACC.0,?C0211
                                           ; SOURCE LINE # 2064
                                           ; SOURCE LINE # 2065
0007 900000      E     MOV     DPTR,#cKBStatus
000A E0                MOVX    A,@DPTR
000B 5403              ANL     A,#03H
000D 6403              XRL     A,#03H
000F 6011              JZ      ?C0212
                                           ; SOURCE LINE # 2066
                                           ; SOURCE LINE # 2067
0011 E4                CLR     A
0012 F500        E     MOV     ITempB06,A
0014         ?C0213:
                                           ; SOURCE LINE # 2068
                                           ; SOURCE LINE # 2069
0014 120000      R     LCALL   L?0269
                                           ; SOURCE LINE # 2070
0017 900000      R     MOV     DPTR,#Rc_ROM_Tables
                                           ; SOURCE LINE # 2071
001A 120000      R     LCALL   L?0262
C51 COMPILER V8.12   OEM_SCANTABS                                                          07/28/2018 12:03:44 PAGE 73  

001D B480F4            CJNE    A,#080H,?C0213
0020 800F              SJMP    ?C0216
                                           ; SOURCE LINE # 2072
0022         ?C0212:
                                           ; SOURCE LINE # 2074
                                           ; SOURCE LINE # 2075
0022 E4                CLR     A
0023 F500        E     MOV     ITempB06,A
0025         ?C0217:
                                           ; SOURCE LINE # 2076
                                           ; SOURCE LINE # 2077
0025 120000      R     LCALL   L?0269
                                           ; SOURCE LINE # 2078
0028 900000      R     MOV     DPTR,#Rc_ROM_Tables_15BR
                                           ; SOURCE LINE # 2079
002B 120000      R     LCALL   L?0262
002E B480F4            CJNE    A,#080H,?C0217
                                           ; SOURCE LINE # 2080
0031         ?C0216:
                                           ; SOURCE LINE # 2082
0031 E4                CLR     A
0032 F500        E     MOV     ITempB06,A
0034         ?C0220:
                                           ; SOURCE LINE # 2083
                                           ; SOURCE LINE # 2084
0034 120000      R     LCALL   L?0291
0037 120000      R     LCALL   L?0271
                                           ; SOURCE LINE # 2085
003A AF00        E     MOV     R7,ITempB06
003C EF                MOV     A,R7
003D 900000      R     MOV     DPTR,#EtKey_ROM_Tables
                                           ; SOURCE LINE # 2086
0040 120000      R     LCALL   L?0263
0043 B418EE            CJNE    A,#018H,?C0220
0046 22                RET     
                                           ; SOURCE LINE # 2087
0047         ?C0211:
                                           ; SOURCE LINE # 2089
                                           ; SOURCE LINE # 2090
0047 900000      E     MOV     DPTR,#cKBStatus
004A E0                MOVX    A,@DPTR
004B 5403              ANL     A,#03H
004D 6403              XRL     A,#03H
004F 6014              JZ      ?C0224
                                           ; SOURCE LINE # 2091
                                           ; SOURCE LINE # 2092
0051 E4                CLR     A
0052 F500        E     MOV     ITempB06,A
0054         ?C0225:
                                           ; SOURCE LINE # 2093
                                           ; SOURCE LINE # 2094
0054 120000      R     LCALL   L?0270
                                           ; SOURCE LINE # 2095
0057 AF00        E     MOV     R7,ITempB06
0059 EF                MOV     A,R7
005A 900000      R     MOV     DPTR,#Rc_ROM_Tables_14
                                           ; SOURCE LINE # 2096
005D 120000      R     LCALL   L?0263
0060 B480F1            CJNE    A,#080H,?C0225
0063 8012              SJMP    ?C0228
                                           ; SOURCE LINE # 2097
0065         ?C0224:
C51 COMPILER V8.12   OEM_SCANTABS                                                          07/28/2018 12:03:44 PAGE 74  

                                           ; SOURCE LINE # 2099
                                           ; SOURCE LINE # 2100
0065 E4                CLR     A
0066 F500        E     MOV     ITempB06,A
0068         ?C0229:
                                           ; SOURCE LINE # 2101
                                           ; SOURCE LINE # 2102
0068 120000      R     LCALL   L?0270
                                           ; SOURCE LINE # 2103
006B AF00        E     MOV     R7,ITempB06
006D EF                MOV     A,R7
006E 900000      R     MOV     DPTR,#Rc_ROM_Tables_14BR
                                           ; SOURCE LINE # 2104
0071 120000      R     LCALL   L?0263
0074 B480F1            CJNE    A,#080H,?C0229
                                           ; SOURCE LINE # 2105
0077         ?C0228:
                                           ; SOURCE LINE # 2107
0077 E4                CLR     A
0078 F500        E     MOV     ITempB06,A
007A         ?C0232:
                                           ; SOURCE LINE # 2108
                                           ; SOURCE LINE # 2109
007A 120000      R     LCALL   L?0291
007D 120000      R     LCALL   L?0271
                                           ; SOURCE LINE # 2110
0080 AF00        E     MOV     R7,ITempB06
0082 EF                MOV     A,R7
0083 900000      R     MOV     DPTR,#EtKey_ROM_Tables_1
                                           ; SOURCE LINE # 2111
0086 120000      R     LCALL   L?0263
0089 B418EE            CJNE    A,#018H,?C0232
                                           ; SOURCE LINE # 2112
                                           ; SOURCE LINE # 2113
008C         ?C0235:
008C 22                RET     
             ; FUNCTION LoadKBMatrixToRAM (END)

             ; FUNCTION Hook_SetGPIOScanPinH (BEGIN)
                                           ; SOURCE LINE # 2118
                                           ; SOURCE LINE # 2119
                                           ; SOURCE LINE # 2121
0000 22                RET     
             ; FUNCTION Hook_SetGPIOScanPinH (END)

             ; FUNCTION Hook_SetGPIOScanPinL (BEGIN)
                                           ; SOURCE LINE # 2126
                                           ; SOURCE LINE # 2127
                                           ; SOURCE LINE # 2129
0000 22                RET     
             ; FUNCTION Hook_SetGPIOScanPinL (END)

             ; FUNCTION Hook_SetGPIOScanPinCtrl (BEGIN)
                                           ; SOURCE LINE # 2134
                                           ; SOURCE LINE # 2135
                                           ; SOURCE LINE # 2137
0000 22                RET     
             ; FUNCTION Hook_SetGPIOScanPinCtrl (END)

             ; FUNCTION Hook_Fn_Key_Make (BEGIN)
                                           ; SOURCE LINE # 2142
                                           ; SOURCE LINE # 2143
C51 COMPILER V8.12   OEM_SCANTABS                                                          07/28/2018 12:03:44 PAGE 75  

                                           ; SOURCE LINE # 2144
0000 900000      E     MOV     DPTR,#cCmd
0003 E0                MOVX    A,@DPTR
0004 30E60C            JNB     ACC.6,?C0239
                                           ; SOURCE LINE # 2145
                                           ; SOURCE LINE # 2146
0007 7FE0              MOV     R7,#0E0H
0009 120000      E     LCALL   _Buffer_Key
                                           ; SOURCE LINE # 2147
000C 7F16              MOV     R7,#016H
000E 120000      E     LCALL   _Buffer_Key
                                           ; SOURCE LINE # 2148
0011 D200        E     SETB    F_Service_SEND
                                           ; SOURCE LINE # 2149
0013         ?C0239:
                                           ; SOURCE LINE # 2150
0013 900000      E     MOV     DPTR,#FnStatus
0016 7401              MOV     A,#01H
0018 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2152
0019 22                RET     
             ; FUNCTION Hook_Fn_Key_Make (END)

             ; FUNCTION Hook_Fn_Key_Break (BEGIN)
                                           ; SOURCE LINE # 2157
                                           ; SOURCE LINE # 2158
                                           ; SOURCE LINE # 2160
0000 900000      E     MOV     DPTR,#SysStatus
0003 E0                MOVX    A,@DPTR
0004 30E220            JNB     ACC.2,?C0241
                                           ; SOURCE LINE # 2161
                                           ; SOURCE LINE # 2162
0007 E0                MOVX    A,@DPTR
0008 20E307            JB      ACC.3,?C0242
                                           ; SOURCE LINE # 2163
                                           ; SOURCE LINE # 2164
000B 7D01              MOV     R5,#01H
000D 7F4D              MOV     R7,#04DH
000F 120000      E     LCALL   _simple_code
                                           ; SOURCE LINE # 2165
0012         ?C0242:
                                           ; SOURCE LINE # 2166
0012 7D01              MOV     R5,#01H
0014 7F1F              MOV     R7,#01FH
0016 120000      E     LCALL   _e0_prefix_code
                                           ; SOURCE LINE # 2168
0019 900000      E     MOV     DPTR,#SysStatus
001C E0                MOVX    A,@DPTR
001D 54F3              ANL     A,#0F3H
001F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2170
0020 D200        E     SETB    F_Service_SEND
                                           ; SOURCE LINE # 2171
0022 7F04              MOV     R7,#04H
0024 120000      E     LCALL   _RamDebug
                                           ; SOURCE LINE # 2172
0027         ?C0241:
                                           ; SOURCE LINE # 2175
0027 900000      E     MOV     DPTR,#cCmd
002A E0                MOVX    A,@DPTR
002B 30E611            JNB     ACC.6,?C0243
                                           ; SOURCE LINE # 2176
C51 COMPILER V8.12   OEM_SCANTABS                                                          07/28/2018 12:03:44 PAGE 76  

                                           ; SOURCE LINE # 2177
002E 7FE0              MOV     R7,#0E0H
0030 120000      E     LCALL   _Buffer_Key
                                           ; SOURCE LINE # 2178
0033 7FF0              MOV     R7,#0F0H
0035 120000      E     LCALL   _Buffer_Key
                                           ; SOURCE LINE # 2179
0038 7F16              MOV     R7,#016H
003A 120000      E     LCALL   _Buffer_Key
                                           ; SOURCE LINE # 2180
003D D200        E     SETB    F_Service_SEND
                                           ; SOURCE LINE # 2181
003F         ?C0243:
                                           ; SOURCE LINE # 2182
003F E4                CLR     A
0040 900000      E     MOV     DPTR,#FnStatus
0043 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2183
0044 22                RET     
             ; FUNCTION Hook_Fn_Key_Break (END)

             ; FUNCTION Hook_calc_index_comb_BIT6 (BEGIN)
                                           ; SOURCE LINE # 2188
                                           ; SOURCE LINE # 2189
                                           ; SOURCE LINE # 2190
0000 7F00              MOV     R7,#00H
                                           ; SOURCE LINE # 2191
0002         ?C0245:
0002 22                RET     
             ; FUNCTION Hook_calc_index_comb_BIT6 (END)

             ; FUNCTION Hook_calc_index_comb_BIT7 (BEGIN)
                                           ; SOURCE LINE # 2196
                                           ; SOURCE LINE # 2197
                                           ; SOURCE LINE # 2198
0000 7F00              MOV     R7,#00H
                                           ; SOURCE LINE # 2199
0002         ?C0246:
0002 22                RET     
             ; FUNCTION Hook_calc_index_comb_BIT7 (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   2378    ----
   CONSTANT SIZE    =   1327    ----
   XDATA SIZE       =   ----      39
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)

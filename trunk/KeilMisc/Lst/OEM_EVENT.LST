C51 COMPILER V8.12   OEM_EVENT                                                             07/28/2018 12:03:46 PAGE 1   


C51 COMPILER V8.12, COMPILATION OF MODULE OEM_EVENT
OBJECT MODULE PLACED IN Code\OEM\OEM_EVENT.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE Code\OEM\OEM_EVENT.C LA WL(1) CD OT(9,SIZE) NOAREGS OR INCDIR(.\Code\CORE\I
                    -NCLUDE\;.\Code\OEM\INCLUDE\;.\Code\CHIP\INCLUDE\)

line level    source

   1          /*-----------------------------------------------------------------------------
   2           * TITLE: OEM_EVENT.C
   3           *
   4           * Author : Dino
   5           *
   6           * Note : These functions are reference only.
   7           *        Please follow your project software specification to do some modification.
   8           *---------------------------------------------------------------------------*/
   9          
  10          #include <CORE_INCLUDE.H>
  11          #include <OEM_INCLUDE.H>
  12          
  13          //-----------------------------------------------------------------------------
  14          // no change function
  15          
  16          //-----------------------------------------------------------------------------
  17          void NullEvent(void)
  18          {
  19   1      
  20   1      }
  21          
  22          //-----------------------------------------------------------------------------
  23          // Adapter in function
  24          //-----------------------------------------------------------------------------
  25          void AdapterIn(void)
  26          {
  27   1              //DPWROK_EC_HI();
  28   1              /*ANGELAS031 remove start
  29   1              if(SystemIsS5)
  30   1              {
  31   1                      //ANGELAS005:s+ Support UMA SKU EC_ON pin design.
  32   1                      if(NTC_V1>682)
  33   1                      {
  34   1                              GPCRF0 = OUTPUT; 
  35   1                              SET_MASK(GPDRF,BIT(0));
  36   1                              NTC_FLAG=1; //ANGELAS007:Optimize power on sequence.
  37   1                      }
  38   1                      else
  39   1                      //ANGELAS005:e+ Support UMA SKU EC_ON pin design.
  40   1                      { //ANGELAS007:Optimize power on sequence.
  41   1                              GPCRF0 = INPUT; //ANGELAS020
  42   1                              EC_ON_HI();
  43   1                              NTC_FLAG=0; //ANGELAS007:Optimize power on sequence.
  44   1                      } //ANGELAS007:Optimize power on sequence.
  45   1                      Delay1MS(1);
  46   1                      PM_PWRBTN_HI();
  47   1                      Delay1MS(10);
  48   1                      PCH_PWR_EN_ON();
  49   1                      Delay1MS(30);
  50   1                      RSMRST_HI();
  51   1                      //Delay1MS(20);
  52   1              }
  53   1              *///ANGELAS031 remove end
  54   1      
C51 COMPILER V8.12   OEM_EVENT                                                             07/28/2018 12:03:46 PAGE 2   

  55   1              PECI_SETPL2Watts(2);
  56   1              
  57   1              if ( IS_MASK_CLEAR(SYS_STATUS,AC_ADP) )
  58   1              { 
  59   2                      //cBATTThrottling = 0;  //MEILING048:remove.//MEILING051:-Add cpu P_STATE function.
  60   2              }
  61   1              if(SystemIsS0)
  62   1              {
  63   2              AC_PRESENT_HI(); 
  64   2          }
  65   1              ACInOutIntEnable(); //MEILING039:add.
  66   1              Unlock_ShipMode();  
  67   1              SET_MASK(SYS_STATUS,AC_ADP);    //set AC flag
  68   1              if( IS_MASK_SET(nBatteryStatus1, ENEXIST) )  //G10:add check battery state
  69   1              {
  70   2                      Chk_Battery_Full();
  71   2              }
  72   1      
  73   1              ECSMI_SCIEvent(ACPI_ACIN_SCI);
  74   1              if( SystemIsS0 )
  75   1              {
  76   2                      PWM_BEEP = 0x7F;                        // Out beep
  77   2                      PWM_LEDBeep_CNT = 0x0A;         // 50ms*10
  78   2              }
  79   1              //SetACIN_Int(); //ANGELAS079:remove
  80   1              InitChargerIC();//ANGELAS016:Change charge IC option setting.
  81   1              BatSMbusFailCount = 0;
  82   1              nBattErrorCnt = 0;
  83   1              //Mos: Set 0x12h and 0x3Fh before set ChargeCurrent and ChargeVoltage.
  84   1              CHGIC_ptr = 1;
  85   1              WriteSmartChgIC();
  86   1              WriteSmartChgIC();
  87   1              CHGIC_ptr = 3;
  88   1              ReadSmartChgIC();
  89   1          if (IS_MASK_SET(SYS_STATUS,AC_ADP)) 
  90   1          {
  91   2                  //ADAPTERIDON_LOW(); //MEILING001:remove.
  92   2                  AdapterIDOn_Flag = 0x01; //MEILING001:add.
  93   2              ADPIDON10MS_NUM =0x0A; //change 0x05 to 0x0A to avoid read dirty data.
  94   2          }    
  95   1      //   SetPowerBatteryparameter(); 
  96   1      //   ADAPTERIDON_HI();    
  97   1      }
  98          
  99          //-----------------------------------------------------------------------------
 100          // Adapter out function
 101          //-----------------------------------------------------------------------------
 102          void AdapterOut(void)
 103          {
 104   1              //ADAPTERIDON_HI();//when remove AC do not read adapter ID. //MEILING001:remove.
 105   1              AdapterIDOn_Flag = 0x00;//MEILING001:add.
 106   1              
 107   1              //MEILING039:S- remove.
 108   1              /*if(SystemIsS0)        //ANGELAS095:Modify PROCHOT# unplug AC under S5.
 109   1              {
 110   1                      H_PROCHOT_ON(); //ANGELAS026:Modify PROCHOT# function.
 111   1                      ProchotONCnt = 2; //MEILING033:add(Prochot on 2S when AC out).
 112   1              }*/
 113   1              //MEILING039:E-.
 114   1              
 115   1              BATT_LEN_OFF();//JERRYCRZ030 remove AC_OFF function follow charge IC bq24780.
 116   1              AC_PRESENT_LOW(); 
C51 COMPILER V8.12   OEM_EVENT                                                             07/28/2018 12:03:46 PAGE 3   

 117   1              ACInOutIntEnable(); //MEILING054:add.
 118   1          CLEAR_MASK(SYS_STATUS,b4IllegalAdp);
 119   1              CLEAR_MASK(SYS_STATUS,b5UnSuitAdpPow);
 120   1              SetVGA_AC_DET();
 121   1              PECI_SETPL2Watts(1);
 122   1      
 123   1              CLEAR_MASK(SYS_STATUS,AC_ADP);  //clear battery flag
 124   1              Chk_Battery_Full();
 125   1              ECSMI_SCIEvent(ACPI_ACOUT_SCI);
 126   1      
 127   1              //Mos: Set P-State highest to force that ChkBattery_OCP will decress P-State step by step.
 128   1              SET_MASK(BatteryAlarm,BATOCP);
 129   1          // if(SMB_BCNT==0x55)  
 130   1              //cBATTThrottling = 0x0F;
 131   1              //cBATTThrottling = PSTATE_MAXStep;//0ptimize CPU P_state (change 16 step to 8 step).  //MEILING048:remov
             -e.//MEILING051:-Add cpu P_STATE function.
 132   1              //Mos: Send QEvent to Bios
 133   1              ThrottlingControl(); 
 134   1      
 135   1              if( SystemIsS0 )
 136   1              {
 137   2                      PWM_BEEP = 0x7F;                        // Out beep
 138   2                      PWM_LEDBeep_CNT = 0x0A;         // 50ms*10
 139   2      
 140   2      
 141   2              if(IS_MASK_SET(LENOVOPMFW,BATTERY_MAIN_CAL))
 142   2              {
 143   3                          uVPCeventSource = General;
 144   3                          uVPCeventSource2 = 0;
 145   3                          ECSMI_SCIEvent(SDV_VPC_notify);
 146   3              }
 147   2              }
 148   1      
 149   1              nAvgCurrentL = 0;
 150   1              nAvgCurrentH = 0;
 151   1              Bat0x0BFakeCnt = 60;
 152   1              //CLR_MASK(LENOVOPMFW,BATTERY_CYCLE);
 153   1          //DSxPowState = SYSTEM_S3S4;
 154   1          ADPIDON10MS_NUM=0xFF; 
 155   1              Charger_3D_Config(); //ANGELAG048: add
 156   1              //SetACIN_Int();
 157   1      }
 158          
 159          //-----------------------------------------------------------------------------
 160          //power button was pressed
 161          //-----------------------------------------------------------------------------
 162          void PSWPressed(void)
 163          {
 164   1              if ( IS_MASK_SET(cCmd, b6TestBtnEn) )
 165   1              {
 166   2                      Buffer_Key(0xE0);               //
 167   2                      Buffer_Key(0x25);               //
 168   2                      F_Service_SEND = 1;
 169   2              }
 170   1              /*// ANGELAS007: s-Optimize power on sequence.
 171   1              //ANGELAS005:s+ Support UMA SKU EC_ON pin design.
 172   1              if(NTC_V1>682)
 173   1              {
 174   1                      GPCRF0 = OUTPUT;
 175   1                      SET_MASK(GPDRF,BIT(0));
 176   1              }
 177   1              else
C51 COMPILER V8.12   OEM_EVENT                                                             07/28/2018 12:03:46 PAGE 4   

 178   1              //ANGELAS005:e+ Support UMA SKU EC_ON pin design.
 179   1      
 180   1              EC_ON_HI();
 181   1              //EC_ON2_HI();
 182   1              *///ANGELAS007: e-Optimize power on sequence.
 183   1              ECSleepCount = 3;
 184   1      
 185   1              //Mos: Clear PswPressedCounter
 186   1              CountSecAfterPswPressed = 0;
 187   1              /*//ANGELAS007:s-Optimize power on sequence.
 188   1              //JERRYCRZ022:+ S Filter press power button over 8s can auto power on.
 189   1              #if !EN_PwrSeqTest
 190   1              if (LID_readytime !=0)
 191   1              {
 192   1                      //SET_MASK(SysStatus2,PWRBTN_press_retry);  
 193   1                      return;
 194   1              }
 195   1               #endif
 196   1              //JERRYCRZ022:+ E Filter press power button over 8s can auto power on.  
 197   1              *///ANGELAS007:e-Optimize power on sequence.
 198   1              CLEAR_MASK(SysStatus2,PWRBTN_press_retry);
 199   1              /*ANGELAS036: remove start
 200   1              if(!Read_LID_SW_IN())
 201   1              {
 202   1                      DSxPowState = SYSTEM_S3S4; //ANGELAS031
 203   1                      return;
 204   1              }
 205   1              //LID have not ready, it will influence power button on, so remove it temporary
 206   1              *///ANGELAS036: remove end
 207   1      
 208   1              //LMLKBL0008:S+ Add ignore power button press when lid close.
 209   1              if(!Read_LID_SW_IN())
 210   1              { return; }
 211   1              //LMLKBL0008:E+.
 212   1              
 213   1          switch (SysPowState)
 214   1          {
 215   2          case SYSTEM_S4 :
 216   2              break;
 217   2              
 218   2          case SYSTEM_DSX:
 219   2          case SYSTEM_S5 :
 220   2                      //ANGELAS111:S+Modify code for befor power on check Battery RSOC in DC mode.
 221   2                      if(!Read_AC_IN()||IS_MASK_SET(ACOFF_SOURCE, BATTLEARN))
 222   2                      {                               
 223   3                              BatSMbusFailCount = 0;
 224   3                              if(!bRWSMBus(SMbusChB, SMbusRW, SmBat_Addr, C_RSOC, &BAT1PERCL,SMBus_NoPEC))
 225   3                              {
 226   4                                      BatSMbusFailCount++;    
 227   4                                      while((BatSMbusFailCount<=4)) 
 228   4                                      {               
 229   5                                              if(!bRWSMBus(SMbusChB, SMbusRW, SmBat_Addr, C_RSOC, &BAT1PERCL,SMBus_NoPEC))
 230   5                                              {
 231   6                                                      BatSMbusFailCount++;
 232   6                                              }
 233   5                                              else
 234   5                                              {
 235   6                                                      BatSMbusFailCount=0;
 236   6                                          break; //JIMGBRW022
 237   6                                              }
 238   5                                      }
 239   4                                                                                                               
C51 COMPILER V8.12   OEM_EVENT                                                             07/28/2018 12:03:46 PAGE 5   

 240   4                              }
 241   3                              if(BatSMbusFailCount>=4) 
 242   3                                      break;
 243   3                              
 244   3                              if (BAT1PERCL < 0x02)  //T064: change 0x05 to 0x00 G23:modify battery capacity point from 0 to 1 for fl
             -iker.
 245   3                              {
 246   4                                      SET_MASK(nBatteryStatL,CMBS_LOWBATT);
 247   4                                      LOWBATT_3TIMES = 100;           // set 5 sec
 248   4                                      break;
 249   4                              }
 250   3                      }
 251   2                      //ANGELAS111:E+Modify code for befor power on check Battery RSOC in DC mode.
 252   2                      //if ((Battdata_ready != 1)&&(!Read_AC_IN()||Read_ACOFF()))
 253   2                      /*if ((Battdata_ready != 1)&&(!Read_AC_IN()))
 254   2                      {
 255   2                              FirstGetBatData();
 256   2                              if (Battdata_ready != 1)
 257   2                              {
 258   2                                      Battdata_ready = 0xFF;
 259   2                                      break;
 260   2                              }
 261   2                      }
 262   2                      //if ((BAT1PERCL < 0x02)&&(!Read_AC_IN()||Read_ACOFF()))  //change 0x05 to 0x00 G23:modify battery capac
             -ity point from 0 to 1 for fliker.
 263   2                      if ((BAT1PERCL < 0x02)&&(!Read_AC_IN()))  //change 0x05 to 0x00 G23:modify battery capacity point from 0
             - to 1 for fliker.
 264   2                      {
 265   2                              SET_MASK(nBatteryStatL,CMBS_LOWBATT);
 266   2                              LOWBATT_3TIMES = 100;           // set 5 se
 267   2                              break;
 268   2                      }*///ANGELAS111:-Modify code for befor power on check Battery RSOC in DC mode.
 269   2                      //if ((!Read_AC_IN()||Read_ACOFF()))                    // if DC mode
 270   2                      if ((!Read_AC_IN()))                    // if DC mode
 271   2                      {
 272   3                              BatSMbusFailCount = 0;
 273   3                              nBattErrorCnt = 0;
 274   3                              if (IS_MASK_SET(LENOVOBATT,BATTERY_LEGAL))      //SHA1 fail
 275   3                              {
 276   4                                      Service_Auth_Step = 1;                          // start SHA1 again
 277   4                                      SHA1failCnt = 1;
 278   4                              }
 279   3                      }
 280   2              if(IS_MASK_SET(SysStatus2, b3EC8S_Reset))
 281   2              {
 282   3                  break;
 283   3              }
 284   2                      uNovoVPCCount = 0;
 285   2                      PWSeqStep = 1;
 286   2              PowSeqDelay = 0x00;
 287   2              RamDebug(0x51);
 288   2                      SysPowState=SYSTEM_S5_S0;
 289   2                      break;
 290   2      
 291   2          case SYSTEM_S3 :
 292   2              case SYSTEM_S0 :
 293   2                      RamDebug(0xF4);//test 
 294   2                              if (IS_MASK_CLEAR(pProject4,pPWSWdisable)) //Y7JERRY085:Add CMD for press power button 4s don't shutdow
             -n when flash bios.
 295   2                      {
 296   3                              //      ECQEvent(ACPI_PWRBTN_SCI); //ANGELAG044: remove //ANGELAG039: add
 297   3                                      PM_PWRBTN_LOW();
C51 COMPILER V8.12   OEM_EVENT                                                             07/28/2018 12:03:46 PAGE 6   

 298   3                      }
 299   2                      break;
 300   2      
 301   2          default :
 302   2              break;
 303   2          }
 304   1      }
 305          
 306          //-----------------------------------------------------------------------------
 307          //power button was released
 308          //-----------------------------------------------------------------------------
 309          void PSWReleased(void)
 310          {
 311   1              if ( IS_MASK_SET(cCmd, b6TestBtnEn) )
 312   1              {
 313   2                      Buffer_Key(0xE0);       //
 314   2                      Buffer_Key(0xF0);       //
 315   2                      Buffer_Key(0x25);       //
 316   2                      F_Service_SEND = 1;
 317   2              }
 318   1          
 319   1          if(IS_MASK_SET(SysStatus2, b3EC8S_Reset)) 
 320   1              {
 321   2                      CLEAR_MASK(SysStatus2, b3EC8S_Reset);
 322   2              }
 323   1         /*                 
 324   1              if(DSxPowState == SYSTEM_S3S4) //LMLNANO016:add.
 325   1              {
 326   1                      PM_PWRBTN_HI(); //LMLNANO014:add. 
 327   1              }
 328   1              */
 329   1          if(!Read_LID_SW_IN())
 330   1              { return; }
 331   1      
 332   1          //PM_PWRBTN_HI();   //LMLNANO014:remove.
 333   1      
 334   1              PSW_COUNTER = T_PSWOFF; // initialize counter
 335   1              switch (SysPowState)
 336   1              {
 337   2              case SYSTEM_S4 :
 338   2                      break; 
 339   2      
 340   2              case SYSTEM_S5 :
 341   2                      break;
 342   2      
 343   2              case SYSTEM_S3 :
 344   2              case SYSTEM_S0 :
 345   2                      PM_PWRBTN_HI();
 346   2                      ECQEvent(ACPI_PWRBTN_SCI); //ANGELAG044: add, Send POWER Button Low Event when Release Power button
 347   2                      break;
 348   2      
 349   2              default :
 350   2                      break;
 351   2              }
 352   1      }
 353          //-----------------------------------------------------------------------------
 354          //power button was overrided
 355          //-----------------------------------------------------------------------------
 356          void PSWOverrided(void)
 357          {
 358   1              if(!Read_LID_SW_IN())
 359   1              { return; }
C51 COMPILER V8.12   OEM_EVENT                                                             07/28/2018 12:03:46 PAGE 7   

 360   1          if (Read_EC_PWRBTN()&&Read_EC_NOVO())
 361   1          { return; }
 362   1      
 363   1              //LMLKBL0011:S- remove press power button 4s force shutdown function.
 364   1              /*if (SystemIsS0 || SystemIsS3)
 365   1              {
 366   1                      if (Read_EC_PWRBTN())
 367   1                      {
 368   1                              PSW_COUNTER--;
 369   1                              if (PSW_COUNTER == 0)
 370   1                              {
 371   1                                      PWSeqStep = 1;
 372   1                                      PowSeqDelay = 0x00;
 373   1                      RamDebug(0x0C);
 374   1                                      SysPowState=SYSTEM_S0_S5;
 375   1                              }
 376   1                      }
 377   1                      else
 378   1                      {
 379   1                              PSW_COUNTER = T_PSWOFF;         // initialize counter
 380   1                      }
 381   1              }*/
 382   1              //LMLKBL0011:E-.
 383   1      }
 384          
 385          
 386          //-----------------------------------------------------------------------------
 387          //NOVO button was pressed
 388          //-----------------------------------------------------------------------------
 389          void NOVOPressed(void)
 390          {
 391   1              if ( IS_MASK_SET(cCmd, b6TestBtnEn) )
 392   1              {
 393   2                      Buffer_Key(0xE0);       //
 394   2                      Buffer_Key(0x49);       // page down make
 395   2                      F_Service_SEND = 1;
 396   2              }
 397   1              /*//ANGELAS007:s-Optimize power on sequence.
 398   1              //ANGELAS005:s+ Support UMA SKU EC_ON pin design.
 399   1              if(NTC_V1>682)
 400   1              {
 401   1                      GPCRF0 = OUTPUT;
 402   1                      SET_MASK(GPDRF,BIT(0));
 403   1              }
 404   1              else
 405   1              //ANGELAS005:e+ Support UMA SKU EC_ON pin design.
 406   1      
 407   1              EC_ON_HI();
 408   1              //EC_ON2_HI();
 409   1              *///ANGELAS007:e-Optimize power on sequence.
 410   1              ECSleepCount = 3;
 411   1              /*//ANGELAS007:s-Optimize power on sequence.
 412   1              #if !EN_PwrSeqTest
 413   1              if (LID_readytime !=0)
 414   1              {
 415   1                      //SET_MASK(SysStatus2,b1NOVOBTN_retry); 
 416   1                      return;
 417   1              }
 418   1              #endif
 419   1              *///ANGELAS007:e-Optimize power on sequence.
 420   1              CLEAR_MASK(SysStatus2,b1NOVOBTN_retry);
 421   1      
C51 COMPILER V8.12   OEM_EVENT                                                             07/28/2018 12:03:46 PAGE 8   

 422   1          if(!Read_LID_SW_IN())
 423   1              { return; }
 424   1      
 425   1              //Mos: Clear NOVOPressedCounter
 426   1              CountSecAfterNOVOPressed = 0;
 427   1      
 428   1              switch (SysPowState)
 429   1          {
 430   2              case SYSTEM_S4 :
 431   2                      //break;
 432   2          case SYSTEM_S5 :
 433   2          case SYSTEM_DSX:
 434   2                      // Battery capacity > 5% or not
 435   2                      //ANGELAS111:S+Modify code for befor power on check Battery RSOC in DC mode.
 436   2                      if(!Read_AC_IN()||IS_MASK_SET(ACOFF_SOURCE, BATTLEARN))
 437   2                      {                               
 438   3                              BatSMbusFailCount = 0;
 439   3                              if(!bRWSMBus(SMbusChB, SMbusRW, SmBat_Addr, C_RSOC, &BAT1PERCL,SMBus_NoPEC))
 440   3                              {
 441   4                                      BatSMbusFailCount++;    
 442   4                                      while(BatSMbusFailCount <=4) 
 443   4                                      {               
 444   5                                              if(!bRWSMBus(SMbusChB, SMbusRW, SmBat_Addr, C_RSOC, &BAT1PERCL,SMBus_NoPEC))
 445   5                                              {
 446   6                                                      BatSMbusFailCount++;                                                                             
 447   6                                              }
 448   5                                              else
 449   5                                              {
 450   6                                                      BatSMbusFailCount=0;
 451   6                                                      break;
 452   6                                              }
 453   5                                      }
 454   4                                                                                                               
 455   4                              }
 456   3                              if(BatSMbusFailCount>=4) 
 457   3                                      break;
 458   3                              
 459   3                              if (BAT1PERCL < 0x02)  //T064: change 0x05 to 0x00 G23:modify battery capacity point from 0 to 1 for fl
             -iker.
 460   3                              {
 461   4                                      SET_MASK(nBatteryStatL,CMBS_LOWBATT);
 462   4                                      LOWBATT_3TIMES = 100;           // set 5 sec
 463   4                                      break;
 464   4                              }
 465   3                      }
 466   2                      //ANGELAS111:E+Modify code for befor power on check Battery RSOC in DC mode.
 467   2                      if(LOWBATT_3TIMES == 0)
 468   2              {
 469   3                              //EEPROM_PwrSts = Read_Eflash_Byte(EEPROMA2,(EEPROMA1_B03 | 0x07),0xDF);
 470   3                      // NOVO button should be no function when resuming from S4
 471   3                      if( (EEPROM_PwrSts & 0x10) == 0 )
 472   3                      {
 473   4                                      if ( (EEPROM_PwrSts & 0x01) != 0 )
 474   4                                      { 
 475   5                                          break; 
 476   5                      }
 477   4                      }
 478   3                              uNovoVPCCount = 1;
 479   3                              PWSeqStep = 1;
 480   3                              PowSeqDelay = 0x00;
 481   3                  RamDebug(0x52);// T045+
 482   3                              SysPowState=SYSTEM_S5_S0;
C51 COMPILER V8.12   OEM_EVENT                                                             07/28/2018 12:03:46 PAGE 9   

 483   3                      }
 484   2              break;
 485   2      
 486   2              case SYSTEM_S3 :
 487   2              break;
 488   2              case SYSTEM_S0 :
 489   2                      // NOVO button should initialize ONEKEY Recovery Windows Module,
 490   2                      // or be no function if ONEKEY Recovery Windows Module hasn't been installed
 491   2                      if ( IS_MASK_SET(SYS_MISC1, ACPI_OS) )
 492   2                      {
 493   3                              uNovoVPCCount++;
 494   3                              if( uNovoVPCCount > (10+1) )
 495   3                                      { uNovoVPCCount--; }
 496   3                              //uNovoVPCCount=0;
 497   3                              //PM_PWRBTN_LOW();
 498   3                      }
 499   2                      //break;
 500   2          default :
 501   2              break;
 502   2          }
 503   1      }
 504          
 505          //-----------------------------------------------------------------------------
 506          //NOVO button was released
 507          //-----------------------------------------------------------------------------
 508          void NOVOReleased(void)
 509          {
 510   1      NOVO_COUNTER = T_PSWOFF;//Hang check//JERRYCH003:Enable SMI for hang debug.
 511   1              if ( IS_MASK_SET(cCmd, b6TestBtnEn) )
 512   1              {
 513   2                      Buffer_Key(0xE0);       //
 514   2                      Buffer_Key(0xF0);       //
 515   2                      Buffer_Key(0x49);       // page down make
 516   2                      F_Service_SEND = 1;
 517   2              }
 518   1      
 519   1              //CLR_MASK(SysStatus2,b2NOVOKey_Press);         // Release NOVO key.   
 520   1          if(!Read_LID_SW_IN())
 521   1              { return; }
 522   1      
 523   1              switch (SysPowState)
 524   1              {
 525   2              case SYSTEM_S4 :
 526   2                      //break;
 527   2              case SYSTEM_S5 :
 528   2                      //break;
 529   2              case SYSTEM_S3 :
 530   2                      break;
 531   2              case SYSTEM_S0 :
 532   2                      //PM_PWRBTN_HI();
 533   2                      if ( IS_MASK_SET(SYS_MISC1, ACPI_OS) )
 534   2                      {
 535   3                              if( uNovoVPCCount > 10 )                // Delay 100 mSec.
 536   3                          { uNovoVPCCount = 1; }
 537   3                          else
 538   3                              { uNovoVPCCount = 0; }
 539   3                              uVPCeventSource = VPCeventNovo; // bit3:NOVO.
 540   3                          uVPCeventSource2 = 0;
 541   3                              ECQEvent(SDV_VPC_notify);               // 0x44 for Levono used.
 542   3                      }
 543   2                      //break;
 544   2              default :
C51 COMPILER V8.12   OEM_EVENT                                                             07/28/2018 12:03:46 PAGE 10  

 545   2                      break;
 546   2              }
 547   1      }
 548          
 549          //-----------------------------------------------------------------------------
 550          //power button was overrided
 551          //-----------------------------------------------------------------------------
 552          void NOVOOverrided(void)
 553          {
 554   1              /*
 555   1              if ( IS_MASK_SET(SYS_MISC1, ACPI_OS) )
 556   1              {
 557   1                      uNovoVPCCount++;
 558   1                      if( uNovoVPCCount > (10+1) )
 559   1                      { uNovoVPCCount--; }
 560   1              }
 561   1              */
 562   1      //JERRYCH003:Enable SMI for hang debug.
 563   1              if (!Read_EC_NOVO())
 564   1              {
 565   2                      return; 
 566   2              }
 567   1              if(NOVO_COUNTER != 0)
 568   1              {
 569   2                      NOVO_COUNTER--;
 570   2                      return;
 571   2              }
 572   1              NOVO_COUNTER = T_PSWOFF;
 573   1              ECSMIEvent();
 574   1              //JERRYCH003:Enable SMI for hang debug.
 575   1      }
 576          
 577          //-----------------------------------------------------------------------------
 578          //LAN_WAKE was low
 579          //-----------------------------------------------------------------------------
 580          void LanWakeLow(void)
 581          {
 582   1              #if     Support_EC_LANWake
 583   1              //if (uReserve07.fbit.nPmeWakeEN==0) return;
 584   1      
 585   1              switch (SysPowState)
 586   1              {
 587   2              case SYSTEM_S4 :
 588   2                      break;
 589   2      
 590   2              case SYSTEM_S5 :
 591   2                      //PWSeqStep = 1;
 592   2                      //PowSeqDelay = 0x00;
 593   2                      //SysPowState=SYSTEM_S5_S0;
 594   2                      break;
 595   2      
 596   2              case SYSTEM_S3 :
 597   2                      if ( IS_MASK_SET(AOAC_STATUS, ISCT_Enable) )    // Check ISCT enable?
 598   2                      {
 599   3                              PM_PWRBTN_LOW();
 600   3                              AOAC_STATUS |= 0x80;    // Set PME(LAN) wake function.
 601   3                      }
 602   2                      else
 603   2                      {
 604   3                              if ( IS_MASK_SET(SYS_STATUS,AC_ADP) )
 605   3                              { 
 606   4                                      RamDebug(0x99);
C51 COMPILER V8.12   OEM_EVENT                                                             07/28/2018 12:03:46 PAGE 11  

 607   4                                      PCIE_WAKE_OUTPUT;
 608   4                                      PCIE_WAKE_LOW();
 609   4                  } // Set PME(LAN) wake function.
 610   3                      }
 611   2                      break;
 612   2      
 613   2              case SYSTEM_S0 :
 614   2                      break;
 615   2      
 616   2              default :
 617   2                      break;
 618   2              }
 619   1              #endif  // Support_EC_LANWake
 620   1      }
 621          
 622          //-----------------------------------------------------------------------------
 623          //LAN_WAKE was hi
 624          //-----------------------------------------------------------------------------
 625          void LanWakeHi(void)
 626          {
 627   1              #if     Support_EC_LANWake
 628   1              //if (uReserve07.fbit.nPmeWakeEN==0) return;
 629   1      
 630   1              switch (SysPowState)
 631   1              {
 632   2              case SYSTEM_S4 :
 633   2                      break;
 634   2      
 635   2              case SYSTEM_S5 :
 636   2                      break;
 637   2      
 638   2              case SYSTEM_S3 :
 639   2                      PM_PWRBTN_HI();
 640   2              RamDebug(0x9A);
 641   2                      PCIE_WAKE_HI();
 642   2                      PCIE_WAKE_INPUT;
 643   2                      break;
 644   2      
 645   2              case SYSTEM_S0 :
 646   2                      PM_PWRBTN_HI();
 647   2                      PCIE_WAKE_HI();
 648   2                      PCIE_WAKE_INPUT;
 649   2                      break;
 650   2      
 651   2              default :
 652   2                      PM_PWRBTN_HI();
 653   2                      PCIE_WAKE_HI();
 654   2                      PCIE_WAKE_INPUT;
 655   2                      break;
 656   2              }
 657   1              #endif  // Support_EC_LANWake
 658   1      }
 659          
 660          
 661          //-----------------------------------------------------------------------------
 662          // battery 1 in function
 663          //-----------------------------------------------------------------------------
 664          void Battery1In(void)
 665          {
 666   1              /*ANGELAS038: remove start
 667   1              //ANGELAS020:S+
 668   1              if(IS_MASK_CLEAR(SYS_STATUS,AC_ADP) &&(!(NTC_V1>682)))
C51 COMPILER V8.12   OEM_EVENT                                                             07/28/2018 12:03:46 PAGE 12  

 669   1              {
 670   1                      GPCRF0 = INPUT; 
 671   1              }
 672   1              //ANGELAS020:E+
 673   1              //ANGELAS023:S+Modify UMA LED function.
 674   1              if((SystemIsS5) && (IS_MASK_CLEAR(SYS_STATUS,AC_ADP)))
 675   1              {
 676   1                      if(NTC_V1>682)
 677   1                              NTC_FLAG=1; 
 678   1                      else
 679   1                              NTC_FLAG=0;
 680   1              }
 681   1              //ANGELAS023:E+Modify UMA LED function.
 682   1              *///ANGELAS038:remove end
 683   1              SET_MASK(SEL_STATE0,PRESENT_A);         //set battery flag
 684   1              SET_MASK(nBatteryStatus1,ENEXIST);  //set battery flag
 685   1              FirstGetBatData();                                      //first get battery data
 686   1              ECSMI_SCIEvent(ACPI_BAT1IN_SCI);
 687   1              Service_Auth_Step = 1;                          // start SHA1
 688   1              /*    
 689   1             if (IS_MASK_SET(SYS_STATUS,AC_ADP)) 
 690   1             {
 691   1                  ADAPTERIDON_LOW();
 692   1             }
 693   1              */           
 694   1              //SetPowerBatteryparameter(); 
 695   1              //ADAPTERIDON_HI();   
 696   1              //Mos: Clean Get_Batt_debounce_count to make it check battery data stable or not?
 697   1              Get_Batt_debounce_count = 0;
 698   1      }
 699          
 700          //-----------------------------------------------------------------------------
 701          // battery 1 out function
 702          //-----------------------------------------------------------------------------
 703          void Battery1Out(void)
 704          {
 705   1              PORT_BYTE_PNTR BAT1_pntr;
 706   1      
 707   1              CLEAR_MASK(SEL_STATE0,PRESENT_A);       //clear battery flag
 708   1              CLEAR_MASK(nBatteryStatus1,ENEXIST);    //clear battery flag
 709   1              BAT1_pntr = &SEL_STATE0;        // Base on address 0x04BF.
 710   1              for( ITempW01=0; ITempW01<=57; ITempW01++ )     // Clear 04BF~04F8.
 711   1              {
 712   2                      *BAT1_pntr=0;
 713   2              BAT1_pntr++;
 714   2              }
 715   1      
 716   1              BAT1_pntr = &BATTMANUFACTURE;   // Base on address 0x048F.
 717   1              for( ITempW01=0; ITempW01<=16; ITempW01++ )     // Clear 048F~049F.
 718   1              {
 719   2                      *BAT1_pntr=0;
 720   2              BAT1_pntr++;
 721   2              }
 722   1      
 723   1      
 724   1          if(SystemIsS0 && IS_MASK_SET(LENOVOPMFW,BATTERY_MAIN_CAL))
 725   1          {
 726   2              uVPCeventSource = General;
 727   2                      uVPCeventSource2 = 0;
 728   2                      ECSMI_SCIEvent(SDV_VPC_notify);
 729   2          }
 730   1      
C51 COMPILER V8.12   OEM_EVENT                                                             07/28/2018 12:03:46 PAGE 13  

 731   1              Battdata_ready = 0;
 732   1              BatSMbusFailCount = 0;
 733   1              nBattErrorCnt = 0;
 734   1              LENOVOBATT = 0;
 735   1              EM8_TEST = 0;
 736   1              LV_Authen_Step_CNT = 0;
 737   1              SHA1failCnt = 0;
 738   1          SHA1FailRetry=0x00;
 739   1              Bat1_FPChgFlag = 0;
 740   1              CellCount=0; //MEILING017: add
 741   1              ECSMI_SCIEvent(ACPI_BAT1IN_SCI);
 742   1      }
 743          //change LID implement method.
 744          void LID_Pressed(void)
 745          {
 746   1          CLEAR_MASK(SWI_EVENT,LID);
 747   1              ECQEvent(SCI_LID_Close);
 748   1              RamDebug(0x15);
 749   1              EC_TS_ON_LOW();//Add touch panel control signal.  //MEILING001:add.
 750   1              
 751   1      }
 752          void LID_Released(void)
 753          {
 754   1              SET_MASK(SWI_EVENT,LID);
 755   1              if ((SystemIsS3))
 756   1              {
 757   2                      PulseSBPowerButton();
 758   2              }
 759   1          ECQEvent(SCI_LID_Open);
 760   1              RamDebug(0x16);
 761   1              EC_TS_ON_HI();//Add touch panel control signal.  //MEILING001:add.
 762   1      }
 763          //change LID implement method.
 764          // ----------------------------------------------------------------------------
 765          // Device insert/remove debounce routine.
 766          // input:   device_id
 767          // ----------------------------------------------------------------------------
 768          
 769          const struct sDebounce code Debounce_TBL[] =
 770          {
 771          
 772                  {&POWER_FLAG1   ,wait_PSW_off     ,&DEBOUNCE_CONT1       ,T_PSW_DEBOUNCE                ,PSWPressed         ,PSWReleased    ,PS
             -WOverrided        },
 773              {&POWER_FLAG1       ,adapter_in       ,&DEBOUNCE_CONT2       ,T_AC_DEBOUNCE                 ,AdapterIn          ,AdapterOut         ,Null
             -Event            },
 774                  {&BT1_STATUS1   ,bat_in                   ,&DEBOUNCE_CONT3       ,T_BAT_DEBOUNCE            ,Battery1In     ,Battery1Out        ,NullEvent      
             -        },
 775                  {&POWER_FLAG1   ,wati_NOVO_off    ,&DEBOUNCE_CONT4       ,T_NOVO_DEBOUNCE               ,NOVOPressed    ,NOVOReleased   ,NOVO
             -Overrided  }, //LMLNANO008:Modify debunce time define.
 776                  {&POWER_FLAG1   ,LAN_WAKE_Status  ,&DEBOUNCE_CONT5       ,T_LAN_WAKE_DEBOUNCE   ,LanWakeLow         ,LanWakeHi      
             -,NullEvent                },
 777                  {&POWER_FLAG1   ,Lid_Act          ,&DEBOUNCE_CONT6       ,T_LID_DEBOUNCE            ,LID_Pressed        ,LID_Released   ,NullEv
             -ent                },//change LID implement method.
 778                  {&EVT_STATUS1   ,DummyFlag                ,&DEBOUNCE_CONT7       ,T_EXTEVT_DEBOUNCE             ,NullEvent          ,NullEvent          ,NullEv
             -ent            },
 779                  {&EVT_STATUS1   ,DummyFlag                ,&DEBOUNCE_CONT8       ,T_EXTEVT_DEBOUNCE     ,NullEvent          ,NullEvent          ,NullEve
             -nt            },
 780                  {&EVT_STATUS1   ,DummyFlag            ,&DEBOUNCE_CONT9   ,T_EXTEVT_DEBOUNCE     ,NullEvent          ,NullEvent          ,NullE
             -vent            },
 781                  {&EVT_STATUS1   ,DummyFlag                ,&DEBOUNCE_CONT10  ,T_EXTEVT_DEBOUNCE         ,NullEvent          ,NullEvent          ,NullEvent
             -            },
 782          };
C51 COMPILER V8.12   OEM_EVENT                                                             07/28/2018 12:03:46 PAGE 14  

 783          
 784          // ----------------------------------------------------------------------------
 785          // EventManager function
 786          //
 787          // Note :
 788          //      If want to call the function of status not change, please set nochange_func = 1
 789          // ----------------------------------------------------------------------------
 790          #pragma OT(8, SPEED)
 791          void EventManager(BYTE device_id)
 792          {
 793   1              BYTE new_state,old_state;
 794   1              BYTE device_flag;
 795   1              //BYTE do_nochange_func = 0x00;
 796   1              switch(device_id)
 797   1              {
 798   2              case 0 :
 799   2              if (Read_EC_PWRBTN()&&Read_EC_NOVO())   return;  //ANGELAS099:Optimize power switch and NOVO control m
             -ethod.//ANGELAS101:Optimize ANGELAS099 change break to return.
 800   2              new_state = Read_EC_PWRBTN();                            
 801   2                      /*  
 802   2                      if ( IS_MASK_CLEAR(SysStatus2,b2NOVOKey_Press) )
 803   2                      {
 804   2                              if (((Battdata_ready == 0xFF)&&(!Read_AC_IN()||Read_ACOFF()))||
 805   2                                      (IS_MASK_SET(SysStatus2,PWRBTN_press_retry)))
 806   2                              {
 807   2                                      //new_state = !Read_EC_PWRBTN();       
 808   2                                      //old_state = Read_EC_PWRBTN();          
 809   2                                      new_state = Read_EC_PWRBTN();      
 810   2                                      old_state = !Read_EC_PWRBTN();                                  
 811   2                              }
 812   2                              else
 813   2                              { new_state = Read_EC_PWRBTN(); }
 814   2                      }
 815   2                      else
 816   2                      { new_state = old_state = 0; }
 817   2                      */      
 818   2                      break;
 819   2      
 820   2              case 1 :
 821   2                      new_state = Read_AC_IN();
 822   2                      break;
 823   2      
 824   2              case 2 :
 825   2                      /*if((BATTEMP<0x390)) //martin0216 0x390 -> 0x390*3/0x400 -> 2.67
 826   2                      { new_state = 1; }
 827   2                      else
 828   2                      { new_state = 0; }*/
 829   2                      new_state=Read_BAT_IN();//G03:ADD battery detect
 830   2                      break;
 831   2      
 832   2              case 3 :
 833   2                      /*             
 834   2                      if ( Read_EC_NOVO() )                                                                      
 835   2                      { SET_MASK(SysStatus2,b2NOVOKey_Press); }       // Press NOVO key.    
 836   2      
 837   2                      if ( IS_MASK_SET(SysStatus2,b1NOVOBTN_retry) )
 838   2                      {
 839   2                              new_state = !Read_EC_NOVO();
 840   2                              old_state = Read_EC_NOVO();
 841   2                      }
 842   2                      else
 843   2                      { new_state = Read_EC_NOVO(); }
C51 COMPILER V8.12   OEM_EVENT                                                             07/28/2018 12:03:46 PAGE 15  

 844   2                      */      
 845   2              new_state = Read_EC_NOVO(); 
 846   2                      break;
 847   2      
 848   2              case 4 :
 849   2                      #if     Support_EC_LANWake
 850   2                      new_state = Read_LAN_WAKE_IN();
 851   2                      #else
                              new_state = 0x00;
                              #endif  // Support_EC_LANWake
 854   2                      break;
 855   2      
 856   2              case 5 :
 857   2                      //achange LID implement method.
 858   2                      if(IS_MASK_CLEAR(SysStatus,LidKBIgnore)) 
 859   2                      {
 860   3                              #if LID_OnlyQEvent_Support //add judge
 861   3                              new_state = !Read_LID_SW_IN(); //Open: LID_SW_IN: high else: low
 862   3                              #else
                                      new_state = 0x00;
                                      #endif
 865   3                      }
 866   2                      else
 867   2                      {
 868   3                              new_state = 0x00;
 869   3                      }
 870   2                      break;
 871   2                      // change LID implement method.
 872   2              case 6 :
 873   2                      new_state = 0x00;
 874   2                      break;
 875   2      
 876   2              case 7:
 877   2              new_state = 0x00;
 878   2                      break;
 879   2      
 880   2              case 8:
 881   2                      new_state = 0x00;
 882   2                      break;
 883   2      
 884   2              case 9:
 885   2              new_state = 0x00;
 886   2                      break;
 887   2      
 888   2              default :
 889   2                      new_state = 0x00;
 890   2                      break;
 891   2              }
 892   1      
 893   1              Tmp_XPntr = Debounce_TBL[device_id].REG;
 894   1              Tmp_XPntr1 = Debounce_TBL[device_id].Cunter;
 895   1              device_flag = Debounce_TBL[device_id].Flag;
 896   1      
 897   1              old_state = ((*Tmp_XPntr & device_flag) != 0x00);
 898   1              if(new_state != old_state)
 899   1              {
 900   2                      if((*Tmp_XPntr1) == 0x00)
 901   2                      {
 902   3                              //LMLNANO008:S+ modify power button debunce time in S0.
 903   3                              //if((device_id==0) && (SystemIsS0) && (IS_MASK_CLEAR(cCmd, b6TestBtnEn))) //ANGELAG038: remove //LMLNA
             -NO026:add solution for P/L test Power Button.
 904   3                              if((device_id==0) && (SystemIsS0) && (IS_MASK_CLEAR(cCmd, b6TestBtnEn))&&(IS_MASK_CLEAR(POWER_FLAG1, wa
C51 COMPILER V8.12   OEM_EVENT                                                             07/28/2018 12:03:46 PAGE 16  

             -it_PSW_off))) //ANGELAG038: add
 905   3                                      (*Tmp_XPntr1) = T_PSW_DEBOUNCE_S0;
 906   3                              else
 907   3                              //LMLNANO008:E+.
 908   3                                      (*Tmp_XPntr1) = Debounce_TBL[device_id].Time;
 909   3                      }
 910   2                      else
 911   2                      {
 912   3                              (*Tmp_XPntr1) --;
 913   3                  
 914   3                              if((*Tmp_XPntr1) == 0)
 915   3                              {
 916   4                                      if(new_state)
 917   4                                      {
 918   5                                              (Debounce_TBL[device_id].press)();
 919   5                                              *Tmp_XPntr |= device_flag;
 920   5                                      }
 921   4                                      else
 922   4                                      {
 923   5                                              (Debounce_TBL[device_id].release)();
 924   5                                              *Tmp_XPntr  &= (~device_flag);
 925   5                                      }
 926   4                              }
 927   3                      }
 928   2              }
 929   1              else
 930   1              {
 931   2                      *Tmp_XPntr1 = 0x00;
 932   2              }
 933   1      
 934   1              (Debounce_TBL[device_id].nochange)();
 935   1      }
 936          
C51 COMPILER V8.12   OEM_EVENT                                                             07/28/2018 12:03:46 PAGE 17  

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION Com00C2 (BEGIN)
0000         L?0195:
0000 E4                CLR     A
0001 900000      E     MOV     DPTR,#BatSMbusFailCount
0004 F0                MOVX    @DPTR,A
0005         L?0196:
0005 900000      E     MOV     DPTR,#?_bRWSMBus?BYTE+03H
0008 740D              MOV     A,#0DH
000A F0                MOVX    @DPTR,A
000B 7E00        E     MOV     R6,#HIGH BAT1PERCL
000D A3                INC     DPTR
000E 7400        E     MOV     A,#HIGH BAT1PERCL
0010 F0                MOVX    @DPTR,A
0011 A3                INC     DPTR
0012 7400        E     MOV     A,#LOW BAT1PERCL
0014 F0                MOVX    @DPTR,A
0015 E4                CLR     A
0016 A3                INC     DPTR
0017 F0                MOVX    @DPTR,A
0018 7B16              MOV     R3,#016H
001A 7D0C              MOV     R5,#0CH
001C 7F01              MOV     R7,#01H
001E 22                RET     
001F         L?0197:
001F 7402              MOV     A,#02H
0021         L?0198:
0021 900000      E     MOV     DPTR,#uVPCeventSource
0024 F0                MOVX    @DPTR,A
0025 E4                CLR     A
0026 900000      E     MOV     DPTR,#uVPCeventSource2
0029 F0                MOVX    @DPTR,A
002A 7F44              MOV     R7,#044H
002C 22                RET     
002D         L?0199:
002D E4                CLR     A
002E         L?0200:
002E 900000      E     MOV     DPTR,#BatSMbusFailCount
0031 F0                MOVX    @DPTR,A
0032 900000      E     MOV     DPTR,#nBattErrorCnt
0035 F0                MOVX    @DPTR,A
0036 22                RET     
0037         L?0201:
0037 D3                SETB    C
0038         L?0202:
0038 900000      E     MOV     DPTR,#BatSMbusFailCount
003B E0                MOVX    A,@DPTR
003C 9404              SUBB    A,#04H
003E 22                RET     
003F         L?0203:
003F 900000      E     MOV     DPTR,#nBatteryStatL
0042 E0                MOVX    A,@DPTR
0043 4404              ORL     A,#04H
0045 F0                MOVX    @DPTR,A
0046 900000      E     MOV     DPTR,#LOWBATT_3TIMES
0049 7464              MOV     A,#064H
004B F0                MOVX    @DPTR,A
004C 22                RET     
004D         L?0204:
004D 900000      E     MOV     DPTR,#DCR6
C51 COMPILER V8.12   OEM_EVENT                                                             07/28/2018 12:03:46 PAGE 18  

0050 747F              MOV     A,#07FH
0052 F0                MOVX    @DPTR,A
0053 900000      E     MOV     DPTR,#PWM_LEDBeep_CNT
0056 740A              MOV     A,#0AH
0058 F0                MOVX    @DPTR,A
0059 22                RET     
005A         L?0205:
005A         L?0206:
005A 900000      E     MOV     DPTR,#SysPowState
005D E0                MOVX    A,@DPTR
005E 24EF              ADD     A,#0EFH
0060 22                RET     
0061         L?0207:
0061         L?0208:
0061 7401              MOV     A,#01H
0063 F0                MOVX    @DPTR,A
0064 A3                INC     DPTR
0065 74F4              MOV     A,#0F4H
0067 F0                MOVX    @DPTR,A
0068 22                RET     
0069         L?0209:
0069         L?0210:
0069 900000      E     MOV     DPTR,#GPDRF
006C E0                MOVX    A,@DPTR
006D 4402              ORL     A,#02H
006F F0                MOVX    @DPTR,A
0070 22                RET     
             ; FUNCTION Com00C2 (END)

             ; FUNCTION NullEvent (BEGIN)
                                           ; SOURCE LINE # 17
                                           ; SOURCE LINE # 18
                                           ; SOURCE LINE # 20
0000 22                RET     
             ; FUNCTION NullEvent (END)

             ; FUNCTION AdapterIn (BEGIN)
                                           ; SOURCE LINE # 25
                                           ; SOURCE LINE # 26
                                           ; SOURCE LINE # 55
0000 7F02              MOV     R7,#02H
0002 120000      E     LCALL   _PECI_SETPL2Watts
                                           ; SOURCE LINE # 57
0005 900000      E     MOV     DPTR,#SYS_STATUS
0008 E0                MOVX    A,@DPTR
0009 FF                MOV     R7,A
                                           ; SOURCE LINE # 58
                                           ; SOURCE LINE # 60
000A         ?C0002:
                                           ; SOURCE LINE # 61
000A 900000      E     MOV     DPTR,#SysPowState
000D E0                MOVX    A,@DPTR
000E B41107            CJNE    A,#011H,?C0003
                                           ; SOURCE LINE # 62
                                           ; SOURCE LINE # 63
0011 900000      E     MOV     DPTR,#GPDRJ
0014 E0                MOVX    A,@DPTR
0015 4440              ORL     A,#040H
0017 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 64
0018         ?C0003:
                                           ; SOURCE LINE # 65
C51 COMPILER V8.12   OEM_EVENT                                                             07/28/2018 12:03:46 PAGE 19  

0018 120000      E     LCALL   ACInOutIntEnable
                                           ; SOURCE LINE # 66
001B 120000      E     LCALL   Unlock_ShipMode
                                           ; SOURCE LINE # 67
001E 900000      E     MOV     DPTR,#SYS_STATUS
0021 E0                MOVX    A,@DPTR
0022 4480              ORL     A,#080H
0024 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 68
0025 900000      E     MOV     DPTR,#nBatteryStatus1
0028 E0                MOVX    A,@DPTR
0029 30E003            JNB     ACC.0,?C0004
                                           ; SOURCE LINE # 69
                                           ; SOURCE LINE # 70
002C 120000      E     LCALL   Chk_Battery_Full
                                           ; SOURCE LINE # 71
002F         ?C0004:
                                           ; SOURCE LINE # 73
002F 7F37              MOV     R7,#037H
0031 120000      E     LCALL   _ECSMI_SCIEvent
                                           ; SOURCE LINE # 74
0034 900000      E     MOV     DPTR,#SysPowState
0037 E0                MOVX    A,@DPTR
0038 B41103            CJNE    A,#011H,?C0005
                                           ; SOURCE LINE # 75
                                           ; SOURCE LINE # 76
                                           ; SOURCE LINE # 77
003B 120000      R     LCALL   L?0204
                                           ; SOURCE LINE # 78
003E         ?C0005:
                                           ; SOURCE LINE # 80
003E 120000      E     LCALL   InitChargerIC
                                           ; SOURCE LINE # 81
                                           ; SOURCE LINE # 82
0041 120000      R     LCALL   L?0199
                                           ; SOURCE LINE # 84
0044 900000      E     MOV     DPTR,#CHGIC_ptr
0047 04                INC     A
0048 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 85
0049 120000      E     LCALL   WriteSmartChgIC
                                           ; SOURCE LINE # 86
004C 120000      E     LCALL   WriteSmartChgIC
                                           ; SOURCE LINE # 87
004F 900000      E     MOV     DPTR,#CHGIC_ptr
0052 7403              MOV     A,#03H
0054 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 88
0055 120000      E     LCALL   ReadSmartChgIC
                                           ; SOURCE LINE # 89
0058 900000      E     MOV     DPTR,#SYS_STATUS
005B E0                MOVX    A,@DPTR
005C 30E70C            JNB     ACC.7,?C0007
                                           ; SOURCE LINE # 90
                                           ; SOURCE LINE # 92
005F 900000      E     MOV     DPTR,#AdapterIDOn_Flag
0062 7401              MOV     A,#01H
0064 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 93
0065 900000      E     MOV     DPTR,#ADPIDON10MS_NUM
0068 740A              MOV     A,#0AH
006A F0                MOVX    @DPTR,A
C51 COMPILER V8.12   OEM_EVENT                                                             07/28/2018 12:03:46 PAGE 20  

                                           ; SOURCE LINE # 94
                                           ; SOURCE LINE # 97
006B         ?C0007:
006B 22                RET     
             ; FUNCTION AdapterIn (END)

             ; FUNCTION AdapterOut (BEGIN)
                                           ; SOURCE LINE # 102
                                           ; SOURCE LINE # 103
                                           ; SOURCE LINE # 105
0000 E4                CLR     A
0001 900000      E     MOV     DPTR,#AdapterIDOn_Flag
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 115
0005 120000      E     LCALL   BATT_LEN_OFF
                                           ; SOURCE LINE # 116
0008 900000      E     MOV     DPTR,#GPDRJ
000B E0                MOVX    A,@DPTR
000C 54BF              ANL     A,#0BFH
000E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 117
000F 120000      E     LCALL   ACInOutIntEnable
                                           ; SOURCE LINE # 118
0012 900000      E     MOV     DPTR,#SYS_STATUS
0015 E0                MOVX    A,@DPTR
0016 54EF              ANL     A,#0EFH
0018 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 119
0019 E0                MOVX    A,@DPTR
001A 54DF              ANL     A,#0DFH
001C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 120
001D 120000      E     LCALL   SetVGA_AC_DET
                                           ; SOURCE LINE # 121
0020 7F01              MOV     R7,#01H
0022 120000      E     LCALL   _PECI_SETPL2Watts
                                           ; SOURCE LINE # 123
0025 900000      E     MOV     DPTR,#SYS_STATUS
0028 E0                MOVX    A,@DPTR
0029 547F              ANL     A,#07FH
002B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 124
002C 120000      E     LCALL   Chk_Battery_Full
                                           ; SOURCE LINE # 125
002F 7F38              MOV     R7,#038H
0031 120000      E     LCALL   _ECSMI_SCIEvent
                                           ; SOURCE LINE # 128
0034 900000      E     MOV     DPTR,#BatteryAlarm
0037 E0                MOVX    A,@DPTR
0038 4401              ORL     A,#01H
003A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 133
003B 120000      E     LCALL   ThrottlingControl
                                           ; SOURCE LINE # 135
003E 900000      E     MOV     DPTR,#SysPowState
0041 E0                MOVX    A,@DPTR
0042 B41110            CJNE    A,#011H,?C0008
                                           ; SOURCE LINE # 136
                                           ; SOURCE LINE # 137
                                           ; SOURCE LINE # 138
0045 120000      R     LCALL   L?0204
                                           ; SOURCE LINE # 141
C51 COMPILER V8.12   OEM_EVENT                                                             07/28/2018 12:03:46 PAGE 21  

0048 900000      E     MOV     DPTR,#LENOVOPMFW
004B E0                MOVX    A,@DPTR
004C 30E206            JNB     ACC.2,?C0008
                                           ; SOURCE LINE # 142
                                           ; SOURCE LINE # 143
                                           ; SOURCE LINE # 144
                                           ; SOURCE LINE # 145
004F 120000      R     LCALL   L?0197
0052 120000      E     LCALL   _ECSMI_SCIEvent
                                           ; SOURCE LINE # 146
                                           ; SOURCE LINE # 147
0055         ?C0008:
                                           ; SOURCE LINE # 149
0055 E4                CLR     A
0056 900000      E     MOV     DPTR,#nAvgCurrentL
0059 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 150
005A 900000      E     MOV     DPTR,#nAvgCurrentH
005D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 151
005E 900000      E     MOV     DPTR,#Bat0x0BFakeCnt
0061 743C              MOV     A,#03CH
0063 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 154
0064 900000      E     MOV     DPTR,#ADPIDON10MS_NUM
0067 74FF              MOV     A,#0FFH
0069 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 155
006A 020000      E     LJMP    Charger_3D_Config
             ; FUNCTION AdapterOut (END)

             ; FUNCTION PSWPressed (BEGIN)
                                           ; SOURCE LINE # 162
                                           ; SOURCE LINE # 163
                                           ; SOURCE LINE # 164
0000 900000      E     MOV     DPTR,#cCmd
0003 E0                MOVX    A,@DPTR
0004 30E60C            JNB     ACC.6,?C0011
                                           ; SOURCE LINE # 165
                                           ; SOURCE LINE # 166
0007 7FE0              MOV     R7,#0E0H
0009 120000      E     LCALL   _Buffer_Key
                                           ; SOURCE LINE # 167
000C 7F25              MOV     R7,#025H
000E 120000      E     LCALL   _Buffer_Key
                                           ; SOURCE LINE # 168
0011 D200        E     SETB    F_Service_SEND
                                           ; SOURCE LINE # 169
0013         ?C0011:
                                           ; SOURCE LINE # 183
0013 900000      E     MOV     DPTR,#ECSleepCount
0016 7403              MOV     A,#03H
0018 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 186
0019 E4                CLR     A
001A 900000      E     MOV     DPTR,#CountSecAfterPswPressed
001D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 198
001E 900000      E     MOV     DPTR,#SysStatus2
0021 E0                MOVX    A,@DPTR
0022 54FE              ANL     A,#0FEH
0024 F0                MOVX    @DPTR,A
C51 COMPILER V8.12   OEM_EVENT                                                             07/28/2018 12:03:46 PAGE 22  

                                           ; SOURCE LINE # 209
0025 900000      E     MOV     DPTR,#GPDRB
0028 E0                MOVX    A,@DPTR
0029 30E103            JNB     ACC.1,?C0013
002C D3                SETB    C
002D 8001              SJMP    ?C0014
002F         ?C0013:
002F C3                CLR     C
0030         ?C0014:
0030 4003              JC      $ + 5H
0032 020000      R     LJMP    ?C0015
                                           ; SOURCE LINE # 210
0035         ?C0012:
                                           ; SOURCE LINE # 213
0035 120000      R     LCALL   L?0205
0038 7003              JNZ     $ + 5H
003A 020000      R     LJMP    ?C0037
003D 24DE              ADD     A,#0DEH
003F 7003              JNZ     $ + 5H
0041 020000      R     LJMP    ?C0037
0044 24CD              ADD     A,#0CDH
0046 6007              JZ      ?C0019
0048 2411              ADD     A,#011H
004A 6003              JZ      $ + 5H
004C 020000      R     LJMP    ?C0015
                                           ; SOURCE LINE # 214
                                           ; SOURCE LINE # 215
                                           ; SOURCE LINE # 216
                                           ; SOURCE LINE # 218
                                           ; SOURCE LINE # 219
004F         ?C0019:
                                           ; SOURCE LINE # 221
004F 900000      E     MOV     DPTR,#GPDRB
0052 E0                MOVX    A,@DPTR
0053 30E003            JNB     ACC.0,?C0022
0056 D3                SETB    C
0057 8001              SJMP    ?C0023
0059         ?C0022:
0059 C3                CLR     C
005A         ?C0023:
005A 5007              JNC     ?C0021
005C 900000      E     MOV     DPTR,#ACOFF_SOURCE
005F E0                MOVX    A,@DPTR
0060 30E239            JNB     ACC.2,?C0020
0063         ?C0021:
                                           ; SOURCE LINE # 222
                                           ; SOURCE LINE # 223
                                           ; SOURCE LINE # 224
0063 120000      R     LCALL   L?0195
0066 120000      E     LCALL   _bRWSMBus
0069 EF                MOV     A,R7
006A 701D              JNZ     ?C0024
                                           ; SOURCE LINE # 225
                                           ; SOURCE LINE # 226
006C 800E              SJMP    ?C0179
006E         ?C0025:
                                           ; SOURCE LINE # 227
006E 120000      R     LCALL   L?0201
0071 5016              JNC     ?C0024
                                           ; SOURCE LINE # 228
                                           ; SOURCE LINE # 229
0073 120000      R     LCALL   L?0196
C51 COMPILER V8.12   OEM_EVENT                                                             07/28/2018 12:03:46 PAGE 23  

0076 120000      E     LCALL   _bRWSMBus
0079 EF                MOV     A,R7
007A 7008              JNZ     ?C0027
                                           ; SOURCE LINE # 230
                                           ; SOURCE LINE # 231
007C         ?C0179:
007C 900000      E     MOV     DPTR,#BatSMbusFailCount
007F E0                MOVX    A,@DPTR
0080 04                INC     A
0081 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 232
0082 80EA              SJMP    ?C0025
0084         ?C0027:
                                           ; SOURCE LINE # 234
                                           ; SOURCE LINE # 235
0084 E4                CLR     A
0085 900000      E     MOV     DPTR,#BatSMbusFailCount
0088 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 236
                                           ; SOURCE LINE # 237
                                           ; SOURCE LINE # 238
                                           ; SOURCE LINE # 240
0089         ?C0024:
                                           ; SOURCE LINE # 241
0089 C3                CLR     C
008A 120000      R     LCALL   L?0202
008D 5065              JNC     ?C0015
                                           ; SOURCE LINE # 242
008F         ?C0029:
                                           ; SOURCE LINE # 244
008F 900000      E     MOV     DPTR,#BAT1PERCL
0092 E0                MOVX    A,@DPTR
0093 C3                CLR     C
0094 9402              SUBB    A,#02H
0096 5004              JNC     ?C0020
                                           ; SOURCE LINE # 245
                                           ; SOURCE LINE # 246
                                           ; SOURCE LINE # 247
0098 120000      R     LCALL   L?0203
                                           ; SOURCE LINE # 248
009B 22                RET     
                                           ; SOURCE LINE # 249
                                           ; SOURCE LINE # 250
009C         ?C0020:
                                           ; SOURCE LINE # 270
009C 900000      E     MOV     DPTR,#GPDRB
009F E0                MOVX    A,@DPTR
00A0 30E003            JNB     ACC.0,?C0032
00A3 D3                SETB    C
00A4 8001              SJMP    ?C0033
00A6         ?C0032:
00A6 C3                CLR     C
00A7         ?C0033:
00A7 4014              JC      ?C0031
                                           ; SOURCE LINE # 271
                                           ; SOURCE LINE # 272
                                           ; SOURCE LINE # 273
00A9 120000      R     LCALL   L?0199
                                           ; SOURCE LINE # 274
00AC 900000      E     MOV     DPTR,#LENOVOBATT
00AF E0                MOVX    A,@DPTR
00B0 30E10A            JNB     ACC.1,?C0031
C51 COMPILER V8.12   OEM_EVENT                                                             07/28/2018 12:03:46 PAGE 24  

                                           ; SOURCE LINE # 275
                                           ; SOURCE LINE # 276
00B3 900000      E     MOV     DPTR,#Service_Auth_Step
00B6 7401              MOV     A,#01H
00B8 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 277
00B9 900000      E     MOV     DPTR,#SHA1failCnt
00BC F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 278
                                           ; SOURCE LINE # 279
00BD         ?C0031:
                                           ; SOURCE LINE # 280
00BD 900000      E     MOV     DPTR,#SysStatus2
00C0 E0                MOVX    A,@DPTR
00C1 20E330            JB      ACC.3,?C0015
                                           ; SOURCE LINE # 281
                                           ; SOURCE LINE # 282
                                           ; SOURCE LINE # 283
00C4         ?C0035:
                                           ; SOURCE LINE # 284
00C4 E4                CLR     A
00C5 900000      E     MOV     DPTR,#uNovoVPCCount
00C8 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 285
00C9 900000      E     MOV     DPTR,#PWSeqStep
00CC 04                INC     A
00CD F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 286
00CE E4                CLR     A
00CF 900000      E     MOV     DPTR,#PowSeqDelay
00D2 F0                MOVX    @DPTR,A
00D3 A3                INC     DPTR
00D4 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 287
00D5 7F51              MOV     R7,#051H
00D7 120000      E     LCALL   _RamDebug
                                           ; SOURCE LINE # 288
00DA 900000      E     MOV     DPTR,#SysPowState
00DD 7450              MOV     A,#050H
00DF F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 289
00E0 22                RET     
                                           ; SOURCE LINE # 291
                                           ; SOURCE LINE # 292
00E1         ?C0037:
                                           ; SOURCE LINE # 293
00E1 7FF4              MOV     R7,#0F4H
00E3 120000      E     LCALL   _RamDebug
                                           ; SOURCE LINE # 294
00E6 900000      E     MOV     DPTR,#pProject4
00E9 E0                MOVX    A,@DPTR
00EA 20E007            JB      ACC.0,?C0015
                                           ; SOURCE LINE # 295
                                           ; SOURCE LINE # 297
00ED 900000      E     MOV     DPTR,#GPDRF
00F0 E0                MOVX    A,@DPTR
00F1 54FD              ANL     A,#0FDH
00F3 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 298
                                           ; SOURCE LINE # 299
                                           ; SOURCE LINE # 301
                                           ; SOURCE LINE # 302
C51 COMPILER V8.12   OEM_EVENT                                                             07/28/2018 12:03:46 PAGE 25  

                                           ; SOURCE LINE # 303
                                           ; SOURCE LINE # 304
00F4         ?C0015:
00F4 22                RET     
             ; FUNCTION PSWPressed (END)

             ; FUNCTION PSWReleased (BEGIN)
                                           ; SOURCE LINE # 309
                                           ; SOURCE LINE # 310
                                           ; SOURCE LINE # 311
0000 900000      E     MOV     DPTR,#cCmd
0003 E0                MOVX    A,@DPTR
0004 30E611            JNB     ACC.6,?C0040
                                           ; SOURCE LINE # 312
                                           ; SOURCE LINE # 313
0007 7FE0              MOV     R7,#0E0H
0009 120000      E     LCALL   _Buffer_Key
                                           ; SOURCE LINE # 314
000C 7FF0              MOV     R7,#0F0H
000E 120000      E     LCALL   _Buffer_Key
                                           ; SOURCE LINE # 315
0011 7F25              MOV     R7,#025H
0013 120000      E     LCALL   _Buffer_Key
                                           ; SOURCE LINE # 316
0016 D200        E     SETB    F_Service_SEND
                                           ; SOURCE LINE # 317
0018         ?C0040:
                                           ; SOURCE LINE # 319
0018 900000      E     MOV     DPTR,#SysStatus2
001B E0                MOVX    A,@DPTR
001C 30E304            JNB     ACC.3,?C0041
                                           ; SOURCE LINE # 320
                                           ; SOURCE LINE # 321
001F E0                MOVX    A,@DPTR
0020 54F7              ANL     A,#0F7H
0022 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 322
0023         ?C0041:
                                           ; SOURCE LINE # 329
0023 900000      E     MOV     DPTR,#GPDRB
0026 E0                MOVX    A,@DPTR
0027 30E103            JNB     ACC.1,?C0043
002A D3                SETB    C
002B 8001              SJMP    ?C0044
002D         ?C0043:
002D C3                CLR     C
002E         ?C0044:
002E 501A              JNC     ?C0045
                                           ; SOURCE LINE # 330
0030         ?C0042:
                                           ; SOURCE LINE # 334
0030 900000      E     MOV     DPTR,#PSW_COUNTER
0033 120000      R     LCALL   L?0207
                                           ; SOURCE LINE # 335
0036 900000      E     MOV     DPTR,#SysPowState
0039 E0                MOVX    A,@DPTR
003A 24CD              ADD     A,#0CDH
003C 6004              JZ      ?C0050
003E 2422              ADD     A,#022H
0040 7008              JNZ     ?C0045
                                           ; SOURCE LINE # 336
                                           ; SOURCE LINE # 337
C51 COMPILER V8.12   OEM_EVENT                                                             07/28/2018 12:03:46 PAGE 26  

                                           ; SOURCE LINE # 338
                                           ; SOURCE LINE # 340
                                           ; SOURCE LINE # 341
                                           ; SOURCE LINE # 343
                                           ; SOURCE LINE # 344
0042         ?C0050:
                                           ; SOURCE LINE # 345
0042 120000      R     LCALL   L?0209
                                           ; SOURCE LINE # 346
0045 7F32              MOV     R7,#032H
0047 120000      E     LCALL   _ECQEvent
                                           ; SOURCE LINE # 347
                                           ; SOURCE LINE # 349
                                           ; SOURCE LINE # 350
                                           ; SOURCE LINE # 351
                                           ; SOURCE LINE # 352
004A         ?C0045:
004A 22                RET     
             ; FUNCTION PSWReleased (END)

             ; FUNCTION PSWOverrided (BEGIN)
                                           ; SOURCE LINE # 356
                                           ; SOURCE LINE # 357
                                           ; SOURCE LINE # 358
0000 900000      E     MOV     DPTR,#GPDRB
0003 E0                MOVX    A,@DPTR
0004 30E103            JNB     ACC.1,?C0053
0007 D3                SETB    C
0008 8001              SJMP    ?C0054
000A         ?C0053:
000A C3                CLR     C
000B         ?C0054:
000B 500B              JNC     ?C0055
                                           ; SOURCE LINE # 359
000D         ?C0052:
                                           ; SOURCE LINE # 360
000D 900000      E     MOV     DPTR,#GPDRB
0010 E0                MOVX    A,@DPTR
0011 20E304            JB      ACC.3,?C0055
0014 900000      E     MOV     DPTR,#GPDRJ
0017 E0                MOVX    A,@DPTR
                                           ; SOURCE LINE # 361
                                           ; SOURCE LINE # 383
0018         ?C0055:
0018 22                RET     
             ; FUNCTION PSWOverrided (END)

             ; FUNCTION NOVOPressed (BEGIN)
                                           ; SOURCE LINE # 389
                                           ; SOURCE LINE # 390
                                           ; SOURCE LINE # 391
0000 900000      E     MOV     DPTR,#cCmd
0003 E0                MOVX    A,@DPTR
0004 30E60C            JNB     ACC.6,?C0057
                                           ; SOURCE LINE # 392
                                           ; SOURCE LINE # 393
0007 7FE0              MOV     R7,#0E0H
0009 120000      E     LCALL   _Buffer_Key
                                           ; SOURCE LINE # 394
000C 7F49              MOV     R7,#049H
000E 120000      E     LCALL   _Buffer_Key
                                           ; SOURCE LINE # 395
C51 COMPILER V8.12   OEM_EVENT                                                             07/28/2018 12:03:46 PAGE 27  

0011 D200        E     SETB    F_Service_SEND
                                           ; SOURCE LINE # 396
0013         ?C0057:
                                           ; SOURCE LINE # 410
0013 900000      E     MOV     DPTR,#ECSleepCount
0016 7403              MOV     A,#03H
0018 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 420
0019 900000      E     MOV     DPTR,#SysStatus2
001C E0                MOVX    A,@DPTR
001D 54FD              ANL     A,#0FDH
001F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 422
0020 900000      E     MOV     DPTR,#GPDRB
0023 E0                MOVX    A,@DPTR
0024 30E103            JNB     ACC.1,?C0059
0027 D3                SETB    C
0028 8001              SJMP    ?C0060
002A         ?C0059:
002A C3                CLR     C
002B         ?C0060:
002B 4003              JC      $ + 5H
002D 020000      R     LJMP    ?C0061
                                           ; SOURCE LINE # 423
0030         ?C0058:
                                           ; SOURCE LINE # 426
0030 E4                CLR     A
0031 900000      E     MOV     DPTR,#CountSecAfterNOVOPressed
0034 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 428
0035 120000      R     LCALL   L?0205
0038 7003              JNZ     $ + 5H
003A 020000      R     LJMP    ?C0081
003D 24BC              ADD     A,#0BCH
003F 600B              JZ      ?C0065
0041 24EF              ADD     A,#0EFH
0043 6007              JZ      ?C0065
0045 2422              ADD     A,#022H
0047 6003              JZ      $ + 5H
0049 020000      R     LJMP    ?C0061
                                           ; SOURCE LINE # 429
                                           ; SOURCE LINE # 430
                                           ; SOURCE LINE # 432
                                           ; SOURCE LINE # 433
004C         ?C0065:
                                           ; SOURCE LINE # 436
004C 900000      E     MOV     DPTR,#GPDRB
004F E0                MOVX    A,@DPTR
0050 30E003            JNB     ACC.0,?C0068
0053 D3                SETB    C
0054 8001              SJMP    ?C0069
0056         ?C0068:
0056 C3                CLR     C
0057         ?C0069:
0057 5007              JNC     ?C0067
0059 900000      E     MOV     DPTR,#ACOFF_SOURCE
005C E0                MOVX    A,@DPTR
005D 30E23C            JNB     ACC.2,?C0066
0060         ?C0067:
                                           ; SOURCE LINE # 437
                                           ; SOURCE LINE # 438
                                           ; SOURCE LINE # 439
C51 COMPILER V8.12   OEM_EVENT                                                             07/28/2018 12:03:46 PAGE 28  

0060 120000      R     LCALL   L?0195
0063 120000      E     LCALL   _bRWSMBus
0066 EF                MOV     A,R7
0067 701D              JNZ     ?C0070
                                           ; SOURCE LINE # 440
                                           ; SOURCE LINE # 441
0069 800E              SJMP    ?C0180
006B         ?C0071:
                                           ; SOURCE LINE # 442
006B 120000      R     LCALL   L?0201
006E 5016              JNC     ?C0070
                                           ; SOURCE LINE # 443
                                           ; SOURCE LINE # 444
0070 120000      R     LCALL   L?0196
0073 120000      E     LCALL   _bRWSMBus
0076 EF                MOV     A,R7
0077 7008              JNZ     ?C0073
                                           ; SOURCE LINE # 445
                                           ; SOURCE LINE # 446
0079         ?C0180:
0079 900000      E     MOV     DPTR,#BatSMbusFailCount
007C E0                MOVX    A,@DPTR
007D 04                INC     A
007E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 447
007F 80EA              SJMP    ?C0071
0081         ?C0073:
                                           ; SOURCE LINE # 449
                                           ; SOURCE LINE # 450
0081 E4                CLR     A
0082 900000      E     MOV     DPTR,#BatSMbusFailCount
0085 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 451
                                           ; SOURCE LINE # 452
                                           ; SOURCE LINE # 453
                                           ; SOURCE LINE # 455
0086         ?C0070:
                                           ; SOURCE LINE # 456
0086 900000      E     MOV     DPTR,#BatSMbusFailCount
0089 E0                MOVX    A,@DPTR
008A C3                CLR     C
008B 9404              SUBB    A,#04H
008D 5051              JNC     ?C0061
                                           ; SOURCE LINE # 457
008F         ?C0075:
                                           ; SOURCE LINE # 459
008F 900000      E     MOV     DPTR,#BAT1PERCL
0092 E0                MOVX    A,@DPTR
0093 C3                CLR     C
0094 9402              SUBB    A,#02H
0096 5004              JNC     ?C0066
                                           ; SOURCE LINE # 460
                                           ; SOURCE LINE # 461
                                           ; SOURCE LINE # 462
0098 120000      R     LCALL   L?0203
                                           ; SOURCE LINE # 463
009B 22                RET     
                                           ; SOURCE LINE # 464
                                           ; SOURCE LINE # 465
009C         ?C0066:
                                           ; SOURCE LINE # 467
009C 900000      E     MOV     DPTR,#LOWBATT_3TIMES
C51 COMPILER V8.12   OEM_EVENT                                                             07/28/2018 12:03:46 PAGE 29  

009F E0                MOVX    A,@DPTR
00A0 703E              JNZ     ?C0061
                                           ; SOURCE LINE # 468
                                           ; SOURCE LINE # 471
00A2 900000      E     MOV     DPTR,#EEPROM_PwrSts
00A5 E0                MOVX    A,@DPTR
00A6 20E404            JB      ACC.4,?C0078
                                           ; SOURCE LINE # 472
                                           ; SOURCE LINE # 473
00A9 E0                MOVX    A,@DPTR
00AA 20E033            JB      ACC.0,?C0061
                                           ; SOURCE LINE # 474
                                           ; SOURCE LINE # 475
                                           ; SOURCE LINE # 476
                                           ; SOURCE LINE # 477
00AD         ?C0078:
                                           ; SOURCE LINE # 478
00AD 900000      E     MOV     DPTR,#uNovoVPCCount
00B0 7401              MOV     A,#01H
00B2 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 479
00B3 900000      E     MOV     DPTR,#PWSeqStep
00B6 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 480
00B7 E4                CLR     A
00B8 900000      E     MOV     DPTR,#PowSeqDelay
00BB F0                MOVX    @DPTR,A
00BC A3                INC     DPTR
00BD F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 481
00BE 7F52              MOV     R7,#052H
00C0 120000      E     LCALL   _RamDebug
                                           ; SOURCE LINE # 482
00C3 900000      E     MOV     DPTR,#SysPowState
00C6 7450              MOV     A,#050H
00C8 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 483
                                           ; SOURCE LINE # 484
00C9 22                RET     
                                           ; SOURCE LINE # 486
                                           ; SOURCE LINE # 487
                                           ; SOURCE LINE # 488
00CA         ?C0081:
                                           ; SOURCE LINE # 491
00CA 900000      E     MOV     DPTR,#SYS_MISC1
00CD E0                MOVX    A,@DPTR
00CE 30E70F            JNB     ACC.7,?C0061
                                           ; SOURCE LINE # 492
                                           ; SOURCE LINE # 493
00D1 900000      E     MOV     DPTR,#uNovoVPCCount
00D4 E0                MOVX    A,@DPTR
00D5 04                INC     A
00D6 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 494
00D7 E0                MOVX    A,@DPTR
00D8 D3                SETB    C
00D9 940B              SUBB    A,#0BH
00DB 4003              JC      ?C0061
                                           ; SOURCE LINE # 495
00DD E0                MOVX    A,@DPTR
00DE 14                DEC     A
00DF F0                MOVX    @DPTR,A
C51 COMPILER V8.12   OEM_EVENT                                                             07/28/2018 12:03:46 PAGE 30  

                                           ; SOURCE LINE # 498
                                           ; SOURCE LINE # 500
                                           ; SOURCE LINE # 501
                                           ; SOURCE LINE # 502
                                           ; SOURCE LINE # 503
00E0         ?C0061:
00E0 22                RET     
             ; FUNCTION NOVOPressed (END)

             ; FUNCTION NOVOReleased (BEGIN)
                                           ; SOURCE LINE # 508
                                           ; SOURCE LINE # 509
                                           ; SOURCE LINE # 510
0000 900000      E     MOV     DPTR,#NOVO_COUNTER
0003 120000      R     LCALL   L?0207
                                           ; SOURCE LINE # 511
0006 900000      E     MOV     DPTR,#cCmd
0009 E0                MOVX    A,@DPTR
000A 30E611            JNB     ACC.6,?C0085
                                           ; SOURCE LINE # 512
                                           ; SOURCE LINE # 513
000D 7FE0              MOV     R7,#0E0H
000F 120000      E     LCALL   _Buffer_Key
                                           ; SOURCE LINE # 514
0012 7FF0              MOV     R7,#0F0H
0014 120000      E     LCALL   _Buffer_Key
                                           ; SOURCE LINE # 515
0017 7F49              MOV     R7,#049H
0019 120000      E     LCALL   _Buffer_Key
                                           ; SOURCE LINE # 516
001C D200        E     SETB    F_Service_SEND
                                           ; SOURCE LINE # 517
001E         ?C0085:
                                           ; SOURCE LINE # 520
001E 900000      E     MOV     DPTR,#GPDRB
0021 E0                MOVX    A,@DPTR
0022 30E103            JNB     ACC.1,?C0087
0025 D3                SETB    C
0026 8001              SJMP    ?C0088
0028         ?C0087:
0028 C3                CLR     C
0029         ?C0088:
0029 5027              JNC     ?C0089
                                           ; SOURCE LINE # 521
002B         ?C0086:
                                           ; SOURCE LINE # 523
002B 120000      R     LCALL   L?0206
002E 7022              JNZ     ?C0089
                                           ; SOURCE LINE # 524
                                           ; SOURCE LINE # 525
                                           ; SOURCE LINE # 527
                                           ; SOURCE LINE # 529
                                           ; SOURCE LINE # 530
                                           ; SOURCE LINE # 531
0030         ?C0094:
                                           ; SOURCE LINE # 533
0030 900000      E     MOV     DPTR,#SYS_MISC1
0033 E0                MOVX    A,@DPTR
0034 30E71B            JNB     ACC.7,?C0089
                                           ; SOURCE LINE # 534
                                           ; SOURCE LINE # 535
0037 900000      E     MOV     DPTR,#uNovoVPCCount
C51 COMPILER V8.12   OEM_EVENT                                                             07/28/2018 12:03:46 PAGE 31  

003A E0                MOVX    A,@DPTR
003B D3                SETB    C
003C 940A              SUBB    A,#0AH
003E 4005              JC      ?C0096
                                           ; SOURCE LINE # 536
0040 7401              MOV     A,#01H
0042 F0                MOVX    @DPTR,A
0043 8005              SJMP    ?C0097
0045         ?C0096:
                                           ; SOURCE LINE # 538
0045 E4                CLR     A
0046 900000      E     MOV     DPTR,#uNovoVPCCount
0049 F0                MOVX    @DPTR,A
004A         ?C0097:
                                           ; SOURCE LINE # 539
004A 7408              MOV     A,#08H
                                           ; SOURCE LINE # 540
                                           ; SOURCE LINE # 541
004C 120000      R     LCALL   L?0198
004F 120000      E     LCALL   _ECQEvent
                                           ; SOURCE LINE # 542
                                           ; SOURCE LINE # 544
                                           ; SOURCE LINE # 545
                                           ; SOURCE LINE # 546
                                           ; SOURCE LINE # 547
0052         ?C0089:
0052 22                RET     
             ; FUNCTION NOVOReleased (END)

             ; FUNCTION NOVOOverrided (BEGIN)
                                           ; SOURCE LINE # 552
                                           ; SOURCE LINE # 553
                                           ; SOURCE LINE # 563
0000 900000      E     MOV     DPTR,#GPDRJ
0003 E0                MOVX    A,@DPTR
0004 20E003            JB      ACC.0,?C0100
0007 D3                SETB    C
0008 8001              SJMP    ?C0101
000A         ?C0100:
000A C3                CLR     C
000B         ?C0101:
000B 501A              JNC     ?C0102
                                           ; SOURCE LINE # 564
                                           ; SOURCE LINE # 566
000D         ?C0099:
                                           ; SOURCE LINE # 567
000D 900000      E     MOV     DPTR,#NOVO_COUNTER
0010 E0                MOVX    A,@DPTR
0011 7002              JNZ     ?C0174
0013 A3                INC     DPTR
0014 E0                MOVX    A,@DPTR
0015         ?C0174:
0015 900000      E     MOV     DPTR,#NOVO_COUNTER
0018 6007              JZ      ?C0103
                                           ; SOURCE LINE # 568
                                           ; SOURCE LINE # 569
001A 74FF              MOV     A,#0FFH
001C F5F0              MOV     B,A
001E 020000      E     LJMP    ?C?IILDX
                                           ; SOURCE LINE # 571
0021         ?C0103:
                                           ; SOURCE LINE # 572
C51 COMPILER V8.12   OEM_EVENT                                                             07/28/2018 12:03:46 PAGE 32  

0021 120000      R     LCALL   L?0208
                                           ; SOURCE LINE # 573
0024 120000      E     LCALL   ECSMIEvent
                                           ; SOURCE LINE # 575
0027         ?C0102:
0027 22                RET     
             ; FUNCTION NOVOOverrided (END)

             ; FUNCTION LanWakeLow (BEGIN)
                                           ; SOURCE LINE # 580
                                           ; SOURCE LINE # 581
                                           ; SOURCE LINE # 585
0000 900000      E     MOV     DPTR,#SysPowState
0003 E0                MOVX    A,@DPTR
0004 24CD              ADD     A,#0CDH
0006 702F              JNZ     ?C0113
                                           ; SOURCE LINE # 586
                                           ; SOURCE LINE # 587
                                           ; SOURCE LINE # 588
                                           ; SOURCE LINE # 590
                                           ; SOURCE LINE # 594
                                           ; SOURCE LINE # 596
0008         ?C0107:
                                           ; SOURCE LINE # 597
0008 900000      E     MOV     DPTR,#AOAC_STATUS
000B E0                MOVX    A,@DPTR
000C 30E40F            JNB     ACC.4,?C0108
                                           ; SOURCE LINE # 598
                                           ; SOURCE LINE # 599
000F 900000      E     MOV     DPTR,#GPDRF
0012 E0                MOVX    A,@DPTR
0013 54FD              ANL     A,#0FDH
0015 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 600
0016 900000      E     MOV     DPTR,#AOAC_STATUS
0019 E0                MOVX    A,@DPTR
001A 4480              ORL     A,#080H
001C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 601
001D 22                RET     
001E         ?C0108:
                                           ; SOURCE LINE # 603
                                           ; SOURCE LINE # 604
001E 900000      E     MOV     DPTR,#SYS_STATUS
0021 E0                MOVX    A,@DPTR
0022 30E712            JNB     ACC.7,?C0113
                                           ; SOURCE LINE # 605
                                           ; SOURCE LINE # 606
0025 7F99              MOV     R7,#099H
0027 120000      E     LCALL   _RamDebug
                                           ; SOURCE LINE # 607
002A 900000      E     MOV     DPTR,#GPCRJ7
002D 7440              MOV     A,#040H
002F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 608
0030 900000      E     MOV     DPTR,#GPDRJ
0033 E0                MOVX    A,@DPTR
0034 547F              ANL     A,#07FH
0036 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 609
                                           ; SOURCE LINE # 610
                                           ; SOURCE LINE # 611
C51 COMPILER V8.12   OEM_EVENT                                                             07/28/2018 12:03:46 PAGE 33  

                                           ; SOURCE LINE # 613
                                           ; SOURCE LINE # 614
                                           ; SOURCE LINE # 616
                                           ; SOURCE LINE # 617
                                           ; SOURCE LINE # 618
                                           ; SOURCE LINE # 620
0037         ?C0113:
0037 22                RET     
             ; FUNCTION LanWakeLow (END)

             ; FUNCTION LanWakeHi (BEGIN)
                                           ; SOURCE LINE # 625
                                           ; SOURCE LINE # 626
                                           ; SOURCE LINE # 630
0000 120000      R     LCALL   L?0206
0003 6016              JZ      ?C0119
0005 24CD              ADD     A,#0CDH
0007 6022              JZ      ?C0120
0009 24EF              ADD     A,#0EFH
000B 601E              JZ      ?C0120
000D 2422              ADD     A,#022H
000F 700A              JNZ     ?C0119
                                           ; SOURCE LINE # 631
                                           ; SOURCE LINE # 632
                                           ; SOURCE LINE # 633
                                           ; SOURCE LINE # 635
                                           ; SOURCE LINE # 636
                                           ; SOURCE LINE # 638
0011         ?C0117:
                                           ; SOURCE LINE # 639
0011 120000      R     LCALL   L?0209
                                           ; SOURCE LINE # 640
0014 7F9A              MOV     R7,#09AH
0016 120000      E     LCALL   _RamDebug
                                           ; SOURCE LINE # 641
                                           ; SOURCE LINE # 642
                                           ; SOURCE LINE # 643
0019 8003              SJMP    ?C0182
                                           ; SOURCE LINE # 645
                                           ; SOURCE LINE # 651
001B         ?C0119:
                                           ; SOURCE LINE # 652
001B 120000      R     LCALL   L?0210
                                           ; SOURCE LINE # 653
001E         ?C0182:
001E 900000      E     MOV     DPTR,#GPDRJ
0021 E0                MOVX    A,@DPTR
0022 4480              ORL     A,#080H
0024 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 654
0025 900000      E     MOV     DPTR,#GPCRJ7
0028 7480              MOV     A,#080H
002A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 655
                                           ; SOURCE LINE # 656
                                           ; SOURCE LINE # 658
002B         ?C0120:
002B 22                RET     
             ; FUNCTION LanWakeHi (END)

             ; FUNCTION Battery1In (BEGIN)
                                           ; SOURCE LINE # 664
C51 COMPILER V8.12   OEM_EVENT                                                             07/28/2018 12:03:46 PAGE 34  

                                           ; SOURCE LINE # 665
                                           ; SOURCE LINE # 683
0000 900000      E     MOV     DPTR,#SEL_STATE0
0003 E0                MOVX    A,@DPTR
0004 4401              ORL     A,#01H
0006 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 684
0007 900000      E     MOV     DPTR,#nBatteryStatus1
000A E0                MOVX    A,@DPTR
000B 4401              ORL     A,#01H
000D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 685
000E 120000      E     LCALL   FirstGetBatData
                                           ; SOURCE LINE # 686
0011 7F25              MOV     R7,#025H
0013 120000      E     LCALL   _ECSMI_SCIEvent
                                           ; SOURCE LINE # 687
0016 900000      E     MOV     DPTR,#Service_Auth_Step
0019 7401              MOV     A,#01H
001B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 697
001C E4                CLR     A
001D 900000      E     MOV     DPTR,#Get_Batt_debounce_count
0020 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 698
0021 22                RET     
             ; FUNCTION Battery1In (END)

             ; FUNCTION Battery1Out (BEGIN)
                                           ; SOURCE LINE # 703
                                           ; SOURCE LINE # 704
                                           ; SOURCE LINE # 707
0000 900000      E     MOV     DPTR,#SEL_STATE0
0003 E0                MOVX    A,@DPTR
0004 54FE              ANL     A,#0FEH
0006 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 708
0007 900000      E     MOV     DPTR,#nBatteryStatus1
000A E0                MOVX    A,@DPTR
000B 54FE              ANL     A,#0FEH
000D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 709
;---- Variable 'BAT1_pntr' assigned to Register 'DPTR' ----
000E 900000      E     MOV     DPTR,#SEL_STATE0
                                           ; SOURCE LINE # 710
0011 E4                CLR     A
0012 F500        E     MOV     ITempW01,A
0014 F500        E     MOV     ITempW01+01H,A
0016         ?C0122:
                                           ; SOURCE LINE # 711
                                           ; SOURCE LINE # 712
0016 E4                CLR     A
0017 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 713
0018 A3                INC     DPTR
                                           ; SOURCE LINE # 714
0019 0500        E     INC     ITempW01+01H
001B E500        E     MOV     A,ITempW01+01H
001D 7002              JNZ     ?C0175
001F 0500        E     INC     ITempW01
0021         ?C0175:
0021 E500        E     MOV     A,ITempW01+01H
C51 COMPILER V8.12   OEM_EVENT                                                             07/28/2018 12:03:46 PAGE 35  

0023 643A              XRL     A,#03AH
0025 4500        E     ORL     A,ITempW01
0027 70ED              JNZ     ?C0122
0029         ?C0123:
                                           ; SOURCE LINE # 716
0029 7E00        E     MOV     R6,#HIGH BATTMANUFACTURE
002B 900000      E     MOV     DPTR,#BATTMANUFACTURE
                                           ; SOURCE LINE # 717
002E E4                CLR     A
002F F500        E     MOV     ITempW01,A
0031 F500        E     MOV     ITempW01+01H,A
0033         ?C0125:
                                           ; SOURCE LINE # 718
                                           ; SOURCE LINE # 719
0033 E4                CLR     A
0034 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 720
0035 A3                INC     DPTR
                                           ; SOURCE LINE # 721
0036 0500        E     INC     ITempW01+01H
0038 E500        E     MOV     A,ITempW01+01H
003A 7002              JNZ     ?C0176
003C 0500        E     INC     ITempW01
003E         ?C0176:
003E E500        E     MOV     A,ITempW01+01H
0040 6411              XRL     A,#011H
0042 4500        E     ORL     A,ITempW01
0044 70ED              JNZ     ?C0125
0046         ?C0126:
                                           ; SOURCE LINE # 724
0046 900000      E     MOV     DPTR,#SysPowState
0049 E0                MOVX    A,@DPTR
004A B4110D            CJNE    A,#011H,?C0128
004D 900000      E     MOV     DPTR,#LENOVOPMFW
0050 E0                MOVX    A,@DPTR
0051 30E206            JNB     ACC.2,?C0128
                                           ; SOURCE LINE # 725
                                           ; SOURCE LINE # 726
                                           ; SOURCE LINE # 727
                                           ; SOURCE LINE # 728
0054 120000      R     LCALL   L?0197
0057 120000      E     LCALL   _ECSMI_SCIEvent
                                           ; SOURCE LINE # 729
005A         ?C0128:
                                           ; SOURCE LINE # 731
005A E4                CLR     A
005B 900000      E     MOV     DPTR,#Battdata_ready
005E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 732
                                           ; SOURCE LINE # 733
005F 120000      R     LCALL   L?0200
                                           ; SOURCE LINE # 734
0062 900000      E     MOV     DPTR,#LENOVOBATT
0065 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 735
0066 900000      E     MOV     DPTR,#EM8_TEST
0069 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 736
006A 900000      E     MOV     DPTR,#LV_Authen_Step_CNT
006D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 737
006E 900000      E     MOV     DPTR,#SHA1failCnt
C51 COMPILER V8.12   OEM_EVENT                                                             07/28/2018 12:03:46 PAGE 36  

0071 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 738
0072 900000      E     MOV     DPTR,#SHA1FailRetry
0075 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 739
0076 900000      E     MOV     DPTR,#Bat1_FPChgFlag
0079 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 740
007A 900000      E     MOV     DPTR,#CellCount
007D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 741
007E 7F25              MOV     R7,#025H
0080 020000      E     LJMP    _ECSMI_SCIEvent
             ; FUNCTION Battery1Out (END)

             ; FUNCTION LID_Pressed (BEGIN)
                                           ; SOURCE LINE # 744
                                           ; SOURCE LINE # 745
                                           ; SOURCE LINE # 746
0000 900000      E     MOV     DPTR,#SWI_EVENT
0003 E0                MOVX    A,@DPTR
0004 54FD              ANL     A,#0FDH
0006 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 747
0007 7F16              MOV     R7,#016H
0009 120000      E     LCALL   _ECQEvent
                                           ; SOURCE LINE # 748
000C 7F15              MOV     R7,#015H
000E 120000      E     LCALL   _RamDebug
                                           ; SOURCE LINE # 749
0011 900000      E     MOV     DPTR,#GPDRJ
0014 E0                MOVX    A,@DPTR
0015 54FB              ANL     A,#0FBH
0017 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 751
0018 22                RET     
             ; FUNCTION LID_Pressed (END)

             ; FUNCTION LID_Released (BEGIN)
                                           ; SOURCE LINE # 752
                                           ; SOURCE LINE # 753
                                           ; SOURCE LINE # 754
0000 900000      E     MOV     DPTR,#SWI_EVENT
0003 E0                MOVX    A,@DPTR
0004 4402              ORL     A,#02H
0006 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 755
0007 900000      E     MOV     DPTR,#SysPowState
000A E0                MOVX    A,@DPTR
000B B43303            CJNE    A,#033H,?C0131
                                           ; SOURCE LINE # 756
                                           ; SOURCE LINE # 757
000E 120000      E     LCALL   PulseSBPowerButton
                                           ; SOURCE LINE # 758
0011         ?C0131:
                                           ; SOURCE LINE # 759
0011 7F15              MOV     R7,#015H
0013 120000      E     LCALL   _ECQEvent
                                           ; SOURCE LINE # 760
0016 7F16              MOV     R7,#016H
0018 120000      E     LCALL   _RamDebug
                                           ; SOURCE LINE # 761
C51 COMPILER V8.12   OEM_EVENT                                                             07/28/2018 12:03:46 PAGE 37  

001B 900000      E     MOV     DPTR,#GPDRJ
001E E0                MOVX    A,@DPTR
001F 4404              ORL     A,#04H
0021 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 762
0022 22                RET     
             ; FUNCTION LID_Released (END)

             ; FUNCTION _EventManager (BEGIN)
                                           ; SOURCE LINE # 791
0000 900000      R     MOV     DPTR,#device_id
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 792
                                           ; SOURCE LINE # 796
0005 B40A00            CJNE    A,#0AH,?C0177
0008         ?C0177:
0008 4003              JC      $ + 5H
000A 020000      R     LJMP    ?C0162
000D 900000      R     MOV     DPTR,#?C0178
0010 F8                MOV     R0,A
0011 28                ADD     A,R0
0012 28                ADD     A,R0
0013 73                JMP     @A+DPTR
0014         ?C0178:
0014 020000      R     LJMP    ?C0134
0017 020000      R     LJMP    ?C0139
001A 020000      R     LJMP    ?C0142
001D 020000      R     LJMP    ?C0145
0020 020000      R     LJMP    ?C0148
0023 020000      R     LJMP    ?C0151
0026 020000      R     LJMP    ?C0160
0029 020000      R     LJMP    ?C0160
002C 020000      R     LJMP    ?C0160
002F 020000      R     LJMP    ?C0160
                                           ; SOURCE LINE # 797
                                           ; SOURCE LINE # 798
0032         ?C0134:
                                           ; SOURCE LINE # 799
0032 900000      E     MOV     DPTR,#GPDRB
0035 E0                MOVX    A,@DPTR
0036 20E30A            JB      ACC.3,?C0135
0039 900000      E     MOV     DPTR,#GPDRJ
003C E0                MOVX    A,@DPTR
003D 20E003            JB      ACC.0,$ + 6H
0040 020000      R     LJMP    ?C0136
0043         ?C0135:
                                           ; SOURCE LINE # 800
0043 900000      E     MOV     DPTR,#GPDRB
0046 E0                MOVX    A,@DPTR
0047 20E304            JB      ACC.3,?C0137
004A 7F01              MOV     R7,#01H
004C 805A              SJMP    ?C0188
004E         ?C0137:
004E 7F00              MOV     R7,#00H
0050         ?C0138:
                                           ; SOURCE LINE # 818
0050 8056              SJMP    ?C0188
                                           ; SOURCE LINE # 820
0052         ?C0139:
                                           ; SOURCE LINE # 821
0052 900000      E     MOV     DPTR,#GPDRB
C51 COMPILER V8.12   OEM_EVENT                                                             07/28/2018 12:03:46 PAGE 38  

0055 E0                MOVX    A,@DPTR
0056 30E004            JNB     ACC.0,?C0140
0059 7F01              MOV     R7,#01H
005B 8002              SJMP    ?C0141
005D         ?C0140:
005D 7F00              MOV     R7,#00H
005F         ?C0141:
005F         ?C0184:
                                           ; SOURCE LINE # 822
005F 8047              SJMP    ?C0188
                                           ; SOURCE LINE # 824
0061         ?C0142:
                                           ; SOURCE LINE # 829
0061 900000      E     MOV     DPTR,#GPDRI
0064 E0                MOVX    A,@DPTR
0065 20E204            JB      ACC.2,?C0143
0068 7F01              MOV     R7,#01H
006A 8002              SJMP    ?C0144
006C         ?C0143:
006C 7F00              MOV     R7,#00H
006E         ?C0144:
006E         ?C0185:
                                           ; SOURCE LINE # 830
006E 8038              SJMP    ?C0188
                                           ; SOURCE LINE # 832
0070         ?C0145:
                                           ; SOURCE LINE # 845
0070 900000      E     MOV     DPTR,#GPDRJ
0073 E0                MOVX    A,@DPTR
0074 20E004            JB      ACC.0,?C0146
0077 7F01              MOV     R7,#01H
0079 8002              SJMP    ?C0147
007B         ?C0146:
007B 7F00              MOV     R7,#00H
007D         ?C0147:
007D         ?C0186:
                                           ; SOURCE LINE # 846
007D 8029              SJMP    ?C0188
                                           ; SOURCE LINE # 848
007F         ?C0148:
                                           ; SOURCE LINE # 850
007F 900000      E     MOV     DPTR,#GPDRC
0082 E0                MOVX    A,@DPTR
0083 20E404            JB      ACC.4,?C0149
0086 7F01              MOV     R7,#01H
0088 8002              SJMP    ?C0150
008A         ?C0149:
008A 7F00              MOV     R7,#00H
008C         ?C0150:
008C         ?C0187:
                                           ; SOURCE LINE # 854
008C 801A              SJMP    ?C0188
                                           ; SOURCE LINE # 856
008E         ?C0151:
                                           ; SOURCE LINE # 858
008E 900000      E     MOV     DPTR,#SysStatus
0091 E0                MOVX    A,@DPTR
0092 20E71C            JB      ACC.7,?C0193
                                           ; SOURCE LINE # 859
                                           ; SOURCE LINE # 861
0095 900000      E     MOV     DPTR,#GPDRB
0098 E0                MOVX    A,@DPTR
C51 COMPILER V8.12   OEM_EVENT                                                             07/28/2018 12:03:46 PAGE 39  

0099 30E103            JNB     ACC.1,?C0155
009C D3                SETB    C
009D 8001              SJMP    ?C0156
009F         ?C0155:
009F C3                CLR     C
00A0         ?C0156:
00A0 4004              JC      ?C0153
00A2 7F01              MOV     R7,#01H
00A4 8002              SJMP    ?C0154
00A6         ?C0153:
00A6 7F00              MOV     R7,#00H
00A8         ?C0154:
00A8         ?C0188:
00A8 900000      R     MOV     DPTR,#new_state
00AB EF                MOV     A,R7
00AC F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 865
00AD 8007              SJMP    ?C0133
                                           ; SOURCE LINE # 872
                                           ; SOURCE LINE # 876
                                           ; SOURCE LINE # 880
00AF         ?C0160:
                                           ; SOURCE LINE # 881
00AF         ?C0191:
                                           ; SOURCE LINE # 882
00AF 8000              SJMP    ?C0193
                                           ; SOURCE LINE # 884
                                           ; SOURCE LINE # 888
00B1         ?C0162:
                                           ; SOURCE LINE # 889
00B1         ?C0193:
00B1 E4                CLR     A
00B2 900000      R     MOV     DPTR,#new_state
00B5 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 890
                                           ; SOURCE LINE # 891
00B6         ?C0133:
                                           ; SOURCE LINE # 893
00B6 900000      R     MOV     DPTR,#device_id
00B9 E0                MOVX    A,@DPTR
00BA FF                MOV     R7,A
00BB 75F00C            MOV     B,#0CH
00BE A4                MUL     AB
00BF 2400        R     ADD     A,#LOW Debounce_TBL
00C1 F582              MOV     DPL,A
00C3 E4                CLR     A
00C4 3400        R     ADDC    A,#HIGH Debounce_TBL
00C6 F583              MOV     DPH,A
00C8 E4                CLR     A
00C9 93                MOVC    A,@A+DPTR
00CA FC                MOV     R4,A
00CB 7401              MOV     A,#01H
00CD 93                MOVC    A,@A+DPTR
00CE FD                MOV     R5,A
00CF 7800        E     MOV     R0,#LOW Tmp_XPntr
00D1 EC                MOV     A,R4
00D2 F6                MOV     @R0,A
00D3 08                INC     R0
00D4 ED                MOV     A,R5
00D5 F6                MOV     @R0,A
                                           ; SOURCE LINE # 894
00D6 EF                MOV     A,R7
C51 COMPILER V8.12   OEM_EVENT                                                             07/28/2018 12:03:46 PAGE 40  

00D7 75F00C            MOV     B,#0CH
00DA A4                MUL     AB
00DB 2400        R     ADD     A,#LOW Debounce_TBL+03H
00DD F582              MOV     DPL,A
00DF E4                CLR     A
00E0 3400        R     ADDC    A,#HIGH Debounce_TBL+03H
00E2 F583              MOV     DPH,A
00E4 E4                CLR     A
00E5 93                MOVC    A,@A+DPTR
00E6 FF                MOV     R7,A
00E7 7401              MOV     A,#01H
00E9 93                MOVC    A,@A+DPTR
00EA 7800        E     MOV     R0,#LOW Tmp_XPntr1
00EC CF                XCH     A,R7
00ED F6                MOV     @R0,A
00EE 08                INC     R0
00EF EF                MOV     A,R7
00F0 F6                MOV     @R0,A
                                           ; SOURCE LINE # 895
00F1 900000      R     MOV     DPTR,#device_id
00F4 E0                MOVX    A,@DPTR
00F5 FF                MOV     R7,A
00F6 75F00C            MOV     B,#0CH
00F9 A4                MUL     AB
00FA 2400        R     ADD     A,#LOW Debounce_TBL+02H
00FC F582              MOV     DPL,A
00FE E4                CLR     A
00FF 3400        R     ADDC    A,#HIGH Debounce_TBL+02H
0101 F583              MOV     DPH,A
0103 E4                CLR     A
0104 93                MOVC    A,@A+DPTR
0105 FE                MOV     R6,A
0106 900000      R     MOV     DPTR,#device_flag
0109 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 897
010A 8D82              MOV     DPL,R5
010C 8C83              MOV     DPH,R4
010E E0                MOVX    A,@DPTR
010F 5E                ANL     A,R6
0110 6004              JZ      ?C0163
0112 7E01              MOV     R6,#01H
0114 8002              SJMP    ?C0164
0116         ?C0163:
0116 7E00              MOV     R6,#00H
0118         ?C0164:
;---- Variable 'old_state' assigned to Register 'R6' ----
                                           ; SOURCE LINE # 898
0118 900000      R     MOV     DPTR,#new_state
011B E0                MOVX    A,@DPTR
011C F9                MOV     R1,A
011D 6E                XRL     A,R6
011E 7003              JNZ     $ + 5H
0120 020000      R     LJMP    ?C0165
                                           ; SOURCE LINE # 899
                                           ; SOURCE LINE # 900
0123 7800        E     MOV     R0,#LOW Tmp_XPntr1
0125 E6                MOV     A,@R0
0126 FC                MOV     R4,A
0127 08                INC     R0
0128 E6                MOV     A,@R0
0129 FD                MOV     R5,A
012A F582              MOV     DPL,A
C51 COMPILER V8.12   OEM_EVENT                                                             07/28/2018 12:03:46 PAGE 41  

012C 8C83              MOV     DPH,R4
012E E0                MOVX    A,@DPTR
012F 7045              JNZ     ?C0166
                                           ; SOURCE LINE # 901
                                           ; SOURCE LINE # 904
0131 EF                MOV     A,R7
0132 701F              JNZ     ?C0167
0134 900000      E     MOV     DPTR,#SysPowState
0137 E0                MOVX    A,@DPTR
0138 B41118            CJNE    A,#011H,?C0167
013B 900000      E     MOV     DPTR,#cCmd
013E E0                MOVX    A,@DPTR
013F 20E611            JB      ACC.6,?C0167
0142 900000      E     MOV     DPTR,#POWER_FLAG1
0145 E0                MOVX    A,@DPTR
0146 20E10A            JB      ACC.1,?C0167
                                           ; SOURCE LINE # 905
0149 8D82              MOV     DPL,R5
014B 8C83              MOV     DPH,R4
014D 7464              MOV     A,#064H
014F F0                MOVX    @DPTR,A
0150 020000      R     LJMP    ?C0173
0153         ?C0167:
                                           ; SOURCE LINE # 908
0153 900000      R     MOV     DPTR,#device_id
0156 E0                MOVX    A,@DPTR
0157 75F00C            MOV     B,#0CH
015A A4                MUL     AB
015B 2400        R     ADD     A,#LOW Debounce_TBL+05H
015D F582              MOV     DPL,A
015F E4                CLR     A
0160 3400        R     ADDC    A,#HIGH Debounce_TBL+05H
0162 F583              MOV     DPH,A
0164 E4                CLR     A
0165 93                MOVC    A,@A+DPTR
0166 FF                MOV     R7,A
0167 7800        E     MOV     R0,#LOW Tmp_XPntr1
0169 E6                MOV     A,@R0
016A FC                MOV     R4,A
016B 08                INC     R0
016C E6                MOV     A,@R0
016D F582              MOV     DPL,A
016F 8C83              MOV     DPH,R4
0171 EF                MOV     A,R7
0172 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 909
0173 020000      R     LJMP    ?C0173
0176         ?C0166:
                                           ; SOURCE LINE # 911
                                           ; SOURCE LINE # 912
0176 7800        E     MOV     R0,#LOW Tmp_XPntr1
0178 E6                MOV     A,@R0
0179 FE                MOV     R6,A
017A 08                INC     R0
017B E6                MOV     A,@R0
017C F582              MOV     DPL,A
017E 8E83              MOV     DPH,R6
0180 E0                MOVX    A,@DPTR
0181 14                DEC     A
0182 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 914
0183 E0                MOVX    A,@DPTR
C51 COMPILER V8.12   OEM_EVENT                                                             07/28/2018 12:03:46 PAGE 42  

0184 6003              JZ      $ + 5H
0186 020000      R     LJMP    ?C0173
                                           ; SOURCE LINE # 915
                                           ; SOURCE LINE # 916
0189 E9                MOV     A,R1
018A 900000      R     MOV     DPTR,#device_id
018D 6034              JZ      ?C0171
                                           ; SOURCE LINE # 917
                                           ; SOURCE LINE # 918
018F E0                MOVX    A,@DPTR
0190 75F00C            MOV     B,#0CH
0193 A4                MUL     AB
0194 2400        R     ADD     A,#LOW Debounce_TBL+06H
0196 F582              MOV     DPL,A
0198 E4                CLR     A
0199 3400        R     ADDC    A,#HIGH Debounce_TBL+06H
019B F583              MOV     DPH,A
019D E4                CLR     A
019E 93                MOVC    A,@A+DPTR
019F FE                MOV     R6,A
01A0 7401              MOV     A,#01H
01A2 93                MOVC    A,@A+DPTR
01A3 CA                XCH     A,R2
01A4 EE                MOV     A,R6
01A5 CA                XCH     A,R2
01A6 F9                MOV     R1,A
01A7 120000      E     LCALL   ?C?ICALL
                                           ; SOURCE LINE # 919
01AA 7800        E     MOV     R0,#LOW Tmp_XPntr
01AC E6                MOV     A,@R0
01AD FE                MOV     R6,A
01AE 08                INC     R0
01AF E6                MOV     A,@R0
01B0 F582              MOV     DPL,A
01B2 8E83              MOV     DPH,R6
01B4 C083              PUSH    DPH
01B6 C082              PUSH    DPL
01B8 E0                MOVX    A,@DPTR
01B9 FF                MOV     R7,A
01BA 900000      R     MOV     DPTR,#device_flag
01BD E0                MOVX    A,@DPTR
01BE FE                MOV     R6,A
01BF EF                MOV     A,R7
01C0 4E                ORL     A,R6
                                           ; SOURCE LINE # 920
01C1 8033              SJMP    ?C0183
01C3         ?C0171:
                                           ; SOURCE LINE # 922
                                           ; SOURCE LINE # 923
01C3 E0                MOVX    A,@DPTR
01C4 75F00C            MOV     B,#0CH
01C7 A4                MUL     AB
01C8 2400        R     ADD     A,#LOW Debounce_TBL+08H
01CA F582              MOV     DPL,A
01CC E4                CLR     A
01CD 3400        R     ADDC    A,#HIGH Debounce_TBL+08H
01CF F583              MOV     DPH,A
01D1 E4                CLR     A
01D2 93                MOVC    A,@A+DPTR
01D3 FE                MOV     R6,A
01D4 7401              MOV     A,#01H
01D6 93                MOVC    A,@A+DPTR
C51 COMPILER V8.12   OEM_EVENT                                                             07/28/2018 12:03:46 PAGE 43  

01D7 CA                XCH     A,R2
01D8 EE                MOV     A,R6
01D9 CA                XCH     A,R2
01DA F9                MOV     R1,A
01DB 120000      E     LCALL   ?C?ICALL
                                           ; SOURCE LINE # 924
01DE 7800        E     MOV     R0,#LOW Tmp_XPntr
01E0 E6                MOV     A,@R0
01E1 FE                MOV     R6,A
01E2 08                INC     R0
01E3 E6                MOV     A,@R0
01E4 F582              MOV     DPL,A
01E6 8E83              MOV     DPH,R6
01E8 C083              PUSH    DPH
01EA C082              PUSH    DPL
01EC E0                MOVX    A,@DPTR
01ED FF                MOV     R7,A
01EE 900000      R     MOV     DPTR,#device_flag
01F1 E0                MOVX    A,@DPTR
01F2 F4                CPL     A
01F3 FE                MOV     R6,A
01F4 EF                MOV     A,R7
01F5 5E                ANL     A,R6
01F6         ?C0183:
01F6 D082              POP     DPL
01F8 D083              POP     DPH
01FA F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 925
                                           ; SOURCE LINE # 926
                                           ; SOURCE LINE # 927
                                           ; SOURCE LINE # 928
01FB 800C              SJMP    ?C0173
01FD         ?C0165:
                                           ; SOURCE LINE # 930
                                           ; SOURCE LINE # 931
01FD 7800        E     MOV     R0,#LOW Tmp_XPntr1
01FF E6                MOV     A,@R0
0200 FE                MOV     R6,A
0201 08                INC     R0
0202 E6                MOV     A,@R0
0203 F582              MOV     DPL,A
0205 8E83              MOV     DPH,R6
0207 E4                CLR     A
0208 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 932
0209         ?C0173:
                                           ; SOURCE LINE # 934
0209 900000      R     MOV     DPTR,#device_id
020C E0                MOVX    A,@DPTR
020D 75F00C            MOV     B,#0CH
0210 A4                MUL     AB
0211 2400        R     ADD     A,#LOW Debounce_TBL+0AH
0213 F582              MOV     DPL,A
0215 E4                CLR     A
0216 3400        R     ADDC    A,#HIGH Debounce_TBL+0AH
0218 F583              MOV     DPH,A
021A E4                CLR     A
021B 93                MOVC    A,@A+DPTR
021C FE                MOV     R6,A
021D 7401              MOV     A,#01H
021F 93                MOVC    A,@A+DPTR
0220 CA                XCH     A,R2
C51 COMPILER V8.12   OEM_EVENT                                                             07/28/2018 12:03:46 PAGE 44  

0221 EE                MOV     A,R6
0222 CA                XCH     A,R2
0223 F9                MOV     R1,A
0224 120000      E     LCALL   ?C?ICALL
                                           ; SOURCE LINE # 935
0227         ?C0136:
0227 22                RET     
             ; FUNCTION _EventManager (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1901    ----
   CONSTANT SIZE    =    120    ----
   XDATA SIZE       =   ----       3
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)

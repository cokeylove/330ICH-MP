C51 COMPILER V8.12   OEM_6064                                                              07/28/2018 12:03:51 PAGE 1   


C51 COMPILER V8.12, COMPILATION OF MODULE OEM_6064
OBJECT MODULE PLACED IN Code\Oem\OEM_6064.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE Code\Oem\OEM_6064.C LA WL(1) CD OT(9,SIZE) NOAREGS OR INCDIR(.\Code\CORE\IN
                    -CLUDE\;.\Code\OEM\INCLUDE\;.\Code\CHIP\INCLUDE\)

line level    source

   1          /*-----------------------------------------------------------------------------
   2           * TITLE: OEM_6064.C
   3           *
   4           * Author : Dino
   5           *
   6           * Note : These functions are reference only.
   7           *        Please follow your project software specification to do some modification.
   8           *---------------------------------------------------------------------------*/
   9          
  10          #include <CORE_INCLUDE.H>
  11          #include <OEM_INCLUDE.H>
  12          
  13          void Cmd_B4(void)
  14          {
  15   1              //Mos: Stop charger when EC and Bios flash
  16   1              SET_MASK(nStopChgStat3H, ECFLASH);
  17   1              FAN_PWM_OUT;            // Set FAN_PWM OUTPUT.
  18   1              EC_FAN_PWM_HI();        // Set FAN Full On.
  19   1      
  20   1              CHGIC_ptr = 2;          //reminder: call to write to SmartChg
  21   1              WriteSmartChgIC();
  22   1              RamProgram(00);
  23   1      }
  24          
  25          void GetData2(BYTE nPort)
  26          {
  27   1              TR1 = 0;                                        // Disable timer1
  28   1              ET1 = 0;                                        // Disable timer1 interrupt
  29   1              _nop_();
  30   1              _nop_();
  31   1              _nop_();
  32   1              _nop_();
  33   1              TH1 = Timer_20ms>>8;            // Set timer1 counter 20ms
  34   1              TL1 = Timer_20ms;                       // Set timer1 counter 20ms
  35   1              TF1 = 0;                                        // Clear overflow flag
  36   1              TR1 = 1;                                        // Enable timer1
  37   1      
  38   1              while (!TF1)
  39   1              {
  40   2                      if (nPort == 0x60)
  41   2                      {
  42   3                              if(IS_MASK_SET(KBHISR,IBF))
  43   3                              {
  44   4                                      if(IS_MASK_CLEAR(KBHISR,C_D))   // Data Port
  45   4                                      {
  46   5                                              CmdData2 = KBHIDIR;
  47   5                                      }
  48   4                                      TR1 = 0;                        // Disable timer 1
  49   4                                      TF1 = 0;                        // clear overflow flag
  50   4                                      ET1 = 1;                        // Enable timer1 interrupt
  51   4                                      return;
  52   4                              }
  53   3                      }
  54   2                      else if (nPort == 0x62)
C51 COMPILER V8.12   OEM_6064                                                              07/28/2018 12:03:51 PAGE 2   

  55   2                      {
  56   3                              if(IS_MASK_SET(PM1STS,IBF))
  57   3                              {
  58   4                                      if(IS_MASK_CLEAR(PM1STS,C_D))   // Data Port
  59   4                                      {
  60   5                                              CmdData2 = PM1DI;
  61   5                                      }
  62   4                                      TR1 = 0;                        // Disable timer 1
  63   4                                      TF1 = 0;                        // clear overflow flag
  64   4                                      ET1 = 1;                        // Enable timer1 interrupt
  65   4                                      return;
  66   4                              }
  67   3                      }
  68   2              }
  69   1              TR1 = 0;                                        // Disable timer 1
  70   1              TF1 = 0;                                        // clear overflow flag
  71   1              ET1 = 1;                                        // Enable timer1 interrupt
  72   1      }
  73          
  74          
  75          //----------------------------------------------------------------------------
  76          // The function of 60 port
  77          //  Note :
  78          //  KBHIStep != 0x00 is necessary.
  79          //----------------------------------------------------------------------------
  80          void Hook_60Port(BYTE KBHICmd)
  81          {
  82   1              BYTE i;
  83   1      
  84   1              switch(KBHICmd)
  85   1              {
  86   2              case 0x40:
  87   2                      Cmd_40(KBHIData);
  88   2                      break;
  89   2              case 0x41:
  90   2                      if(KBHIData==0xA0) Cmd_41_A0(0x60);
  91   2                      if(KBHIData==0xA1) Cmd_41_A1(0x60);
  92   2                      if(KBHIData==0xA2) Cmd_41_A2(0x60);
  93   2                      if(KBHIData==0xA3) Cmd_41_A3(0x60);
  94   2                      break;
  95   2              case 0x42:
  96   2                      Cmd_42(KBHIData);
  97   2                      break;
  98   2              case 0x43:
  99   2                      Cmd_43(0x60,KBHIData);
 100   2                      break;
 101   2              case 0x45:
 102   2                      Cmd_45(0x60,KBHIData);
 103   2                      break;
 104   2      
 105   2              case 0x46:
 106   2                      Cmd_46(0x60,KBHIData);
 107   2                      break;
 108   2              case 0x47:
 109   2                      // msmart 20100208 ++
 110   2                      Cmd_47(0x60,KBHIData);
 111   2                      break;
 112   2                      // msmart
 113   2                      break;
 114   2              case 0x49:
 115   2                      //Cmd_49(KBHIData);
 116   2                      //uMBID=KBHIData;//G01:ADD boardid judge 14' and 15'////G48:change 60/64 49CMD to 61CMD follow SPEC.G54:
C51 COMPILER V8.12   OEM_6064                                                              07/28/2018 12:03:51 PAGE 3   

             -Remove 60/64 40CMD follow EC common SPEC.
 117   2                      break;
 118   2              case 0x4B:
 119   2                      if (KBHIStep == 0x04)
 120   2                      {
 121   3                              i = KBHIData;
 122   3                              break;
 123   3                      }
 124   2                      if (KBHIStep == 0x03)
 125   2                      {
 126   3                              eEEPROMAddrsss = KBHIData;
 127   3                              if ( eEEPROMAddrsss == 0xE0 )   // Check MBID address low byte.
 128   3                              { 
 129   4                                      SET_MASK(MBID_Reload, b0MBID_High); 
 130   4                  }
 131   3                              break;
 132   3                      }
 133   2                      if (KBHIStep == 0x02)
 134   2                      {
 135   3                              eEEPROMBank = KBHIData;
 136   3                              if ( eEEPROMBank == 0x07 )      // Check MBID address high byte.
 137   3                              { 
 138   4                                      SET_MASK(MBID_Reload, b1MBID_LOW); 
 139   4                  }
 140   3                              break;
 141   3                      }
 142   2                      if (KBHIStep == 0x01)
 143   2                      {
 144   3                              eEEPROMData     = KBHIData;//Add the difference between G and Z project
 145   3                  // MBID_FB=uMBID;  
 146   3                  SET_MASK(LENOVOPMFW_Temp,EEPROM_Token);
 147   3                              Update_EEPROMMark();
 148   3                  CLEAR_MASK(LENOVOPMFW_Temp,EEPROM_Token);
 149   3                              Data2PortDirect(0x60, 0x00);  
 150   3                  // if(((uMBID&0xFC)==0x30)||((uMBID&0xFC)==0x20)||((uMBID&0xFC)==0x10)||((uMBID&0xFC)==0x34)||
             -((uMBID&0xFC)==0x24)||((uMBID&0xFC)==0x14)||((uMBID&0xFC)==0x3C)||((uMBID&0xFC)==0x2C)||((uMBID&0xFC)==0x1C)) //T050C: a
             -dd 1C,2C,3C judge.
 151   3                      // {
 152   3                              //MBID_READY=0x01;
 153   3                      // }
 154   3                  // else 
 155   3                      // {
 156   3                              // MBID_READY=0x00;
 157   3                  // }                    
 158   3                      }
 159   2      
 160   2                      if ( (MBID_Reload & 0x03) == 0x03 )
 161   2                      {
 162   3                              //LoadKBMatrixToRAM();  // Reload KB matrix.
 163   3                              MBID_Reload = 0;
 164   3                      }
 165   2                      else
 166   2                      { 
 167   3                              MBID_Reload = 0; 
 168   3              }
 169   2                      break;
 170   2      
 171   2              case 0x4C:
 172   2                      if (KBHIStep == 0x03)
 173   2                      {
 174   3                              i = KBHIData;
 175   3                              break;
C51 COMPILER V8.12   OEM_6064                                                              07/28/2018 12:03:51 PAGE 4   

 176   3                      }
 177   2                      if (KBHIStep == 0x02)
 178   2                      {
 179   3                              eEEPROMAddrsss = KBHIData;
 180   3                              break;
 181   3                      }
 182   2                      if (KBHIStep == 0x01)
 183   2                      {
 184   3                              eEEPROMBank = KBHIData;
 185   3                              Cmd_4E(0x60,eEEPROMAddrsss);
 186   3                      }
 187   2                      break;
 188   2      
 189   2              case 0x4D:
 190   2                      if (KBHIStep == 0x02)
 191   2                      {
 192   3                              eEEPROMAddrsss = KBHIData;
 193   3                              break;
 194   3                      }
 195   2                      if (KBHIStep == 0x01)
 196   2                      {
 197   3                              eEEPROMData     = KBHIData;
 198   3                  SET_MASK(LENOVOPMFW_Temp,EEPROM_Token);
 199   3                              Update_EEPROMMark();
 200   3                  CLEAR_MASK(LENOVOPMFW_Temp,EEPROM_Token);
 201   3                              //Data2Port(0x60, 0x00);
 202   3                      }
 203   2                      break;
 204   2              case 0x4E:
 205   2                      eEEPROMAddrsss = KBHIData;
 206   2                      Cmd_4E(0x60,eEEPROMAddrsss);
 207   2                      break;
 208   2              case 0x52:
 209   2                      if(KBHIData==0xA0) Cmd_52_A0(0x60);
 210   2                      if(KBHIData==0xA3) Cmd_52_A3(0x60);
 211   2                      if(KBHIData==0xA4) Cmd_52_A4(0x60);
 212   2                      if(KBHIData==0xA5) Cmd_52_A5(0x60);
 213   2                      if(KBHIData==0xA6) Cmd_52_A6(0x60); //LMLKBL0018:add.
 214   2                      if(KBHIData==0xA7) Cmd_52_A7(0x60); //LMLKBL0018:add.
 215   2                      break;
 216   2              case 0x53:
 217   2                      if (KBHIStep == 0x01)
 218   2                      {
 219   3                              Cmd_53(0x60,KBHIData2,KBHIData1,KBHIData);
 220   3                      }
 221   2                      break;
 222   2              case 0x56:
 223   2                      break;
 224   2              case 0x58:
 225   2                      Cmd_58(KBHIData);
 226   2                      break;
 227   2              case 0x59:
 228   2                      Cmd_59(0x60,KBHIData,0);
 229   2                      break;
 230   2              case 0x5C:
 231   2                      Cmd_5C(0x60);
 232   2                      break;
 233   2              case 0x5D:
 234   2                      Cmd_5D(KBHIData);
 235   2                      break;
 236   2              case 0x71:
 237   2                      //LMLKBL0001:modify cmd 0x71 have one data.
C51 COMPILER V8.12   OEM_6064                                                              07/28/2018 12:03:51 PAGE 5   

 238   2              /*if (KBHIStep == 0x01)
 239   2                      {
 240   2                              Cmd_71(KBHIData1,KBHIData);//G53:Add 60/64 71cmd follow new EC common SPEC.
 241   2                      }*/
 242   2              Cmd_71(KBHIData);
 243   2                      //LMLKBL0001:modify cmd 0x71 have one data.
 244   2                      break;
 245   2              case 0x72:
 246   2                      Cmd_72(KBHIData);//G49:add flag for  tool to keep the battery at 60%
 247   2                      break;
 248   2              //ANGELAS033:Add start                  
 249   2              case 0x7A:
 250   2                      Cmd_7A(0x60,KBHIData);
 251   2                      break;
 252   2              case 0x7B:
 253   2                      if( KBHIStep == 0x01 )
 254   2                      {
 255   3                              Cmd_7B(0x60,KBHIData1,KBHIData);;
 256   3                      }
 257   2                      break;                  
 258   2              //ANGELAS033:Add end
 259   2              //ANGELAG004:s+Add 7Eh Command to access all EC RAM.
 260   2              case 0x7E:
 261   2                      if( KBHIStep == 0x01 )
 262   2                      {
 263   3                              Cmd_7E(0x60,KBHIData1,KBHIData);
 264   3                      }
 265   2                      break;
 266   2              //ANGELAG004:e+Add 7Eh Command to access all EC RAM.
 267   2              case 0x97:
 268   2                      Cmd_97(KBHIData);
 269   2                      break;
 270   2              case 0xB0:
 271   2                      Cmd_B0(0x60,KBHIData);
 272   2                      break;
 273   2              case 0xBC:
 274   2              USB_ON_INPUT;
 275   2              USB_Delay=KBHIData;
 276   2              if(USB_Delay==0)
 277   2                      {USB_Delay=0x0A;}
 278   2                      break;
 279   2              case 0xB3:
 280   2                      if (KBHIStep == 0x01)
 281   2                      {
 282   3                              Cmd_B3(0x60,KBHIData1,KBHIData);
 283   3                      }
 284   2                      break;
 285   2              }
 286   1      }
 287          
 288          //----------------------------------------------------------------------------
 289          // The function of 64 port
 290          //----------------------------------------------------------------------------
 291          void Hook_64Port(BYTE KBHICmd)
 292          {
 293   1              switch(KBHICmd)
 294   1              {
 295   2              case 0x40:
 296   2                      KBHIStep=0x01;
 297   2                      break;
 298   2              case 0x41:
 299   2                      KBHIStep=0x01;
C51 COMPILER V8.12   OEM_6064                                                              07/28/2018 12:03:51 PAGE 6   

 300   2                      break;
 301   2              case 0x42:
 302   2                      KBHIStep=0x01;
 303   2                      break;
 304   2              case 0x43:
 305   2                      KBHIStep=0x01;
 306   2                      break;
 307   2              case 0x44:
 308   2                      Cmd_44(0x60);
 309   2                      break;
 310   2              case 0x45:
 311   2                      KBHIStep=0x01;
 312   2                      break;
 313   2              case 0x46:
 314   2                      KBHIStep=0x01;
 315   2                      break;
 316   2              case 0x47:
 317   2                      KBHIStep=0x01;
 318   2                      break;
 319   2              case 0x49:
 320   2                      KBHIStep=0x01;//ADD boardid judge 14' and 15'
 321   2                      break;
 322   2              case 0x4B:
 323   2                      KBHIStep=0x04;
 324   2                      break;
 325   2              case 0x4C:
 326   2                      KBHIStep=0x03;
 327   2                      break;
 328   2              case 0x4D:
 329   2                      KBHIStep=0x02;
 330   2                      break;
 331   2              case 0x4E:
 332   2                      KBHIStep=0x01;
 333   2                      break;
 334   2              case 0x4F:
 335   2                      Erase_EEPROMAll();
 336   2                      break;
 337   2                              //REJERRY093: Add CMD 0X50 for osAging S4 keep EC power.:Add CMD 0X50 for osAging S4 keep EC power.
 338   2                      case 0x50:
 339   2                              SET_MASK(ACPI_HOTKEY, b6Cmd_NoShut);//for osAging s4 keep EC power
 340   2                              break;
 341   2              //REJERRY093: Add CMD 0X50 for osAging S4 keep EC power.:Add CMD 0X50 for osAging S4 keep EC power.
 342   2              case 0x51:
 343   2                      Cmd_51(0x60);
 344   2                      break;
 345   2              case 0x52:
 346   2                      KBHIStep=0x01;
 347   2                      break;
 348   2              case 0x53:
 349   2                      KBHIStep=0x02;
 350   2                      break;
 351   2              case 0x56:
 352   2                      break;
 353   2              case 0x58:
 354   2                      KBHIStep=0x01;
 355   2                      break;
 356   2              case 0x59:
 357   2                      KBHIStep=0x01;
 358   2                      break;
 359   2              case 0x5C:
 360   2                      break;
 361   2              case 0x5D:
C51 COMPILER V8.12   OEM_6064                                                              07/28/2018 12:03:51 PAGE 7   

 362   2                      KBHIStep=0x01;
 363   2                      break;
 364   2              case 0x5E:                      // UNLOCK SHIP MODE 
 365   2                      #if shipmodesupport             //add ship mode judge
 366   2                      Unlock_ShipMode();
 367   2                      #endif
 368   2                      break;
 369   2              case 0x5F:      
 370   2                      #if shipmodesupport             //add ship mode judge// LOCK SHIP MODE 
 371   2                      ShipModeEn=0xA5;  
 372   2                      Data2PortDirect(0x60, 0x5A);
 373   2              RamDebug(0xA5);
 374   2                      #endif
 375   2                      break;
 376   2              case 0x71:
 377   2                      KBHIStep=0x02;//Add 60/64 71cmd follow new EC common SPEC.
 378   2                      break;
 379   2                      case 0x72:
 380   2                      KBHIStep=0x01;//add flag for  tool to keep the battery at 60%
 381   2                      break;
 382   2              //ANGELAG012:S+.
 383   2              case 0x75:
 384   2                      Cmd_75(); 
 385   2                      break;
 386   2              //ANGELAG012:E+.
 387   2              //ANGELAS033:Add start
 388   2              case 0x7A:
 389   2                      KBHIStep=0x01;
 390   2                      break;
 391   2              case 0x7B:
 392   2                      KBHIStep=0x02;
 393   2                      break;
 394   2              //ANGELAS033:Add end
 395   2              //ANGELAG004:s+Add 7Eh Command to access all EC RAM.
 396   2              case 0x7E:
 397   2                      KBHIStep=0x02;
 398   2                      break;
 399   2              //ANGELAG004:e+Add 7Eh Command to access all EC RAM.
 400   2              //ANGELAS094:s+Add workaround for hang bios.
 401   2              case 0x7C:
 402   2                      Bioswatchdog=1;
 403   2                      Bioswatchdogtime=0;//ANGELAS106:Optimize ANGELAS094 clear time.
 404   2                      Data2PortDirect(0x60, 0x55);////ANGELAS105:Optimize ANGELAS094 add return date for bios.
 405   2                      break;
 406   2              case 0x7D:
 407   2                      Bioswatchdog=0;
 408   2                      Data2PortDirect(0x60, 0x55);////ANGELAS105:Optimize ANGELAS094 add return date for bios.
 409   2                      break;
 410   2                      //ANGELAS094:e+Add workaround for hang bios.
 411   2              case 0x97:
 412   2                      KBHIStep=0x01;
 413   2                      break;
 414   2              case 0xB0:
 415   2                      KBHIStep=0x01;
 416   2                      break;
 417   2              //start for save P80 code to setup. 
 418   2              case 0xB1:
 419   2                      Cmd_B1(0x60,0xB1);
 420   2                      break;
 421   2              case 0xB2:
 422   2                      Cmd_B2(0x60,0xB2);
 423   2                      break;
C51 COMPILER V8.12   OEM_6064                                                              07/28/2018 12:03:51 PAGE 8   

 424   2              //end for save P80 code to setup. 
 425   2              case 0xB3:
 426   2                      KBHIStep=0x02;
 427   2                      break;
 428   2              case 0xB4:
 429   2                      Cmd_B4();
 430   2                      break;
 431   2              case 0xBC:
 432   2                      KBHIStep=0x01;
 433   2                      break;
 434   2              case 0x77:
 435   2                      //CacheDma(1,FSCEHighLevel);
 436   2              DisableAllInterrupt();
 437   2                      Erase_Eflash_1K(0x01,0x20,0x00);
 438   2              EnableAllInterrupt();
 439   2                      break;
 440   2              case 0x88:
 441   2                      //CacheDma(3,FSCEHighLevel);
 442   2                      //Copy_Eflash_1K(0x00,0x00,0x00, 0x01,0x20,0x00);
 443   2                      break;
 444   2      
 445   2              default:
 446   2                      break;
 447   2              }
 448   1      }
 449          
 450          //-----------------------------------------------------------------------
 451          // kbcmd : keyboard command from 0x60 port
 452          //-----------------------------------------------------------------------
 453          void Hook_Keyboard_Cmd(BYTE kbcmd)
 454          {
 455   1      
 456   1      }
 457          
 458          //-----------------------------------------------------------------------
 459          // kbcmdp : keyboard command parameter from 0x60 port
 460          // for example keyboard command (0xED, 0xF0, 0xF3)
 461          //-----------------------------------------------------------------------
 462          void Hook_Keyboard_Cmd_Parameter(BYTE kbcmdp)
 463          {
 464   1      
 465   1      }
 466          
 467          //-----------------------------------------------------------------------
 468          // mscmd : mosue command from 0x64 port 0xD4 command
 469          //-----------------------------------------------------------------------
 470          void Hook_Mouse_D4Cmd(BYTE mscmd)
 471          {
 472   1      
 473   1      }
 474          
 475          //-----------------------------------------------------------------------
 476          // mscmd : mosue command from 0x64 port 0x90 command
 477          //-----------------------------------------------------------------------
 478          void Hook_Mouse_90Cmd(BYTE mscmd)
 479          {
 480   1      
 481   1      }
 482          
 483          //-----------------------------------------------------------------------
 484          // mscmd : mosue command from 0x64 port 0x91 command
 485          //-----------------------------------------------------------------------
C51 COMPILER V8.12   OEM_6064                                                              07/28/2018 12:03:51 PAGE 9   

 486          void Hook_Mouse_91Cmd(BYTE mscmd)
 487          {
 488   1      
 489   1      }
 490          
 491          //-----------------------------------------------------------------------
 492          // mscmd : mosue command from 0x64 port 0x92 command
 493          //-----------------------------------------------------------------------
 494          void Hook_Mouse_92Cmd(BYTE mscmd)
 495          {
 496   1      
 497   1      }
 498          
 499          //-----------------------------------------------------------------------
 500          // mscmd : mosue command from 0x64 port 0x93 command
 501          //-----------------------------------------------------------------------
 502          void Hook_Mouse_93Cmd(BYTE mscmd)
 503          {
 504   1      
 505   1      }
 506          
 507          void Cmd_40(BYTE sCount)
 508          {
 509   1              AutoTimer = sCount;
 510   1          RamDebug(0x40); 
 511   1          RamDebug(AutoTimer); 
 512   1              SET_MASK(ACPI_HOTKEY, b6Cmd_NoShut);
 513   1      }
 514          
 515          void Cmd_41_A0(BYTE nPort) 
 516          {
 517   1              Data2PortDirect(nPort, REV0_BYTE0);   //Data2Port to Data2PortDirect
 518   1      }
 519          
 520          void Cmd_41_A1(BYTE nPort) 
 521          {
 522   1              /*
 523   1              Data2Port(nPort, 'l');          // 'l' 0x6C
 524   1              MultiB2Port(nPort, 'e');        // 'e' 0x65
 525   1              MultiB2Port(nPort, 'n');        // 'n' 0x6E
 526   1              MultiB2Port(nPort, 'o');        // 'o' 0x6F
 527   1              MultiB2Port(nPort, 'v');        // 'v' 0x76
 528   1              MultiB2Port(nPort, 'o');        // 'o' 0x6F
 529   1              */
 530   1              Data2Port(nPort, 0x43);     // 'C' 0x43
 531   1              MultiB2Port(nPort, 0x4F);  // 'O' 0x4F
 532   1              MultiB2Port(nPort, 0x4D);  // 'M' 0x4D
 533   1              MultiB2Port(nPort, 0x50);  // 'P' 0x50
 534   1              MultiB2Port(nPort, 0x41);  // 'A' 0x41
 535   1              Data2PortDirect(nPort, 0x4C);  // 'L' 0x4C  /MultiB2Port to Data2PortDirect
 536   1      }
 537          
 538          void Cmd_41_A2(BYTE nPort) 
 539          {       //Return EEPROM slave address
 540   1              Data2PortDirect(nPort, 0);    //Data2Port to Data2PortDirect
 541   1      }
 542          
 543          void Cmd_41_A3(BYTE nPort) 
 544          {       //Return Thermal chip slave address
 545   1              Data2PortDirect(nPort, 0);    //Data2Port to Data2PortDirect
 546   1      }
 547          
C51 COMPILER V8.12   OEM_6064                                                              07/28/2018 12:03:51 PAGE 10  

 548          void Cmd_42(BYTE eFlashBank)
 549          {
 550   1              eEEPROMBank = eFlashBank;
 551   1      }
 552          
 553          void Cmd_43(BYTE nPort,BYTE nData)
 554          {
 555   1              Data2PortDirect(nPort,( *((XBYTE *)(OEMRAM4|nData)) ));    //Data2Port to Data2PortDirect G88:Modify 43 c
             -md return EC space value(0x400) follow EC spec.
 556   1      }
 557          
 558          void Cmd_44(BYTE nPort) 
 559          {
 560   1              Data2Port(nPort, ProjectID0L);
 561   1              Data2PortDirect(nPort, ProjectID0H); //MultiB2Port to Data2PortDirect
 562   1      }
 563          
 564          void Cmd_45(BYTE nPort, BYTE sCount)
 565          {
 566   1              switch( sCount )
 567   1              {
 568   2              /*
 569   2              case 0x60: // Disable boost charger
 570   2                      if( ACPOWER_ON && nBattExistGET(CM_1st) && nBattRdCompleteGET(CM_1st) )
 571   2                      {
 572   2                              InQueueSMBus(SMBUS_PRJ,V_CHARGER,ChargeOption,PRTCL_WRITE_WORD_OEM,(WORD) (( ChargeOptionL + ChargeOpti
             -onH*256)&(~BoostEnable)),2 );
 573   2                              putchar('!');putchar('0');
 574   2                      }
 575   2                      break;
 576   2              case 0x61:
 577   2                      if( ACPOWER_ON && nBattExistGET(CM_1st) && nBattRdCompleteGET(CM_1st) )
 578   2                      {
 579   2                              InQueueSMBus(SMBUS_PRJ,V_CHARGER,ChargeOption,PRTCL_WRITE_WORD_OEM,(WORD) (( ChargeOptionL + ChargeOpti
             -onH*256)|(BoostEnable)),2 );
 580   2                              putchar('!');putchar('1');
 581   2                      }
 582   2                      break;
 583   2                      */
 584   2              #if Lenovo_Brightness
                      case 0x10://BIOS confirm Panel ok
                              uReserve07.fbit.uE_PanelOK = 1;
                              break;
                      case 0x11://BIOS confirm Panel fail
                              uReserve07.fbit.uE_PanelOK = 0;
                              break;
                      #endif  // Lenovo_Brightness
 592   2              //Y7JERRY085:s+Add CMD for press power button 4s don't shutdown when flash bios.
 593   2              #if chPWSW1WDT
 594   2                      case 0x20:      //Enable power switch WDT function
 595   2                                      //OEM_PWRSWWDTEn();
 596   2                                CLEAR_MASK(pProject4,pPWSWdisable);
 597   2                                break;          
 598   2                      case 0x21:      //Disable power switch WDT function
 599   2                                SET_MASK(pProject4,pPWSWdisable);  
 600   2                                break;
 601   2          #endif  //chPWSW1WDT
 602   2              //Y7JERRY085:e+Add CMD for press power button 4s don't shutdown when flash bios.        
 603   2      
 604   2              case 0x80:      // Disable ME Flash.
 605   2                      pchME_FLAS_OUT;
 606   2                      pchME_FLAS_HI();
C51 COMPILER V8.12   OEM_6064                                                              07/28/2018 12:03:51 PAGE 11  

 607   2                      break;
 608   2              case 0x81:      // Enable ME Flash.
 609   2                      pchME_FLAS_LOW();
 610   2                      pchME_FLAS_INDW;
 611   2                      break;
 612   2      
 613   2              case 0x82:
 614   2                      SET_MASK(SYS_STATUS, b6BIOS_Flash);     // For BIOS use flash.
 615   2                      break;
 616   2      
 617   2              case 0x83:
 618   2                      SET_MASK(SysStatus,LidKBIgnore);
 619   2              Ccb42_DISAB_KEY = 1;
 620   2                      Flag.SCAN_INH = 1;                              // Inhibit scanner (internal keyboard).
 621   2                      Lock_Scan();                                    // Lock scanner
 622   2                      ECSend2Port(2, 0xF5);                   // Disable TouchPad.
 623   2                      break;
 624   2      
 625   2              #if Support_USB_Charge
                      case 0x8E:      // USB Enable Charger.
                              //SET_MASK(USB_Charger, b0USB_EN);              // USB enable charger.
                              if (IS_MASK_CLEAR(EMStatusBit, b1SetUSBChgEn))  // if USB charger disable, then enable it..
                              {
                                      SET_MASK(EMStatusBit, b1SetUSBChgEn);// USB enable charger.
                                      eEEPROMBank= 0x07;
                                      eEEPROMAddrsss = 0xE4;
                                      eEEPROMData = EMStatusBit;
                                      SET_MASK(LENOVOPMFW_Temp,EEPROM_Token);
                                      Update_EEPROMMark();
                                      CLEAR_MASK(LENOVOPMFW_Temp,EEPROM_Token);
                              }
                              break;
              
                      case 0x8F:      // USB Disable charger.
                              //CLR_MASK(USB_Charger, b0USB_EN);      // USB disable charger.
                              if (IS_MASK_SET(EMStatusBit, b1SetUSBChgEn))            // if USB charger enable, then disable it..
                              {
                                      CLR_MASK(EMStatusBit, b1SetUSBChgEn);// USB enable charger.
                                      eEEPROMBank= 0x07;
                                      eEEPROMAddrsss = 0xE4;
                                      eEEPROMData = EMStatusBit;
                                      SET_MASK(LENOVOPMFW_Temp,EEPROM_Token);
                                      Update_EEPROMMark();
                                      CLEAR_MASK(LENOVOPMFW_Temp,EEPROM_Token);
                              }
                              break;
                      #endif                        //Support_USB_Charge
 654   2              case 0x90:
 655   2                      CURRENT_STATUS &= 0x3F;
 656   2                      CURRENT_STATUS |= 0x40;                         // For BIOS set Legacy HDD.
 657   2                      Chk_UEFIStatus();                                       // Check UEFI status.
 658   2                      break;
 659   2              case 0x91:
 660   2                      CURRENT_STATUS &= 0x3F;
 661   2                      CURRENT_STATUS |= 0x80;                         // For BIOS set UEFI HDD.
 662   2                      Chk_UEFIStatus();                                       // Check UEFI status.
 663   2                      break;
 664   2      
 665   2              case 0xA2:
 666   2                      SET_MASK(DEVICEMODULE,WWAN_3G_EXIST);   // 3G module exist
 667   2                      break;
 668   2      
C51 COMPILER V8.12   OEM_6064                                                              07/28/2018 12:03:51 PAGE 12  

 669   2              case 0xA3:
 670   2                      CLR_MASK(DEVICEMODULE,WWAN_3G_EXIST);   // 3G module not exist
 671   2                      break;
 672   2      
 673   2              case 0xA4:                                                                      // Return WLAN & Bluetooth status
 674   2                      Data2PortDirect(nPort, DEVICEMODULE);   //
 675   2                      break;
 676   2      
 677   2              case 0xA5:
 678   2                      CLR_MASK(DEVICEMODULE,WIRELESS_EXIST);  // Wirless LAN not exist
 679   2                      CLR_MASK(DEVICEMODULE,BLUETOOTH_EXIST); // BlueTooth not exist
 680   2                      break;
 681   2      
 682   2              case 0xA6:
 683   2                      SET_MASK(DEVICEMODULE,WIRELESS_EXIST);  // Wirless LAN exist
 684   2                      CLR_MASK(DEVICEMODULE,BLUETOOTH_EXIST); // BlueTooth not exist
 685   2                      break;
 686   2      
 687   2              case 0xA7:
 688   2                      CLR_MASK(DEVICEMODULE,WIRELESS_EXIST);  // Wirless LAN not exist
 689   2                      SET_MASK(DEVICEMODULE,BLUETOOTH_EXIST); // BlueTooth exist
 690   2                      break;
 691   2      
 692   2              case 0xA8:
 693   2                      SET_MASK(DEVICEMODULE,WIRELESS_EXIST);  // Wirless LAN exist
 694   2                      SET_MASK(DEVICEMODULE,BLUETOOTH_EXIST); // BlueTooth exist
 695   2              break;
 696   2      
 697   2              case 0xA9:
 698   2                      SET_MASK(LENOVODEVICE,Camera_EXIST);// Camera exist
 699   2                      break;
 700   2      
 701   2              case 0xAA:
 702   2                      CLR_MASK(LENOVODEVICE,Camera_EXIST);// Camera not exist
 703   2                      break;
 704   2      
 705   2              case 0xAB:                                                              // Return MBID
 706   2                      //Data2Port(nPort, pModuleID);
 707   2                      Data2PortDirect(nPort, uMBID);   //
 708   2                      break;
 709   2      
 710   2              case 0xAE:
 711   2                      Data2PortDirect(nPort, uNovoVPCCount);  //
 712   2                      uNovoVPCCount=0;                //JERRYCRZ018:+optimize clear NOVO button states function.
 713   2                      break;
 714   2      
 715   2              case 0xB0:                                                              // CPU is TJ85
 716   2                      cCPUKind = 0;
 717   2                      break;
 718   2              case 0xB1:                                                              // CPU is TJ90
 719   2                      cCPUKind = 1;
 720   2                      break;
 721   2              case 0xB2:                                                              // CPU is TJ100
 722   2                      cCPUKind = 2;
 723   2                      break;
 724   2              case 0xBD:                                                              // CPU is TJ105
 725   2                      cCPUKind = 3;
 726   2                      break;
 727   2              case 0xBE:                                                              // CPU is Dual core TJ100
 728   2                      cCPUKind = 4;
 729   2                      break;
 730   2              case 0xBF:                                                              // CPU is Quad core TJ100
C51 COMPILER V8.12   OEM_6064                                                              07/28/2018 12:03:51 PAGE 13  

 731   2                      cCPUKind = 5;
 732   2                      break;
 733   2      
 734   2              case 0xCF:
 735   2                      if ( IS_MASK_SET(CombineKeyStatus, b0FnRN) )
 736   2                      { Data2PortDirect(nPort, 1); }   //Data2Port to Data2PortDirect
 737   2                      else
 738   2                      { Data2PortDirect(nPort, 0); }    // Data2Port to Data2PortDirect
 739   2                      break;
 740   2      
 741   2              case 0xD4:                                                      // Return device
 742   2                      Data2PortDirect(nPort, pDevStus);  //Data2Port to Data2PortDirect
 743   2                      break;
 744   2      
 745   2              case 0xE7:
 746   2                      SET_MASK(pProject0,b4VGAType);          //UMA
 747   2                      //LMLKBL0001:S+ add UMA cmd define.
 748   2                      uMBGPU = 0x01;
 749   2              if (IS_MASK_SET(SYS_STATUS,AC_ADP))  //read adapter ID after know UMA or dis.
 750   2              {
 751   3                              //ADAPTERIDON_LOW();  //MEILING001:remove.
 752   3                              AdapterIDOn_Flag = 0x01; //MEILING001:add.
 753   3                              ADPIDON10MS_NUM=0x0a;  
 754   3              } 
 755   2              //LMLKBL0001:E+ add UMA cmd define.
 756   2      
 757   2                      InitChargerIC(); //LMLKBL0014:add.
 758   2                      
 759   2                      break;
 760   2      
 761   2              //LMLKBL0001:S-remove DIS cmd define.
 762   2              /*case 0xE8:
 763   2                      CLR_MASK(pProject0,b4VGAType);  //Discreate
 764   2                      break;*/
 765   2              //LMLKBL0001:E- remove DIS cmd define.
 766   2      
 767   2              case 0xE9:
 768   2                      uReserve07.fbit.uACInOutBeep = 0;       // Enable AC in/out beep
 769   2                      break;
 770   2      
 771   2              case 0xEA:
 772   2                      uReserve07.fbit.uACInOutBeep = 1;       // Disable AC in/out beep
 773   2                      break;
 774   2              //MEILING050:s+Distinguish between 310 or 510.
 775   2              case 0xEB:
 776   2                      SET_MASK(pProject0,b7GSKL310OR510);     // 310/510 BIT7=1 310
 777   2                      break;
 778   2              //MEILING050:e+Distinguish between 310 or 510.
 779   2      
 780   2              //LMLKBL0001:S+ add AMD or NV discrete cmd define.
 781   2              case 0xF0: //NV
 782   2                      CLR_MASK(pProject0,b4VGAType);          //Discreate
 783   2                      uMBGPU = 0x02;
 784   2                      uPJID = 0x02;
 785   2              if (IS_MASK_SET(SYS_STATUS,AC_ADP))  //read adapter ID after know UMA or dis.
 786   2              {
 787   3                              //ADAPTERIDON_LOW();  //MEILING001:remove.
 788   3                              AdapterIDOn_Flag = 0x01; //MEILING001:add.
 789   3                              ADPIDON10MS_NUM=0x0a;  
 790   3              } 
 791   2      
 792   2                      InitChargerIC(); //LMLKBL0014:add.
C51 COMPILER V8.12   OEM_6064                                                              07/28/2018 12:03:51 PAGE 14  

 793   2                      
 794   2                      break;
 795   2              case 0xF1: //AMD
 796   2                      CLR_MASK(pProject0,b4VGAType);          //Discreate
 797   2                      uMBGPU = 0x02;
 798   2                      uPJID = 0x01;
 799   2              if (IS_MASK_SET(SYS_STATUS,AC_ADP))  //read adapter ID after know UMA or dis.
 800   2              {
 801   3                              //ADAPTERIDON_LOW();  //MEILING001:remove.
 802   3                              AdapterIDOn_Flag = 0x01; //MEILING001:add.
 803   3                              ADPIDON10MS_NUM=0x0a;  
 804   3              } 
 805   2      
 806   2                      InitChargerIC(); //LMLKBL0014:add.
 807   2                      
 808   2                      break;
 809   2              //LMLKBL0001:E+ add AMD or NV discrete cmd define.
 810   2              
 811   2              /*
 812   2              case 0xE6:
 813   2                      nHybridGraphicsDIS;     //UMA = DGPU off (No need to read temp)
 814   2                      break;
 815   2      
 816   2              //[Lenovo2010012802] start
 817   2              #if Lenovo_Switchable
 818   2              case 0xEB:                                      //Discrete
 819   2                      uProject3.bit.u04_SwitchCheck = 1;
 820   2                      SET_MASK(SWITCHABLE,SWITCHABLEBTN);     // enable Switchable button.
 821   2                      pSmiTrigSource4.bit.STS4_SWableBtn = 1;
 822   2                      if(nHybridGraphicsGET)
 823   2                              StringToHost1( sSWablebtn_Codes );
 824   2      
 825   2                      break;
 826   2              case 0xEC:                                      //UMA
 827   2                      uProject3.bit.u04_SwitchCheck = 1;
 828   2                      CLR_MASK(SWITCHABLE,SWITCHABLEBTN);     // Disable Switchable button.
 829   2                      pSmiTrigSource4.bit.STS4_SWableBtn = 1;
 830   2                      if(nHybridGraphicsGET)
 831   2                              StringToHost1( sSWablebtnUMA_Codes );
 832   2                      break;
 833   2              #endif
 834   2              //[Lenovo2010012802] end
 835   2              #if Lenovo_Optimus
 836   2              case 0xEB:                                      //Change to Optimus
 837   2                      if( IS_MASK_CLEAR(SWITCHABLE,SWITCHABLEBTN) )
 838   2                      {
 839   2                              //change Graphics
 840   2                              if( IS_MASK_SET(cCmd, b6TestBtnEn) )
 841   2                              {
 842   2                                      StringToHost1( sSWablebtn_Codes );
 843   2                              }
 844   2                              pSwitchSCICnt = T10MS_2SEC;
 845   2                              pDevStus.bit.pSwitchableBTN = 1; //save to ROM  //1:Dis; 0:UMA
 846   2                              SET_MASK(SWITCHABLE,SWITCHABLEBTN);     // let BIOS to read the
 847   2                              //pSmiTrigSource4.bit.STS4_SWableBtn = 1;//Send SCI to BIOS
 848   2                      }
 849   2                      break;
 850   2              case 0xEC:                                      //Chagne to UMA
 851   2                      if( IS_MASK_SET(SWITCHABLE,SWITCHABLEBTN) )
 852   2                      {
 853   2                              if( IS_MASK_SET(cCmd, b6TestBtnEn) )
 854   2                              {
C51 COMPILER V8.12   OEM_6064                                                              07/28/2018 12:03:51 PAGE 15  

 855   2                                      StringToHost1( sSWablebtn_Codes );
 856   2                              }
 857   2                              pSwitchSCICnt = T10MS_2SEC;
 858   2                              pDevStus.bit.pSwitchableBTN = 0; //save to ROM
 859   2                              //pSmiTrigSource4.bit.STS4_SWableBtn = 1;//Send SCI to BIOS
 860   2                              CLR_MASK(SWITCHABLE,SWITCHABLEBTN);     // Disable Switchable button.
 861   2                      }
 862   2                      break;
 863   2              #endif
 864   2              case 0xED:      // For Main build Switchable button LED test, Jacko
 865   2                      cOsLedCtrl.bit.cOL_CtrlRight = 1;
 866   2                      cOsLed1Ctrl.bit.cOL1_SwitchableBtnLed = 1;
 867   2                      break;
 868   2              case 0xEE:// Enable Color engine
 869   2                      COLOR_ENGINEon;
 870   2                      //pnlDCRENon;
 871   2                      break;
 872   2              case 0xEF:// Disable Color engine
 873   2                      COLOR_ENGINEoff;
 874   2                      //pnlDCRENoff;
 875   2                      break;
 876   2              }
 877   2              return (WORD)(NONE_RETURN);     // Nothing to send
 878   2              }
 879   2              #endif  // End of SW_OemCmd45Hook
 880   2              */
 881   2              }
 882   1      }
 883          
 884          void Cmd_46(BYTE nPort,BYTE nData)
 885          {
 886   1              BYTE BRPM_Manual;
 887   1              switch( nData )
 888   1              {
 889   2              case 0x81:
 890   2                      Data2PortDirect(nPort, nAtmFanSpeed);           //Reading FAN speed from FAN1
 891   2                      break;
 892   2              case 0x82:
 893   2                      Data2PortDirect(nPort, nAtmFan1Speed);                  //Reading FAN speed from FAN2
 894   2                      break;
 895   2              case 0x84:
 896   2                      uReserve07.fbit.nFanManual = 0;         // return EC control.
 897   2                      break;
 898   2              default:
 899   2                      uReserve07.fbit.nFanManual = 1;
 900   2                      if ( nData >= 160 )
 901   2                      {
 902   3                              nData -= 160;
 903   3                              ManualFan2PRM = nData;
 904   3                      }
 905   2                      else
 906   2                      {
 907   3                              ManualFanPRM = nData;
 908   3                              FAN_PWM_ALT;
 909   3                              FAN_PWM = ManualFanPRM + 2;
 910   3                              FAN_SPEED_ALT;
 911   3                              //JERRYCH00:s+Modify the fan control from linear to the ladder.
 912   3                              ManualFan2PRM = nData;
 913   3                              FAN2_PWM_ALT;
 914   3                              FAN2_PWM = ManualFan2PRM + 2;
 915   3                              FAN2_SPEED_ALT;
 916   3                              //JERRYCH00:e+Modify the fan control from linear to the ladder.
C51 COMPILER V8.12   OEM_6064                                                              07/28/2018 12:03:51 PAGE 16  

 917   3                      }
 918   2      
 919   2                      if ( uReserve07.fbit.b7Fan2Manual == 0 )
 920   2                      { BRPM_Manual = ManualFanPRM; }         // Common FAN1 PRM value.
 921   2                      else
 922   2                      { BRPM_Manual = ManualFan2PRM; }        // Respective FAN PRM value.
 923   2                      break;
 924   2              }
 925   1      }
 926          
 927          
 928          void Cmd_47(BYTE nPort, BYTE nData)
 929          {
 930   1              if (nData != 0x80)
 931   1          {
 932   2                      cOsLedCtrl.fbit.cOL_CtrlRight = 1;
 933   2          }
 934   1              switch( nData )
 935   1              {
 936   2              case 0x80:                      // Return back the control right to EC
 937   2                      //cOsLedCtrl.fbit.cOL_CtrlRight = 0;
 938   2                      cOsLedCtrl.word = 0x00;
 939   2              cOsLed1Ctrl.word = 0x00;
 940   2                      OEM_Write_Leds(Led_Data);   //Hook Oem On-board LED control
 941   2                      break;
 942   2              case 0x81:                      // System LED on and control by OS
 943   2                      cOsLedCtrl.fbit.cOL_SysLed = 1;
 944   2                      break;
 945   2              case 0x82:                      // Power management LED on and control by OS
 946   2                      cOsLedCtrl.fbit.cOL_PwrLed = 1;
 947   2                      break;
 948   2              case 0x83:                      // Charge LED on and control by OS
 949   2                      cOsLedCtrl.fbit.cOL_ChgLed = 1;
 950   2                      break;
 951   2              case 0x84:                      // Discharge LED on and control by OS
 952   2                      cOsLedCtrl.fbit.cOL_DisChgLed = 1;
 953   2                      break;
 954   2              case 0x85:                      // T/P active LED on and control by OS
 955   2                      cOsLedCtrl.fbit.cOL_TPActLed = 1;
 956   2                      break;
 957   2              case 0x86:                      // Blue Tooth LED on and control by OS
 958   2                      cOsLedCtrl.fbit.cOL_BTLed = 1;
 959   2                      break;
 960   2              case 0x87:                      // T/P lock LED on and control by OS
 961   2                      cOsLedCtrl.fbit.cOL_TPLockLed = 1;
 962   2                      break;
 963   2              case 0x88:                      // All LED off and control by OS
 964   2                      cOsLedCtrl.word=0;
 965   2                      cOsLedCtrl.fbit.cOL_CtrlRight = 1; //G63:Modify LED control for MFG tool.
 966   2                      //cOsLedCtrl.word = 0x0080;     // Set cOL_CtrlRight == 1.
 967   2              cOsLed1Ctrl.word = 0x00;
 968   2                      break;
 969   2              case 0x89:                      // HDD LED on and control by OS
 970   2                      cOsLedCtrl.fbit.cOL_HddLed = 1;
 971   2                      break;
 972   2              case 0x8A:                      // FDD LED on and control by OS
 973   2                      cOsLedCtrl.fbit.cOL_FddLed = 1;
 974   2                      break;
 975   2              case 0x8B:                      // Media LED on and control by OS
 976   2                      cOsLedCtrl.fbit.cOL_MediaLed = 1;
 977   2                      break;
 978   2              case 0x8C:                      // TV LED on and control by OS
C51 COMPILER V8.12   OEM_6064                                                              07/28/2018 12:03:51 PAGE 17  

 979   2                      cOsLedCtrl.fbit.cOL_TVLed = 1;
 980   2                      break;
 981   2              case 0x8D:                      // Email LED on and control by OS
 982   2                      cOsLedCtrl.fbit.cOL_MailLed = 1;
 983   2                      break;
 984   2              case 0x8E:                      // Wireless LED on and control by OS
 985   2                      cOsLedCtrl.fbit.cOL_WLANLed = 1;
 986   2                      break;
 987   2              case 0x8F:                      // Numlock LED Controlled by OS
 988   2                      cOsLedCtrl.fbit.cOL_NumlockLed = 1;
 989   2                      break;
 990   2              case 0x90:                      // Padslock(Cursorlock) LED Control by OS
 991   2                      cOsLedCtrl.fbit.cOL_PadslockLed = 1;
 992   2                      break;
 993   2              case 0x91:                      // Capslock LED Control by OS
 994   2                      cOsLed1Ctrl.fbit.cOL1_CapslockLed = 1;
 995   2                      break;
 996   2              case 0x92:                      // Scrolllock LED Control by OS
 997   2                      cOsLed1Ctrl.fbit.cOL1_ScrolllockLed = 1;
 998   2                      break;
 999   2              case 0x93:                      // Special LED1 (Special LED for testing in production line)
1000   2                      cOsLed1Ctrl.fbit.cOL1_SpecialLed1 = 1;
1001   2                      break;
1002   2              case 0x94:                      // KB backlight LED control by OS.
1003   2                      cOsLed1Ctrl.fbit.cOL1_KBBacklight = 1;
1004   2                      break;
1005   2              case 0x95:                      // Special LED3 (Special LED for testing in production line)
1006   2                      cOsLed1Ctrl.fbit.cOL1_SpecialLed3 = 1;
1007   2                      break;
1008   2              }
1009   1      }
1010          
1011          //MEILING009:S+ Add 8 sec reset test function.
1012          void Cmd_4A(BYTE nPort, BYTE nData)
1013          {
1014   1              if(nData == 0x01)//Enable
1015   1              {
1016   2                      ResetTestFlag = 0x01;
1017   2                      BRAMBK0[127] = GPCRI5;
1018   2              }
1019   1              else if(nData == 0x02)
1020   1              {
1021   2                      ResetTestFlag = 0x02;
1022   2              }
1023   1              BRAMBK0[126] = ResetTestFlag;
1024   1      
1025   1              WinFlashMark=0x53;//B05:Modify after flash EC can auto poweron follow bios.
1026   1          WinFlashMark2=0x35;//B05:Modify after flash EC can auto poweron follow bios.
1027   1          WDTRST = 1;                         // Reset watch dog timer
1028   1              WDTEB = 1;                              // Enable watch dog
1029   1          while(1);
1030   1      }
1031          //MEILING009:E+.
1032          
1033          void Cmd_4E(BYTE nPort, BYTE nOffSet)
1034          {
1035   1              BYTE i,j,k;
1036   1              if (eEEPROMBank == 07 && (nOffSet > 0xEF) && (nOffSet!=0xF1))
1037   1              {
1038   2                      RamDebug(0x4E);
1039   2                      RamDebug(eEEPROMBank);
1040   2                      RamDebug(nOffSet);
C51 COMPILER V8.12   OEM_6064                                                              07/28/2018 12:03:51 PAGE 18  

1041   2                      nOffSet = nOffSet & 0x0F;
1042   2                      for (i=0; i<4 ;i++)
1043   2                      {
1044   3                              for (j=0; j< 0x10 ;j++)
1045   3                              {
1046   4                                      k = Read_Eflash_Byte(EEPROMA2,(EEPROMA1_16Byte + i),(j*16));
1047   4                                      //RamDebug(k);
1048   4                                      if(k == 0xFF)
1049   4                                      {
1050   5                                              break;
1051   5                                      }
1052   4                                      else
1053   4                                      {
1054   5                                              eEEPROMData = Read_Eflash_Byte(EEPROMA2,(EEPROMA1_16Byte + i),((j*16) | nOffSet));
1055   5                                              //RamDebug(eEEPROMData);
1056   5                                      }
1057   4                              }
1058   3                              if (k == 0xFF)
1059   3                                      break;
1060   3                      }
1061   2              }
1062   1              else
1063   1              {
1064   2                      eEEPROMData=Read_Eflash_Byte(EEPROMA2,(eEEPROMBank|EEPROMA1_B03),nOffSet);
1065   2              }
1066   1              Data2PortDirect(nPort, eEEPROMData);  
1067   1      }
1068          
1069          
1070          void Cmd_51(BYTE nPort) {
1071   1              Data2Port(nPort, REV0_BYTE0);
1072   1              MultiB2Port(nPort, REV0_BYTE1);
1073   1              //MultiB2Port(nPort, ((REV0_BYTE2-'A')<<4) | (REV0_BYTE3&0x0F) ); 
1074   1              //Data2PortDirect(nPort, ((REV0_BYTE2-'A')<<4) | (REV0_BYTE3&0x0F) );  
1075   1              Data2PortDirect(nPort, REV0_BYTE3);  
1076   1      }
1077          
1078          void Cmd_52_A0(BYTE nPort) { 
1079   1              Data2Port(nPort, 'E');          // 'V' 0x51
1080   1              MultiB2Port(nPort, 'G');        // 'I' 0x49
1081   1              MultiB2Port(nPort, '5');        // 'Q' 0x51
1082   1              MultiB2Port(nPort, '3');        // 'Y' 0x59
1083   1              //MultiB2Port(nPort, 'x');      // 'x' 0x78 
1084   1              Data2PortDirect(nPort, '0');
1085   1      }
1086          
1087          void Cmd_52_A3(BYTE nPort) {
1088   1              //Data2Port(nPort, (0x10+(CHIP_TYPE0&0x0F))); 
1089   1              Data2PortDirect(nPort, (0x10+(CHIP_TYPE0&0x0F))); 
1090   1      }
1091          
1092          void Cmd_52_A4(BYTE nPort)
1093          {
1094   1              if( IS_MASK_SET(SYS_MISC1,Crisis_On) )
1095   1              {
1096   2                      Data2PortDirect(nPort,0x80); //Data2Port to Data2PortDirect
1097   2                      SET_MASK(SYS_MISC1,b5Crisis_LED);
1098   2              CLR_MASK(SYS_MISC1,Crisis_On);
1099   2                      CLR_MASK(SYS_MISC1,BATCRISIS_FLAG); 
1100   2              }
1101   1              else
1102   1              {
C51 COMPILER V8.12   OEM_6064                                                              07/28/2018 12:03:51 PAGE 19  

1103   2                      Data2PortDirect(nPort,0x00);   // Data2Port to Data2PortDirect
1104   2                      CLR_MASK(SYS_MISC1,b5Crisis_LED);
1105   2              }
1106   1      }
1107          
1108          void Cmd_52_A5(BYTE nPort) 
1109          {
1110   1              Data2PortDirect(nPort, REV0_BYTE4); //Data2Port to Data2PortDirect
1111   1      }
1112          
1113          //LMLKBL0018:S+ add command for BIOS show shutdown ID.
1114          void Cmd_52_A6(BYTE nPort)
1115          {
1116   1              Data2PortDirect(nPort, EEPROMA2);
1117   1      }
1118          
1119          void Cmd_52_A7(BYTE nPort)
1120          {
1121   1              Data2PortDirect(nPort, EEPROMA1_16Byte);
1122   1      }
1123          //LMLKBL0018:E+.
1124          
1125          void Cmd_53(BYTE nPort,BYTE nDataH,BYTE nDataM,BYTE nDataL)
1126          {
1127   1              eEEPROMData=Read_Eflash_Byte(nDataH,nDataM,nDataL);
1128   1              Data2PortDirect(nPort, eEEPROMData);   //Data2Port to Data2PortDirect
1129   1      }
1130          
1131          
1132          void Cmd_58(BYTE sCount)
1133          {
1134   1              #if EC_Brightness_Ctrl
                      if( sCount >= BriTable_MAX )
                      { cPanelId = BriTable_MAX - 1; }        // Set max. level.
                      else
                      { cPanelId = sCount; }
                      Init_LCD_Freq();
                      #endif  // EC_Brightness_Ctrl
1141   1      }
1142          
1143          void Cmd_59(BYTE nPort, BYTE nData, BYTE nData2)
1144          {
1145   1              switch( nData )
1146   1              {
1147   2              /*
1148   2              case 0x68:      // for ITPM test
1149   2                      SET_MASK(cCmd, b7LidIgnore);    // Disable lid switch function
1150   2                      cDev.bit.cAcS3AutoResume = 1;   // Auto resume from S3 by AC plug in
1151   2                      break;
1152   2              case 0x69:      // for ITPM test
1153   2                      CLR_MASK(cCmd, b7LidIgnore);
1154   2                      cDev.bit.cAcS3AutoResume = 0;
1155   2                      break;
1156   2              #if SW_ECRamDump
1157   2             case 0x78:
1158   2                      ThermalFan1.FanStatus.bit.FS_FanFineTuneDisable = 1;
1159   2                      #if NUMOFFAN >= 2
1160   2                      ThermalFan2.FanStatus.bit.FS_FanFineTuneDisable = 1;
1161   2                      #endif  // End of NUMOFFAN
1162   2                      #if NUMOFFAN >= 3
1163   2                      ThermalFan3.FanStatus.bit.FS_FanFineTuneDisable = 1;
1164   2                      #endif  // End of NUMOFFAN
C51 COMPILER V8.12   OEM_6064                                                              07/28/2018 12:03:51 PAGE 20  

1165   2                      break;
1166   2             case 0x79:
1167   2                      ThermalFan1.FanStatus.bit.FS_FanFineTuneDisable = 0;
1168   2                      #if NUMOFFAN >= 2
1169   2                      ThermalFan2.FanStatus.bit.FS_FanFineTuneDisable = 0;
1170   2                      #endif  // End of NUMOFFAN
1171   2                      #if NUMOFFAN >= 3
1172   2                      ThermalFan3.FanStatus.bit.FS_FanFineTuneDisable = 0;
1173   2                      #endif  // End of NUMOFFAN
1174   2                      break;
1175   2      
1176   2              case 0x98:
1177   2                      cBattFlag0.bit.cBF0_ACOFF = 0;
1178   2                      break;
1179   2              case 0x99:
1180   2                      cBattFlag0.bit.cBF0_ACOFF = 1;
1181   2                      break;
1182   2              */
1183   2              case 0x60:      // Keep PCH power for RTC
1184   2                      SET_MASK(cCmd, bPCHPWR_Keep);
1185   2                      break;
1186   2              case 0x64:      // Enable scancode for test button
1187   2                      SET_MASK(cCmd, b6TestBtnEn);
1188   2                      DEBOUNCE_CONT1 = T_PSW_DEBOUNCE; //LMLNANO026: add solution for P/L test Power Button
1189   2                      break;
1190   2      
1191   2              case 0x65:      // Disable scancode for test button
1192   2                      CLR_MASK(cCmd, b6TestBtnEn);
1193   2                      DEBOUNCE_CONT1 = T_PSW_DEBOUNCE_S0;     //LMLNANO026: add solution for P/L test Power Button
1194   2                      break;
1195   2      
1196   2              case 0x6E:
1197   2                      uCritBattWakeThre = nData;
1198   2                      SET_MASK(uCritBattWakeThre,IFFS_Enable);
1199   2                      uIffsCnt = 40;
1200   2                      break;
1201   2      
1202   2          case 0x76:
1203   2                      uReserve07.fbit.nFanManual = 0;                 // return EC control.
1204   2                      uReserve07.fbit.b7Fan2Manual = 0;               // return EC control.
1205   2                      CLR_MASK(Thro_Status2, b4FAN1_FullOn);  // Disable Full on.
1206   2                      break;
1207   2          case 0x77:
1208   2                      uReserve07.fbit.nFanManual = 0;                 // return EC control.
1209   2                      uReserve07.fbit.b7Fan2Manual = 0;               // return EC control.
1210   2                      SET_MASK(Thro_Status2, b4FAN1_FullOn);  // Enable Full on.
1211   2                      break;
1212   2      
1213   2              case 0x7A:
1214   2                      SET_MASK(pDevStus, pENABLE_TP);         // Enable TouchPad.
1215   2                      EnablePS2Port_2();
1216   2                      break;
1217   2              case 0x7B:
1218   2                      CLEAR_MASK(pDevStus, pENABLE_TP);       // Disable TouchPad.
1219   2                      DisablePS2Port_2();
1220   2                      break;
1221   2      
1222   2          case 0x7C: // Enable Lid Keyboard function
1223   2              CLEAR_MASK(SysStatus,LidKBIgnore);
1224   2              Ccb42_DISAB_KEY = 0;
1225   2                      Flag.SCAN_INH = 0;                              // Not Inhibit scanner (internal keyboard).
1226   2                      Unlock_Scan();                                  // UnLock scanner
C51 COMPILER V8.12   OEM_6064                                                              07/28/2018 12:03:51 PAGE 21  

1227   2              break;
1228   2      
1229   2              case 0x7D: // Disable Lid Keyboard function
1230   2              SET_MASK(SysStatus,LidKBIgnore);
1231   2              Ccb42_DISAB_KEY = 1;
1232   2                      Flag.SCAN_INH = 1;                              // Inhibit scanner (internal keyboard).
1233   2                      Lock_Scan();                                    // Lock scanner
1234   2              break;
1235   2      
1236   2              case 0x80:      // set battery charge to 100% then discharge to xx% and keep
1237   2                      cBattFlag0.fbit.cBF0_FullToTarget = 1;
1238   2                      cBattFlag0.fbit.cBF0_Full = 0;
1239   2                      cBattFlag0.fbit.cBF0_GoTarget = 0;
1240   2                      GetData2(nPort);
1241   2                      cTargetGauge = CmdData2;
1242   2                      if ( cTargetGauge > 100 )
1243   2                              cTargetGauge = 0;
1244   2                      break;
1245   2      
1246   2              case 0x81:      //charge/discharge to xx% and keep
1247   2                      cBattFlag0.fbit.cBF0_FullToTarget = 0;
1248   2                      cBattFlag0.fbit.cBF0_Full = 0;
1249   2                      cBattFlag0.fbit.cBF0_GoTarget = 1;
1250   2                      GetData2(nPort);
1251   2                      cTargetGauge = CmdData2;
1252   2                      if ( cTargetGauge > 100 )
1253   2                              cTargetGauge = 0;
1254   2                      break;
1255   2              case 0x82:      //disable battery charge xx% feature
1256   2                      cBattFlag0.fbit.cBF0_FullToTarget = 0;
1257   2                      cBattFlag0.fbit.cBF0_Full = 0;
1258   2                      cBattFlag0.fbit.cBF0_GoTarget = 0;
1259   2              //Modify charge/discharge to xx% and keep for MFG.
1260   2              CLEAR_MASK(ACOFF_SOURCE, BATTLEARN);
1261   2                      BATT_LEN_OFF(); //JERRYCRZ010:+
1262   2                      //ACOFF_LOW();
1263   2              //Modify charge/discharge to xx% and keep for MFG.
1264   2                      break;
1265   2      
1266   2              case 0x94:
1267   2                      SET_MASK(cCmd, b5VolMute);
1268   2                      EC_MUTE_ACT();                                  // Mute
1269   2                      break;
1270   2              case 0x95:
1271   2                      CLR_MASK(cCmd, b5VolMute);
1272   2                      EC_MUTE_INACT();                                // Unmute
1273   2                      break;
1274   2      
1275   2              case 0x9A:                                                      // Disable AC power source
1276   2                      cBattFlag0.fbit.cCmdAcOff = 1;
1277   2                      SET_MASK(ACOFF_SOURCE, ACMD);
1278   2                      CLEAR_MASK(SYS_STATUS,AC_ADP);  //Clear AC in  flag
1279   2                      //ACOFF_HI();
1280   2                      BATT_LEN_ON();
1281   2                      ECSMI_SCIEvent(ACPI_ACOUT_SCI);
1282   2                      break;
1283   2              case 0x9B:                                                      // Enable AC power source
1284   2                      cBattFlag0.fbit.cCmdAcOff = 0;
1285   2                      CLEAR_MASK(ACOFF_SOURCE, ACMD);
1286   2                      SET_MASK(SYS_STATUS,AC_ADP);    //Set AC in  flag
1287   2                      BATT_LEN_OFF();
1288   2                      ECSMI_SCIEvent(ACPI_ACIN_SCI);
C51 COMPILER V8.12   OEM_6064                                                              07/28/2018 12:03:51 PAGE 22  

1289   2                      break;
1290   2      
1291   2              case 0x9E:                                                      //Disable Internal keyboard.
1292   2                      Flag.SCAN_INH = 1;                              // Inhibit scanner (internal keyboard).
1293   2                      Lock_Scan();                                    // Lock scanner
1294   2                      break;
1295   2      
1296   2              case 0xA2:                                                      // System shutdown
1297   2                      SET_MASK(SysStatus,ERR_ShuntDownFlag);
1298   2                      ProcessSID(COMMAND_ID);                 // Shutdown ID 0x04.
1299   2                      PWSeqStep = 1;
1300   2                      PowSeqDelay = 0x00;
1301   2              RamDebug(0x0A);
1302   2                      SysPowState=SYSTEM_S0_S5;
1303   2                      break;
1304   2      
1305   2              case 0xA3:                                                      // System enter beep mode for LB state in CMOS setup
1306   2                      cBattInform.fbit.cBI_LbBeep = 1;
1307   2                      break;
1308   2              case 0xA4:                                                      // System enter quiet mode for LB state in CMOS setup
1309   2                      cBattInform.fbit.cBI_LbBeep = 0;
1310   2                      break;
1311   2              /*
1312   2              case 0xA8:      // Fan Control by OS
1313   2                      nThermalInitDIS;
1314   2                      break;
1315   2              case 0xAD:
1316   2                      nWLanWakeEN;
1317   2                      break;
1318   2              case 0xAE:
1319   2                      nWLanWakeDIS;
1320   2                      break;
1321   2              case 0xB7:      // Modem ring enable
1322   2                      nMdmWakeEN;
1323   2                      break;
1324   2              case 0xB8:      // Modem ring disable
1325   2                      nMdmWakeDIS;
1326   2                      break;
1327   2      
1328   2              case 0xBD:
1329   2                      nRTCWakeEN;
1330   2                      break;
1331   2              case 0xBE:
1332   2                      nRTCWakeDIS;
1333   2                      break;
1334   2      
1335   2              case 0xCD:      // Wake up LAN disable
1336   2                      nLanWakeDIS;
1337   2                      break;
1338   2              case 0xCE:      // Wake up LAN enable
1339   2                      nLanWakeEN;
1340   2                      break;
1341   2              case 0xD0:      // Disable IRQ1
1342   2                      IRQ1_Dis();
1343   2                      break;
1344   2              case 0xD1:      // Enable IRQ1
1345   2                      IRQ1_En();
1346   2                      break;
1347   2              */
1348   2      
1349   2              case 0xB9:                                                      // PME enable
1350   2                      uReserve07.fbit.nPmeWakeEN = 1;
C51 COMPILER V8.12   OEM_6064                                                              07/28/2018 12:03:51 PAGE 23  

1351   2                      break;
1352   2              case 0xBA:                                                      // PME disable
1353   2                      uReserve07.fbit.nPmeWakeDIS =0;
1354   2                      break;
1355   2      
1356   2              case 0xC1:      // Force battery in learning state with AC
1357   2                      cBattFlag0.fbit.cBF0_BLMode = 1;
1358   2                      break;
1359   2              case 0xC2:      // Disable battery in learning state with AC
1360   2                      cBattFlag0.fbit.cBF0_BLMode = 0;
1361   2                      //AcOffProcess(nAcOffCmdDIS);   // Disable AcOff pin
1362   2                      break;
1363   2      
1364   2              case 0xD2:      // Beep alarm 200ms
1365   2                      PWM_BEEP = 0x7F;                        // Out beep
1366   2                      PWM_LEDBeep_CNT=0x04;           // 20*(1/100 sec)=200ms
1367   2                      break;
1368   2      
1369   2              case 0xD7:      // Battery stop charge enable
1370   2                      SET_MASK(nStopChgStat3L,ENCUSTOMER);
1371   2                      break;
1372   2      
1373   2              case 0xD8:      // Battery stop charge disable
1374   2                      CLEAR_MASK(nStopChgStat3L,ENCUSTOMER);
1375   2                      break;
1376   2      
1377   2              case 0xD9:      // Set System Flag
1378   2                      SET_MASK(KBHISR,SYSF);
1379   2                      break;
1380   2      
1381   2              case 0xDA:      // Clear system Flag
1382   2                      CLEAR_MASK(KBHISR,SYSF);
1383   2                      break;
1384   2      
1385   2              case 0xE1:
1386   2                      CLR_MASK(cCmd, b3BkOff);                // Turn on LCD backlight;
1387   2                      CLR_MASK(OEMControl, b1BkOff);  //ANGELAG005:add
1388   2                      EC_TS_ON_HI(); //ANGELAG005:add
1389   2                      break;
1390   2      
1391   2              case 0xE2:
1392   2                      SET_MASK(cCmd, b3BkOff);                // Turn off LCD backlight
1393   2                      SET_MASK(OEMControl, b1BkOff);  //ANGELAG005:add
1394   2                      EC_TS_ON_LOW(); //ANGELAG005:add
1395   2                      break;
1396   2      
1397   2              case 0xE4:      // Selection BR matrix
1398   2                      cKBStatus |= 0x03;      // Set BR keyboard.
1399   2                      LoadKBMatrixToRAM();
1400   2                      break;
1401   2              case 0xE5:      // Selection US matrix
1402   2                      cKBStatus &= 0xFC;      // Set US keyboard.
1403   2                      LoadKBMatrixToRAM();
1404   2                      break;
1405   2              case 0xE6:      // Selection JP matrix
1406   2                      cKBStatus &= 0xFC;
1407   2                      cKBStatus |= 0x02;      // Set JP keyboard.
1408   2                      LoadKBMatrixToRAM();
1409   2                      break;
1410   2              case 0xE7:      // Selection UK matrix
1411   2                      cKBStatus &= 0xFC;
1412   2                      cKBStatus |= 0x01;      // Set UK keyboard.
C51 COMPILER V8.12   OEM_6064                                                              07/28/2018 12:03:51 PAGE 24  

1413   2                      LoadKBMatrixToRAM();
1414   2                      break;
1415   2      
1416   2              case 0xE8:                                                      // enable ACPI mode for Embedded control
1417   2                      SET_MASK(SYS_MISC1,ACPI_OS);
1418   2                      break;
1419   2              case 0xE9:                                                      // disable ACPI mode for Embedded control
1420   2                      CLR_MASK(SYS_MISC1,ACPI_OS);
1421   2                      break;
1422   2      
1423   2              case 0xF6:
1424   2              case 0xF7:
1425   2              case 0xF8:
1426   2              case 0xF9:
1427   2                      if (IS_MASK_SET(SYS_MISC1,ACPI_OS))
1428   2                      {
1429   3                              cSysActionFlag = SysAction_SysShutdown_EC_AutoBoot;
1430   3                      }
1431   2                      else
1432   2                      {
1433   3                              if( nData == 0xF6 )                     // ACTION
1434   3                                      cSysActionFlag = SysAction_EC_Restart;
1435   3                              else if( nData == 0xF7 )        // Fixed system action to 3 - Restart system
1436   3                                      cSysActionFlag = SysAction_EC_Restart;
1437   3                              else if( nData == 0xF8 )        // Fixed system action to 2 - Shutdown system
1438   3                                      cSysActionFlag = SysAction_EC_Shutdown;
1439   3                              else if( nData == 0xF9 )        // Fixed system action to 1 - Nothing
1440   3                                      cSysActionFlag = SysAction_Nothing;
1441   3                      }
1442   2      
1443   2      //ANGELAG012: remove start
1444   2          /*  if (cSysActionFlag==SysAction_EC_Shutdown || cSysActionFlag==SysAction_EC_Restart)
1445   2              {
1446   2                      PWSeqStep = 1;
1447   2                      PowSeqDelay = 200;
1448   2                  RamDebug(0x0B);
1449   2                      SysPowState=SYSTEM_S0_S5;
1450   2              } */
1451   2              //ANGELAG012: remove end
1452   2                      break;
1453   2              }
1454   1      }
1455          
1456          void Cmd_5C(BYTE nPort)
1457          {
1458   1              //Get brightness level
1459   1          Data2PortDirect(nPort, nBrightValue);  
1460   1      }
1461          
1462          void Cmd_5D(BYTE sCount)
1463          {
1464   1              if ( sCount != nBrightValue )   // unequal value.
1465   1              {
1466   2                      //if ( (SYS_STATUS & 0x07) == 0x04 )    // Win8
1467   2                      if (( (SYS_STATUS & 0x07) >= 0x04 )&&( (SYS_STATUS & 0x07) <= 0x06))    // Win8, win8.1 or win10 ANGELAS010
             -: add win10 mode
1468   2                      {
1469   3                              if( sCount >= WIN8_BRI_MAX_STEP )
1470   3                              { 
1471   4                                      nBrightValue = WIN8_BRI_MAX_STEP - 1;
1472   4                  }   // Set max. level.
1473   3                              else
C51 COMPILER V8.12   OEM_6064                                                              07/28/2018 12:03:51 PAGE 25  

1474   3                              { 
1475   4                                  nBrightValue = sCount; 
1476   4                  }
1477   3                      }
1478   2                      else
1479   2                      {
1480   3                              if( sCount >= BRIGHT_MAX_STEP )
1481   3                              { 
1482   4                                  nBrightValue = BRIGHT_MAX_STEP - 1; 
1483   4                  }           // Set max. level.
1484   3                              else
1485   3                              { 
1486   4                                  nBrightValue = sCount; 
1487   4                  }
1488   3                      }
1489   2              }
1490   1      }
1491          void Cmd_71(BYTE nData) //LMLKBL0001:modify cmd 0x71 have one data.
1492          {
1493   1              //LMLKBL0001:S- remove old cmd 0x71 define.
1494   1              /*switch( nData )
1495   1              {
1496   1              case 0x01: //board id
1497   1                      uMBID=nData1;
1498   1              LoadKBMatrixToRAM();//Add load keyboard matrix when know board ID
1499   1                      break;
1500   1          case 0x02: //01 UMA;02 Discrete
1501   1                      uMBGPU=nData1;
1502   1              //Add read adapter ID after know UMA or dis.
1503   1              if (IS_MASK_SET(SYS_STATUS,AC_ADP))  
1504   1              {
1505   1                              //ADAPTERIDON_LOW();  //MEILING001:remove.
1506   1                              AdapterIDOn_Flag = 0x01; //MEILING001:add.
1507   1                              ADPIDON10MS_NUM=0x0a;  
1508   1              } 
1509   1              //Add read adapter ID after know UMA or dis.
1510   1                      break;
1511   1          case 0x03: //Add distinguish between AMD and NV for thermal fan table.01=amd,00=nv
1512   1                      uPJID=nData1;
1513   1                      break;
1514   1              default:
1515   1                      break;  
1516   1              }*/
1517   1              //LMLKBL0001:E- remove old cmd 0x71 define.
1518   1              
1519   1              //LMLKBL0001:S+ add new cmd 0x71 define(data is board ID 0x14 or 0x15).
1520   1              uMBID=nData;
1521   1              LoadKBMatrixToRAM();//Add load keyboard matrix when know board ID
1522   1              //LMLKBL0001:E+.
1523   1      
1524   1      }
1525          //Add flag for test tool to keep the battery RSOC at 60%
1526          void Cmd_72(BYTE nData)
1527          {
1528   1              switch( nData )
1529   1              {
1530   2              case 0x80:
1531   2                      testtoolflag=1;
1532   2                      break;
1533   2              case 0x81:
1534   2                      testtoolflag=0;
1535   2                      break;          
C51 COMPILER V8.12   OEM_6064                                                              07/28/2018 12:03:51 PAGE 26  

1536   2              }
1537   1      
1538   1      }
1539          //Add flag for test tool to keep the battery RSOC at 60%
1540          //ANGELAG012:S+.
1541          void Cmd_75(void) 
1542          {
1543   1              PCH_ColdBoot_TimeOut = 20;
1544   1      }
1545          //ANGELAG012:E+.
1546          
1547          //ANGELAS033: add start
1548          void Cmd_7A(BYTE nPort,BYTE nData)
1549          {
1550   1          RamDebug(0xAA);
1551   1              RamDebug(nData);
1552   1          switch(nData)
1553   1          {
1554   2              case 0x10:
1555   2                      SET_MASK(pProject0,b1uFUdayClr);
1556   2                  break;
1557   2              case 0x11:
1558   2                  if(IS_MASK_SET(pProject0,b3uBatteryTimeNoOK))
1559   2                  {
1560   3                              Data2Port(nPort, 0x01);
1561   3                              RamDebug(0x01);
1562   3                  }
1563   2                      else
1564   2                      {
1565   3                              Data2Port(nPort, 0x00);
1566   3                              RamDebug(0x10);
1567   3                      }
1568   2                  break;
1569   2              case 0x12:
1570   2                  SET_MASK(pProject0,b5FUBIOSWriteReady);
1571   2                  break;                 
1572   2              default:
1573   2              break;
1574   2              }
1575   1      }
1576          void Cmd_7B(BYTE nPort,BYTE nDataH,BYTE nDataL)
1577          {
1578   1          WORD FUDateTemp;
1579   1              FUDateTemp=0x0000; //ANGELAS034: add initial value is 0
1580   1              RamDebug(0xAB);
1581   1              RamDebug(nDataH);
1582   1              RamDebug(nDataL);
1583   1          switch(nDataH)
1584   1          {
1585   2              case 0x20:
1586   2                      //FUDateTemp = FUDateTemp | (nDataL << 0x09);  //bit9~15: 0~127, year-1980 //ANGELAS034: remove
1587   2                      FUDateTemp = FUDateTemp | ((WORD)nDataL << 0x09);  //bit9~15: 0~127, year-1980 //ANGELAS034: add nDataL 
             -force switch to word type
1588   2                      batteryFirstUsedDateH = (batteryFirstUsedDateH | (BYTE)(FUDateTemp >> 0x08));  
1589   2                      batteryFirstUsedDateL = (batteryFirstUsedDateL | (BYTE)(FUDateTemp));
1590   2                  break;
1591   2              case 0x21:
1592   2                  //FUDateTemp = FUDateTemp | (nDataL << 0x05);  //bit5~8: 0~12, month //ANGELAS034:remove
1593   2                  FUDateTemp = FUDateTemp | ((WORD)nDataL << 0x05);  //bit5~8: 0~12, month //ANGELAS034: add
1594   2                  batteryFirstUsedDateH = (batteryFirstUsedDateH | (BYTE)(FUDateTemp >> 0x08));  
1595   2                      batteryFirstUsedDateL = (batteryFirstUsedDateL | (BYTE)(FUDateTemp));
1596   2                  break;
C51 COMPILER V8.12   OEM_6064                                                              07/28/2018 12:03:51 PAGE 27  

1597   2              case 0x22:
1598   2                  //FUDateTemp = FUDateTemp | nDataL;  //bit0~4: 1~31, month //ANGELAS034:remove
1599   2                  FUDateTemp = FUDateTemp | (WORD)nDataL;  //bit0~4: 0~31, date //ANGELAS034: add
1600   2                  batteryFirstUsedDateH = (batteryFirstUsedDateH | (BYTE)(FUDateTemp >> 0x08));  
1601   2                      batteryFirstUsedDateL = (batteryFirstUsedDateL | (BYTE)(FUDateTemp));
1602   2                  break;   
1603   2              default:
1604   2              break;
1605   2              }
1606   1      
1607   1              RamDebug(batteryFirstUsedDateH);
1608   1              RamDebug(batteryFirstUsedDateL);
1609   1      }
1610          //ANGELAS033:add end
1611          
1612          //MEILING031:add start.
1613          void Cmd_7E(BYTE nPort,XBYTE nDataH,XBYTE nDataL)
1614          {
1615   1         XBYTE temp;
1616   1         temp =  *((XBYTE *)((nDataH<<8)|nDataL));
1617   1         Data2PortDirect(nPort,temp);
1618   1      }
1619          //MEILING031:add end.
1620          
1621          void Cmd_97(BYTE nData)
1622          {
1623   1              uReserve07.fbit.nTPDriverIn = 1;
1624   1              RamDebug(0x97);
1625   1              RamDebug(nData);
1626   1              switch( nData )
1627   1              {
1628   2              case 0x00:
1629   2                      break;
1630   2              case 0x01:
1631   2                      CLR_MASK(pDevStus, pENABLE_TP);
1632   2                      if ( IS_MASK_SET(StatusKeeper, b5TP_Event) )
1633   2                      {
1634   3                              uVPCeventSource = TouchPad;
1635   3                              uVPCeventSource2 = 0;
1636   3                              ECSMI_SCIEvent(SDV_VPC_notify);
1637   3                              CLR_MASK(StatusKeeper, b5TP_Event);
1638   3                      }
1639   2                      break;
1640   2              case 0x02:
1641   2                      SET_MASK(pDevStus, pENABLE_TP);
1642   2                      if ( IS_MASK_SET(StatusKeeper, b5TP_Event) )
1643   2                      {
1644   3                              uVPCeventSource = TouchPad;
1645   3                              uVPCeventSource2 = 0;
1646   3                              ECSMI_SCIEvent(SDV_VPC_notify);
1647   3                              CLR_MASK(StatusKeeper, b5TP_Event);
1648   3                      }
1649   2                      break;
1650   2              }
1651   1      }
1652          
1653          void Cmd_B0(BYTE nPort,BYTE nData)
1654          {
1655   1              Data2PortDirect(nPort,( *((XBYTE *)(NameSpace|nData)) )); 
1656   1      }
1657          //start for save P80 code to setup. 
1658          void Cmd_B1(BYTE nPort,BYTE nData)
C51 COMPILER V8.12   OEM_6064                                                              07/28/2018 12:03:51 PAGE 28  

1659          {
1660   1         switch(nData)
1661   1         {
1662   2         case 0xB1:
1663   2             Data2PortDirect(nPort, P80CMOSSts);  
1664   2                 break;
1665   2         default:
1666   2                 break;
1667   2         }
1668   1      
1669   1      }
1670          void Cmd_B2(BYTE nPort,BYTE nData)
1671          {
1672   1        switch(nData)
1673   1        {
1674   2        case 0xB2:    
1675   2            Data2Port(nPort, P80Index);  
1676   2                MultiB2Port(nPort, P80CMOS[0]);
1677   2                MultiB2Port(nPort, P80CMOS[1]);
1678   2                MultiB2Port(nPort, P80CMOS[2]);
1679   2                MultiB2Port(nPort, P80CMOS[3]);
1680   2                MultiB2Port(nPort, P80CMOS[4]);
1681   2                MultiB2Port(nPort, P80CMOS[5]);
1682   2                Data2PortDirect(nPort, P80CMOS[6]);   //MultiB2Port to Data2PortDirect
1683   2                //MultiB2Port(nPort, P80Index);  
1684   2                CLR_MASK(P80CMOSSts,P80CMOSDis);
1685   2                CLR_MASK(ACPI_HOTKEY, b6Cmd_NoShut);//When battery mode press FN+D,do not cut power only for debug.
1686   2                break;
1687   2        default:
1688   2                break;
1689   2        }
1690   1              
1691   1      }
1692          //end for save P80 code to setup. 
1693          void Cmd_B3(BYTE nPort,BYTE nDataH,BYTE nDataL)
1694          {
1695   1              cSPIEEPROM.byte= 0x00;          //msmart test
1696   1      
1697   1              nDataH = nDataH &0x0F;
1698   1              ITempW01 = (WORD)((nDataH<<8)+nDataL);
1699   1              RamDebug(0xB3);
1700   1              RamDebug(*((XBYTE *) ITempW01));
1701   1              Data2PortDirect(nPort,( *((XBYTE *) ITempW01))); 
1702   1      }
1703          
1704          void Update_EEPROM(void)
1705          {
1706   1      
1707   1              CacheDma(1,FSCEHighLevel);
1708   1      
1709   1              DisableAllInterrupt();
1710   1              if (eEEPROMBank <4)
1711   1              {
1712   2                      //CacheDma(1,FSCEHighLevel);
1713   2                      Erase_Eflash_1K(EEPROMA2,EEPROMA1_M1,0x00);
1714   2              }
1715   1              if (eEEPROMBank>3 && eEEPROMBank <8)
1716   1              {
1717   2                      //CacheDma(1,FSCEHighLevel);
1718   2                      Erase_Eflash_1K(EEPROMA2,EEPROMA1_M2,0x00);
1719   2              }
1720   1              //CacheDma(1,FSCEHighLevel);
C51 COMPILER V8.12   OEM_6064                                                              07/28/2018 12:03:51 PAGE 29  

1721   1              Write_Eflash_1Byte(EEPROMA2,(eEEPROMBank | EEPROMA1_M1),eEEPROMAddrsss,eEEPROMData);
1722   1      
1723   1              if (eEEPROMBank <4)
1724   1              {
1725   2                      for(eFlashA1=0x00;eFlashA1<4;eFlashA1++)                                        // 256 bytes *4
1726   2                      {
1727   3                              e256ByteCnt=0;
1728   3                              do
1729   3                              {
1730   4                                      eEEPROMData = Read_Eflash_Byte(EEPROMA2,(eFlashA1|EEPROMA1_M1),e256ByteCnt);
1731   4                                      if (eEEPROMData == 0xFF)
1732   4                                      {
1733   5                                              eEEPROMData = Read_Eflash_Byte(EEPROMA2,(eFlashA1|EEPROMA1_D1),e256ByteCnt);
1734   5                                              Write_Eflash_1Byte(EEPROMA2,(eFlashA1|EEPROMA1_M1),e256ByteCnt,eEEPROMData);
1735   5                                      }
1736   4                                      e256ByteCnt++;
1737   4                              }while(e256ByteCnt!=0x00);                                                              // To check 256 bytes
1738   3                      }
1739   2      
1740   2                      //CacheDma(1,FSCEHighLevel);
1741   2                      Erase_Eflash_1K(EEPROMA2,EEPROMA1_D1,0x00);
1742   2                      //CacheDma(1,FSCEHighLevel);
1743   2                      for(eFlashA1=0x00;eFlashA1<4;eFlashA1++)                                        // 256 bytes *4
1744   2                      {
1745   3                              e256ByteCnt=0;
1746   3                              do
1747   3                              {
1748   4                                      eEEPROMData = Read_Eflash_Byte(EEPROMA2,(eFlashA1|EEPROMA1_M1),e256ByteCnt);
1749   4                                      Write_Eflash_1Byte(EEPROMA2,(eFlashA1|EEPROMA1_D1),e256ByteCnt,eEEPROMData);
1750   4                                      e256ByteCnt++;
1751   4                              }while(e256ByteCnt!=0x00);
1752   3                      }
1753   2              }
1754   1              if (eEEPROMBank>3 && eEEPROMBank <8)
1755   1              {
1756   2                      for(eFlashA1=0x00;eFlashA1<4;eFlashA1++)                                        // 256 bytes *4
1757   2                      {
1758   3                              e256ByteCnt=0;
1759   3                              do
1760   3                              {
1761   4                                      eEEPROMData = Read_Eflash_Byte(EEPROMA2,(eFlashA1|EEPROMA1_D2),e256ByteCnt);
1762   4                                      Write_Eflash_1Byte(EEPROMA2,(eFlashA1|EEPROMA1_M2),e256ByteCnt,eEEPROMData);
1763   4                                      e256ByteCnt++;
1764   4                              }while(e256ByteCnt!=0x00);                                                              // To check 256 bytes
1765   3                      }
1766   2      
1767   2                      //CacheDma(1,FSCEHighLevel);
1768   2                      Erase_Eflash_1K(EEPROMA2,EEPROMA1_D2,0x00);
1769   2                      //CacheDma(1,FSCEHighLevel);
1770   2                      for(eFlashA1=0x00;eFlashA1<4;eFlashA1++)                                        // 256 bytes *4
1771   2                      {
1772   3                              e256ByteCnt=0;
1773   3                              do
1774   3                              {
1775   4                                      eEEPROMData = Read_Eflash_Byte(EEPROMA2,(eFlashA1|EEPROMA1_M2),e256ByteCnt);
1776   4                                      Write_Eflash_1Byte(EEPROMA2,(eFlashA1|EEPROMA1_D2),e256ByteCnt,eEEPROMData);
1777   4                                      e256ByteCnt++;
1778   4                              }while(e256ByteCnt!=0x00);
1779   3                      }
1780   2              }
1781   1              EnableAllInterrupt();
1782   1      }
C51 COMPILER V8.12   OEM_6064                                                              07/28/2018 12:03:51 PAGE 30  

1783          
1784          
1785          void Update_EEPROMMark(void)
1786          {
1787   1              CacheDma(1,FSCEHighLevel);
1788   1              DisableAllInterrupt();
1789   1      
1790   1              if (Read_Eflash_Byte(EEPROMA2,(0x03 | EEPROMA1_M1D),0xFF) == 0xFF)
1791   1              {
1792   2                      //CacheDma(1,FSCEHighLevel);
1793   2                      Erase_Eflash_1K(EEPROMA2,EEPROMA1_M1,0x00);
1794   2                      Erase_Eflash_1K(EEPROMA2,EEPROMA1_M1D,0x00);
1795   2      
1796   2                      Erase_Eflash_1K(EEPROMA2,EEPROMA1_M2,0x00);
1797   2                      Erase_Eflash_1K(EEPROMA2,EEPROMA1_M2D,0x00);
1798   2      
1799   2                      //CacheDma(1,FSCEHighLevel);
1800   2                      Write_Eflash_1Byte(EEPROMA2,(0x03 | EEPROMA1_M1D),0xFF,0xAA);   //mark 0x55 0xAA
1801   2              }
1802   1      
1803   1              //CacheDma(1,FSCEHighLevel);
1804   1              Write_Eflash_1Byte(EEPROMA2,(eEEPROMBank | EEPROMA1_M1D),eEEPROMAddrsss,eEEPROMData);
1805   1              Write_Eflash_1Byte(EEPROMA2,(eEEPROMBank | EEPROMA1_M1),eEEPROMAddrsss,0x00);
1806   1              //Mos: Bios request that we need fill EBH = 0xAA to response EEPROM write finished, holy shit....
1807   1              if ((eEEPROMBank == 0x00) && (eEEPROMAddrsss != 0xEB))
1808   1              {
1809   2                      Write_Eflash_1Byte(EEPROMA2,(eEEPROMBank | EEPROMA1_M1D),0xEB,0xAA);
1810   2                      Write_Eflash_1Byte(EEPROMA2,(eEEPROMBank | EEPROMA1_M1),0xEB,0x00);
1811   2              }
1812   1      
1813   1              eUpdateEEPROMCnt = 1;                                   // 2012.04.11 update by AC.
1814   1              cSPIEEPROM.fbit.cSPI_ROMCopyStart=1;
1815   1              Update_EEPROMB07();                                             // 2012.04.11 update by AC.
1816   1              EnableAllInterrupt();
1817   1      }
1818          
1819          void Erase_EEPROMAll(void)
1820          {
1821   1              CacheDma(1,FSCEHighLevel);
1822   1      
1823   1              DisableAllInterrupt();
1824   1      
1825   1              //CacheDma(1,FSCEHighLevel);
1826   1              Erase_Eflash_1K(EEPROMA2,EEPROMA1_M1,0x00);
1827   1              Erase_Eflash_1K(EEPROMA2,EEPROMA1_M1D,0x00);
1828   1      
1829   1              Erase_Eflash_1K(EEPROMA2,EEPROMA1_M2,0x00);
1830   1              Erase_Eflash_1K(EEPROMA2,EEPROMA1_M2D,0x00);
1831   1      
1832   1              Erase_Eflash_1K(EEPROMA2,EEPROMA1_B03,0x00);
1833   1              Erase_Eflash_1K(EEPROMA2,EEPROMA1_B47,0x00);
1834   1              EnableAllInterrupt();
1835   1      }
1836          
1837          void Update_EEPROMB07(void)
1838          {
1839   1              if (!SystemIsS0 || ((WinFlashMark == 0xFC)&&(WinFlashMark1==0x55))) 
1840   1                      return; //G21: Add WinFlashMark1 check
1841   1      
1842   1              if (eUpdateEEPROMCnt ==0 ) 
1843   1              return;
1844   1              else
C51 COMPILER V8.12   OEM_6064                                                              07/28/2018 12:03:51 PAGE 31  

1845   1                      eUpdateEEPROMCnt--;
1846   1      
1847   1              if (eUpdateEEPROMCnt !=0 ) 
1848   1              return;
1849   1      
1850   1          CacheDma(1,FSCEHighLevel);
1851   1      
1852   1              DisableAllInterrupt();
1853   1      #if !EN_PwrSeqTest
1854   1              #if WDT_Support
1855   1              ResetInternalWDT();
1856   1              #endif
1857   1      #endif
1858   1      
1859   1              //CacheDma(1,FSCEHighLevel);
1860   1              for(eFlashA1=0x00;eFlashA1<4;eFlashA1++)        // 256 bytes *4
1861   1              {
1862   2                      e256ByteCnt=0;
1863   2                      do
1864   2                      {
1865   3                              eEEPROMData = Read_Eflash_Byte(EEPROMA2,(eFlashA1|EEPROMA1_M1),e256ByteCnt);
1866   3                              if (eEEPROMData != 0x00)
1867   3                              {
1868   4                                      eEEPROMData = Read_Eflash_Byte(EEPROMA2,(eFlashA1|EEPROMA1_B03),e256ByteCnt);
1869   4                                      Write_Eflash_1Byte(EEPROMA2,(eFlashA1|EEPROMA1_M1D),e256ByteCnt,eEEPROMData);
1870   4                              }
1871   3      
1872   3                              eEEPROMData = Read_Eflash_Byte(EEPROMA2,(eFlashA1|EEPROMA1_M2),e256ByteCnt);
1873   3                              if (eEEPROMData != 0x00)
1874   3                              {
1875   4                                      eEEPROMData = Read_Eflash_Byte(EEPROMA2,(eFlashA1|EEPROMA1_B47),e256ByteCnt);
1876   4                                      Write_Eflash_1Byte(EEPROMA2,(eFlashA1|EEPROMA1_M2D),e256ByteCnt,eEEPROMData);
1877   4                              }
1878   3                              e256ByteCnt++;
1879   3                      }while(e256ByteCnt!=0x00);                                                              // To check 256 bytes
1880   2              }
1881   1      
1882   1              //CacheDma(1,FSCEHighLevel);
1883   1              Erase_Eflash_1K(EEPROMA2,EEPROMA1_B03,0x00);
1884   1              Erase_Eflash_1K(EEPROMA2,EEPROMA1_B47,0x00);
1885   1      
1886   1              //CacheDma(1,FSCEHighLevel);
1887   1              for(eFlashA1=0x00;eFlashA1<4;eFlashA1++)                                        // 256 bytes *4
1888   1              {
1889   2                      e256ByteCnt=0;
1890   2                      do
1891   2                      {
1892   3                              eEEPROMData = Read_Eflash_Byte(EEPROMA2,(eFlashA1|EEPROMA1_M1D),e256ByteCnt);
1893   3                              Write_Eflash_1Byte(EEPROMA2,(eFlashA1|EEPROMA1_B03),e256ByteCnt,eEEPROMData);
1894   3      
1895   3                              eEEPROMData = Read_Eflash_Byte(EEPROMA2,(eFlashA1|EEPROMA1_M2D),e256ByteCnt);
1896   3                              Write_Eflash_1Byte(EEPROMA2,(eFlashA1|EEPROMA1_B47),e256ByteCnt,eEEPROMData);
1897   3      
1898   3                              e256ByteCnt++;
1899   3      
1900   3                      }while(e256ByteCnt!=0x00);                                                              // To check 256 bytes
1901   2              }
1902   1      
1903   1              //CacheDma(1,FSCEHighLevel);
1904   1              Erase_Eflash_1K(EEPROMA2,EEPROMA1_M1D,0x00);
1905   1              //CacheDma(3,Write_Eflash_1Byte);
1906   1              //Write_Eflash_1Byte(EEPROMA2,(0x03 | EEPROMA1_M1D),0xFF,0xAA); //mark 0x55 0xAA
C51 COMPILER V8.12   OEM_6064                                                              07/28/2018 12:03:51 PAGE 32  

1907   1              cSPIEEPROM.fbit.cSPI_ROMCopyStart=0;
1908   1      
1909   1              EnableAllInterrupt();
1910   1      }
1911          
1912          
1913          void Chk_pDevStus(void)
1914          {
1915   1          if(IS_MASK_CLEAR(LENOVOPMFW_Temp,EEPROM_Token))
1916   1          {
1917   2              if (SystemIsS0 && (eUpdateEEPROMCnt==0) && (WinFlashMark != 0xFC))
1918   2              {
1919   3                      eEEPROMData=Read_Eflash_Byte(EEPROMA2,(EEPROMA1_B03|0x07),0xE1);
1920   3                      //pDevStus |= 0x06;     // Force turn on WLAN and BT.
1921   3                      if (eEEPROMData !=      pDevStus)
1922   3                      {
1923   4                              RamDebug(0xA1); //ANGELAS034: modify 0xAA to 0xA1 to avoid repeat
1924   4                              RamDebug(pDevStus);
1925   4      
1926   4                              eUpdatepDevStusCnt++;
1927   4                              eEEPROMBank= 0x07;
1928   4                              eEEPROMAddrsss = 0xE1;
1929   4                              eEEPROMData = pDevStus;
1930   4      
1931   4                          Update_EEPROMMark();
1932   4                              //eUpdateEEPROMCnt = 25;
1933   4                              //cSPIEEPROM.fbit.cSPI_ROMCopyStart=1;
1934   4                      }
1935   3              }
1936   2         }
1937   1      }
1938          
1939          void Chk_KB_Backlight(void)
1940          {
1941   1          if(IS_MASK_CLEAR(LENOVOPMFW_Temp,EEPROM_Token))
1942   1          {
1943   2              if (SystemIsS0 && (eUpdateEEPROMCnt==0) && (WinFlashMark != 0xFC) && (IS_MASK_CLEAR(LED_KB_PWM_Count,
             - BIT7)) )
1944   2              {
1945   3                              if (UpdateLEDBL_delay !=0)
1946   3                              {
1947   4                                      UpdateLEDBL_delay --;
1948   4                                      if (UpdateLEDBL_delay ==0)
1949   4                                      {
1950   5                                              eEEPROMData=Read_Eflash_Byte(EEPROMA2,(EEPROMA1_B03|0x07),0xE2);
1951   5                                      if (eEEPROMData !=      LED_KB_PWM_Step)
1952   5                                      {
1953   6                                              RamDebug(0xBB);
1954   6                                              RamDebug(LED_KB_PWM_Step);
1955   6      
1956   6                                              eUpdatepDevStusCnt++;
1957   6                                              eEEPROMBank= 0x07;
1958   6                                              eEEPROMAddrsss = 0xE2;
1959   6                                              eEEPROMData = LED_KB_PWM_Step;
1960   6                                          Update_EEPROMMark();
1961   6                                              //eUpdateEEPROMCnt = 25;
1962   6                                              //cSPIEEPROM.fbit.cSPI_ROMCopyStart=1;
1963   6                                      }
1964   5                                      }
1965   4                              }
1966   3              }
1967   2          }
C51 COMPILER V8.12   OEM_6064                                                              07/28/2018 12:03:51 PAGE 33  

1968   1      }
1969          
1970          void Chk_UEFIStatus(void)
1971          {
1972   1          if(IS_MASK_CLEAR(LENOVOPMFW_Temp,EEPROM_Token))
1973   1          {
1974   2              if (SystemIsS0 && (eUpdateEEPROMCnt==0) && (WinFlashMark != 0xFC))
1975   2              {
1976   3                      eEEPROMData=Read_Eflash_Byte(EEPROMA2,(EEPROMA1_B03|0x00),0xF1);
1977   3                      if ( (eEEPROMData &= 0xC0) != (CURRENT_STATUS &= 0xC0) )
1978   3                      {
1979   4                              //eUpdatepDevStusCnt++;
1980   4                              eEEPROMBank= 0x00;
1981   4                              eEEPROMAddrsss = 0xF1;
1982   4                              eEEPROMData = (CURRENT_STATUS &= 0xC0);
1983   4                          Update_EEPROMMark();
1984   4                              //eUpdateEEPROMCnt = 25;
1985   4                              //cSPIEEPROM.fbit.cSPI_ROMCopyStart=1;
1986   4                      }
1987   3              }
1988   2          }
1989   1      }
1990          void Clr_UEFIStatus(void)
1991          {
1992   1          if(IS_MASK_CLEAR(LENOVOPMFW_Temp,EEPROM_Token))
1993   1          {
1994   2              if ( (eUpdateEEPROMCnt==0) && (WinFlashMark != 0xFC) )
1995   2              {
1996   3                      eEEPROMData=Read_Eflash_Byte(EEPROMA2,(EEPROMA1_B03|0x00),0xF1);
1997   3                      CURRENT_STATUS &= 0x3F;
1998   3                      CURRENT_STATUS |= ( eEEPROMData & 0xC0);
1999   3                      if ( eEEPROMData != 0xC0 )
2000   3                      {
2001   4                              //eUpdatepDevStusCnt++;
2002   4                              eEEPROMBank= 0x00;
2003   4                              eEEPROMAddrsss = 0xF1;
2004   4                              eEEPROMData = 0xC0;
2005   4                          Update_EEPROMMark();
2006   4      
2007   4                              //eUpdateEEPROMCnt = 25;
2008   4                              //cSPIEEPROM.fbit.cSPI_ROMCopyStart=1;
2009   4                      }
2010   3              }
2011   2      
2012   2          }
2013   1      }
2014          
2015          void Update_16ByteEEPROM(void)
2016          {
2017   1              BYTE i,j;
2018   1      
2019   1              CacheDma(1,FSCEHighLevel);
2020   1          DisableAllInterrupt();
2021   1      
2022   1              if (Read_Eflash_Byte(EEPROMA2,EEPROMM1_16Byte_end ,0xF0) != 0xFF)
2023   1              {
2024   2                      //CacheDma(1,FSCEHighLevel);
2025   2                      Erase_Eflash_1K(EEPROMA2,EEPROMA1_16Byte,0x00);
2026   2              }
2027   1      
2028   1              for (i=0; i<4 ;i++) // 01B800 ~ 01BC00
2029   1              {
C51 COMPILER V8.12   OEM_6064                                                              07/28/2018 12:03:51 PAGE 34  

2030   2                      for (j=0; j< 0x10 ;j++)
2031   2                      {
2032   3                              eEEPROMData = Read_Eflash_Byte(EEPROMA2,(EEPROMA1_16Byte + i),(j*16));
2033   3                              if(eEEPROMData == 0xFF)
2034   3                                      break;
2035   3                      }
2036   2                      if (eEEPROMData == 0xFF)
2037   2                              break;
2038   2              }
2039   1      
2040   1              //CacheDma(1,FSCEHighLevel);
2041   1              Write_Eflash_1Byte(EEPROMA2,(EEPROMA1_16Byte+i),(j*16),j+80);
2042   1              //Write_Eflash_1Byte(EEPROMA2,(EEPROMA1_16Byte+i),(j*16)+1,BRAM3F);
2043   1              Write_Eflash_1Byte(EEPROMA2,(EEPROMA1_16Byte+i),(j*16)+4,pLastSID);
2044   1              //Write_Eflash_1Byte(EEPROMA2,(EEPROMA1_16Byte+i),(j*16)+6,nCpuTemp);
2045   1              Write_Eflash_1Byte(EEPROMA2,(EEPROMA1_16Byte+i),(j*16)+6,TEMP_Buff_3);//Record CPU average temperature wh
             -en CPU over temperture shuntdown .
2046   1          
2047   1              Write_Eflash_1Byte(EEPROMA2,(EEPROMA1_16Byte+i),(j*16)+8,VGA_TBuff3);//G43:Add record GPU temperature whe
             -n shutdown.
2048   1      
2049   1      //ANGELAG007: add start
2050   1      if(pLastSID == PMIC_Shutdown_ID)
2051   1      {
2052   2              Write_Eflash_1Byte(EEPROMA2,(EEPROMA1_16Byte+i),(j*16)+10,PowerOVP_REG); //ANGELA0042: add
2053   2              Write_Eflash_1Byte(EEPROMA2,(EEPROMA1_16Byte+i),(j*16)+11,PowerUVP_REG); //ANGELA0042: add
2054   2              Write_Eflash_1Byte(EEPROMA2,(EEPROMA1_16Byte+i),(j*16)+12,PowerOCP_REG);        //ANGELA0042: add
2055   2      //ANGELAG007: add end
2056   2              Write_Eflash_1Byte(EEPROMA2,(EEPROMA1_16Byte+i),(j*16)+13,PowerOTP_REG); //MEILING002:add.
2057   2              //Write_Eflash_1Byte(EEPROMA2,EEPROMM1_16Byte_end,0xF0,0xAA);
2058   2      } //ANGELAG007: add
2059   1          EnableAllInterrupt();
2060   1      }
2061          
2062          
2063          
C51 COMPILER V8.12   OEM_6064                                                              07/28/2018 12:03:51 PAGE 35  

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION Com01F2 (BEGIN)
0000         L?0499:
0000 900000      E     MOV     DPTR,#eEEPROMData
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
0005 900000      E     MOV     DPTR,#eFlashA1
0008 E0                MOVX    A,@DPTR
0009 44A0              ORL     A,#0A0H
000B         L?0500:
000B 900000      E     MOV     DPTR,#e256ByteCnt
000E         L?0501:
000E FD                MOV     R5,A
000F         L?0502:
000F E0                MOVX    A,@DPTR
0010 FB                MOV     R3,A
0011 900000      E     MOV     DPTR,#eEEPROMData
0014         L?0503:
0014 E0                MOVX    A,@DPTR
0015 900000      E     MOV     DPTR,#?_Write_Eflash_1Byte?BYTE+03H
0018 F0                MOVX    @DPTR,A
0019 7F01              MOV     R7,#01H
001B 22                RET     
001C         L?0505:
001C         L?0506:
001C 900000      E     MOV     DPTR,#eFlashA1
001F E0                MOVX    A,@DPTR
0020 44A8              ORL     A,#0A8H
0022         L?0507:
0022 FD                MOV     R5,A
0023 900000      E     MOV     DPTR,#e256ByteCnt
0026 E0                MOVX    A,@DPTR
0027 FB                MOV     R3,A
0028 7F01              MOV     R7,#01H
002A 22                RET     
002B         L?0510:
002B         L?0511:
002B 900000      E     MOV     DPTR,#eFlashA1
002E E0                MOVX    A,@DPTR
002F 04                INC     A
0030 F0                MOVX    @DPTR,A
0031 E0                MOVX    A,@DPTR
0032 C3                CLR     C
0033 9404              SUBB    A,#04H
0035 22                RET     
0036         L?0512:
0036         L?0513:
0036 900000      E     MOV     DPTR,#eEEPROMData
0039 EF                MOV     A,R7
003A F0                MOVX    @DPTR,A
003B 900000      E     MOV     DPTR,#eFlashA1
003E E0                MOVX    A,@DPTR
003F 22                RET     
0040         L?0515:
0040         L?0516:
0040 900000      R     MOV     DPTR,#i
0043         L?0517:
0043 E0                MOVX    A,@DPTR
0044 24B8              ADD     A,#0B8H
0046 FD                MOV     R5,A
C51 COMPILER V8.12   OEM_6064                                                              07/28/2018 12:03:51 PAGE 36  

0047 A3                INC     DPTR
0048 E0                MOVX    A,@DPTR
0049 C4                SWAP    A
004A 54F0              ANL     A,#0F0H
004C 22                RET     
004D         L?0519:
004D         L?0520:
004D 900000      E     MOV     DPTR,#e256ByteCnt
0050 E0                MOVX    A,@DPTR
0051 04                INC     A
0052 F0                MOVX    @DPTR,A
0053 E0                MOVX    A,@DPTR
0054 22                RET     
0055         L?0523:
0055         L?0524:
0055 900000      E     MOV     DPTR,#AdapterIDOn_Flag
0058 7401              MOV     A,#01H
005A F0                MOVX    @DPTR,A
005B 900000      E     MOV     DPTR,#ADPIDON10MS_NUM
005E 740A              MOV     A,#0AH
0060 F0                MOVX    @DPTR,A
0061 22                RET     
0062         L?0525:
0062 F0                MOVX    @DPTR,A
0063 900000      R     MOV     DPTR,#nPort
0066 E0                MOVX    A,@DPTR
0067 FF                MOV     R7,A
0068 120000      R     LCALL   _GetData2
006B 900000      E     MOV     DPTR,#CmdData2
006E E0                MOVX    A,@DPTR
006F 900000      E     MOV     DPTR,#cTargetGauge
0072 F0                MOVX    @DPTR,A
0073 E0                MOVX    A,@DPTR
0074 D3                SETB    C
0075 9464              SUBB    A,#064H
0077 22                RET     
0078         L?0526:
0078 900000      E     MOV     DPTR,#eUpdatepDevStusCnt
007B E0                MOVX    A,@DPTR
007C 04                INC     A
007D F0                MOVX    @DPTR,A
007E 7407              MOV     A,#07H
0080         L?0527:
0080 900000      E     MOV     DPTR,#eEEPROMBank
0083 F0                MOVX    @DPTR,A
0084 900000      E     MOV     DPTR,#eEEPROMAddrsss
0087 22                RET     
0088         L?0529:
0088 900000      E     MOV     DPTR,#pProject0
008B E0                MOVX    A,@DPTR
008C 54EF              ANL     A,#0EFH
008E F0                MOVX    @DPTR,A
008F 900000      E     MOV     DPTR,#uMBGPU
0092 7402              MOV     A,#02H
0094 F0                MOVX    @DPTR,A
0095 900000      E     MOV     DPTR,#uPJID
0098 22                RET     
0099         L?0530:
0099 900000      E     MOV     DPTR,#uReserve07
009C E0                MOVX    A,@DPTR
009D 54BF              ANL     A,#0BFH
009F F0                MOVX    @DPTR,A
C51 COMPILER V8.12   OEM_6064                                                              07/28/2018 12:03:51 PAGE 37  

00A0 E0                MOVX    A,@DPTR
00A1 547F              ANL     A,#07FH
00A3 F0                MOVX    @DPTR,A
00A4 900000      E     MOV     DPTR,#Thro_Status2
00A7 E0                MOVX    A,@DPTR
00A8 22                RET     
00A9         L?0531:
00A9 900000      E     MOV     DPTR,#cBattFlag0
00AC E0                MOVX    A,@DPTR
00AD 54FD              ANL     A,#0FDH
00AF         L?0532:
00AF F0                MOVX    @DPTR,A
00B0 E0                MOVX    A,@DPTR
00B1 54FE              ANL     A,#0FEH
00B3 F0                MOVX    @DPTR,A
00B4 E0                MOVX    A,@DPTR
00B5 22                RET     
00B6         L?0535:
00B6         L?0536:
00B6 900000      E     MOV     DPTR,#CURRENT_STATUS
00B9 E0                MOVX    A,@DPTR
00BA 543F              ANL     A,#03FH
00BC F0                MOVX    @DPTR,A
00BD E0                MOVX    A,@DPTR
00BE 22                RET     
00BF         L?0538:
00BF         L?0539:
00BF 900000      E     MOV     DPTR,#WinFlashMark
00C2 E0                MOVX    A,@DPTR
00C3 64FC              XRL     A,#0FCH
00C5 22                RET     
00C6         L?0541:
00C6 E0                MOVX    A,@DPTR
00C7 24B8              ADD     A,#0B8H
00C9 FD                MOV     R5,A
00CA EF                MOV     A,R7
00CB C4                SWAP    A
00CC 54F0              ANL     A,#0F0H
00CE FB                MOV     R3,A
00CF 7F01              MOV     R7,#01H
00D1 22                RET     
00D2         L?0543:
00D2         L?0544:
00D2 AB00        E     MOV     R3,KBHIData
00D4 AD00        E     MOV     R5,KBHIData1
00D6 7F60              MOV     R7,#060H
00D8 22                RET     
00D9         L?0545:
00D9 900000      E     MOV     DPTR,#SysStatus
00DC E0                MOVX    A,@DPTR
00DD 4480              ORL     A,#080H
00DF F0                MOVX    @DPTR,A
00E0 D200        E     SETB    Ccb42_DISAB_KEY
00E2 22                RET     
00E3         L?0546:
00E3         L?0547:
00E3 900000      E     MOV     DPTR,#cKBStatus
00E6 E0                MOVX    A,@DPTR
00E7 54FC              ANL     A,#0FCH
00E9 22                RET     
00EA         L?0548:
00EA         L?0549:
C51 COMPILER V8.12   OEM_6064                                                              07/28/2018 12:03:51 PAGE 38  

00EA 900000      E     MOV     DPTR,#eEEPROMData
00ED EF                MOV     A,R7
00EE F0                MOVX    @DPTR,A
00EF E0                MOVX    A,@DPTR
00F0 22                RET     
00F1         L?0550:
00F1         L?0551:
00F1 900000      E     MOV     DPTR,#SysPowState
00F4 E0                MOVX    A,@DPTR
00F5 6411              XRL     A,#011H
00F7 22                RET     
             ; FUNCTION Com01F2 (END)

             ; FUNCTION Cmd_B4 (BEGIN)
                                           ; SOURCE LINE # 13
                                           ; SOURCE LINE # 14
                                           ; SOURCE LINE # 16
0000 900000      E     MOV     DPTR,#nStopChgStat3H
0003 E0                MOVX    A,@DPTR
0004 4410              ORL     A,#010H
0006 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 17
0007 900000      E     MOV     DPTR,#GPCRA5
000A 7440              MOV     A,#040H
000C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 18
000D 900000      E     MOV     DPTR,#GPDRA
0010 E0                MOVX    A,@DPTR
0011 4420              ORL     A,#020H
0013 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 20
0014 900000      E     MOV     DPTR,#CHGIC_ptr
0017 7402              MOV     A,#02H
0019 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 21
001A 120000      E     LCALL   WriteSmartChgIC
                                           ; SOURCE LINE # 22
001D E4                CLR     A
001E FF                MOV     R7,A
001F 020000      E     LJMP    _RamProgram
             ; FUNCTION Cmd_B4 (END)

             ; FUNCTION _GetData2 (BEGIN)
                                           ; SOURCE LINE # 25
;---- Variable 'nPort' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 26
                                           ; SOURCE LINE # 27
0000 C28E              CLR     TR1
                                           ; SOURCE LINE # 28
0002 C2AB              CLR     ET1
                                           ; SOURCE LINE # 29
0004 00                NOP     
                                           ; SOURCE LINE # 30
0005 00                NOP     
                                           ; SOURCE LINE # 31
0006 00                NOP     
                                           ; SOURCE LINE # 32
0007 00                NOP     
                                           ; SOURCE LINE # 33
0008 758DC4            MOV     TH1,#0C4H
                                           ; SOURCE LINE # 34
000B 758B1B            MOV     TL1,#01BH
C51 COMPILER V8.12   OEM_6064                                                              07/28/2018 12:03:51 PAGE 39  

                                           ; SOURCE LINE # 35
000E C28F              CLR     TF1
                                           ; SOURCE LINE # 36
0010 D28E              SETB    TR1
0012         ?C0002:
                                           ; SOURCE LINE # 38
0012 208F33            JB      TF1,?C0003
                                           ; SOURCE LINE # 39
                                           ; SOURCE LINE # 40
0015 EF                MOV     A,R7
0016 6460              XRL     A,#060H
0018 7015              JNZ     ?C0004
                                           ; SOURCE LINE # 41
                                           ; SOURCE LINE # 42
001A 900000      E     MOV     DPTR,#KBHISR
001D E0                MOVX    A,@DPTR
001E 30E1F1            JNB     ACC.1,?C0002
                                           ; SOURCE LINE # 43
                                           ; SOURCE LINE # 44
0021 E0                MOVX    A,@DPTR
0022 20E323            JB      ACC.3,?C0422
                                           ; SOURCE LINE # 45
                                           ; SOURCE LINE # 46
0025 900000      E     MOV     DPTR,#KBHIDIR
0028 E0                MOVX    A,@DPTR
0029 900000      E     MOV     DPTR,#CmdData2
002C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 47
002D         ?C0006:
                                           ; SOURCE LINE # 48
                                           ; SOURCE LINE # 49
                                           ; SOURCE LINE # 50
002D 8019              SJMP    ?C0422
                                           ; SOURCE LINE # 52
                                           ; SOURCE LINE # 53
002F         ?C0004:
                                           ; SOURCE LINE # 54
002F EF                MOV     A,R7
0030 B462DF            CJNE    A,#062H,?C0002
                                           ; SOURCE LINE # 55
                                           ; SOURCE LINE # 56
0033 900000      E     MOV     DPTR,#PM1STS
0036 E0                MOVX    A,@DPTR
0037 30E1D8            JNB     ACC.1,?C0002
                                           ; SOURCE LINE # 57
                                           ; SOURCE LINE # 58
003A E0                MOVX    A,@DPTR
003B 20E308            JB      ACC.3,?C0011
                                           ; SOURCE LINE # 59
                                           ; SOURCE LINE # 60
003E 900000      E     MOV     DPTR,#PM1DI
0041 E0                MOVX    A,@DPTR
0042 900000      E     MOV     DPTR,#CmdData2
0045 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 61
0046         ?C0011:
                                           ; SOURCE LINE # 62
0046         ?C0421:
                                           ; SOURCE LINE # 63
                                           ; SOURCE LINE # 64
0046 8000              SJMP    ?C0422
                                           ; SOURCE LINE # 66
C51 COMPILER V8.12   OEM_6064                                                              07/28/2018 12:03:51 PAGE 40  

                                           ; SOURCE LINE # 67
                                           ; SOURCE LINE # 68
0048         ?C0003:
                                           ; SOURCE LINE # 69
0048         ?C0422:
0048 C28E              CLR     TR1
                                           ; SOURCE LINE # 70
004A C28F              CLR     TF1
                                           ; SOURCE LINE # 71
004C D2AB              SETB    ET1
                                           ; SOURCE LINE # 72
004E         ?C0007:
004E 22                RET     
             ; FUNCTION _GetData2 (END)

             ; FUNCTION _Hook_60Port (BEGIN)
                                           ; SOURCE LINE # 80
;---- Variable 'KBHICmd' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 81
                                           ; SOURCE LINE # 84
0000 EF                MOV     A,R7
0001 120000      E     LCALL   ?C?CCASE
0004 0000        R     DW      ?C0013
0006 40                DB      040H
0007 0000        R     DW      ?C0014
0009 41                DB      041H
000A 0000        R     DW      ?C0019
000C 42                DB      042H
000D 0000        R     DW      ?C0020
000F 43                DB      043H
0010 0000        R     DW      ?C0021
0012 45                DB      045H
0013 0000        R     DW      ?C0022
0015 46                DB      046H
0016 0000        R     DW      ?C0023
0018 47                DB      047H
0019 0000        R     DW      ?C0025
001B 4B                DB      04BH
001C 0000        R     DW      ?C0034
001E 4C                DB      04CH
001F 0000        R     DW      ?C0038
0021 4D                DB      04DH
0022 0000        R     DW      ?C0041
0024 4E                DB      04EH
0025 0000        R     DW      ?C0042
0027 52                DB      052H
0028 0000        R     DW      ?C0049
002A 53                DB      053H
002B 0000        R     DW      ?C0052
002D 58                DB      058H
002E 0000        R     DW      ?C0053
0030 59                DB      059H
0031 0000        R     DW      ?C0054
0033 5C                DB      05CH
0034 0000        R     DW      ?C0055
0036 5D                DB      05DH
0037 0000        R     DW      ?C0056
0039 71                DB      071H
003A 0000        R     DW      ?C0057
003C 72                DB      072H
003D 0000        R     DW      ?C0058
003F 7A                DB      07AH
C51 COMPILER V8.12   OEM_6064                                                              07/28/2018 12:03:51 PAGE 41  

0040 0000        R     DW      ?C0059
0042 7B                DB      07BH
0043 0000        R     DW      ?C0061
0045 7E                DB      07EH
0046 0000        R     DW      ?C0063
0048 97                DB      097H
0049 0000        R     DW      ?C0064
004B B0                DB      0B0H
004C 0000        R     DW      ?C0067
004E B3                DB      0B3H
004F 0000        R     DW      ?C0065
0051 BC                DB      0BCH
0052 0000              DW      00H
0054 0000        R     DW      ?C0069
                                           ; SOURCE LINE # 85
                                           ; SOURCE LINE # 86
0056         ?C0013:
                                           ; SOURCE LINE # 87
0056 AF00        E     MOV     R7,KBHIData
0058 020000      R     LJMP    _Cmd_40
                                           ; SOURCE LINE # 88
                                           ; SOURCE LINE # 89
005B         ?C0014:
                                           ; SOURCE LINE # 90
005B E500        E     MOV     A,KBHIData
005D B4A005            CJNE    A,#0A0H,?C0015
0060 7F60              MOV     R7,#060H
0062 120000      R     LCALL   _Cmd_41_A0
0065         ?C0015:
                                           ; SOURCE LINE # 91
0065 E500        E     MOV     A,KBHIData
0067 B4A105            CJNE    A,#0A1H,?C0016
006A 7F60              MOV     R7,#060H
006C 120000      R     LCALL   _Cmd_41_A1
006F         ?C0016:
                                           ; SOURCE LINE # 92
006F E500        E     MOV     A,KBHIData
0071 B4A205            CJNE    A,#0A2H,?C0017
0074 7F60              MOV     R7,#060H
0076 120000      R     LCALL   _Cmd_41_A2
0079         ?C0017:
                                           ; SOURCE LINE # 93
0079 E500        E     MOV     A,KBHIData
007B 64A3              XRL     A,#0A3H
007D 6003              JZ      $ + 5H
007F 020000      R     LJMP    ?C0069
0082 7F60              MOV     R7,#060H
0084 020000      R     LJMP    _Cmd_41_A3
                                           ; SOURCE LINE # 94
                                           ; SOURCE LINE # 95
0087         ?C0019:
                                           ; SOURCE LINE # 96
0087 AF00        E     MOV     R7,KBHIData
0089 020000      R     LJMP    _Cmd_42
                                           ; SOURCE LINE # 97
                                           ; SOURCE LINE # 98
008C         ?C0020:
                                           ; SOURCE LINE # 99
008C AD00        E     MOV     R5,KBHIData
008E 7F60              MOV     R7,#060H
0090 020000      R     LJMP    _Cmd_43
                                           ; SOURCE LINE # 100
C51 COMPILER V8.12   OEM_6064                                                              07/28/2018 12:03:51 PAGE 42  

                                           ; SOURCE LINE # 101
0093         ?C0021:
                                           ; SOURCE LINE # 102
0093 AD00        E     MOV     R5,KBHIData
0095 7F60              MOV     R7,#060H
0097 020000      R     LJMP    _Cmd_45
                                           ; SOURCE LINE # 103
                                           ; SOURCE LINE # 105
009A         ?C0022:
                                           ; SOURCE LINE # 106
009A AD00        E     MOV     R5,KBHIData
009C 7F60              MOV     R7,#060H
009E 020000      R     LJMP    _Cmd_46
                                           ; SOURCE LINE # 107
                                           ; SOURCE LINE # 108
00A1         ?C0023:
                                           ; SOURCE LINE # 110
00A1 AD00        E     MOV     R5,KBHIData
00A3 7F60              MOV     R7,#060H
00A5 020000      R     LJMP    _Cmd_47
                                           ; SOURCE LINE # 111
                                           ; SOURCE LINE # 113
                                           ; SOURCE LINE # 114
                                           ; SOURCE LINE # 117
                                           ; SOURCE LINE # 118
00A8         ?C0025:
                                           ; SOURCE LINE # 119
00A8 E500        E     MOV     A,KBHIStep
00AA B40402            CJNE    A,#04H,?C0026
                                           ; SOURCE LINE # 120
                                           ; SOURCE LINE # 121
                                           ; SOURCE LINE # 122
00AD 805D              SJMP    ?C0423
                                           ; SOURCE LINE # 123
00AF         ?C0026:
                                           ; SOURCE LINE # 124
00AF E500        E     MOV     A,KBHIStep
00B1 B40316            CJNE    A,#03H,?C0027
                                           ; SOURCE LINE # 125
                                           ; SOURCE LINE # 126
00B4 900000      E     MOV     DPTR,#eEEPROMAddrsss
00B7 E500        E     MOV     A,KBHIData
00B9 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 127
00BA E0                MOVX    A,@DPTR
00BB 64E0              XRL     A,#0E0H
00BD 6003              JZ      $ + 5H
00BF 020000      R     LJMP    ?C0069
                                           ; SOURCE LINE # 128
                                           ; SOURCE LINE # 129
00C2 900000      E     MOV     DPTR,#MBID_Reload
00C5 E0                MOVX    A,@DPTR
00C6 4401              ORL     A,#01H
00C8 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 130
                                           ; SOURCE LINE # 131
00C9 22                RET     
                                           ; SOURCE LINE # 132
00CA         ?C0027:
                                           ; SOURCE LINE # 133
00CA E500        E     MOV     A,KBHIStep
00CC B40216            CJNE    A,#02H,?C0029
C51 COMPILER V8.12   OEM_6064                                                              07/28/2018 12:03:51 PAGE 43  

                                           ; SOURCE LINE # 134
                                           ; SOURCE LINE # 135
00CF 900000      E     MOV     DPTR,#eEEPROMBank
00D2 E500        E     MOV     A,KBHIData
00D4 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 136
00D5 E0                MOVX    A,@DPTR
00D6 6407              XRL     A,#07H
00D8 6003              JZ      $ + 5H
00DA 020000      R     LJMP    ?C0069
                                           ; SOURCE LINE # 137
                                           ; SOURCE LINE # 138
00DD 900000      E     MOV     DPTR,#MBID_Reload
00E0 E0                MOVX    A,@DPTR
00E1 4402              ORL     A,#02H
00E3 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 139
                                           ; SOURCE LINE # 140
00E4 22                RET     
                                           ; SOURCE LINE # 141
00E5         ?C0029:
                                           ; SOURCE LINE # 142
00E5 E500        E     MOV     A,KBHIStep
00E7 B4010A            CJNE    A,#01H,?C0031
                                           ; SOURCE LINE # 143
                                           ; SOURCE LINE # 144
                                           ; SOURCE LINE # 146
                                           ; SOURCE LINE # 147
                                           ; SOURCE LINE # 148
00EA 120000      R     LCALL   L?0521
                                           ; SOURCE LINE # 149
00ED E4                CLR     A
00EE FD                MOV     R5,A
00EF 7F60              MOV     R7,#060H
00F1 120000      E     LCALL   _Data2PortDirect
                                           ; SOURCE LINE # 158
00F4         ?C0031:
                                           ; SOURCE LINE # 160
00F4 900000      E     MOV     DPTR,#MBID_Reload
00F7 E0                MOVX    A,@DPTR
00F8 5403              ANL     A,#03H
00FA FF                MOV     R7,A
00FB BF0303            CJNE    R7,#03H,?C0032
                                           ; SOURCE LINE # 161
                                           ; SOURCE LINE # 163
00FE E4                CLR     A
00FF F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 164
0100 22                RET     
0101         ?C0032:
                                           ; SOURCE LINE # 166
                                           ; SOURCE LINE # 167
0101 E4                CLR     A
0102 900000      E     MOV     DPTR,#MBID_Reload
0105 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 168
                                           ; SOURCE LINE # 169
0106 22                RET     
                                           ; SOURCE LINE # 171
0107         ?C0034:
                                           ; SOURCE LINE # 172
0107 E500        E     MOV     A,KBHIStep
C51 COMPILER V8.12   OEM_6064                                                              07/28/2018 12:03:51 PAGE 44  

0109 B40305            CJNE    A,#03H,?C0035
                                           ; SOURCE LINE # 173
                                           ; SOURCE LINE # 174
010C         ?C0423:
010C 900000      R     MOV     DPTR,#i
                                           ; SOURCE LINE # 175
010F 8022              SJMP    ?C0425
                                           ; SOURCE LINE # 176
0111         ?C0035:
                                           ; SOURCE LINE # 177
0111 E500        E     MOV     A,KBHIStep
0113 B40205            CJNE    A,#02H,?C0036
                                           ; SOURCE LINE # 178
                                           ; SOURCE LINE # 179
0116 900000      E     MOV     DPTR,#eEEPROMAddrsss
0119         ?C0424:
                                           ; SOURCE LINE # 180
0119 8018              SJMP    ?C0425
                                           ; SOURCE LINE # 181
011B         ?C0036:
                                           ; SOURCE LINE # 182
011B E500        E     MOV     A,KBHIStep
011D 6401              XRL     A,#01H
011F 6003              JZ      $ + 5H
0121 020000      R     LJMP    ?C0069
                                           ; SOURCE LINE # 183
                                           ; SOURCE LINE # 184
0124 E500        E     MOV     A,KBHIData
                                           ; SOURCE LINE # 185
0126 120000      R     LCALL   L?0527
                                           ; SOURCE LINE # 186
                                           ; SOURCE LINE # 187
0129 801F              SJMP    ?C0426
                                           ; SOURCE LINE # 189
012B         ?C0038:
                                           ; SOURCE LINE # 190
012B E500        E     MOV     A,KBHIStep
012D B40207            CJNE    A,#02H,?C0039
                                           ; SOURCE LINE # 191
                                           ; SOURCE LINE # 192
0130 900000      E     MOV     DPTR,#eEEPROMAddrsss
0133         ?C0425:
0133 E500        E     MOV     A,KBHIData
0135 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 193
0136 22                RET     
                                           ; SOURCE LINE # 194
0137         ?C0039:
                                           ; SOURCE LINE # 195
0137 E500        E     MOV     A,KBHIStep
0139 6401              XRL     A,#01H
013B 6003              JZ      $ + 5H
013D 020000      R     LJMP    ?C0069
                                           ; SOURCE LINE # 196
                                           ; SOURCE LINE # 197
                                           ; SOURCE LINE # 198
                                           ; SOURCE LINE # 199
                                           ; SOURCE LINE # 200
0140 120000      R     LCALL   L?0521
                                           ; SOURCE LINE # 202
                                           ; SOURCE LINE # 203
0143 22                RET     
C51 COMPILER V8.12   OEM_6064                                                              07/28/2018 12:03:51 PAGE 45  

                                           ; SOURCE LINE # 204
0144         ?C0041:
                                           ; SOURCE LINE # 205
0144 900000      E     MOV     DPTR,#eEEPROMAddrsss
0147 E500        E     MOV     A,KBHIData
0149 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 206
014A         ?C0426:
014A E0                MOVX    A,@DPTR
014B FD                MOV     R5,A
014C 7F60              MOV     R7,#060H
014E 020000      R     LJMP    _Cmd_4E
                                           ; SOURCE LINE # 207
                                           ; SOURCE LINE # 208
0151         ?C0042:
                                           ; SOURCE LINE # 209
0151 E500        E     MOV     A,KBHIData
0153 B4A005            CJNE    A,#0A0H,?C0043
0156 7F60              MOV     R7,#060H
0158 120000      R     LCALL   _Cmd_52_A0
015B         ?C0043:
                                           ; SOURCE LINE # 210
015B E500        E     MOV     A,KBHIData
015D B4A305            CJNE    A,#0A3H,?C0044
0160 7F60              MOV     R7,#060H
0162 120000      R     LCALL   _Cmd_52_A3
0165         ?C0044:
                                           ; SOURCE LINE # 211
0165 E500        E     MOV     A,KBHIData
0167 B4A405            CJNE    A,#0A4H,?C0045
016A 7F60              MOV     R7,#060H
016C 120000      R     LCALL   _Cmd_52_A4
016F         ?C0045:
                                           ; SOURCE LINE # 212
016F E500        E     MOV     A,KBHIData
0171 B4A505            CJNE    A,#0A5H,?C0046
0174 7F60              MOV     R7,#060H
0176 120000      R     LCALL   _Cmd_52_A5
0179         ?C0046:
                                           ; SOURCE LINE # 213
0179 E500        E     MOV     A,KBHIData
017B B4A605            CJNE    A,#0A6H,?C0047
017E 7F60              MOV     R7,#060H
0180 120000      R     LCALL   _Cmd_52_A6
0183         ?C0047:
                                           ; SOURCE LINE # 214
0183 E500        E     MOV     A,KBHIData
0185 64A7              XRL     A,#0A7H
0187 6003              JZ      $ + 5H
0189 020000      R     LJMP    ?C0069
018C 7F60              MOV     R7,#060H
018E 020000      R     LJMP    _Cmd_52_A7
                                           ; SOURCE LINE # 215
                                           ; SOURCE LINE # 216
0191         ?C0049:
                                           ; SOURCE LINE # 217
0191 E500        E     MOV     A,KBHIStep
0193 6401              XRL     A,#01H
0195 707A              JNZ     ?C0069
                                           ; SOURCE LINE # 218
                                           ; SOURCE LINE # 219
0197 900000      R     MOV     DPTR,#?_Cmd_53?BYTE+03H
C51 COMPILER V8.12   OEM_6064                                                              07/28/2018 12:03:51 PAGE 46  

019A E500        E     MOV     A,KBHIData
019C F0                MOVX    @DPTR,A
019D AB00        E     MOV     R3,KBHIData1
019F AD00        E     MOV     R5,KBHIData2
01A1 7F60              MOV     R7,#060H
01A3 020000      R     LJMP    _Cmd_53
                                           ; SOURCE LINE # 220
                                           ; SOURCE LINE # 221
                                           ; SOURCE LINE # 222
                                           ; SOURCE LINE # 223
                                           ; SOURCE LINE # 224
01A6         ?C0052:
                                           ; SOURCE LINE # 225
01A6 AF00        E     MOV     R7,KBHIData
01A8 020000      R     LJMP    _Cmd_58
                                           ; SOURCE LINE # 226
                                           ; SOURCE LINE # 227
01AB         ?C0053:
                                           ; SOURCE LINE # 228
01AB E4                CLR     A
01AC FB                MOV     R3,A
01AD AD00        E     MOV     R5,KBHIData
01AF 7F60              MOV     R7,#060H
01B1 020000      R     LJMP    _Cmd_59
                                           ; SOURCE LINE # 229
                                           ; SOURCE LINE # 230
01B4         ?C0054:
                                           ; SOURCE LINE # 231
01B4 7F60              MOV     R7,#060H
01B6 020000      R     LJMP    _Cmd_5C
                                           ; SOURCE LINE # 232
                                           ; SOURCE LINE # 233
01B9         ?C0055:
                                           ; SOURCE LINE # 234
01B9 AF00        E     MOV     R7,KBHIData
01BB 020000      R     LJMP    _Cmd_5D
                                           ; SOURCE LINE # 235
                                           ; SOURCE LINE # 236
01BE         ?C0056:
                                           ; SOURCE LINE # 242
01BE AF00        E     MOV     R7,KBHIData
01C0 020000      R     LJMP    _Cmd_71
                                           ; SOURCE LINE # 244
                                           ; SOURCE LINE # 245
01C3         ?C0057:
                                           ; SOURCE LINE # 246
01C3 AF00        E     MOV     R7,KBHIData
01C5 020000      R     LJMP    _Cmd_72
                                           ; SOURCE LINE # 247
                                           ; SOURCE LINE # 249
01C8         ?C0058:
                                           ; SOURCE LINE # 250
01C8 AD00        E     MOV     R5,KBHIData
01CA 7F60              MOV     R7,#060H
01CC 020000      R     LJMP    _Cmd_7A
                                           ; SOURCE LINE # 251
                                           ; SOURCE LINE # 252
01CF         ?C0059:
                                           ; SOURCE LINE # 253
01CF E500        E     MOV     A,KBHIStep
01D1 6401              XRL     A,#01H
01D3 703C              JNZ     ?C0069
C51 COMPILER V8.12   OEM_6064                                                              07/28/2018 12:03:51 PAGE 47  

                                           ; SOURCE LINE # 254
                                           ; SOURCE LINE # 255
01D5 120000      R     LCALL   L?0543
01D8 020000      R     LJMP    _Cmd_7B
                                           ; SOURCE LINE # 256
                                           ; SOURCE LINE # 257
                                           ; SOURCE LINE # 260
01DB         ?C0061:
                                           ; SOURCE LINE # 261
01DB E500        E     MOV     A,KBHIStep
01DD 6401              XRL     A,#01H
01DF 7030              JNZ     ?C0069
                                           ; SOURCE LINE # 262
                                           ; SOURCE LINE # 263
01E1 120000      R     LCALL   L?0543
01E4 020000      R     LJMP    _Cmd_7E
                                           ; SOURCE LINE # 264
                                           ; SOURCE LINE # 265
                                           ; SOURCE LINE # 267
01E7         ?C0063:
                                           ; SOURCE LINE # 268
01E7 AF00        E     MOV     R7,KBHIData
01E9 020000      R     LJMP    _Cmd_97
                                           ; SOURCE LINE # 269
                                           ; SOURCE LINE # 270
01EC         ?C0064:
                                           ; SOURCE LINE # 271
01EC AD00        E     MOV     R5,KBHIData
01EE 7F60              MOV     R7,#060H
01F0 020000      R     LJMP    _Cmd_B0
                                           ; SOURCE LINE # 272
                                           ; SOURCE LINE # 273
01F3         ?C0065:
                                           ; SOURCE LINE # 274
01F3 900000      E     MOV     DPTR,#GPCRD5
01F6 7480              MOV     A,#080H
01F8 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 275
01F9 900000      E     MOV     DPTR,#USB_Delay
01FC E500        E     MOV     A,KBHIData
01FE F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 276
01FF E0                MOVX    A,@DPTR
0200 700F              JNZ     ?C0069
                                           ; SOURCE LINE # 277
0202 740A              MOV     A,#0AH
0204 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 278
0205 22                RET     
                                           ; SOURCE LINE # 279
0206         ?C0067:
                                           ; SOURCE LINE # 280
0206 E500        E     MOV     A,KBHIStep
0208 B40106            CJNE    A,#01H,?C0069
                                           ; SOURCE LINE # 281
                                           ; SOURCE LINE # 282
020B 120000      R     LCALL   L?0544
020E 120000      R     LCALL   _Cmd_B3
                                           ; SOURCE LINE # 283
                                           ; SOURCE LINE # 284
                                           ; SOURCE LINE # 285
                                           ; SOURCE LINE # 286
C51 COMPILER V8.12   OEM_6064                                                              07/28/2018 12:03:51 PAGE 48  

0211         ?C0069:
0211 22                RET     
0212         L?0521:
0212 900000      E     MOV     DPTR,#eEEPROMData
0215 E500        E     MOV     A,KBHIData
0217 F0                MOVX    @DPTR,A
0218 900000      E     MOV     DPTR,#LENOVOPMFW_Temp
021B E0                MOVX    A,@DPTR
021C 4410              ORL     A,#010H
021E F0                MOVX    @DPTR,A
021F 120000      R     LCALL   Update_EEPROMMark
0222 900000      E     MOV     DPTR,#LENOVOPMFW_Temp
0225 E0                MOVX    A,@DPTR
0226 54EF              ANL     A,#0EFH
0228 F0                MOVX    @DPTR,A
0229 22                RET     
             ; FUNCTION _Hook_60Port (END)

             ; FUNCTION _Hook_64Port (BEGIN)
                                           ; SOURCE LINE # 291
;---- Variable 'KBHICmd' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 292
                                           ; SOURCE LINE # 293
0000 EF                MOV     A,R7
0001 120000      E     LCALL   ?C?CCASE
0004 0000        R     DW      ?C0105
0006 40                DB      040H
0007 0000        R     DW      ?C0105
0009 41                DB      041H
000A 0000        R     DW      ?C0105
000C 42                DB      042H
000D 0000        R     DW      ?C0105
000F 43                DB      043H
0010 0000        R     DW      ?C0075
0012 44                DB      044H
0013 0000        R     DW      ?C0105
0015 45                DB      045H
0016 0000        R     DW      ?C0105
0018 46                DB      046H
0019 0000        R     DW      ?C0105
001B 47                DB      047H
001C 0000        R     DW      ?C0105
001E 49                DB      049H
001F 0000        R     DW      ?C0080
0021 4B                DB      04BH
0022 0000        R     DW      ?C0081
0024 4C                DB      04CH
0025 0000        R     DW      ?C0082
0027 4D                DB      04DH
0028 0000        R     DW      ?C0105
002A 4E                DB      04EH
002B 0000        R     DW      ?C0084
002D 4F                DB      04FH
002E 0000        R     DW      ?C0085
0030 50                DB      050H
0031 0000        R     DW      ?C0086
0033 51                DB      051H
0034 0000        R     DW      ?C0105
0036 52                DB      052H
0037 0000        R     DW      ?C0088
0039 53                DB      053H
003A 0000        R     DW      ?C0105
C51 COMPILER V8.12   OEM_6064                                                              07/28/2018 12:03:51 PAGE 49  

003C 58                DB      058H
003D 0000        R     DW      ?C0105
003F 59                DB      059H
0040 0000        R     DW      ?C0105
0042 5D                DB      05DH
0043 0000        R     DW      ?C0094
0045 5E                DB      05EH
0046 0000        R     DW      ?C0095
0048 5F                DB      05FH
0049 0000        R     DW      ?C0096
004B 71                DB      071H
004C 0000        R     DW      ?C0105
004E 72                DB      072H
004F 0000        R     DW      ?C0098
0051 75                DB      075H
0052 0000        R     DW      ?C0111
0054 77                DB      077H
0055 0000        R     DW      ?C0105
0057 7A                DB      07AH
0058 0000        R     DW      ?C0100
005A 7B                DB      07BH
005B 0000        R     DW      ?C0102
005D 7C                DB      07CH
005E 0000        R     DW      ?C0103
0060 7D                DB      07DH
0061 0000        R     DW      ?C0101
0063 7E                DB      07EH
0064 0000        R     DW      ?C0105
0066 97                DB      097H
0067 0000        R     DW      ?C0105
0069 B0                DB      0B0H
006A 0000        R     DW      ?C0106
006C B1                DB      0B1H
006D 0000        R     DW      ?C0107
006F B2                DB      0B2H
0070 0000        R     DW      ?C0108
0072 B3                DB      0B3H
0073 0000        R     DW      ?C0109
0075 B4                DB      0B4H
0076 0000        R     DW      ?C0105
0078 BC                DB      0BCH
0079 0000              DW      00H
007B 0000        R     DW      ?C0114
                                           ; SOURCE LINE # 294
                                           ; SOURCE LINE # 295
                                           ; SOURCE LINE # 298
                                           ; SOURCE LINE # 301
                                           ; SOURCE LINE # 304
                                           ; SOURCE LINE # 307
007D         ?C0075:
                                           ; SOURCE LINE # 308
007D 7F60              MOV     R7,#060H
007F 020000      R     LJMP    _Cmd_44
                                           ; SOURCE LINE # 309
                                           ; SOURCE LINE # 310
                                           ; SOURCE LINE # 313
                                           ; SOURCE LINE # 316
                                           ; SOURCE LINE # 319
                                           ; SOURCE LINE # 322
0082         ?C0080:
                                           ; SOURCE LINE # 323
0082 750004      E     MOV     KBHIStep,#04H
C51 COMPILER V8.12   OEM_6064                                                              07/28/2018 12:03:51 PAGE 50  

                                           ; SOURCE LINE # 324
0085 22                RET     
                                           ; SOURCE LINE # 325
0086         ?C0081:
                                           ; SOURCE LINE # 326
0086 750003      E     MOV     KBHIStep,#03H
                                           ; SOURCE LINE # 327
0089 22                RET     
                                           ; SOURCE LINE # 328
008A         ?C0082:
                                           ; SOURCE LINE # 329
                                           ; SOURCE LINE # 330
008A 8058              SJMP    ?C0446
                                           ; SOURCE LINE # 331
                                           ; SOURCE LINE # 334
008C         ?C0084:
                                           ; SOURCE LINE # 335
008C 020000      R     LJMP    Erase_EEPROMAll
                                           ; SOURCE LINE # 336
                                           ; SOURCE LINE # 338
008F         ?C0085:
                                           ; SOURCE LINE # 339
008F 900000      E     MOV     DPTR,#ACPI_HOTKEY
0092 E0                MOVX    A,@DPTR
0093 4440              ORL     A,#040H
0095 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 340
0096 22                RET     
                                           ; SOURCE LINE # 342
0097         ?C0086:
                                           ; SOURCE LINE # 343
0097 7F60              MOV     R7,#060H
0099 020000      R     LJMP    _Cmd_51
                                           ; SOURCE LINE # 344
                                           ; SOURCE LINE # 345
                                           ; SOURCE LINE # 348
009C         ?C0088:
                                           ; SOURCE LINE # 349
009C         ?C0435:
                                           ; SOURCE LINE # 350
009C 8046              SJMP    ?C0446
                                           ; SOURCE LINE # 351
                                           ; SOURCE LINE # 352
                                           ; SOURCE LINE # 353
                                           ; SOURCE LINE # 356
                                           ; SOURCE LINE # 359
                                           ; SOURCE LINE # 360
                                           ; SOURCE LINE # 361
                                           ; SOURCE LINE # 364
009E         ?C0094:
                                           ; SOURCE LINE # 366
009E 020000      E     LJMP    Unlock_ShipMode
                                           ; SOURCE LINE # 368
                                           ; SOURCE LINE # 369
00A1         ?C0095:
                                           ; SOURCE LINE # 371
00A1 900000      E     MOV     DPTR,#ShipModeEn
00A4 74A5              MOV     A,#0A5H
00A6 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 372
00A7 7D5A              MOV     R5,#05AH
00A9 7F60              MOV     R7,#060H
C51 COMPILER V8.12   OEM_6064                                                              07/28/2018 12:03:51 PAGE 51  

00AB 120000      E     LCALL   _Data2PortDirect
                                           ; SOURCE LINE # 373
00AE 7FA5              MOV     R7,#0A5H
00B0 020000      E     LJMP    _RamDebug
                                           ; SOURCE LINE # 375
                                           ; SOURCE LINE # 376
00B3         ?C0096:
                                           ; SOURCE LINE # 377
00B3         ?C0438:
                                           ; SOURCE LINE # 378
00B3 802F              SJMP    ?C0446
                                           ; SOURCE LINE # 379
                                           ; SOURCE LINE # 383
00B5         ?C0098:
                                           ; SOURCE LINE # 384
00B5 020000      R     LJMP    Cmd_75
                                           ; SOURCE LINE # 385
                                           ; SOURCE LINE # 388
                                           ; SOURCE LINE # 391
00B8         ?C0100:
                                           ; SOURCE LINE # 392
00B8         ?C0442:
                                           ; SOURCE LINE # 393
00B8 802A              SJMP    ?C0446
                                           ; SOURCE LINE # 396
00BA         ?C0101:
                                           ; SOURCE LINE # 397
00BA         ?C0445:
                                           ; SOURCE LINE # 398
00BA 8028              SJMP    ?C0446
                                           ; SOURCE LINE # 401
00BC         ?C0102:
                                           ; SOURCE LINE # 402
00BC 900000      E     MOV     DPTR,#Bioswatchdog
00BF 7401              MOV     A,#01H
00C1 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 403
00C2 E4                CLR     A
00C3 900000      E     MOV     DPTR,#Bioswatchdogtime
                                           ; SOURCE LINE # 404
                                           ; SOURCE LINE # 405
00C6 8004              SJMP    ?C0447
                                           ; SOURCE LINE # 406
00C8         ?C0103:
                                           ; SOURCE LINE # 407
00C8 E4                CLR     A
00C9 900000      E     MOV     DPTR,#Bioswatchdog
00CC         ?C0447:
00CC F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 408
00CD 7D55              MOV     R5,#055H
00CF 7F60              MOV     R7,#060H
00D1 020000      E     LJMP    _Data2PortDirect
                                           ; SOURCE LINE # 409
                                           ; SOURCE LINE # 411
                                           ; SOURCE LINE # 414
00D4         ?C0105:
                                           ; SOURCE LINE # 415
00D4         ?C0448:
                                           ; SOURCE LINE # 416
00D4 8015              SJMP    ?C0449
                                           ; SOURCE LINE # 418
C51 COMPILER V8.12   OEM_6064                                                              07/28/2018 12:03:51 PAGE 52  

00D6         ?C0106:
                                           ; SOURCE LINE # 419
00D6 7DB1              MOV     R5,#0B1H
00D8 7F60              MOV     R7,#060H
00DA 020000      R     LJMP    _Cmd_B1
                                           ; SOURCE LINE # 420
                                           ; SOURCE LINE # 421
00DD         ?C0107:
                                           ; SOURCE LINE # 422
00DD 7DB2              MOV     R5,#0B2H
00DF 7F60              MOV     R7,#060H
00E1 020000      R     LJMP    _Cmd_B2
                                           ; SOURCE LINE # 423
                                           ; SOURCE LINE # 425
00E4         ?C0108:
                                           ; SOURCE LINE # 426
00E4         ?C0446:
00E4 750002      E     MOV     KBHIStep,#02H
                                           ; SOURCE LINE # 427
00E7 22                RET     
                                           ; SOURCE LINE # 428
00E8         ?C0109:
                                           ; SOURCE LINE # 429
00E8 020000      R     LJMP    Cmd_B4
                                           ; SOURCE LINE # 430
                                           ; SOURCE LINE # 431
00EB         ?C0449:
00EB 750001      E     MOV     KBHIStep,#01H
                                           ; SOURCE LINE # 433
00EE 22                RET     
                                           ; SOURCE LINE # 434
00EF         ?C0111:
                                           ; SOURCE LINE # 436
00EF 120000      E     LCALL   DisableAllInterrupt
                                           ; SOURCE LINE # 437
00F2 E4                CLR     A
00F3 FB                MOV     R3,A
00F4 7D20              MOV     R5,#020H
00F6 7F01              MOV     R7,#01H
00F8 120000      E     LCALL   _Erase_Eflash_1K
                                           ; SOURCE LINE # 438
00FB 120000      E     LCALL   EnableAllInterrupt
                                           ; SOURCE LINE # 439
                                           ; SOURCE LINE # 440
                                           ; SOURCE LINE # 443
                                           ; SOURCE LINE # 445
                                           ; SOURCE LINE # 446
                                           ; SOURCE LINE # 447
                                           ; SOURCE LINE # 448
00FE         ?C0114:
00FE 22                RET     
             ; FUNCTION _Hook_64Port (END)

             ; FUNCTION _Hook_Keyboard_Cmd (BEGIN)
                                           ; SOURCE LINE # 453
0000 900000      R     MOV     DPTR,#kbcmd
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 454
                                           ; SOURCE LINE # 456
0005 22                RET     
             ; FUNCTION _Hook_Keyboard_Cmd (END)
C51 COMPILER V8.12   OEM_6064                                                              07/28/2018 12:03:51 PAGE 53  


             ; FUNCTION _Hook_Keyboard_Cmd_Parameter (BEGIN)
                                           ; SOURCE LINE # 462
0000 900000      R     MOV     DPTR,#kbcmdp
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 463
                                           ; SOURCE LINE # 465
0005 22                RET     
             ; FUNCTION _Hook_Keyboard_Cmd_Parameter (END)

             ; FUNCTION _Hook_Mouse_D4Cmd (BEGIN)
                                           ; SOURCE LINE # 470
0000 900000      R     MOV     DPTR,#mscmd
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 471
                                           ; SOURCE LINE # 473
0005 22                RET     
             ; FUNCTION _Hook_Mouse_D4Cmd (END)

             ; FUNCTION _Hook_Mouse_90Cmd (BEGIN)
                                           ; SOURCE LINE # 478
0000 900000      R     MOV     DPTR,#mscmd
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 479
                                           ; SOURCE LINE # 481
0005 22                RET     
             ; FUNCTION _Hook_Mouse_90Cmd (END)

             ; FUNCTION _Hook_Mouse_91Cmd (BEGIN)
                                           ; SOURCE LINE # 486
0000 900000      R     MOV     DPTR,#mscmd
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 487
                                           ; SOURCE LINE # 489
0005 22                RET     
             ; FUNCTION _Hook_Mouse_91Cmd (END)

             ; FUNCTION _Hook_Mouse_92Cmd (BEGIN)
                                           ; SOURCE LINE # 494
0000 900000      R     MOV     DPTR,#mscmd
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 495
                                           ; SOURCE LINE # 497
0005 22                RET     
             ; FUNCTION _Hook_Mouse_92Cmd (END)

             ; FUNCTION _Hook_Mouse_93Cmd (BEGIN)
                                           ; SOURCE LINE # 502
0000 900000      R     MOV     DPTR,#mscmd
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 503
                                           ; SOURCE LINE # 505
0005 22                RET     
             ; FUNCTION _Hook_Mouse_93Cmd (END)

             ; FUNCTION _Cmd_40 (BEGIN)
C51 COMPILER V8.12   OEM_6064                                                              07/28/2018 12:03:51 PAGE 54  

                                           ; SOURCE LINE # 507
;---- Variable 'sCount' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 508
                                           ; SOURCE LINE # 509
0000 900000      E     MOV     DPTR,#AutoTimer
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 510
0005 7F40              MOV     R7,#040H
0007 120000      E     LCALL   _RamDebug
                                           ; SOURCE LINE # 511
000A 900000      E     MOV     DPTR,#AutoTimer
000D E0                MOVX    A,@DPTR
000E FF                MOV     R7,A
000F 120000      E     LCALL   _RamDebug
                                           ; SOURCE LINE # 512
0012 900000      E     MOV     DPTR,#ACPI_HOTKEY
0015 E0                MOVX    A,@DPTR
0016 4440              ORL     A,#040H
0018 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 513
0019 22                RET     
             ; FUNCTION _Cmd_40 (END)

             ; FUNCTION _Cmd_41_A0 (BEGIN)
                                           ; SOURCE LINE # 515
;---- Variable 'nPort' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 516
                                           ; SOURCE LINE # 517
0000 7D01              MOV     R5,#01H
0002 020000      E     LJMP    _Data2PortDirect
             ; FUNCTION _Cmd_41_A0 (END)

             ; FUNCTION _Cmd_41_A1 (BEGIN)
                                           ; SOURCE LINE # 520
0000 900000      R     MOV     DPTR,#nPort
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 521
                                           ; SOURCE LINE # 530
0005 7D43              MOV     R5,#043H
0007 120000      E     LCALL   _Data2Port
                                           ; SOURCE LINE # 531
000A 7D4F              MOV     R5,#04FH
                                           ; SOURCE LINE # 532
000C 120000      R     LCALL   L?0514
000F 7D4D              MOV     R5,#04DH
0011 120000      E     LCALL   _MultiB2Port
                                           ; SOURCE LINE # 533
0014 7D50              MOV     R5,#050H
                                           ; SOURCE LINE # 534
0016 120000      R     LCALL   L?0514
0019 7D41              MOV     R5,#041H
001B 120000      E     LCALL   _MultiB2Port
                                           ; SOURCE LINE # 535
001E 900000      R     MOV     DPTR,#nPort
0021 E0                MOVX    A,@DPTR
0022 FF                MOV     R7,A
0023 7D4C              MOV     R5,#04CH
0025 020000      E     LJMP    _Data2PortDirect
                                           ; SOURCE LINE # 536
0028         L?0514:
C51 COMPILER V8.12   OEM_6064                                                              07/28/2018 12:03:51 PAGE 55  

0028 900000      R     MOV     DPTR,#nPort
002B E0                MOVX    A,@DPTR
002C FF                MOV     R7,A
002D 120000      E     LCALL   _MultiB2Port
0030 900000      R     MOV     DPTR,#nPort
0033 E0                MOVX    A,@DPTR
0034 FF                MOV     R7,A
0035 22                RET     
             ; FUNCTION _Cmd_41_A1 (END)

             ; FUNCTION _Cmd_41_A2 (BEGIN)
                                           ; SOURCE LINE # 538
;---- Variable 'nPort' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 539
                                           ; SOURCE LINE # 540
0000 E4                CLR     A
0001 FD                MOV     R5,A
0002 020000      E     LJMP    _Data2PortDirect
             ; FUNCTION _Cmd_41_A2 (END)

             ; FUNCTION _Cmd_41_A3 (BEGIN)
                                           ; SOURCE LINE # 543
;---- Variable 'nPort' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 544
                                           ; SOURCE LINE # 545
0000 E4                CLR     A
0001 FD                MOV     R5,A
0002 020000      E     LJMP    _Data2PortDirect
             ; FUNCTION _Cmd_41_A3 (END)

             ; FUNCTION _Cmd_42 (BEGIN)
                                           ; SOURCE LINE # 548
;---- Variable 'eFlashBank' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 549
                                           ; SOURCE LINE # 550
0000 900000      E     MOV     DPTR,#eEEPROMBank
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 551
0005 22                RET     
             ; FUNCTION _Cmd_42 (END)

             ; FUNCTION _Cmd_43 (BEGIN)
                                           ; SOURCE LINE # 553
;---- Variable 'nData' assigned to Register 'R5' ----
;---- Variable 'nPort' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 554
                                           ; SOURCE LINE # 555
0000 7404              MOV     A,#04H
0002 8D82              MOV     DPL,R5
0004 F583              MOV     DPH,A
0006 E0                MOVX    A,@DPTR
0007 FD                MOV     R5,A
0008 020000      E     LJMP    _Data2PortDirect
             ; FUNCTION _Cmd_43 (END)

             ; FUNCTION _Cmd_44 (BEGIN)
                                           ; SOURCE LINE # 558
0000 900000      R     MOV     DPTR,#nPort
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 559
C51 COMPILER V8.12   OEM_6064                                                              07/28/2018 12:03:51 PAGE 56  

                                           ; SOURCE LINE # 560
0005 7D02              MOV     R5,#02H
0007 120000      E     LCALL   _Data2Port
                                           ; SOURCE LINE # 561
000A 900000      R     MOV     DPTR,#nPort
000D E0                MOVX    A,@DPTR
000E FF                MOV     R7,A
000F E4                CLR     A
0010 FD                MOV     R5,A
0011 020000      E     LJMP    _Data2PortDirect
             ; FUNCTION _Cmd_44 (END)

             ; FUNCTION _Cmd_45 (BEGIN)
                                           ; SOURCE LINE # 564
0000 900000      R     MOV     DPTR,#nPort
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
;---- Variable 'sCount' assigned to Register 'R5' ----
                                           ; SOURCE LINE # 565
                                           ; SOURCE LINE # 566
0005 ED                MOV     A,R5
0006 120000      E     LCALL   ?C?CCASE
0009 0000        R     DW      ?C0131
000B 20                DB      020H
000C 0000        R     DW      ?C0132
000E 21                DB      021H
000F 0000        R     DW      ?C0133
0011 80                DB      080H
0012 0000        R     DW      ?C0134
0014 81                DB      081H
0015 0000        R     DW      ?C0135
0017 82                DB      082H
0018 0000        R     DW      ?C0136
001A 83                DB      083H
001B 0000        R     DW      ?C0137
001D 90                DB      090H
001E 0000        R     DW      ?C0138
0020 91                DB      091H
0021 0000        R     DW      ?C0139
0023 A2                DB      0A2H
0024 0000        R     DW      ?C0140
0026 A3                DB      0A3H
0027 0000        R     DW      ?C0141
0029 A4                DB      0A4H
002A 0000        R     DW      ?C0142
002C A5                DB      0A5H
002D 0000        R     DW      ?C0143
002F A6                DB      0A6H
0030 0000        R     DW      ?C0144
0032 A7                DB      0A7H
0033 0000        R     DW      ?C0145
0035 A8                DB      0A8H
0036 0000        R     DW      ?C0146
0038 A9                DB      0A9H
0039 0000        R     DW      ?C0147
003B AA                DB      0AAH
003C 0000        R     DW      ?C0148
003E AB                DB      0ABH
003F 0000        R     DW      ?C0149
0041 AE                DB      0AEH
0042 0000        R     DW      ?C0150
0044 B0                DB      0B0H
C51 COMPILER V8.12   OEM_6064                                                              07/28/2018 12:03:51 PAGE 57  

0045 0000        R     DW      ?C0151
0047 B1                DB      0B1H
0048 0000        R     DW      ?C0152
004A B2                DB      0B2H
004B 0000        R     DW      ?C0153
004D BD                DB      0BDH
004E 0000        R     DW      ?C0154
0050 BE                DB      0BEH
0051 0000        R     DW      ?C0155
0053 BF                DB      0BFH
0054 0000        R     DW      ?C0156
0056 CF                DB      0CFH
0057 0000        R     DW      ?C0159
0059 D4                DB      0D4H
005A 0000        R     DW      ?C0160
005C E7                DB      0E7H
005D 0000        R     DW      ?C0162
005F E9                DB      0E9H
0060 0000        R     DW      ?C0163
0062 EA                DB      0EAH
0063 0000        R     DW      ?C0164
0065 EB                DB      0EBH
0066 0000        R     DW      ?C0165
0068 F0                DB      0F0H
0069 0000        R     DW      ?C0167
006B F1                DB      0F1H
006C 0000              DW      00H
006E 0000        R     DW      ?C0169
                                           ; SOURCE LINE # 567
                                           ; SOURCE LINE # 594
0070         ?C0131:
                                           ; SOURCE LINE # 596
0070 900000      E     MOV     DPTR,#pProject4
                                           ; SOURCE LINE # 597
0073 020000      R     LJMP    ?C0450
                                           ; SOURCE LINE # 598
0076         ?C0132:
                                           ; SOURCE LINE # 599
0076 900000      E     MOV     DPTR,#pProject4
                                           ; SOURCE LINE # 600
0079 020000      R     LJMP    ?C0451
                                           ; SOURCE LINE # 604
007C         ?C0133:
                                           ; SOURCE LINE # 605
007C 900000      E     MOV     DPTR,#GPCRG6
007F 7440              MOV     A,#040H
0081 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 606
0082 900000      E     MOV     DPTR,#GPDRG
                                           ; SOURCE LINE # 607
0085 8011              SJMP    ?C0452
                                           ; SOURCE LINE # 608
0087         ?C0134:
                                           ; SOURCE LINE # 609
0087 900000      E     MOV     DPTR,#GPDRG
008A E0                MOVX    A,@DPTR
008B 54BF              ANL     A,#0BFH
008D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 610
008E 900000      E     MOV     DPTR,#GPCRG6
0091 7482              MOV     A,#082H
0093 F0                MOVX    @DPTR,A
C51 COMPILER V8.12   OEM_6064                                                              07/28/2018 12:03:51 PAGE 58  

                                           ; SOURCE LINE # 611
0094 22                RET     
                                           ; SOURCE LINE # 613
0095         ?C0135:
                                           ; SOURCE LINE # 614
0095 900000      E     MOV     DPTR,#SYS_STATUS
0098         ?C0452:
0098 E0                MOVX    A,@DPTR
0099 4440              ORL     A,#040H
009B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 615
009C 22                RET     
                                           ; SOURCE LINE # 617
009D         ?C0136:
                                           ; SOURCE LINE # 618
                                           ; SOURCE LINE # 619
009D 120000      R     LCALL   L?0545
                                           ; SOURCE LINE # 620
00A0 7800        E     MOV     R0,#LOW Flag
00A2 E6                MOV     A,@R0
00A3 4401              ORL     A,#01H
00A5 F6                MOV     @R0,A
                                           ; SOURCE LINE # 621
00A6 120000      E     LCALL   Lock_Scan
                                           ; SOURCE LINE # 622
00A9 7DF5              MOV     R5,#0F5H
00AB 7F02              MOV     R7,#02H
00AD 020000      E     LJMP    _ECSend2Port
                                           ; SOURCE LINE # 623
                                           ; SOURCE LINE # 654
00B0         ?C0137:
                                           ; SOURCE LINE # 655
                                           ; SOURCE LINE # 656
00B0 120000      R     LCALL   L?0535
00B3 4440              ORL     A,#040H
                                           ; SOURCE LINE # 657
                                           ; SOURCE LINE # 658
00B5 8005              SJMP    ?C0453
                                           ; SOURCE LINE # 659
00B7         ?C0138:
                                           ; SOURCE LINE # 660
                                           ; SOURCE LINE # 661
00B7 120000      R     LCALL   L?0535
00BA 4480              ORL     A,#080H
00BC         ?C0453:
00BC F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 662
00BD 020000      R     LJMP    Chk_UEFIStatus
                                           ; SOURCE LINE # 663
                                           ; SOURCE LINE # 665
00C0         ?C0139:
                                           ; SOURCE LINE # 666
00C0 900000      E     MOV     DPTR,#DEVICEMODULE
                                           ; SOURCE LINE # 667
00C3 020000      R     LJMP    ?C0454
                                           ; SOURCE LINE # 669
00C6         ?C0140:
                                           ; SOURCE LINE # 670
00C6 900000      E     MOV     DPTR,#DEVICEMODULE
00C9 E0                MOVX    A,@DPTR
00CA 547F              ANL     A,#07FH
00CC F0                MOVX    @DPTR,A
C51 COMPILER V8.12   OEM_6064                                                              07/28/2018 12:03:51 PAGE 59  

                                           ; SOURCE LINE # 671
00CD 22                RET     
                                           ; SOURCE LINE # 673
00CE         ?C0141:
                                           ; SOURCE LINE # 674
00CE 900000      R     MOV     DPTR,#nPort
00D1 E0                MOVX    A,@DPTR
00D2 FF                MOV     R7,A
00D3 900000      E     MOV     DPTR,#DEVICEMODULE
                                           ; SOURCE LINE # 675
00D6 020000      R     LJMP    ?C0460
                                           ; SOURCE LINE # 677
00D9         ?C0142:
                                           ; SOURCE LINE # 678
00D9 900000      E     MOV     DPTR,#DEVICEMODULE
00DC E0                MOVX    A,@DPTR
00DD 54FB              ANL     A,#0FBH
                                           ; SOURCE LINE # 679
                                           ; SOURCE LINE # 680
00DF 8006              SJMP    ?C0456
                                           ; SOURCE LINE # 682
00E1         ?C0143:
                                           ; SOURCE LINE # 683
00E1 900000      E     MOV     DPTR,#DEVICEMODULE
00E4 E0                MOVX    A,@DPTR
00E5 4404              ORL     A,#04H
00E7         ?C0456:
00E7 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 684
                                           ; SOURCE LINE # 685
00E8 801C              SJMP    ?C0457
                                           ; SOURCE LINE # 687
00EA         ?C0144:
                                           ; SOURCE LINE # 688
00EA 900000      E     MOV     DPTR,#DEVICEMODULE
00ED E0                MOVX    A,@DPTR
00EE 54FB              ANL     A,#0FBH
                                           ; SOURCE LINE # 689
                                           ; SOURCE LINE # 690
00F0 8006              SJMP    ?C0458
                                           ; SOURCE LINE # 692
00F2         ?C0145:
                                           ; SOURCE LINE # 693
00F2 900000      E     MOV     DPTR,#DEVICEMODULE
00F5 E0                MOVX    A,@DPTR
00F6 4404              ORL     A,#04H
00F8         ?C0458:
00F8 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 694
                                           ; SOURCE LINE # 695
00F9 8003              SJMP    ?C0459
                                           ; SOURCE LINE # 697
00FB         ?C0146:
                                           ; SOURCE LINE # 698
00FB 900000      E     MOV     DPTR,#LENOVODEVICE
00FE         ?C0459:
00FE E0                MOVX    A,@DPTR
00FF 4408              ORL     A,#08H
0101 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 699
0102 22                RET     
                                           ; SOURCE LINE # 701
C51 COMPILER V8.12   OEM_6064                                                              07/28/2018 12:03:51 PAGE 60  

0103         ?C0147:
                                           ; SOURCE LINE # 702
0103 900000      E     MOV     DPTR,#LENOVODEVICE
0106         ?C0457:
0106 E0                MOVX    A,@DPTR
0107 54F7              ANL     A,#0F7H
0109 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 703
010A 22                RET     
                                           ; SOURCE LINE # 705
010B         ?C0148:
                                           ; SOURCE LINE # 707
010B 900000      R     MOV     DPTR,#nPort
010E E0                MOVX    A,@DPTR
010F FF                MOV     R7,A
0110 900000      E     MOV     DPTR,#uMBID
0113         ?C0455:
                                           ; SOURCE LINE # 708
0113 805A              SJMP    ?C0460
                                           ; SOURCE LINE # 710
0115         ?C0149:
                                           ; SOURCE LINE # 711
0115 900000      R     MOV     DPTR,#nPort
0118 E0                MOVX    A,@DPTR
0119 FF                MOV     R7,A
011A 900000      E     MOV     DPTR,#uNovoVPCCount
011D E0                MOVX    A,@DPTR
011E FD                MOV     R5,A
011F 120000      E     LCALL   _Data2PortDirect
                                           ; SOURCE LINE # 712
0122 E4                CLR     A
0123 900000      E     MOV     DPTR,#uNovoVPCCount
0126 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 713
0127 22                RET     
                                           ; SOURCE LINE # 715
0128         ?C0150:
                                           ; SOURCE LINE # 716
0128 E4                CLR     A
0129 900000      E     MOV     DPTR,#cCPUKind
012C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 717
012D 22                RET     
                                           ; SOURCE LINE # 718
012E         ?C0151:
                                           ; SOURCE LINE # 719
012E 900000      E     MOV     DPTR,#cCPUKind
0131 7401              MOV     A,#01H
0133 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 720
0134 22                RET     
                                           ; SOURCE LINE # 721
0135         ?C0152:
                                           ; SOURCE LINE # 722
0135 900000      E     MOV     DPTR,#cCPUKind
0138 7402              MOV     A,#02H
013A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 723
013B 22                RET     
                                           ; SOURCE LINE # 724
013C         ?C0153:
                                           ; SOURCE LINE # 725
C51 COMPILER V8.12   OEM_6064                                                              07/28/2018 12:03:51 PAGE 61  

013C 900000      E     MOV     DPTR,#cCPUKind
013F 7403              MOV     A,#03H
0141 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 726
0142 22                RET     
                                           ; SOURCE LINE # 727
0143         ?C0154:
                                           ; SOURCE LINE # 728
0143 900000      E     MOV     DPTR,#cCPUKind
0146 7404              MOV     A,#04H
0148 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 729
0149 22                RET     
                                           ; SOURCE LINE # 730
014A         ?C0155:
                                           ; SOURCE LINE # 731
014A 900000      E     MOV     DPTR,#cCPUKind
014D 7405              MOV     A,#05H
014F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 732
0150 22                RET     
                                           ; SOURCE LINE # 734
0151         ?C0156:
                                           ; SOURCE LINE # 735
0151 900000      E     MOV     DPTR,#CombineKeyStatus
0154 E0                MOVX    A,@DPTR
0155 900000      R     MOV     DPTR,#nPort
0158 30E006            JNB     ACC.0,?C0157
                                           ; SOURCE LINE # 736
015B E0                MOVX    A,@DPTR
015C FF                MOV     R7,A
015D 7D01              MOV     R5,#01H
015F 8010              SJMP    ?C0462
0161         ?C0157:
                                           ; SOURCE LINE # 738
0161 E0                MOVX    A,@DPTR
0162 FF                MOV     R7,A
0163 E4                CLR     A
0164 FD                MOV     R5,A
0165         ?C0461:
                                           ; SOURCE LINE # 739
0165 800A              SJMP    ?C0462
                                           ; SOURCE LINE # 741
0167         ?C0159:
                                           ; SOURCE LINE # 742
0167 900000      R     MOV     DPTR,#nPort
016A E0                MOVX    A,@DPTR
016B FF                MOV     R7,A
016C 900000      E     MOV     DPTR,#pDevStus
016F         ?C0460:
016F E0                MOVX    A,@DPTR
0170 FD                MOV     R5,A
0171         ?C0462:
0171 020000      E     LJMP    _Data2PortDirect
                                           ; SOURCE LINE # 743
                                           ; SOURCE LINE # 745
0174         ?C0160:
                                           ; SOURCE LINE # 746
0174 900000      E     MOV     DPTR,#pProject0
0177 E0                MOVX    A,@DPTR
0178 4410              ORL     A,#010H
017A F0                MOVX    @DPTR,A
C51 COMPILER V8.12   OEM_6064                                                              07/28/2018 12:03:51 PAGE 62  

                                           ; SOURCE LINE # 748
017B 900000      E     MOV     DPTR,#uMBGPU
017E 7401              MOV     A,#01H
0180 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 749
0181 900000      E     MOV     DPTR,#SYS_STATUS
0184 E0                MOVX    A,@DPTR
0185 30E73C            JNB     ACC.7,?C0464
                                           ; SOURCE LINE # 750
                                           ; SOURCE LINE # 752
                                           ; SOURCE LINE # 753
0188 120000      R     LCALL   L?0523
                                           ; SOURCE LINE # 754
018B         ?C0161:
                                           ; SOURCE LINE # 757
                                           ; SOURCE LINE # 759
018B 8037              SJMP    ?C0464
                                           ; SOURCE LINE # 767
018D         ?C0162:
                                           ; SOURCE LINE # 768
018D 900000      E     MOV     DPTR,#uReserve07
0190         ?C0450:
0190 E0                MOVX    A,@DPTR
0191 54FE              ANL     A,#0FEH
0193 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 769
0194 22                RET     
                                           ; SOURCE LINE # 771
0195         ?C0163:
                                           ; SOURCE LINE # 772
0195 900000      E     MOV     DPTR,#uReserve07
0198         ?C0451:
0198 E0                MOVX    A,@DPTR
0199 4401              ORL     A,#01H
019B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 773
019C 22                RET     
                                           ; SOURCE LINE # 775
019D         ?C0164:
                                           ; SOURCE LINE # 776
019D 900000      E     MOV     DPTR,#pProject0
01A0         ?C0454:
01A0 E0                MOVX    A,@DPTR
01A1 4480              ORL     A,#080H
01A3 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 777
01A4 22                RET     
                                           ; SOURCE LINE # 781
01A5         ?C0165:
                                           ; SOURCE LINE # 782
                                           ; SOURCE LINE # 783
                                           ; SOURCE LINE # 784
01A5 120000      R     LCALL   L?0529
01A8 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 785
01A9 900000      E     MOV     DPTR,#SYS_STATUS
01AC E0                MOVX    A,@DPTR
01AD 30E703            JNB     ACC.7,?C0166
                                           ; SOURCE LINE # 786
                                           ; SOURCE LINE # 788
                                           ; SOURCE LINE # 789
01B0 120000      R     LCALL   L?0523
C51 COMPILER V8.12   OEM_6064                                                              07/28/2018 12:03:51 PAGE 63  

                                           ; SOURCE LINE # 790
01B3         ?C0166:
                                           ; SOURCE LINE # 792
01B3         ?C0463:
                                           ; SOURCE LINE # 794
01B3 800F              SJMP    ?C0464
                                           ; SOURCE LINE # 795
01B5         ?C0167:
                                           ; SOURCE LINE # 796
                                           ; SOURCE LINE # 797
                                           ; SOURCE LINE # 798
01B5 120000      R     LCALL   L?0529
01B8 14                DEC     A
01B9 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 799
01BA 900000      E     MOV     DPTR,#SYS_STATUS
01BD E0                MOVX    A,@DPTR
01BE 30E703            JNB     ACC.7,?C0168
                                           ; SOURCE LINE # 800
                                           ; SOURCE LINE # 802
                                           ; SOURCE LINE # 803
01C1 120000      R     LCALL   L?0524
                                           ; SOURCE LINE # 804
01C4         ?C0168:
                                           ; SOURCE LINE # 806
01C4         ?C0464:
01C4 120000      E     LCALL   InitChargerIC
                                           ; SOURCE LINE # 808
                                           ; SOURCE LINE # 881
                                           ; SOURCE LINE # 882
01C7         ?C0169:
01C7 22                RET     
             ; FUNCTION _Cmd_45 (END)

             ; FUNCTION _Cmd_46 (BEGIN)
                                           ; SOURCE LINE # 884
0000 900000      R     MOV     DPTR,#nPort
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
0005 A3                INC     DPTR
0006 ED                MOV     A,R5
0007 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 885
                                           ; SOURCE LINE # 887
0008 247E              ADD     A,#07EH
000A 6012              JZ      ?C0172
000C 24FE              ADD     A,#0FEH
000E 601B              JZ      ?C0173
0010 2403              ADD     A,#03H
0012 701F              JNZ     ?C0174
                                           ; SOURCE LINE # 888
                                           ; SOURCE LINE # 889
0014         ?C0171:
                                           ; SOURCE LINE # 890
0014 900000      R     MOV     DPTR,#nPort
0017 E0                MOVX    A,@DPTR
0018 FF                MOV     R7,A
0019 900000      E     MOV     DPTR,#nAtmFanSpeed
                                           ; SOURCE LINE # 891
001C 8008              SJMP    ?C0466
                                           ; SOURCE LINE # 892
001E         ?C0172:
C51 COMPILER V8.12   OEM_6064                                                              07/28/2018 12:03:51 PAGE 64  

                                           ; SOURCE LINE # 893
001E 900000      R     MOV     DPTR,#nPort
0021 E0                MOVX    A,@DPTR
0022 FF                MOV     R7,A
0023 900000      E     MOV     DPTR,#nAtmFan1Speed
0026         ?C0466:
0026 E0                MOVX    A,@DPTR
0027 FD                MOV     R5,A
0028 020000      E     LJMP    _Data2PortDirect
                                           ; SOURCE LINE # 894
                                           ; SOURCE LINE # 895
002B         ?C0173:
                                           ; SOURCE LINE # 896
002B 900000      E     MOV     DPTR,#uReserve07
002E E0                MOVX    A,@DPTR
002F 54BF              ANL     A,#0BFH
0031 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 897
0032 22                RET     
                                           ; SOURCE LINE # 898
0033         ?C0174:
                                           ; SOURCE LINE # 899
0033 900000      E     MOV     DPTR,#uReserve07
0036 E0                MOVX    A,@DPTR
0037 4440              ORL     A,#040H
0039 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 900
003A 900000      R     MOV     DPTR,#nData
003D E0                MOVX    A,@DPTR
003E FD                MOV     R5,A
003F C3                CLR     C
0040 94A0              SUBB    A,#0A0H
0042 400B              JC      ?C0175
                                           ; SOURCE LINE # 901
                                           ; SOURCE LINE # 902
0044 E0                MOVX    A,@DPTR
0045 2460              ADD     A,#060H
0047 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 903
0048 E0                MOVX    A,@DPTR
0049 900000      E     MOV     DPTR,#ManualFan2PRM
004C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 904
004D 8032              SJMP    ?C0176
004F         ?C0175:
                                           ; SOURCE LINE # 906
                                           ; SOURCE LINE # 907
004F 900000      E     MOV     DPTR,#ManualFanPRM
0052 ED                MOV     A,R5
0053 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 908
0054 E4                CLR     A
0055 900000      E     MOV     DPTR,#GPCRA5
0058 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 909
0059 900000      E     MOV     DPTR,#ManualFanPRM
005C E0                MOVX    A,@DPTR
005D 2402              ADD     A,#02H
005F 900000      E     MOV     DPTR,#DCR5
0062 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 910
0063 E4                CLR     A
C51 COMPILER V8.12   OEM_6064                                                              07/28/2018 12:03:51 PAGE 65  

0064 900000      E     MOV     DPTR,#GPCRD6
0067 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 912
0068 900000      E     MOV     DPTR,#ManualFan2PRM
006B ED                MOV     A,R5
006C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 913
006D E4                CLR     A
006E 900000      E     MOV     DPTR,#GPCRA4
0071 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 914
0072 900000      E     MOV     DPTR,#ManualFan2PRM
0075 E0                MOVX    A,@DPTR
0076 2402              ADD     A,#02H
0078 900000      E     MOV     DPTR,#DCR4
007B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 915
007C E4                CLR     A
007D 900000      E     MOV     DPTR,#GPCRD7
0080 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 917
0081         ?C0176:
                                           ; SOURCE LINE # 919
0081 900000      E     MOV     DPTR,#uReserve07
0084 E0                MOVX    A,@DPTR
0085 C4                SWAP    A
0086 13                RRC     A
0087 13                RRC     A
0088 13                RRC     A
0089 5401              ANL     A,#01H
008B 20E005            JB      ACC.0,?C0177
                                           ; SOURCE LINE # 920
008E 900000      E     MOV     DPTR,#ManualFanPRM
0091 8003              SJMP    ?C0465
0093         ?C0177:
                                           ; SOURCE LINE # 922
0093 900000      E     MOV     DPTR,#ManualFan2PRM
0096         ?C0465:
0096 E0                MOVX    A,@DPTR
0097 900000      R     MOV     DPTR,#BRPM_Manual
009A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 923
                                           ; SOURCE LINE # 924
                                           ; SOURCE LINE # 925
009B         ?C0179:
009B 22                RET     
             ; FUNCTION _Cmd_46 (END)

             ; FUNCTION _Cmd_47 (BEGIN)
                                           ; SOURCE LINE # 928
0000 900000      R     MOV     DPTR,#nPort
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
;---- Variable 'nData' assigned to Register 'R5' ----
                                           ; SOURCE LINE # 929
                                           ; SOURCE LINE # 930
0005 ED                MOV     A,R5
0006 6480              XRL     A,#080H
0008 6007              JZ      ?C0180
                                           ; SOURCE LINE # 931
                                           ; SOURCE LINE # 932
000A 900000      E     MOV     DPTR,#cOsLedCtrl
C51 COMPILER V8.12   OEM_6064                                                              07/28/2018 12:03:51 PAGE 66  

000D E0                MOVX    A,@DPTR
000E 4480              ORL     A,#080H
0010 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 933
0011         ?C0180:
                                           ; SOURCE LINE # 934
0011 ED                MOV     A,R5
0012 120000      E     LCALL   ?C?CCASE
0015 0000        R     DW      ?C0182
0017 80                DB      080H
0018 0000        R     DW      ?C0183
001A 81                DB      081H
001B 0000        R     DW      ?C0184
001D 82                DB      082H
001E 0000        R     DW      ?C0185
0020 83                DB      083H
0021 0000        R     DW      ?C0186
0023 84                DB      084H
0024 0000        R     DW      ?C0187
0026 85                DB      085H
0027 0000        R     DW      ?C0188
0029 86                DB      086H
002A 0000        R     DW      ?C0189
002C 87                DB      087H
002D 0000        R     DW      ?C0190
002F 88                DB      088H
0030 0000        R     DW      ?C0191
0032 89                DB      089H
0033 0000        R     DW      ?C0192
0035 8A                DB      08AH
0036 0000        R     DW      ?C0193
0038 8B                DB      08BH
0039 0000        R     DW      ?C0194
003B 8C                DB      08CH
003C 0000        R     DW      ?C0195
003E 8D                DB      08DH
003F 0000        R     DW      ?C0196
0041 8E                DB      08EH
0042 0000        R     DW      ?C0197
0044 8F                DB      08FH
0045 0000        R     DW      ?C0198
0047 90                DB      090H
0048 0000        R     DW      ?C0199
004A 91                DB      091H
004B 0000        R     DW      ?C0200
004D 92                DB      092H
004E 0000        R     DW      ?C0201
0050 93                DB      093H
0051 0000        R     DW      ?C0202
0053 94                DB      094H
0054 0000        R     DW      ?C0203
0056 95                DB      095H
0057 0000              DW      00H
0059 0000        R     DW      ?C0204
                                           ; SOURCE LINE # 935
                                           ; SOURCE LINE # 936
005B         ?C0182:
                                           ; SOURCE LINE # 938
005B E4                CLR     A
005C 900000      E     MOV     DPTR,#cOsLedCtrl
005F F0                MOVX    @DPTR,A
0060 A3                INC     DPTR
C51 COMPILER V8.12   OEM_6064                                                              07/28/2018 12:03:51 PAGE 67  

0061 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 939
0062 900000      E     MOV     DPTR,#cOsLed1Ctrl
0065 F0                MOVX    @DPTR,A
0066 A3                INC     DPTR
0067 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 940
0068 AF00        E     MOV     R7,Led_Data
006A 020000      E     LJMP    _OEM_Write_Leds
                                           ; SOURCE LINE # 941
                                           ; SOURCE LINE # 942
006D         ?C0183:
                                           ; SOURCE LINE # 943
006D 900000      E     MOV     DPTR,#cOsLedCtrl
                                           ; SOURCE LINE # 944
0070 8068              SJMP    ?C0474
                                           ; SOURCE LINE # 945
0072         ?C0184:
                                           ; SOURCE LINE # 946
0072 900000      E     MOV     DPTR,#cOsLedCtrl
                                           ; SOURCE LINE # 947
0075 806B              SJMP    ?C0475
                                           ; SOURCE LINE # 948
0077         ?C0185:
                                           ; SOURCE LINE # 949
0077 900000      E     MOV     DPTR,#cOsLedCtrl
                                           ; SOURCE LINE # 950
007A 806E              SJMP    ?C0476
                                           ; SOURCE LINE # 951
007C         ?C0186:
                                           ; SOURCE LINE # 952
007C 900000      E     MOV     DPTR,#cOsLedCtrl
                                           ; SOURCE LINE # 953
007F 8071              SJMP    ?C0477
                                           ; SOURCE LINE # 954
0081         ?C0187:
                                           ; SOURCE LINE # 955
0081 900000      E     MOV     DPTR,#cOsLedCtrl
                                           ; SOURCE LINE # 956
0084 8074              SJMP    ?C0478
                                           ; SOURCE LINE # 957
0086         ?C0188:
                                           ; SOURCE LINE # 958
0086 900000      E     MOV     DPTR,#cOsLedCtrl
                                           ; SOURCE LINE # 959
0089 802D              SJMP    ?C0472
                                           ; SOURCE LINE # 960
008B         ?C0189:
                                           ; SOURCE LINE # 961
008B 900000      E     MOV     DPTR,#cOsLedCtrl
                                           ; SOURCE LINE # 962
008E 803A              SJMP    ?C0473
                                           ; SOURCE LINE # 963
0090         ?C0190:
                                           ; SOURCE LINE # 964
0090 E4                CLR     A
0091 900000      E     MOV     DPTR,#cOsLedCtrl
0094 F0                MOVX    @DPTR,A
0095 A3                INC     DPTR
0096 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 965
0097 900000      E     MOV     DPTR,#cOsLedCtrl
C51 COMPILER V8.12   OEM_6064                                                              07/28/2018 12:03:51 PAGE 68  

009A E0                MOVX    A,@DPTR
009B 4480              ORL     A,#080H
009D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 967
009E E4                CLR     A
009F 900000      E     MOV     DPTR,#cOsLed1Ctrl
00A2 F0                MOVX    @DPTR,A
00A3 A3                INC     DPTR
00A4 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 968
00A5 22                RET     
                                           ; SOURCE LINE # 969
00A6         ?C0191:
                                           ; SOURCE LINE # 970
00A6 900000      E     MOV     DPTR,#cOsLedCtrl+01H
00A9         ?C0467:
                                           ; SOURCE LINE # 971
00A9 802F              SJMP    ?C0474
                                           ; SOURCE LINE # 972
00AB         ?C0192:
                                           ; SOURCE LINE # 973
00AB 900000      E     MOV     DPTR,#cOsLedCtrl+01H
00AE         ?C0468:
                                           ; SOURCE LINE # 974
00AE 8032              SJMP    ?C0475
                                           ; SOURCE LINE # 975
00B0         ?C0193:
                                           ; SOURCE LINE # 976
00B0 900000      E     MOV     DPTR,#cOsLedCtrl+01H
00B3         ?C0469:
                                           ; SOURCE LINE # 977
00B3 8035              SJMP    ?C0476
                                           ; SOURCE LINE # 978
00B5         ?C0194:
                                           ; SOURCE LINE # 979
00B5 900000      E     MOV     DPTR,#cOsLedCtrl+01H
00B8         ?C0472:
00B8 E0                MOVX    A,@DPTR
00B9 4420              ORL     A,#020H
00BB F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 980
00BC 22                RET     
                                           ; SOURCE LINE # 981
00BD         ?C0195:
                                           ; SOURCE LINE # 982
00BD 900000      E     MOV     DPTR,#cOsLedCtrl+01H
00C0         ?C0470:
                                           ; SOURCE LINE # 983
00C0 8030              SJMP    ?C0477
                                           ; SOURCE LINE # 984
00C2         ?C0196:
                                           ; SOURCE LINE # 985
00C2 900000      E     MOV     DPTR,#cOsLedCtrl+01H
00C5         ?C0471:
                                           ; SOURCE LINE # 986
00C5 8033              SJMP    ?C0478
                                           ; SOURCE LINE # 987
00C7         ?C0197:
                                           ; SOURCE LINE # 988
00C7 900000      E     MOV     DPTR,#cOsLedCtrl+01H
00CA         ?C0473:
00CA E0                MOVX    A,@DPTR
C51 COMPILER V8.12   OEM_6064                                                              07/28/2018 12:03:51 PAGE 69  

00CB 4440              ORL     A,#040H
00CD F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 989
00CE 22                RET     
                                           ; SOURCE LINE # 990
00CF         ?C0198:
                                           ; SOURCE LINE # 991
00CF 900000      E     MOV     DPTR,#cOsLedCtrl+01H
00D2 E0                MOVX    A,@DPTR
00D3 4480              ORL     A,#080H
00D5 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 992
00D6 22                RET     
                                           ; SOURCE LINE # 993
00D7         ?C0199:
                                           ; SOURCE LINE # 994
00D7 900000      E     MOV     DPTR,#cOsLed1Ctrl
00DA         ?C0474:
00DA E0                MOVX    A,@DPTR
00DB 4401              ORL     A,#01H
00DD F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 995
00DE 22                RET     
                                           ; SOURCE LINE # 996
00DF         ?C0200:
                                           ; SOURCE LINE # 997
00DF 900000      E     MOV     DPTR,#cOsLed1Ctrl
00E2         ?C0475:
00E2 E0                MOVX    A,@DPTR
00E3 4402              ORL     A,#02H
00E5 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 998
00E6 22                RET     
                                           ; SOURCE LINE # 999
00E7         ?C0201:
                                           ; SOURCE LINE # 1000
00E7 900000      E     MOV     DPTR,#cOsLed1Ctrl
00EA         ?C0476:
00EA E0                MOVX    A,@DPTR
00EB 4404              ORL     A,#04H
00ED F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1001
00EE 22                RET     
                                           ; SOURCE LINE # 1002
00EF         ?C0202:
                                           ; SOURCE LINE # 1003
00EF 900000      E     MOV     DPTR,#cOsLed1Ctrl
00F2         ?C0477:
00F2 E0                MOVX    A,@DPTR
00F3 4408              ORL     A,#08H
00F5 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1004
00F6 22                RET     
                                           ; SOURCE LINE # 1005
00F7         ?C0203:
                                           ; SOURCE LINE # 1006
00F7 900000      E     MOV     DPTR,#cOsLed1Ctrl
00FA         ?C0478:
00FA E0                MOVX    A,@DPTR
00FB 4410              ORL     A,#010H
00FD F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1007
C51 COMPILER V8.12   OEM_6064                                                              07/28/2018 12:03:51 PAGE 70  

                                           ; SOURCE LINE # 1008
                                           ; SOURCE LINE # 1009
00FE         ?C0204:
00FE 22                RET     
             ; FUNCTION _Cmd_47 (END)

             ; FUNCTION _Cmd_4A (BEGIN)
                                           ; SOURCE LINE # 1012
0000 900000      R     MOV     DPTR,#nPort
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
;---- Variable 'nData' assigned to Register 'R5' ----
                                           ; SOURCE LINE # 1013
                                           ; SOURCE LINE # 1014
0005 ED                MOV     A,R5
0006 B40110            CJNE    A,#01H,?C0205
                                           ; SOURCE LINE # 1015
                                           ; SOURCE LINE # 1016
0009 900000      E     MOV     DPTR,#ResetTestFlag
000C 7401              MOV     A,#01H
000E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1017
000F 900000      E     MOV     DPTR,#GPCRI5
0012 E0                MOVX    A,@DPTR
0013 900000      E     MOV     DPTR,#BRAMBK0+07FH
0016 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1018
0017 800A              SJMP    ?C0206
0019         ?C0205:
                                           ; SOURCE LINE # 1019
0019 ED                MOV     A,R5
001A B40206            CJNE    A,#02H,?C0206
                                           ; SOURCE LINE # 1020
                                           ; SOURCE LINE # 1021
001D 900000      E     MOV     DPTR,#ResetTestFlag
0020 7402              MOV     A,#02H
0022 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1022
0023         ?C0206:
                                           ; SOURCE LINE # 1023
0023 900000      E     MOV     DPTR,#ResetTestFlag
0026 E0                MOVX    A,@DPTR
0027 900000      E     MOV     DPTR,#BRAMBK0+07EH
002A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1025
002B 900000      E     MOV     DPTR,#WinFlashMark
002E 7453              MOV     A,#053H
0030 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1026
0031 900000      E     MOV     DPTR,#WinFlashMark2
0034 7435              MOV     A,#035H
0036 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1027
0037 D2D8              SETB    WDTRST
                                           ; SOURCE LINE # 1028
0039 D2D9              SETB    WDTEB
003B         ?C0208:
                                           ; SOURCE LINE # 1029
003B 80FE              SJMP    ?C0208
             ; FUNCTION _Cmd_4A (END)

             ; FUNCTION _Cmd_4E (BEGIN)
C51 COMPILER V8.12   OEM_6064                                                              07/28/2018 12:03:51 PAGE 71  

                                           ; SOURCE LINE # 1033
0000 900000      R     MOV     DPTR,#nPort
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
0005 A3                INC     DPTR
0006 ED                MOV     A,R5
0007 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1034
                                           ; SOURCE LINE # 1036
0008 900000      E     MOV     DPTR,#eEEPROMBank
000B E0                MOVX    A,@DPTR
000C 6407              XRL     A,#07H
000E 707C              JNZ     ?C0211
0010 900000      R     MOV     DPTR,#nOffSet
0013 E0                MOVX    A,@DPTR
0014 FF                MOV     R7,A
0015 D3                SETB    C
0016 94EF              SUBB    A,#0EFH
0018 4072              JC      ?C0211
001A EF                MOV     A,R7
001B 64F1              XRL     A,#0F1H
001D 606D              JZ      ?C0211
                                           ; SOURCE LINE # 1037
                                           ; SOURCE LINE # 1038
001F 7F4E              MOV     R7,#04EH
0021 120000      E     LCALL   _RamDebug
                                           ; SOURCE LINE # 1039
0024 900000      E     MOV     DPTR,#eEEPROMBank
0027 E0                MOVX    A,@DPTR
0028 FF                MOV     R7,A
0029 120000      E     LCALL   _RamDebug
                                           ; SOURCE LINE # 1040
002C 900000      R     MOV     DPTR,#nOffSet
002F E0                MOVX    A,@DPTR
0030 FF                MOV     R7,A
0031 120000      E     LCALL   _RamDebug
                                           ; SOURCE LINE # 1041
0034 900000      R     MOV     DPTR,#nOffSet
0037 E0                MOVX    A,@DPTR
0038 540F              ANL     A,#0FH
003A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1042
003B E4                CLR     A
003C A3                INC     DPTR
003D F0                MOVX    @DPTR,A
003E         ?C0212:
                                           ; SOURCE LINE # 1043
                                           ; SOURCE LINE # 1044
003E E4                CLR     A
003F 900000      R     MOV     DPTR,#j
0042 F0                MOVX    @DPTR,A
0043         ?C0215:
0043 900000      R     MOV     DPTR,#j
0046 E0                MOVX    A,@DPTR
0047 FF                MOV     R7,A
0048 C3                CLR     C
0049 9410              SUBB    A,#010H
004B 502A              JNC     ?C0216
                                           ; SOURCE LINE # 1045
                                           ; SOURCE LINE # 1046
004D 900000      R     MOV     DPTR,#i
0050 120000      R     LCALL   L?0541
C51 COMPILER V8.12   OEM_6064                                                              07/28/2018 12:03:51 PAGE 72  

0053 120000      E     LCALL   _Read_Eflash_Byte
0056 900000      R     MOV     DPTR,#k
0059 EF                MOV     A,R7
005A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1048
005B F4                CPL     A
005C 6019              JZ      ?C0216
                                           ; SOURCE LINE # 1049
                                           ; SOURCE LINE # 1050
                                           ; SOURCE LINE # 1051
005E         ?C0218:
                                           ; SOURCE LINE # 1053
                                           ; SOURCE LINE # 1054
005E 900000      R     MOV     DPTR,#i
0061 120000      R     LCALL   L?0517
0064 FF                MOV     R7,A
0065 900000      R     MOV     DPTR,#nOffSet
0068 E0                MOVX    A,@DPTR
0069 4F                ORL     A,R7
006A 120000      R     LCALL   L?0552
006D EF                MOV     A,R7
006E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1056
                                           ; SOURCE LINE # 1057
006F         ?C0217:
006F 900000      R     MOV     DPTR,#j
0072 E0                MOVX    A,@DPTR
0073 04                INC     A
0074 F0                MOVX    @DPTR,A
0075 80CC              SJMP    ?C0215
0077         ?C0216:
                                           ; SOURCE LINE # 1058
0077 900000      R     MOV     DPTR,#k
007A E0                MOVX    A,@DPTR
007B F4                CPL     A
007C 601E              JZ      ?C0221
                                           ; SOURCE LINE # 1059
                                           ; SOURCE LINE # 1060
007E         ?C0214:
007E 900000      R     MOV     DPTR,#i
0081 E0                MOVX    A,@DPTR
0082 04                INC     A
0083 F0                MOVX    @DPTR,A
0084 E0                MOVX    A,@DPTR
0085 C3                CLR     C
0086 9404              SUBB    A,#04H
0088 40B4              JC      ?C0212
008A 8010              SJMP    ?C0221
                                           ; SOURCE LINE # 1061
008C         ?C0211:
                                           ; SOURCE LINE # 1063
                                           ; SOURCE LINE # 1064
008C 900000      E     MOV     DPTR,#eEEPROMBank
008F E0                MOVX    A,@DPTR
0090 44B0              ORL     A,#0B0H
0092 FD                MOV     R5,A
0093 900000      R     MOV     DPTR,#nOffSet
0096 E0                MOVX    A,@DPTR
0097 120000      R     LCALL   L?0552
009A EF                MOV     A,R7
009B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1065
C51 COMPILER V8.12   OEM_6064                                                              07/28/2018 12:03:51 PAGE 73  

009C         ?C0221:
                                           ; SOURCE LINE # 1066
009C 900000      R     MOV     DPTR,#nPort
009F E0                MOVX    A,@DPTR
00A0 FF                MOV     R7,A
00A1 900000      E     MOV     DPTR,#eEEPROMData
00A4 E0                MOVX    A,@DPTR
00A5 FD                MOV     R5,A
00A6 020000      E     LJMP    _Data2PortDirect
                                           ; SOURCE LINE # 1067
00A9         L?0552:
00A9 FB                MOV     R3,A
00AA 7F01              MOV     R7,#01H
00AC 120000      E     LCALL   _Read_Eflash_Byte
00AF 900000      E     MOV     DPTR,#eEEPROMData
00B2 22                RET     
             ; FUNCTION _Cmd_4E (END)

             ; FUNCTION _Cmd_51 (BEGIN)
                                           ; SOURCE LINE # 1070
0000 900000      R     MOV     DPTR,#nPort
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1071
0005 7D01              MOV     R5,#01H
0007 120000      E     LCALL   _Data2Port
                                           ; SOURCE LINE # 1072
000A 900000      R     MOV     DPTR,#nPort
000D E0                MOVX    A,@DPTR
000E FF                MOV     R7,A
000F 7D1B              MOV     R5,#01BH
0011 120000      E     LCALL   _MultiB2Port
                                           ; SOURCE LINE # 1075
0014 900000      R     MOV     DPTR,#nPort
0017 E0                MOVX    A,@DPTR
0018 FF                MOV     R7,A
0019 E4                CLR     A
001A FD                MOV     R5,A
001B 020000      E     LJMP    _Data2PortDirect
             ; FUNCTION _Cmd_51 (END)

             ; FUNCTION _Cmd_52_A0 (BEGIN)
                                           ; SOURCE LINE # 1078
0000 900000      R     MOV     DPTR,#nPort
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1079
0005 7D45              MOV     R5,#045H
0007 120000      E     LCALL   _Data2Port
                                           ; SOURCE LINE # 1080
000A 7D47              MOV     R5,#047H
                                           ; SOURCE LINE # 1081
000C 120000      R     LCALL   L?0528
000F 7D35              MOV     R5,#035H
0011 120000      E     LCALL   _MultiB2Port
                                           ; SOURCE LINE # 1082
0014 7D33              MOV     R5,#033H
                                           ; SOURCE LINE # 1084
0016 120000      R     LCALL   L?0528
0019 7D30              MOV     R5,#030H
001B 020000      E     LJMP    _Data2PortDirect
                                           ; SOURCE LINE # 1085
C51 COMPILER V8.12   OEM_6064                                                              07/28/2018 12:03:51 PAGE 74  

001E         L?0528:
001E 900000      R     MOV     DPTR,#nPort
0021 E0                MOVX    A,@DPTR
0022 FF                MOV     R7,A
0023 120000      E     LCALL   _MultiB2Port
0026 900000      R     MOV     DPTR,#nPort
0029 E0                MOVX    A,@DPTR
002A FF                MOV     R7,A
002B 22                RET     
             ; FUNCTION _Cmd_52_A0 (END)

             ; FUNCTION _Cmd_52_A3 (BEGIN)
                                           ; SOURCE LINE # 1087
;---- Variable 'nPort' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 1089
0000 7D1A              MOV     R5,#01AH
0002 020000      E     LJMP    _Data2PortDirect
             ; FUNCTION _Cmd_52_A3 (END)

             ; FUNCTION _Cmd_52_A4 (BEGIN)
                                           ; SOURCE LINE # 1092
0000 900000      R     MOV     DPTR,#nPort
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1093
                                           ; SOURCE LINE # 1094
0005 900000      E     MOV     DPTR,#SYS_MISC1
0008 E0                MOVX    A,@DPTR
0009 900000      R     MOV     DPTR,#nPort
000C 30E617            JNB     ACC.6,?C0226
                                           ; SOURCE LINE # 1095
                                           ; SOURCE LINE # 1096
000F E0                MOVX    A,@DPTR
0010 FF                MOV     R7,A
0011 7D80              MOV     R5,#080H
0013 120000      E     LCALL   _Data2PortDirect
                                           ; SOURCE LINE # 1097
0016 900000      E     MOV     DPTR,#SYS_MISC1
0019 E0                MOVX    A,@DPTR
001A 4420              ORL     A,#020H
001C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1098
001D E0                MOVX    A,@DPTR
001E 54BF              ANL     A,#0BFH
0020 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1099
0021 E0                MOVX    A,@DPTR
0022 54F7              ANL     A,#0F7H
0024 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1100
0025 22                RET     
0026         ?C0226:
                                           ; SOURCE LINE # 1102
                                           ; SOURCE LINE # 1103
0026 E0                MOVX    A,@DPTR
0027 FF                MOV     R7,A
0028 E4                CLR     A
0029 FD                MOV     R5,A
002A 120000      E     LCALL   _Data2PortDirect
                                           ; SOURCE LINE # 1104
002D 900000      E     MOV     DPTR,#SYS_MISC1
0030 E0                MOVX    A,@DPTR
C51 COMPILER V8.12   OEM_6064                                                              07/28/2018 12:03:51 PAGE 75  

0031 54DF              ANL     A,#0DFH
0033 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1105
                                           ; SOURCE LINE # 1106
0034         ?C0228:
0034 22                RET     
             ; FUNCTION _Cmd_52_A4 (END)

             ; FUNCTION _Cmd_52_A5 (BEGIN)
                                           ; SOURCE LINE # 1108
;---- Variable 'nPort' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 1109
                                           ; SOURCE LINE # 1110
0000 E4                CLR     A
0001 FD                MOV     R5,A
0002 020000      E     LJMP    _Data2PortDirect
             ; FUNCTION _Cmd_52_A5 (END)

             ; FUNCTION _Cmd_52_A6 (BEGIN)
                                           ; SOURCE LINE # 1114
;---- Variable 'nPort' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 1115
                                           ; SOURCE LINE # 1116
0000 7D01              MOV     R5,#01H
0002 020000      E     LJMP    _Data2PortDirect
             ; FUNCTION _Cmd_52_A6 (END)

             ; FUNCTION _Cmd_52_A7 (BEGIN)
                                           ; SOURCE LINE # 1119
;---- Variable 'nPort' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 1120
                                           ; SOURCE LINE # 1121
0000 7DB8              MOV     R5,#0B8H
0002 020000      E     LJMP    _Data2PortDirect
             ; FUNCTION _Cmd_52_A7 (END)

             ; FUNCTION _Cmd_53 (BEGIN)
                                           ; SOURCE LINE # 1125
0000 900000      R     MOV     DPTR,#nPort
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
;---- Variable 'nDataM' assigned to Register 'R3' ----
;---- Variable 'nDataH' assigned to Register 'R5' ----
                                           ; SOURCE LINE # 1126
                                           ; SOURCE LINE # 1127
0005 CF                XCH     A,R7
0006 ED                MOV     A,R5
0007 CF                XCH     A,R7
0008 CE                XCH     A,R6
0009 EB                MOV     A,R3
000A CE                XCH     A,R6
000B CD                XCH     A,R5
000C EE                MOV     A,R6
000D CD                XCH     A,R5
000E 900000      R     MOV     DPTR,#nDataL
0011 E0                MOVX    A,@DPTR
0012 FB                MOV     R3,A
0013 120000      E     LCALL   _Read_Eflash_Byte
0016 900000      E     MOV     DPTR,#eEEPROMData
0019 EF                MOV     A,R7
001A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1128
C51 COMPILER V8.12   OEM_6064                                                              07/28/2018 12:03:51 PAGE 76  

001B 900000      R     MOV     DPTR,#nPort
001E E0                MOVX    A,@DPTR
001F FF                MOV     R7,A
0020 900000      E     MOV     DPTR,#eEEPROMData
0023 E0                MOVX    A,@DPTR
0024 FD                MOV     R5,A
0025 020000      E     LJMP    _Data2PortDirect
             ; FUNCTION _Cmd_53 (END)

             ; FUNCTION _Cmd_58 (BEGIN)
                                           ; SOURCE LINE # 1132
0000 900000      R     MOV     DPTR,#sCount
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1133
                                           ; SOURCE LINE # 1141
0005 22                RET     
             ; FUNCTION _Cmd_58 (END)

             ; FUNCTION _Cmd_59 (BEGIN)
                                           ; SOURCE LINE # 1143
0000 900000      R     MOV     DPTR,#nPort
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
0005 900000      R     MOV     DPTR,#nData2
0008 EB                MOV     A,R3
0009 F0                MOVX    @DPTR,A
000A 900000      R     MOV     DPTR,#nData
000D ED                MOV     A,R5
000E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1144
                                           ; SOURCE LINE # 1145
000F 120000      E     LCALL   ?C?CCASE
0012 0000        R     DW      ?C0235
0014 60                DB      060H
0015 0000        R     DW      ?C0236
0017 64                DB      064H
0018 0000        R     DW      ?C0237
001A 65                DB      065H
001B 0000        R     DW      ?C0238
001D 6E                DB      06EH
001E 0000        R     DW      ?C0239
0020 76                DB      076H
0021 0000        R     DW      ?C0240
0023 77                DB      077H
0024 0000        R     DW      ?C0241
0026 7A                DB      07AH
0027 0000        R     DW      ?C0242
0029 7B                DB      07BH
002A 0000        R     DW      ?C0243
002C 7C                DB      07CH
002D 0000        R     DW      ?C0244
002F 7D                DB      07DH
0030 0000        R     DW      ?C0245
0032 80                DB      080H
0033 0000        R     DW      ?C0247
0035 81                DB      081H
0036 0000        R     DW      ?C0249
0038 82                DB      082H
0039 0000        R     DW      ?C0250
003B 94                DB      094H
003C 0000        R     DW      ?C0251
C51 COMPILER V8.12   OEM_6064                                                              07/28/2018 12:03:51 PAGE 77  

003E 95                DB      095H
003F 0000        R     DW      ?C0252
0041 9A                DB      09AH
0042 0000        R     DW      ?C0253
0044 9B                DB      09BH
0045 0000        R     DW      ?C0254
0047 9E                DB      09EH
0048 0000        R     DW      ?C0255
004A A2                DB      0A2H
004B 0000        R     DW      ?C0256
004D A3                DB      0A3H
004E 0000        R     DW      ?C0257
0050 A4                DB      0A4H
0051 0000        R     DW      ?C0258
0053 B9                DB      0B9H
0054 0000        R     DW      ?C0259
0056 BA                DB      0BAH
0057 0000        R     DW      ?C0260
0059 C1                DB      0C1H
005A 0000        R     DW      ?C0261
005C C2                DB      0C2H
005D 0000        R     DW      ?C0262
005F D2                DB      0D2H
0060 0000        R     DW      ?C0263
0062 D7                DB      0D7H
0063 0000        R     DW      ?C0264
0065 D8                DB      0D8H
0066 0000        R     DW      ?C0265
0068 D9                DB      0D9H
0069 0000        R     DW      ?C0266
006B DA                DB      0DAH
006C 0000        R     DW      ?C0267
006E E1                DB      0E1H
006F 0000        R     DW      ?C0268
0071 E2                DB      0E2H
0072 0000        R     DW      ?C0269
0074 E4                DB      0E4H
0075 0000        R     DW      ?C0270
0077 E5                DB      0E5H
0078 0000        R     DW      ?C0271
007A E6                DB      0E6H
007B 0000        R     DW      ?C0272
007D E7                DB      0E7H
007E 0000        R     DW      ?C0273
0080 E8                DB      0E8H
0081 0000        R     DW      ?C0274
0083 E9                DB      0E9H
0084 0000        R     DW      ?C0278
0086 F6                DB      0F6H
0087 0000        R     DW      ?C0278
0089 F7                DB      0F7H
008A 0000        R     DW      ?C0278
008C F8                DB      0F8H
008D 0000        R     DW      ?C0278
008F F9                DB      0F9H
0090 0000              DW      00H
0092 0000        R     DW      ?C0288
                                           ; SOURCE LINE # 1146
                                           ; SOURCE LINE # 1183
0094         ?C0235:
                                           ; SOURCE LINE # 1184
0094 900000      E     MOV     DPTR,#cCmd
C51 COMPILER V8.12   OEM_6064                                                              07/28/2018 12:03:51 PAGE 78  

                                           ; SOURCE LINE # 1185
0097 020000      R     LJMP    ?C0488
                                           ; SOURCE LINE # 1186
009A         ?C0236:
                                           ; SOURCE LINE # 1187
009A 900000      E     MOV     DPTR,#cCmd
009D E0                MOVX    A,@DPTR
009E 4440              ORL     A,#040H
00A0 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1188
00A1 900000      E     MOV     DPTR,#DEBOUNCE_CONT1
                                           ; SOURCE LINE # 1189
00A4 020000      R     LJMP    ?C0480
                                           ; SOURCE LINE # 1191
00A7         ?C0237:
                                           ; SOURCE LINE # 1192
00A7 900000      E     MOV     DPTR,#cCmd
00AA E0                MOVX    A,@DPTR
00AB 54BF              ANL     A,#0BFH
00AD F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1193
00AE 900000      E     MOV     DPTR,#DEBOUNCE_CONT1
00B1 7464              MOV     A,#064H
00B3 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1194
00B4 22                RET     
                                           ; SOURCE LINE # 1196
00B5         ?C0238:
                                           ; SOURCE LINE # 1197
00B5 900000      R     MOV     DPTR,#nData
00B8 E0                MOVX    A,@DPTR
00B9 900000      E     MOV     DPTR,#uCritBattWakeThre
00BC F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1198
00BD E0                MOVX    A,@DPTR
00BE 4401              ORL     A,#01H
00C0 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1199
00C1 900000      E     MOV     DPTR,#uIffsCnt
00C4 7428              MOV     A,#028H
00C6 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1200
00C7 22                RET     
                                           ; SOURCE LINE # 1202
00C8         ?C0239:
                                           ; SOURCE LINE # 1203
                                           ; SOURCE LINE # 1204
                                           ; SOURCE LINE # 1205
00C8 120000      R     LCALL   L?0530
00CB 54EF              ANL     A,#0EFH
00CD F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1206
00CE 22                RET     
                                           ; SOURCE LINE # 1207
00CF         ?C0240:
                                           ; SOURCE LINE # 1208
                                           ; SOURCE LINE # 1209
                                           ; SOURCE LINE # 1210
00CF 120000      R     LCALL   L?0530
00D2 4410              ORL     A,#010H
00D4 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1211
C51 COMPILER V8.12   OEM_6064                                                              07/28/2018 12:03:51 PAGE 79  

00D5 22                RET     
                                           ; SOURCE LINE # 1213
00D6         ?C0241:
                                           ; SOURCE LINE # 1214
00D6 900000      E     MOV     DPTR,#pDevStus
00D9 E0                MOVX    A,@DPTR
00DA 4408              ORL     A,#08H
00DC F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1215
00DD 020000      E     LJMP    EnablePS2Port_2
                                           ; SOURCE LINE # 1216
                                           ; SOURCE LINE # 1217
00E0         ?C0242:
                                           ; SOURCE LINE # 1218
00E0 900000      E     MOV     DPTR,#pDevStus
00E3 E0                MOVX    A,@DPTR
00E4 54F7              ANL     A,#0F7H
00E6 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1219
00E7 020000      E     LJMP    DisablePS2Port_2
                                           ; SOURCE LINE # 1220
                                           ; SOURCE LINE # 1222
00EA         ?C0243:
                                           ; SOURCE LINE # 1223
00EA 900000      E     MOV     DPTR,#SysStatus
00ED E0                MOVX    A,@DPTR
00EE 547F              ANL     A,#07FH
00F0 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1224
00F1 C200        E     CLR     Ccb42_DISAB_KEY
                                           ; SOURCE LINE # 1225
00F3 7800        E     MOV     R0,#LOW Flag
00F5 E6                MOV     A,@R0
00F6 54FE              ANL     A,#0FEH
00F8 F6                MOV     @R0,A
                                           ; SOURCE LINE # 1226
00F9 020000      E     LJMP    Unlock_Scan
                                           ; SOURCE LINE # 1227
                                           ; SOURCE LINE # 1229
00FC         ?C0244:
                                           ; SOURCE LINE # 1230
                                           ; SOURCE LINE # 1231
00FC 120000      R     LCALL   L?0545
                                           ; SOURCE LINE # 1232
                                           ; SOURCE LINE # 1233
                                           ; SOURCE LINE # 1234
00FF 020000      R     LJMP    ?C0481
                                           ; SOURCE LINE # 1236
0102         ?C0245:
                                           ; SOURCE LINE # 1237
0102 900000      E     MOV     DPTR,#cBattFlag0
0105 E0                MOVX    A,@DPTR
0106 4402              ORL     A,#02H
                                           ; SOURCE LINE # 1238
                                           ; SOURCE LINE # 1239
0108 120000      R     LCALL   L?0532
010B 54FB              ANL     A,#0FBH
                                           ; SOURCE LINE # 1240
                                           ; SOURCE LINE # 1241
                                           ; SOURCE LINE # 1242
010D 120000      R     LCALL   L?0525
0110 5003              JNC     $ + 5H
C51 COMPILER V8.12   OEM_6064                                                              07/28/2018 12:03:51 PAGE 80  

0112 020000      R     LJMP    ?C0288
                                           ; SOURCE LINE # 1243
0115 E4                CLR     A
0116 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1244
0117 22                RET     
                                           ; SOURCE LINE # 1246
0118         ?C0247:
                                           ; SOURCE LINE # 1247
                                           ; SOURCE LINE # 1248
                                           ; SOURCE LINE # 1249
0118 120000      R     LCALL   L?0531
011B 4404              ORL     A,#04H
                                           ; SOURCE LINE # 1250
                                           ; SOURCE LINE # 1251
                                           ; SOURCE LINE # 1252
011D 120000      R     LCALL   L?0525
0120 5003              JNC     $ + 5H
0122 020000      R     LJMP    ?C0288
                                           ; SOURCE LINE # 1253
0125 E4                CLR     A
0126 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1254
0127 22                RET     
                                           ; SOURCE LINE # 1255
0128         ?C0249:
                                           ; SOURCE LINE # 1256
                                           ; SOURCE LINE # 1257
                                           ; SOURCE LINE # 1258
0128 120000      R     LCALL   L?0531
012B 54FB              ANL     A,#0FBH
012D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1260
012E 900000      E     MOV     DPTR,#ACOFF_SOURCE
0131 E0                MOVX    A,@DPTR
0132 54FB              ANL     A,#0FBH
0134 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1261
0135 020000      E     LJMP    BATT_LEN_OFF
                                           ; SOURCE LINE # 1264
                                           ; SOURCE LINE # 1266
0138         ?C0250:
                                           ; SOURCE LINE # 1267
0138 900000      E     MOV     DPTR,#cCmd
013B E0                MOVX    A,@DPTR
013C 4420              ORL     A,#020H
013E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1268
013F 900000      E     MOV     DPTR,#GPDRJ
                                           ; SOURCE LINE # 1269
0142 807E              SJMP    ?C0482
                                           ; SOURCE LINE # 1270
0144         ?C0251:
                                           ; SOURCE LINE # 1271
0144 900000      E     MOV     DPTR,#cCmd
0147 E0                MOVX    A,@DPTR
0148 54DF              ANL     A,#0DFH
014A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1272
014B 900000      E     MOV     DPTR,#GPDRJ
                                           ; SOURCE LINE # 1273
014E 806A              SJMP    ?C0483
C51 COMPILER V8.12   OEM_6064                                                              07/28/2018 12:03:51 PAGE 81  

                                           ; SOURCE LINE # 1275
0150         ?C0252:
                                           ; SOURCE LINE # 1276
0150 900000      E     MOV     DPTR,#cBattFlag0
0153 E0                MOVX    A,@DPTR
0154 4480              ORL     A,#080H
0156 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1277
0157 900000      E     MOV     DPTR,#ACOFF_SOURCE
015A E0                MOVX    A,@DPTR
015B 4408              ORL     A,#08H
015D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1278
015E 900000      E     MOV     DPTR,#SYS_STATUS
0161 E0                MOVX    A,@DPTR
0162 547F              ANL     A,#07FH
0164 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1280
0165 120000      E     LCALL   BATT_LEN_ON
                                           ; SOURCE LINE # 1281
0168 7F38              MOV     R7,#038H
                                           ; SOURCE LINE # 1282
016A 801A              SJMP    ?C0484
                                           ; SOURCE LINE # 1283
016C         ?C0253:
                                           ; SOURCE LINE # 1284
016C 900000      E     MOV     DPTR,#cBattFlag0
016F E0                MOVX    A,@DPTR
0170 547F              ANL     A,#07FH
0172 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1285
0173 900000      E     MOV     DPTR,#ACOFF_SOURCE
0176 E0                MOVX    A,@DPTR
0177 54F7              ANL     A,#0F7H
0179 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1286
017A 900000      E     MOV     DPTR,#SYS_STATUS
017D E0                MOVX    A,@DPTR
017E 4480              ORL     A,#080H
0180 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1287
0181 120000      E     LCALL   BATT_LEN_OFF
                                           ; SOURCE LINE # 1288
0184 7F37              MOV     R7,#037H
0186         ?C0484:
0186 020000      E     LJMP    _ECSMI_SCIEvent
                                           ; SOURCE LINE # 1289
                                           ; SOURCE LINE # 1291
0189         ?C0254:
                                           ; SOURCE LINE # 1292
0189         ?C0481:
0189 7800        E     MOV     R0,#LOW Flag
018B E6                MOV     A,@R0
018C 4401              ORL     A,#01H
018E F6                MOV     @R0,A
                                           ; SOURCE LINE # 1293
018F 020000      E     LJMP    Lock_Scan
                                           ; SOURCE LINE # 1294
                                           ; SOURCE LINE # 1296
0192         ?C0255:
                                           ; SOURCE LINE # 1297
0192 900000      E     MOV     DPTR,#SysStatus
C51 COMPILER V8.12   OEM_6064                                                              07/28/2018 12:03:51 PAGE 82  

0195 E0                MOVX    A,@DPTR
0196 4402              ORL     A,#02H
0198 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1298
0199 7F04              MOV     R7,#04H
019B 120000      E     LCALL   _ProcessSID
                                           ; SOURCE LINE # 1299
019E 900000      E     MOV     DPTR,#PWSeqStep
01A1 7401              MOV     A,#01H
01A3 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1300
01A4 E4                CLR     A
01A5 900000      E     MOV     DPTR,#PowSeqDelay
01A8 F0                MOVX    @DPTR,A
01A9 A3                INC     DPTR
01AA F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1301
01AB 7F0A              MOV     R7,#0AH
01AD 120000      E     LCALL   _RamDebug
                                           ; SOURCE LINE # 1302
01B0 900000      E     MOV     DPTR,#SysPowState
01B3         ?C0480:
01B3 7405              MOV     A,#05H
01B5 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1303
01B6 22                RET     
                                           ; SOURCE LINE # 1305
01B7         ?C0256:
                                           ; SOURCE LINE # 1306
01B7 900000      E     MOV     DPTR,#cBattInform
01BA         ?C0483:
01BA E0                MOVX    A,@DPTR
01BB 4402              ORL     A,#02H
01BD F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1307
01BE 22                RET     
                                           ; SOURCE LINE # 1308
01BF         ?C0257:
                                           ; SOURCE LINE # 1309
01BF 900000      E     MOV     DPTR,#cBattInform
01C2         ?C0482:
01C2 E0                MOVX    A,@DPTR
01C3 54FD              ANL     A,#0FDH
01C5 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1310
01C6 22                RET     
                                           ; SOURCE LINE # 1349
01C7         ?C0258:
                                           ; SOURCE LINE # 1350
01C7 900000      E     MOV     DPTR,#uReserve07
01CA         ?C0479:
                                           ; SOURCE LINE # 1351
01CA 804C              SJMP    ?C0488
                                           ; SOURCE LINE # 1352
01CC         ?C0259:
                                           ; SOURCE LINE # 1353
01CC 900000      E     MOV     DPTR,#uReserve07
                                           ; SOURCE LINE # 1354
01CF 800B              SJMP    ?C0486
                                           ; SOURCE LINE # 1356
01D1         ?C0260:
                                           ; SOURCE LINE # 1357
C51 COMPILER V8.12   OEM_6064                                                              07/28/2018 12:03:51 PAGE 83  

01D1 900000      E     MOV     DPTR,#cBattFlag0
01D4 E0                MOVX    A,@DPTR
01D5 4408              ORL     A,#08H
01D7 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1358
01D8 22                RET     
                                           ; SOURCE LINE # 1359
01D9         ?C0261:
                                           ; SOURCE LINE # 1360
01D9 900000      E     MOV     DPTR,#cBattFlag0
01DC         ?C0486:
01DC E0                MOVX    A,@DPTR
01DD 54F7              ANL     A,#0F7H
01DF F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1362
01E0 22                RET     
                                           ; SOURCE LINE # 1364
01E1         ?C0262:
                                           ; SOURCE LINE # 1365
01E1 900000      E     MOV     DPTR,#DCR6
01E4 747F              MOV     A,#07FH
01E6 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1366
01E7 900000      E     MOV     DPTR,#PWM_LEDBeep_CNT
                                           ; SOURCE LINE # 1367
01EA 020000      R     LJMP    ?C0487
                                           ; SOURCE LINE # 1369
01ED         ?C0263:
                                           ; SOURCE LINE # 1370
01ED 900000      E     MOV     DPTR,#nStopChgStat3L
01F0 E0                MOVX    A,@DPTR
01F1 4420              ORL     A,#020H
01F3 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1371
01F4 22                RET     
                                           ; SOURCE LINE # 1373
01F5         ?C0264:
                                           ; SOURCE LINE # 1374
01F5 900000      E     MOV     DPTR,#nStopChgStat3L
01F8 E0                MOVX    A,@DPTR
01F9 54DF              ANL     A,#0DFH
01FB F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1375
01FC 22                RET     
                                           ; SOURCE LINE # 1377
01FD         ?C0265:
                                           ; SOURCE LINE # 1378
01FD 900000      E     MOV     DPTR,#KBHISR
0200         ?C0485:
                                           ; SOURCE LINE # 1379
0200 8016              SJMP    ?C0488
                                           ; SOURCE LINE # 1381
0202         ?C0266:
                                           ; SOURCE LINE # 1382
0202 900000      E     MOV     DPTR,#KBHISR
                                           ; SOURCE LINE # 1383
0205 8027              SJMP    ?C0489
                                           ; SOURCE LINE # 1385
0207         ?C0267:
                                           ; SOURCE LINE # 1386
0207 900000      E     MOV     DPTR,#cCmd
020A E0                MOVX    A,@DPTR
C51 COMPILER V8.12   OEM_6064                                                              07/28/2018 12:03:51 PAGE 84  

020B 54F7              ANL     A,#0F7H
020D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1387
020E 900000      E     MOV     DPTR,#OEMControl
0211 E0                MOVX    A,@DPTR
0212 54FD              ANL     A,#0FDH
0214 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1388
0215 900000      E     MOV     DPTR,#GPDRJ
0218         ?C0488:
0218 E0                MOVX    A,@DPTR
0219 4404              ORL     A,#04H
021B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1389
021C 22                RET     
                                           ; SOURCE LINE # 1391
021D         ?C0268:
                                           ; SOURCE LINE # 1392
021D 900000      E     MOV     DPTR,#cCmd
0220 E0                MOVX    A,@DPTR
0221 4408              ORL     A,#08H
0223 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1393
0224 900000      E     MOV     DPTR,#OEMControl
0227 E0                MOVX    A,@DPTR
0228 4402              ORL     A,#02H
022A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1394
022B 900000      E     MOV     DPTR,#GPDRJ
022E         ?C0489:
022E E0                MOVX    A,@DPTR
022F 54FB              ANL     A,#0FBH
0231 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1395
0232 22                RET     
                                           ; SOURCE LINE # 1397
0233         ?C0269:
                                           ; SOURCE LINE # 1398
0233 900000      E     MOV     DPTR,#cKBStatus
0236 E0                MOVX    A,@DPTR
0237 4403              ORL     A,#03H
                                           ; SOURCE LINE # 1399
                                           ; SOURCE LINE # 1400
0239 8015              SJMP    ?C0492
                                           ; SOURCE LINE # 1401
023B         ?C0270:
                                           ; SOURCE LINE # 1402
023B 120000      R     LCALL   L?0546
023E         ?C0490:
                                           ; SOURCE LINE # 1403
                                           ; SOURCE LINE # 1404
023E 8010              SJMP    ?C0492
                                           ; SOURCE LINE # 1405
0240         ?C0271:
                                           ; SOURCE LINE # 1406
0240 120000      R     LCALL   L?0546
0243 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1407
0244 E0                MOVX    A,@DPTR
0245 4402              ORL     A,#02H
0247         ?C0491:
                                           ; SOURCE LINE # 1408
C51 COMPILER V8.12   OEM_6064                                                              07/28/2018 12:03:51 PAGE 85  

                                           ; SOURCE LINE # 1409
0247 8007              SJMP    ?C0492
                                           ; SOURCE LINE # 1410
0249         ?C0272:
                                           ; SOURCE LINE # 1411
0249 120000      R     LCALL   L?0547
024C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1412
024D E0                MOVX    A,@DPTR
024E 4401              ORL     A,#01H
0250         ?C0492:
0250 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1413
0251 020000      E     LJMP    LoadKBMatrixToRAM
                                           ; SOURCE LINE # 1414
                                           ; SOURCE LINE # 1416
0254         ?C0273:
                                           ; SOURCE LINE # 1417
0254 900000      E     MOV     DPTR,#SYS_MISC1
0257 E0                MOVX    A,@DPTR
0258 4480              ORL     A,#080H
025A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1418
025B 22                RET     
                                           ; SOURCE LINE # 1419
025C         ?C0274:
                                           ; SOURCE LINE # 1420
025C 900000      E     MOV     DPTR,#SYS_MISC1
025F E0                MOVX    A,@DPTR
0260 547F              ANL     A,#07FH
0262 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1421
0263 22                RET     
                                           ; SOURCE LINE # 1423
                                           ; SOURCE LINE # 1424
                                           ; SOURCE LINE # 1425
                                           ; SOURCE LINE # 1426
0264         ?C0278:
                                           ; SOURCE LINE # 1427
0264 900000      E     MOV     DPTR,#SYS_MISC1
0267 E0                MOVX    A,@DPTR
0268 30E707            JNB     ACC.7,?C0279
                                           ; SOURCE LINE # 1428
                                           ; SOURCE LINE # 1429
026B 900000      E     MOV     DPTR,#cSysActionFlag
026E         ?C0487:
026E 7404              MOV     A,#04H
0270 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1430
0271 22                RET     
0272         ?C0279:
                                           ; SOURCE LINE # 1432
                                           ; SOURCE LINE # 1433
0272 900000      R     MOV     DPTR,#nData
0275 E0                MOVX    A,@DPTR
0276 FF                MOV     R7,A
0277 B4F602            CJNE    A,#0F6H,?C0281
                                           ; SOURCE LINE # 1434
027A 8004              SJMP    ?C0493
027C         ?C0281:
                                           ; SOURCE LINE # 1435
027C EF                MOV     A,R7
C51 COMPILER V8.12   OEM_6064                                                              07/28/2018 12:03:51 PAGE 86  

027D B4F707            CJNE    A,#0F7H,?C0283
                                           ; SOURCE LINE # 1436
0280         ?C0493:
0280 900000      E     MOV     DPTR,#cSysActionFlag
0283 7403              MOV     A,#03H
0285 F0                MOVX    @DPTR,A
0286 22                RET     
0287         ?C0283:
                                           ; SOURCE LINE # 1437
0287 EF                MOV     A,R7
0288 B4F807            CJNE    A,#0F8H,?C0285
                                           ; SOURCE LINE # 1438
028B 900000      E     MOV     DPTR,#cSysActionFlag
028E 7402              MOV     A,#02H
0290 F0                MOVX    @DPTR,A
0291 22                RET     
0292         ?C0285:
                                           ; SOURCE LINE # 1439
0292 EF                MOV     A,R7
0293 B4F906            CJNE    A,#0F9H,?C0288
                                           ; SOURCE LINE # 1440
0296 900000      E     MOV     DPTR,#cSysActionFlag
0299 7401              MOV     A,#01H
029B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1441
                                           ; SOURCE LINE # 1452
                                           ; SOURCE LINE # 1453
                                           ; SOURCE LINE # 1454
029C         ?C0288:
029C 22                RET     
             ; FUNCTION _Cmd_59 (END)

             ; FUNCTION _Cmd_5C (BEGIN)
                                           ; SOURCE LINE # 1456
;---- Variable 'nPort' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 1457
                                           ; SOURCE LINE # 1459
0000 900000      E     MOV     DPTR,#nBrightValue
0003 E0                MOVX    A,@DPTR
0004 FD                MOV     R5,A
0005 020000      E     LJMP    _Data2PortDirect
             ; FUNCTION _Cmd_5C (END)

             ; FUNCTION _Cmd_5D (BEGIN)
                                           ; SOURCE LINE # 1462
;---- Variable 'sCount' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 1463
                                           ; SOURCE LINE # 1464
0000 900000      E     MOV     DPTR,#nBrightValue
0003 E0                MOVX    A,@DPTR
0004 6F                XRL     A,R7
0005 6032              JZ      ?C0297
                                           ; SOURCE LINE # 1465
                                           ; SOURCE LINE # 1467
0007 900000      E     MOV     DPTR,#SYS_STATUS
000A E0                MOVX    A,@DPTR
000B 5407              ANL     A,#07H
000D C3                CLR     C
000E 9404              SUBB    A,#04H
0010 4018              JC      ?C0291
0012 E0                MOVX    A,@DPTR
0013 5407              ANL     A,#07H
C51 COMPILER V8.12   OEM_6064                                                              07/28/2018 12:03:51 PAGE 87  

0015 D3                SETB    C
0016 9406              SUBB    A,#06H
0018 5010              JNC     ?C0291
                                           ; SOURCE LINE # 1468
                                           ; SOURCE LINE # 1469
001A EF                MOV     A,R7
001B C3                CLR     C
001C 9415              SUBB    A,#015H
001E 900000      E     MOV     DPTR,#nBrightValue
0021 4004              JC      ?C0292
                                           ; SOURCE LINE # 1470
                                           ; SOURCE LINE # 1471
0023 7414              MOV     A,#014H
0025 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1472
0026 22                RET     
0027         ?C0292:
                                           ; SOURCE LINE # 1474
                                           ; SOURCE LINE # 1475
0027 EF                MOV     A,R7
0028 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1476
                                           ; SOURCE LINE # 1477
0029 22                RET     
002A         ?C0291:
                                           ; SOURCE LINE # 1479
                                           ; SOURCE LINE # 1480
002A EF                MOV     A,R7
002B C3                CLR     C
002C 940A              SUBB    A,#0AH
002E 900000      E     MOV     DPTR,#nBrightValue
0031 4004              JC      ?C0295
                                           ; SOURCE LINE # 1481
                                           ; SOURCE LINE # 1482
0033 7409              MOV     A,#09H
0035 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1483
0036 22                RET     
0037         ?C0295:
                                           ; SOURCE LINE # 1485
                                           ; SOURCE LINE # 1486
0037 EF                MOV     A,R7
0038 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1487
                                           ; SOURCE LINE # 1488
                                           ; SOURCE LINE # 1489
                                           ; SOURCE LINE # 1490
0039         ?C0297:
0039 22                RET     
             ; FUNCTION _Cmd_5D (END)

             ; FUNCTION _Cmd_71 (BEGIN)
                                           ; SOURCE LINE # 1491
;---- Variable 'nData' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 1492
                                           ; SOURCE LINE # 1520
0000 900000      E     MOV     DPTR,#uMBID
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1521
0005 020000      E     LJMP    LoadKBMatrixToRAM
             ; FUNCTION _Cmd_71 (END)
C51 COMPILER V8.12   OEM_6064                                                              07/28/2018 12:03:51 PAGE 88  


             ; FUNCTION _Cmd_72 (BEGIN)
                                           ; SOURCE LINE # 1526
;---- Variable 'nData' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 1527
                                           ; SOURCE LINE # 1528
0000 EF                MOV     A,R7
0001 247F              ADD     A,#07FH
0003 600A              JZ      ?C0301
0005 04                INC     A
0006 700C              JNZ     ?C0302
                                           ; SOURCE LINE # 1529
                                           ; SOURCE LINE # 1530
0008         ?C0300:
                                           ; SOURCE LINE # 1531
0008 900000      E     MOV     DPTR,#testtoolflag
000B 7401              MOV     A,#01H
000D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1532
000E 22                RET     
                                           ; SOURCE LINE # 1533
000F         ?C0301:
                                           ; SOURCE LINE # 1534
000F E4                CLR     A
0010 900000      E     MOV     DPTR,#testtoolflag
0013 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1535
                                           ; SOURCE LINE # 1536
                                           ; SOURCE LINE # 1538
0014         ?C0302:
0014 22                RET     
             ; FUNCTION _Cmd_72 (END)

             ; FUNCTION Cmd_75 (BEGIN)
                                           ; SOURCE LINE # 1541
                                           ; SOURCE LINE # 1542
                                           ; SOURCE LINE # 1543
0000 900000      E     MOV     DPTR,#PCH_ColdBoot_TimeOut
0003 7414              MOV     A,#014H
0005 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1544
0006 22                RET     
             ; FUNCTION Cmd_75 (END)

             ; FUNCTION _Cmd_7A (BEGIN)
                                           ; SOURCE LINE # 1548
0000 900000      R     MOV     DPTR,#nPort
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
0005 A3                INC     DPTR
0006 ED                MOV     A,R5
0007 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1549
                                           ; SOURCE LINE # 1550
0008 7FAA              MOV     R7,#0AAH
000A 120000      E     LCALL   _RamDebug
                                           ; SOURCE LINE # 1551
000D 900000      R     MOV     DPTR,#nData
0010 E0                MOVX    A,@DPTR
0011 FF                MOV     R7,A
0012 120000      E     LCALL   _RamDebug
                                           ; SOURCE LINE # 1552
C51 COMPILER V8.12   OEM_6064                                                              07/28/2018 12:03:51 PAGE 89  

0015 900000      R     MOV     DPTR,#nData
0018 E0                MOVX    A,@DPTR
0019 24EF              ADD     A,#0EFH
001B 600F              JZ      ?C0306
001D 14                DEC     A
001E 602D              JZ      ?C0309
0020 2402              ADD     A,#02H
0022 7030              JNZ     ?C0311
                                           ; SOURCE LINE # 1553
                                           ; SOURCE LINE # 1554
0024         ?C0305:
                                           ; SOURCE LINE # 1555
0024 900000      E     MOV     DPTR,#pProject0
0027 E0                MOVX    A,@DPTR
0028 4402              ORL     A,#02H
002A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1556
002B 22                RET     
                                           ; SOURCE LINE # 1557
002C         ?C0306:
                                           ; SOURCE LINE # 1558
002C 900000      E     MOV     DPTR,#pProject0
002F E0                MOVX    A,@DPTR
0030 900000      R     MOV     DPTR,#nPort
0033 30E30B            JNB     ACC.3,?C0307
                                           ; SOURCE LINE # 1559
                                           ; SOURCE LINE # 1560
0036 E0                MOVX    A,@DPTR
0037 FF                MOV     R7,A
0038 7D01              MOV     R5,#01H
003A 120000      E     LCALL   _Data2Port
                                           ; SOURCE LINE # 1561
003D 7F01              MOV     R7,#01H
                                           ; SOURCE LINE # 1562
003F 8009              SJMP    ?C0494
0041         ?C0307:
                                           ; SOURCE LINE # 1564
                                           ; SOURCE LINE # 1565
0041 E0                MOVX    A,@DPTR
0042 FF                MOV     R7,A
0043 E4                CLR     A
0044 FD                MOV     R5,A
0045 120000      E     LCALL   _Data2Port
                                           ; SOURCE LINE # 1566
0048 7F10              MOV     R7,#010H
004A         ?C0494:
004A 020000      E     LJMP    _RamDebug
                                           ; SOURCE LINE # 1567
                                           ; SOURCE LINE # 1568
                                           ; SOURCE LINE # 1569
004D         ?C0309:
                                           ; SOURCE LINE # 1570
004D 900000      E     MOV     DPTR,#pProject0
0050 E0                MOVX    A,@DPTR
0051 4420              ORL     A,#020H
0053 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1571
                                           ; SOURCE LINE # 1572
                                           ; SOURCE LINE # 1573
                                           ; SOURCE LINE # 1574
                                           ; SOURCE LINE # 1575
0054         ?C0311:
C51 COMPILER V8.12   OEM_6064                                                              07/28/2018 12:03:51 PAGE 90  

0054 22                RET     
             ; FUNCTION _Cmd_7A (END)

             ; FUNCTION _Cmd_7B (BEGIN)
                                           ; SOURCE LINE # 1576
0000 900000      R     MOV     DPTR,#nPort
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
0005 A3                INC     DPTR
0006 ED                MOV     A,R5
0007 F0                MOVX    @DPTR,A
0008 A3                INC     DPTR
0009 EB                MOV     A,R3
000A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1577
                                           ; SOURCE LINE # 1579
000B E4                CLR     A
000C A3                INC     DPTR
000D F0                MOVX    @DPTR,A
000E A3                INC     DPTR
000F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1580
0010 7FAB              MOV     R7,#0ABH
0012 120000      E     LCALL   _RamDebug
                                           ; SOURCE LINE # 1581
0015 900000      R     MOV     DPTR,#nDataH
0018 E0                MOVX    A,@DPTR
0019 FF                MOV     R7,A
001A 120000      E     LCALL   _RamDebug
                                           ; SOURCE LINE # 1582
001D 900000      R     MOV     DPTR,#nDataL
0020 E0                MOVX    A,@DPTR
0021 FF                MOV     R7,A
0022 120000      E     LCALL   _RamDebug
                                           ; SOURCE LINE # 1583
0025 900000      R     MOV     DPTR,#nDataH
0028 E0                MOVX    A,@DPTR
0029 24DF              ADD     A,#0DFH
002B 6016              JZ      ?C0314
002D 14                DEC     A
002E 6026              JZ      ?C0315
0030 2402              ADD     A,#02H
0032 7046              JNZ     ?C0312
                                           ; SOURCE LINE # 1584
                                           ; SOURCE LINE # 1585
0034         ?C0313:
                                           ; SOURCE LINE # 1587
0034 900000      R     MOV     DPTR,#nDataL
0037 E0                MOVX    A,@DPTR
0038 25E0              ADD     A,ACC
003A FE                MOV     R6,A
003B A3                INC     DPTR
003C E0                MOVX    A,@DPTR
003D 4E                ORL     A,R6
003E F0                MOVX    @DPTR,A
003F A3                INC     DPTR
0040 E0                MOVX    A,@DPTR
                                           ; SOURCE LINE # 1588
                                           ; SOURCE LINE # 1589
                                           ; SOURCE LINE # 1590
0041 801E              SJMP    ?C0496
                                           ; SOURCE LINE # 1591
C51 COMPILER V8.12   OEM_6064                                                              07/28/2018 12:03:51 PAGE 91  

0043         ?C0314:
                                           ; SOURCE LINE # 1593
0043 900000      R     MOV     DPTR,#nDataL
0046 E0                MOVX    A,@DPTR
0047 75F020            MOV     B,#020H
004A A4                MUL     AB
004B FF                MOV     R7,A
004C A3                INC     DPTR
004D E0                MOVX    A,@DPTR
004E 45F0              ORL     A,B
0050 F0                MOVX    @DPTR,A
0051 A3                INC     DPTR
0052 E0                MOVX    A,@DPTR
0053 4F                ORL     A,R7
0054         ?C0495:
                                           ; SOURCE LINE # 1594
                                           ; SOURCE LINE # 1595
                                           ; SOURCE LINE # 1596
0054 800B              SJMP    ?C0496
                                           ; SOURCE LINE # 1597
0056         ?C0315:
                                           ; SOURCE LINE # 1599
0056 900000      R     MOV     DPTR,#nDataL
0059 E0                MOVX    A,@DPTR
005A FF                MOV     R7,A
005B A3                INC     DPTR
005C E0                MOVX    A,@DPTR
005D F0                MOVX    @DPTR,A
005E A3                INC     DPTR
005F E0                MOVX    A,@DPTR
0060 4F                ORL     A,R7
0061         ?C0496:
0061 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1600
0062 900000      R     MOV     DPTR,#FUDateTemp
0065 E0                MOVX    A,@DPTR
0066 FF                MOV     R7,A
0067 900000      E     MOV     DPTR,#batteryFirstUsedDateH
006A E0                MOVX    A,@DPTR
006B 4F                ORL     A,R7
006C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1601
006D 900000      R     MOV     DPTR,#FUDateTemp
0070 E0                MOVX    A,@DPTR
0071 A3                INC     DPTR
0072 E0                MOVX    A,@DPTR
0073 FF                MOV     R7,A
0074 900000      E     MOV     DPTR,#batteryFirstUsedDateL
0077 E0                MOVX    A,@DPTR
0078 4F                ORL     A,R7
0079 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1602
                                           ; SOURCE LINE # 1603
                                           ; SOURCE LINE # 1604
                                           ; SOURCE LINE # 1605
007A         ?C0312:
                                           ; SOURCE LINE # 1607
007A 900000      E     MOV     DPTR,#batteryFirstUsedDateH
007D E0                MOVX    A,@DPTR
007E FF                MOV     R7,A
007F 120000      E     LCALL   _RamDebug
                                           ; SOURCE LINE # 1608
C51 COMPILER V8.12   OEM_6064                                                              07/28/2018 12:03:51 PAGE 92  

0082 900000      E     MOV     DPTR,#batteryFirstUsedDateL
0085 E0                MOVX    A,@DPTR
0086 FF                MOV     R7,A
0087 020000      E     LJMP    _RamDebug
             ; FUNCTION _Cmd_7B (END)

             ; FUNCTION _Cmd_7E (BEGIN)
                                           ; SOURCE LINE # 1613
0000 900000      R     MOV     DPTR,#nDataH
0003 ED                MOV     A,R5
0004 F0                MOVX    @DPTR,A
0005 A3                INC     DPTR
0006 EB                MOV     A,R3
0007 F0                MOVX    @DPTR,A
;---- Variable 'nPort' assigned to Register 'R4' ----
0008 CC                XCH     A,R4
0009 EF                MOV     A,R7
000A CC                XCH     A,R4
                                           ; SOURCE LINE # 1614
                                           ; SOURCE LINE # 1616
000B 900000      R     MOV     DPTR,#nDataH
000E E0                MOVX    A,@DPTR
000F FE                MOV     R6,A
0010 A3                INC     DPTR
0011 E0                MOVX    A,@DPTR
0012 FB                MOV     R3,A
0013 EB                MOV     A,R3
0014 F582              MOV     DPL,A
0016 8E83              MOV     DPH,R6
0018 E0                MOVX    A,@DPTR
0019 900000      R     MOV     DPTR,#temp
001C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1617
001D CF                XCH     A,R7
001E EC                MOV     A,R4
001F CF                XCH     A,R7
0020 E0                MOVX    A,@DPTR
0021 FD                MOV     R5,A
0022 020000      E     LJMP    _Data2PortDirect
             ; FUNCTION _Cmd_7E (END)

             ; FUNCTION _Cmd_97 (BEGIN)
                                           ; SOURCE LINE # 1621
0000 900000      R     MOV     DPTR,#nData
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1622
                                           ; SOURCE LINE # 1623
0005 900000      E     MOV     DPTR,#uReserve07
0008 E0                MOVX    A,@DPTR
0009 4410              ORL     A,#010H
000B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1624
000C 7F97              MOV     R7,#097H
000E 120000      E     LCALL   _RamDebug
                                           ; SOURCE LINE # 1625
0011 900000      R     MOV     DPTR,#nData
0014 E0                MOVX    A,@DPTR
0015 FF                MOV     R7,A
0016 120000      E     LCALL   _RamDebug
                                           ; SOURCE LINE # 1626
0019 900000      R     MOV     DPTR,#nData
C51 COMPILER V8.12   OEM_6064                                                              07/28/2018 12:03:51 PAGE 93  

001C E0                MOVX    A,@DPTR
001D 24FE              ADD     A,#0FEH
001F 6013              JZ      ?C0323
0021 04                INC     A
0022 7035              JNZ     ?C0325
                                           ; SOURCE LINE # 1627
                                           ; SOURCE LINE # 1628
                                           ; SOURCE LINE # 1629
                                           ; SOURCE LINE # 1630
0024         ?C0321:
                                           ; SOURCE LINE # 1631
0024 900000      E     MOV     DPTR,#pDevStus
0027 E0                MOVX    A,@DPTR
0028 54F7              ANL     A,#0F7H
002A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1632
002B 900000      E     MOV     DPTR,#StatusKeeper
002E E0                MOVX    A,@DPTR
002F 30E527            JNB     ACC.5,?C0325
                                           ; SOURCE LINE # 1633
                                           ; SOURCE LINE # 1634
                                           ; SOURCE LINE # 1635
                                           ; SOURCE LINE # 1636
                                           ; SOURCE LINE # 1637
                                           ; SOURCE LINE # 1638
                                           ; SOURCE LINE # 1639
0032 800E              SJMP    ?C0497
                                           ; SOURCE LINE # 1640
0034         ?C0323:
                                           ; SOURCE LINE # 1641
0034 900000      E     MOV     DPTR,#pDevStus
0037 E0                MOVX    A,@DPTR
0038 4408              ORL     A,#08H
003A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1642
003B 900000      E     MOV     DPTR,#StatusKeeper
003E E0                MOVX    A,@DPTR
003F 30E517            JNB     ACC.5,?C0325
                                           ; SOURCE LINE # 1643
                                           ; SOURCE LINE # 1644
0042         ?C0497:
0042 900000      E     MOV     DPTR,#uVPCeventSource
0045 7420              MOV     A,#020H
0047 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1645
0048 E4                CLR     A
0049 900000      E     MOV     DPTR,#uVPCeventSource2
004C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1646
004D 7F44              MOV     R7,#044H
004F 120000      E     LCALL   _ECSMI_SCIEvent
                                           ; SOURCE LINE # 1647
0052 900000      E     MOV     DPTR,#StatusKeeper
0055 E0                MOVX    A,@DPTR
0056 54DF              ANL     A,#0DFH
0058 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1648
                                           ; SOURCE LINE # 1649
                                           ; SOURCE LINE # 1650
                                           ; SOURCE LINE # 1651
0059         ?C0325:
0059 22                RET     
C51 COMPILER V8.12   OEM_6064                                                              07/28/2018 12:03:51 PAGE 94  

             ; FUNCTION _Cmd_97 (END)

             ; FUNCTION _Cmd_B0 (BEGIN)
                                           ; SOURCE LINE # 1653
;---- Variable 'nData' assigned to Register 'R5' ----
;---- Variable 'nPort' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 1654
                                           ; SOURCE LINE # 1655
0000 7404              MOV     A,#04H
0002 8D82              MOV     DPL,R5
0004 F583              MOV     DPH,A
0006 E0                MOVX    A,@DPTR
0007 FD                MOV     R5,A
0008 020000      E     LJMP    _Data2PortDirect
             ; FUNCTION _Cmd_B0 (END)

             ; FUNCTION _Cmd_B1 (BEGIN)
                                           ; SOURCE LINE # 1658
;---- Variable 'nData' assigned to Register 'R5' ----
;---- Variable 'nPort' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 1659
                                           ; SOURCE LINE # 1660
0000 ED                MOV     A,R5
0001 244F              ADD     A,#04FH
0003 7008              JNZ     ?C0330
                                           ; SOURCE LINE # 1661
                                           ; SOURCE LINE # 1662
0005         ?C0328:
                                           ; SOURCE LINE # 1663
0005 900000      E     MOV     DPTR,#P80CMOSSts
0008 E0                MOVX    A,@DPTR
0009 FD                MOV     R5,A
000A 120000      E     LCALL   _Data2PortDirect
                                           ; SOURCE LINE # 1664
                                           ; SOURCE LINE # 1665
                                           ; SOURCE LINE # 1666
                                           ; SOURCE LINE # 1667
                                           ; SOURCE LINE # 1669
000D         ?C0330:
000D 22                RET     
             ; FUNCTION _Cmd_B1 (END)

             ; FUNCTION _Cmd_B2 (BEGIN)
                                           ; SOURCE LINE # 1670
0000 900000      R     MOV     DPTR,#nPort
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
;---- Variable 'nData' assigned to Register 'R5' ----
                                           ; SOURCE LINE # 1671
                                           ; SOURCE LINE # 1672
0005 ED                MOV     A,R5
0006 244E              ADD     A,#04EH
0008 704C              JNZ     ?C0334
                                           ; SOURCE LINE # 1673
                                           ; SOURCE LINE # 1674
000A         ?C0332:
                                           ; SOURCE LINE # 1675
000A 900000      R     MOV     DPTR,#nPort
000D E0                MOVX    A,@DPTR
000E FF                MOV     R7,A
000F 900000      E     MOV     DPTR,#P80Index
0012 E0                MOVX    A,@DPTR
C51 COMPILER V8.12   OEM_6064                                                              07/28/2018 12:03:51 PAGE 95  

0013 FD                MOV     R5,A
0014 120000      E     LCALL   _Data2Port
                                           ; SOURCE LINE # 1676
0017 900000      R     MOV     DPTR,#nPort
001A E0                MOVX    A,@DPTR
001B 900000      E     MOV     DPTR,#P80CMOS
                                           ; SOURCE LINE # 1677
001E 120000      R     LCALL   L?0509
0021 900000      E     MOV     DPTR,#P80CMOS+01H
                                           ; SOURCE LINE # 1678
0024 120000      R     LCALL   L?0553
0027 900000      E     MOV     DPTR,#P80CMOS+02H
                                           ; SOURCE LINE # 1679
002A 120000      R     LCALL   L?0509
002D 900000      E     MOV     DPTR,#P80CMOS+03H
                                           ; SOURCE LINE # 1680
0030 120000      R     LCALL   L?0553
0033 900000      E     MOV     DPTR,#P80CMOS+04H
                                           ; SOURCE LINE # 1681
0036 120000      R     LCALL   L?0522
0039 900000      E     MOV     DPTR,#P80CMOS+05H
                                           ; SOURCE LINE # 1682
003C 120000      R     LCALL   L?0522
003F FF                MOV     R7,A
0040 900000      E     MOV     DPTR,#P80CMOS+06H
0043 E0                MOVX    A,@DPTR
0044 FD                MOV     R5,A
0045 120000      E     LCALL   _Data2PortDirect
                                           ; SOURCE LINE # 1684
0048 900000      E     MOV     DPTR,#P80CMOSSts
004B E0                MOVX    A,@DPTR
004C 54FE              ANL     A,#0FEH
004E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1685
004F 900000      E     MOV     DPTR,#ACPI_HOTKEY
0052 E0                MOVX    A,@DPTR
0053 54BF              ANL     A,#0BFH
0055 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1686
                                           ; SOURCE LINE # 1687
                                           ; SOURCE LINE # 1688
                                           ; SOURCE LINE # 1689
                                           ; SOURCE LINE # 1691
0056         ?C0334:
0056 22                RET     
0057         L?0509:
0057 FF                MOV     R7,A
0058 E0                MOVX    A,@DPTR
0059 FD                MOV     R5,A
005A 120000      E     LCALL   _MultiB2Port
005D 900000      R     MOV     DPTR,#nPort
0060 E0                MOVX    A,@DPTR
0061 FF                MOV     R7,A
0062 22                RET     
0063         L?0522:
0063 FF                MOV     R7,A
0064 E0                MOVX    A,@DPTR
0065 FD                MOV     R5,A
0066 120000      E     LCALL   _MultiB2Port
0069 900000      R     MOV     DPTR,#nPort
006C E0                MOVX    A,@DPTR
006D 22                RET     
C51 COMPILER V8.12   OEM_6064                                                              07/28/2018 12:03:51 PAGE 96  

006E         L?0553:
006E E0                MOVX    A,@DPTR
006F FD                MOV     R5,A
0070 120000      E     LCALL   _MultiB2Port
0073 900000      R     MOV     DPTR,#nPort
0076 E0                MOVX    A,@DPTR
0077 22                RET     
             ; FUNCTION _Cmd_B2 (END)

             ; FUNCTION _Cmd_B3 (BEGIN)
                                           ; SOURCE LINE # 1693
0000 900000      R     MOV     DPTR,#nPort
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
;---- Variable 'nDataH' assigned to Register 'R5' ----
;---- Variable 'nDataL' assigned to Register 'R3' ----
                                           ; SOURCE LINE # 1694
                                           ; SOURCE LINE # 1695
0005 E4                CLR     A
0006 900000      E     MOV     DPTR,#cSPIEEPROM
0009 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1697
000A ED                MOV     A,R5
000B 540F              ANL     A,#0FH
000D FD                MOV     R5,A
                                           ; SOURCE LINE # 1698
000E FE                MOV     R6,A
000F 7C00              MOV     R4,#00H
0011 E4                CLR     A
0012 2B                ADD     A,R3
0013 F500        E     MOV     ITempW01+01H,A
0015 EC                MOV     A,R4
0016 3E                ADDC    A,R6
0017 F500        E     MOV     ITempW01,A
                                           ; SOURCE LINE # 1699
0019 7FB3              MOV     R7,#0B3H
001B 120000      E     LCALL   _RamDebug
                                           ; SOURCE LINE # 1700
001E AE00        E     MOV     R6,ITempW01
0020 AF00        E     MOV     R7,ITempW01+01H
0022 8F82              MOV     DPL,R7
0024 8E83              MOV     DPH,R6
0026 E0                MOVX    A,@DPTR
0027 FF                MOV     R7,A
0028 120000      E     LCALL   _RamDebug
                                           ; SOURCE LINE # 1701
002B 900000      R     MOV     DPTR,#nPort
002E E0                MOVX    A,@DPTR
002F FF                MOV     R7,A
0030 AC00        E     MOV     R4,ITempW01
0032 AD00        E     MOV     R5,ITempW01+01H
0034 8D82              MOV     DPL,R5
0036 8C83              MOV     DPH,R4
0038 E0                MOVX    A,@DPTR
0039 FD                MOV     R5,A
003A 020000      E     LJMP    _Data2PortDirect
             ; FUNCTION _Cmd_B3 (END)

             ; FUNCTION Update_EEPROM (BEGIN)
                                           ; SOURCE LINE # 1704
                                           ; SOURCE LINE # 1705
                                           ; SOURCE LINE # 1707
C51 COMPILER V8.12   OEM_6064                                                              07/28/2018 12:03:51 PAGE 97  

0000 7C00        E     MOV     R4,#HIGH _FSCEHighLevel
0002 7D00        E     MOV     R5,#LOW _FSCEHighLevel
0004 7F01              MOV     R7,#01H
0006 120000      E     LCALL   _CacheDma
                                           ; SOURCE LINE # 1709
0009 120000      E     LCALL   DisableAllInterrupt
                                           ; SOURCE LINE # 1710
000C 900000      E     MOV     DPTR,#eEEPROMBank
000F E0                MOVX    A,@DPTR
0010 C3                CLR     C
0011 9404              SUBB    A,#04H
0013 5005              JNC     ?C0336
                                           ; SOURCE LINE # 1711
                                           ; SOURCE LINE # 1713
0015 7DA8              MOV     R5,#0A8H
0017 120000      R     LCALL   L?0533
                                           ; SOURCE LINE # 1714
001A         ?C0336:
                                           ; SOURCE LINE # 1715
001A 900000      E     MOV     DPTR,#eEEPROMBank
001D E0                MOVX    A,@DPTR
001E D3                SETB    C
001F 9403              SUBB    A,#03H
0021 400A              JC      ?C0337
0023 E0                MOVX    A,@DPTR
0024 9408              SUBB    A,#08H
0026 5005              JNC     ?C0337
                                           ; SOURCE LINE # 1716
                                           ; SOURCE LINE # 1718
0028 7DAC              MOV     R5,#0ACH
002A 120000      R     LCALL   L?0533
                                           ; SOURCE LINE # 1719
002D         ?C0337:
                                           ; SOURCE LINE # 1721
002D 900000      E     MOV     DPTR,#eEEPROMBank
0030 E0                MOVX    A,@DPTR
0031 44A8              ORL     A,#0A8H
0033 900000      E     MOV     DPTR,#eEEPROMAddrsss
0036 120000      R     LCALL   L?0501
0039 120000      E     LCALL   _Write_Eflash_1Byte
                                           ; SOURCE LINE # 1723
003C 900000      E     MOV     DPTR,#eEEPROMBank
003F E0                MOVX    A,@DPTR
0040 C3                CLR     C
0041 9404              SUBB    A,#04H
0043 5057              JNC     ?C0338
                                           ; SOURCE LINE # 1724
                                           ; SOURCE LINE # 1725
0045 E4                CLR     A
0046 900000      E     MOV     DPTR,#eFlashA1
0049 F0                MOVX    @DPTR,A
004A         ?C0339:
                                           ; SOURCE LINE # 1726
                                           ; SOURCE LINE # 1727
004A E4                CLR     A
004B 900000      E     MOV     DPTR,#e256ByteCnt
004E F0                MOVX    @DPTR,A
004F         ?C0344:
                                           ; SOURCE LINE # 1729
                                           ; SOURCE LINE # 1730
004F 120000      R     LCALL   L?0505
0052 120000      E     LCALL   _Read_Eflash_Byte
C51 COMPILER V8.12   OEM_6064                                                              07/28/2018 12:03:51 PAGE 98  

                                           ; SOURCE LINE # 1731
0055 120000      R     LCALL   L?0548
0058 F4                CPL     A
0059 7017              JNZ     ?C0345
                                           ; SOURCE LINE # 1732
                                           ; SOURCE LINE # 1733
005B 900000      E     MOV     DPTR,#eFlashA1
005E E0                MOVX    A,@DPTR
005F 44A0              ORL     A,#0A0H
0061 120000      R     LCALL   L?0507
0064 120000      E     LCALL   _Read_Eflash_Byte
                                           ; SOURCE LINE # 1734
0067 120000      R     LCALL   L?0512
006A 44A8              ORL     A,#0A8H
006C 120000      R     LCALL   L?0500
006F 120000      E     LCALL   _Write_Eflash_1Byte
                                           ; SOURCE LINE # 1735
0072         ?C0345:
                                           ; SOURCE LINE # 1736
                                           ; SOURCE LINE # 1737
0072 120000      R     LCALL   L?0519
0075 70D8              JNZ     ?C0344
                                           ; SOURCE LINE # 1738
0077 120000      R     LCALL   L?0510
007A 40CE              JC      ?C0339
007C         ?C0340:
                                           ; SOURCE LINE # 1741
007C 7DA0              MOV     R5,#0A0H
                                           ; SOURCE LINE # 1743
007E 120000      R     LCALL   L?0540
0081         ?C0346:
                                           ; SOURCE LINE # 1744
                                           ; SOURCE LINE # 1745
0081 E4                CLR     A
0082 900000      E     MOV     DPTR,#e256ByteCnt
0085 F0                MOVX    @DPTR,A
0086         ?C0351:
                                           ; SOURCE LINE # 1747
                                           ; SOURCE LINE # 1748
0086 120000      R     LCALL   L?0505
0089 120000      E     LCALL   _Read_Eflash_Byte
                                           ; SOURCE LINE # 1749
008C 120000      R     LCALL   L?0499
008F 120000      E     LCALL   _Write_Eflash_1Byte
                                           ; SOURCE LINE # 1750
                                           ; SOURCE LINE # 1751
0092 120000      R     LCALL   L?0519
0095 70EF              JNZ     ?C0351
                                           ; SOURCE LINE # 1752
0097 120000      R     LCALL   L?0510
009A 40E5              JC      ?C0346
                                           ; SOURCE LINE # 1753
009C         ?C0338:
                                           ; SOURCE LINE # 1754
009C 900000      E     MOV     DPTR,#eEEPROMBank
009F E0                MOVX    A,@DPTR
00A0 D3                SETB    C
00A1 9403              SUBB    A,#03H
00A3 405B              JC      ?C0352
00A5 E0                MOVX    A,@DPTR
00A6 9408              SUBB    A,#08H
00A8 5056              JNC     ?C0352
C51 COMPILER V8.12   OEM_6064                                                              07/28/2018 12:03:51 PAGE 99  

                                           ; SOURCE LINE # 1755
                                           ; SOURCE LINE # 1756
00AA E4                CLR     A
00AB 900000      E     MOV     DPTR,#eFlashA1
00AE F0                MOVX    @DPTR,A
00AF         ?C0353:
                                           ; SOURCE LINE # 1757
                                           ; SOURCE LINE # 1758
00AF E4                CLR     A
00B0 900000      E     MOV     DPTR,#e256ByteCnt
00B3 F0                MOVX    @DPTR,A
00B4         ?C0358:
                                           ; SOURCE LINE # 1760
                                           ; SOURCE LINE # 1761
00B4 900000      E     MOV     DPTR,#eFlashA1
00B7 E0                MOVX    A,@DPTR
00B8 44A4              ORL     A,#0A4H
00BA 120000      R     LCALL   L?0507
00BD 120000      E     LCALL   _Read_Eflash_Byte
                                           ; SOURCE LINE # 1762
00C0 120000      R     LCALL   L?0512
00C3 44AC              ORL     A,#0ACH
00C5 120000      R     LCALL   L?0500
00C8 120000      E     LCALL   _Write_Eflash_1Byte
                                           ; SOURCE LINE # 1763
                                           ; SOURCE LINE # 1764
00CB 120000      R     LCALL   L?0520
00CE 70E4              JNZ     ?C0358
                                           ; SOURCE LINE # 1765
00D0 120000      R     LCALL   L?0511
00D3 40DA              JC      ?C0353
00D5         ?C0354:
                                           ; SOURCE LINE # 1768
00D5 7DA4              MOV     R5,#0A4H
                                           ; SOURCE LINE # 1770
00D7 120000      R     LCALL   L?0540
00DA         ?C0359:
                                           ; SOURCE LINE # 1771
                                           ; SOURCE LINE # 1772
00DA E4                CLR     A
00DB 900000      E     MOV     DPTR,#e256ByteCnt
00DE F0                MOVX    @DPTR,A
00DF         ?C0364:
                                           ; SOURCE LINE # 1774
                                           ; SOURCE LINE # 1775
00DF 900000      E     MOV     DPTR,#eFlashA1
00E2 E0                MOVX    A,@DPTR
00E3 44AC              ORL     A,#0ACH
00E5 120000      R     LCALL   L?0507
00E8 120000      E     LCALL   _Read_Eflash_Byte
                                           ; SOURCE LINE # 1776
00EB 120000      R     LCALL   L?0513
00EE 44A4              ORL     A,#0A4H
00F0 120000      R     LCALL   L?0500
00F3 120000      E     LCALL   _Write_Eflash_1Byte
                                           ; SOURCE LINE # 1777
                                           ; SOURCE LINE # 1778
00F6 120000      R     LCALL   L?0520
00F9 70E4              JNZ     ?C0364
                                           ; SOURCE LINE # 1779
00FB 120000      R     LCALL   L?0511
00FE 40DA              JC      ?C0359
C51 COMPILER V8.12   OEM_6064                                                              07/28/2018 12:03:51 PAGE 100 

                                           ; SOURCE LINE # 1780
0100         ?C0352:
                                           ; SOURCE LINE # 1781
0100 020000      E     LJMP    EnableAllInterrupt
                                           ; SOURCE LINE # 1782
0103         L?0533:
0103 E4                CLR     A
0104 FB                MOV     R3,A
0105 7F01              MOV     R7,#01H
0107 120000      E     LCALL   _Erase_Eflash_1K
010A 22                RET     
010B         L?0540:
010B E4                CLR     A
010C FB                MOV     R3,A
010D 7F01              MOV     R7,#01H
010F 120000      E     LCALL   _Erase_Eflash_1K
0112 E4                CLR     A
0113 900000      E     MOV     DPTR,#eFlashA1
0116 F0                MOVX    @DPTR,A
0117 22                RET     
             ; FUNCTION Update_EEPROM (END)

             ; FUNCTION Update_EEPROMMark (BEGIN)
                                           ; SOURCE LINE # 1785
                                           ; SOURCE LINE # 1786
                                           ; SOURCE LINE # 1787
0000 7C00        E     MOV     R4,#HIGH _FSCEHighLevel
0002 7D00        E     MOV     R5,#LOW _FSCEHighLevel
0004 7F01              MOV     R7,#01H
0006 120000      E     LCALL   _CacheDma
                                           ; SOURCE LINE # 1788
0009 120000      E     LCALL   DisableAllInterrupt
                                           ; SOURCE LINE # 1790
000C 7BFF              MOV     R3,#0FFH
000E 7DA3              MOV     R5,#0A3H
0010 7F01              MOV     R7,#01H
0012 120000      E     LCALL   _Read_Eflash_Byte
0015 EF                MOV     A,R7
0016 F4                CPL     A
0017 702A              JNZ     ?C0366
                                           ; SOURCE LINE # 1791
                                           ; SOURCE LINE # 1793
0019 FB                MOV     R3,A
001A 7DA8              MOV     R5,#0A8H
001C 7F01              MOV     R7,#01H
001E 120000      E     LCALL   _Erase_Eflash_1K
                                           ; SOURCE LINE # 1794
0021 7DA0              MOV     R5,#0A0H
0023 120000      R     LCALL   L?0534
                                           ; SOURCE LINE # 1796
0026 7DAC              MOV     R5,#0ACH
0028 120000      R     LCALL   L?0534
                                           ; SOURCE LINE # 1797
002B E4                CLR     A
002C FB                MOV     R3,A
002D 7DA4              MOV     R5,#0A4H
002F 7F01              MOV     R7,#01H
0031 120000      E     LCALL   _Erase_Eflash_1K
                                           ; SOURCE LINE # 1800
0034 900000      E     MOV     DPTR,#?_Write_Eflash_1Byte?BYTE+03H
0037 74AA              MOV     A,#0AAH
0039 F0                MOVX    @DPTR,A
C51 COMPILER V8.12   OEM_6064                                                              07/28/2018 12:03:51 PAGE 101 

003A 7BFF              MOV     R3,#0FFH
003C 7DA3              MOV     R5,#0A3H
003E 7F01              MOV     R7,#01H
0040 120000      E     LCALL   _Write_Eflash_1Byte
                                           ; SOURCE LINE # 1801
0043         ?C0366:
                                           ; SOURCE LINE # 1804
0043 900000      E     MOV     DPTR,#eEEPROMBank
0046 E0                MOVX    A,@DPTR
0047 44A0              ORL     A,#0A0H
0049 FD                MOV     R5,A
004A 900000      E     MOV     DPTR,#eEEPROMAddrsss
004D 120000      R     LCALL   L?0502
0050 120000      E     LCALL   _Write_Eflash_1Byte
                                           ; SOURCE LINE # 1805
0053 900000      E     MOV     DPTR,#eEEPROMBank
0056 E0                MOVX    A,@DPTR
0057 44A8              ORL     A,#0A8H
0059 FD                MOV     R5,A
005A 900000      E     MOV     DPTR,#eEEPROMAddrsss
005D E0                MOVX    A,@DPTR
005E FB                MOV     R3,A
005F E4                CLR     A
0060 900000      E     MOV     DPTR,#?_Write_Eflash_1Byte?BYTE+03H
0063 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1807
0064 120000      R     LCALL   L?0537
0067 7029              JNZ     ?C0367
0069 900000      E     MOV     DPTR,#eEEPROMAddrsss
006C E0                MOVX    A,@DPTR
006D 64EB              XRL     A,#0EBH
006F 6021              JZ      ?C0367
                                           ; SOURCE LINE # 1808
                                           ; SOURCE LINE # 1809
0071 900000      E     MOV     DPTR,#eEEPROMBank
0074 E0                MOVX    A,@DPTR
0075 44A0              ORL     A,#0A0H
0077 FD                MOV     R5,A
0078 900000      E     MOV     DPTR,#?_Write_Eflash_1Byte?BYTE+03H
007B 74AA              MOV     A,#0AAH
007D F0                MOVX    @DPTR,A
007E 7BEB              MOV     R3,#0EBH
                                           ; SOURCE LINE # 1810
0080 120000      R     LCALL   L?0537
0083 44A8              ORL     A,#0A8H
0085 FD                MOV     R5,A
0086 E4                CLR     A
0087 900000      E     MOV     DPTR,#?_Write_Eflash_1Byte?BYTE+03H
008A F0                MOVX    @DPTR,A
008B 7BEB              MOV     R3,#0EBH
008D 7F01              MOV     R7,#01H
008F 120000      E     LCALL   _Write_Eflash_1Byte
                                           ; SOURCE LINE # 1811
0092         ?C0367:
                                           ; SOURCE LINE # 1813
0092 900000      E     MOV     DPTR,#eUpdateEEPROMCnt
0095 7401              MOV     A,#01H
0097 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1814
0098 900000      E     MOV     DPTR,#cSPIEEPROM
009B E0                MOVX    A,@DPTR
009C 4404              ORL     A,#04H
C51 COMPILER V8.12   OEM_6064                                                              07/28/2018 12:03:51 PAGE 102 

009E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1815
009F 120000      R     LCALL   Update_EEPROMB07
                                           ; SOURCE LINE # 1816
00A2 020000      E     LJMP    EnableAllInterrupt
                                           ; SOURCE LINE # 1817
00A5         L?0534:
00A5 E4                CLR     A
00A6 FB                MOV     R3,A
00A7 7F01              MOV     R7,#01H
00A9 120000      E     LCALL   _Erase_Eflash_1K
00AC 22                RET     
00AD         L?0537:
00AD 7F01              MOV     R7,#01H
00AF 120000      E     LCALL   _Write_Eflash_1Byte
00B2 900000      E     MOV     DPTR,#eEEPROMBank
00B5 E0                MOVX    A,@DPTR
00B6 22                RET     
             ; FUNCTION Update_EEPROMMark (END)

             ; FUNCTION Erase_EEPROMAll (BEGIN)
                                           ; SOURCE LINE # 1819
                                           ; SOURCE LINE # 1820
                                           ; SOURCE LINE # 1821
0000 7C00        E     MOV     R4,#HIGH _FSCEHighLevel
0002 7D00        E     MOV     R5,#LOW _FSCEHighLevel
0004 7F01              MOV     R7,#01H
0006 120000      E     LCALL   _CacheDma
                                           ; SOURCE LINE # 1823
0009 120000      E     LCALL   DisableAllInterrupt
                                           ; SOURCE LINE # 1826
000C 7DA8              MOV     R5,#0A8H
                                           ; SOURCE LINE # 1827
000E 120000      R     LCALL   L?0518
0011 7DA0              MOV     R5,#0A0H
0013 7F01              MOV     R7,#01H
0015 120000      E     LCALL   _Erase_Eflash_1K
                                           ; SOURCE LINE # 1829
0018 7DAC              MOV     R5,#0ACH
                                           ; SOURCE LINE # 1830
001A 120000      R     LCALL   L?0518
001D 7DA4              MOV     R5,#0A4H
001F 7F01              MOV     R7,#01H
0021 120000      E     LCALL   _Erase_Eflash_1K
                                           ; SOURCE LINE # 1832
0024 E4                CLR     A
0025 FB                MOV     R3,A
0026 7DB0              MOV     R5,#0B0H
0028 7F01              MOV     R7,#01H
002A 120000      E     LCALL   _Erase_Eflash_1K
                                           ; SOURCE LINE # 1833
002D E4                CLR     A
002E FB                MOV     R3,A
002F 7DB4              MOV     R5,#0B4H
0031 7F01              MOV     R7,#01H
0033 120000      E     LCALL   _Erase_Eflash_1K
                                           ; SOURCE LINE # 1834
0036 020000      E     LJMP    EnableAllInterrupt
                                           ; SOURCE LINE # 1835
0039         L?0518:
0039 E4                CLR     A
003A FB                MOV     R3,A
C51 COMPILER V8.12   OEM_6064                                                              07/28/2018 12:03:51 PAGE 103 

003B 7F01              MOV     R7,#01H
003D 120000      E     LCALL   _Erase_Eflash_1K
0040 E4                CLR     A
0041 FB                MOV     R3,A
0042 22                RET     
             ; FUNCTION Erase_EEPROMAll (END)

             ; FUNCTION Update_EEPROMB07 (BEGIN)
                                           ; SOURCE LINE # 1837
                                           ; SOURCE LINE # 1838
                                           ; SOURCE LINE # 1839
0000 900000      E     MOV     DPTR,#SysPowState
0003 E0                MOVX    A,@DPTR
0004 7004              JNZ     ?C0372
0006 7F01              MOV     R7,#01H
0008 8002              SJMP    ?C0373
000A         ?C0372:
000A 7F00              MOV     R7,#00H
000C         ?C0373:
000C EF                MOV     A,R7
000D 6411              XRL     A,#011H
000F 7003              JNZ     $ + 5H
0011 020000      R     LJMP    ?C0374
0014 900000      E     MOV     DPTR,#WinFlashMark
0017 E0                MOVX    A,@DPTR
0018 B4FC0B            CJNE    A,#0FCH,?C0370
001B 900000      E     MOV     DPTR,#WinFlashMark1
001E E0                MOVX    A,@DPTR
001F 6455              XRL     A,#055H
0021 7003              JNZ     $ + 5H
0023 020000      R     LJMP    ?C0374
0026         ?C0370:
                                           ; SOURCE LINE # 1842
0026 900000      E     MOV     DPTR,#eUpdateEEPROMCnt
0029 E0                MOVX    A,@DPTR
002A 7003              JNZ     $ + 5H
002C 020000      R     LJMP    ?C0374
002F         ?C0375:
                                           ; SOURCE LINE # 1845
002F 900000      E     MOV     DPTR,#eUpdateEEPROMCnt
0032 E0                MOVX    A,@DPTR
0033 14                DEC     A
0034 F0                MOVX    @DPTR,A
0035         ?C0376:
                                           ; SOURCE LINE # 1847
0035 900000      E     MOV     DPTR,#eUpdateEEPROMCnt
0038 E0                MOVX    A,@DPTR
0039 6003              JZ      $ + 5H
003B 020000      R     LJMP    ?C0374
003E         ?C0377:
                                           ; SOURCE LINE # 1850
003E 7C00        E     MOV     R4,#HIGH _FSCEHighLevel
0040 7D00        E     MOV     R5,#LOW _FSCEHighLevel
0042 7F01              MOV     R7,#01H
0044 120000      E     LCALL   _CacheDma
                                           ; SOURCE LINE # 1852
0047 120000      E     LCALL   DisableAllInterrupt
                                           ; SOURCE LINE # 1855
004A 120000      E     LCALL   ResetInternalWDT
                                           ; SOURCE LINE # 1860
004D E4                CLR     A
004E 900000      E     MOV     DPTR,#eFlashA1
C51 COMPILER V8.12   OEM_6064                                                              07/28/2018 12:03:51 PAGE 104 

0051 F0                MOVX    @DPTR,A
0052         ?C0378:
                                           ; SOURCE LINE # 1861
                                           ; SOURCE LINE # 1862
0052 E4                CLR     A
0053 900000      E     MOV     DPTR,#e256ByteCnt
0056 F0                MOVX    @DPTR,A
0057         ?C0383:
                                           ; SOURCE LINE # 1864
                                           ; SOURCE LINE # 1865
0057 120000      R     LCALL   L?0506
005A 120000      E     LCALL   _Read_Eflash_Byte
                                           ; SOURCE LINE # 1866
005D 120000      R     LCALL   L?0548
0060 6012              JZ      ?C0384
                                           ; SOURCE LINE # 1867
                                           ; SOURCE LINE # 1868
0062 900000      E     MOV     DPTR,#eFlashA1
0065 E0                MOVX    A,@DPTR
0066 44B0              ORL     A,#0B0H
0068 120000      R     LCALL   L?0507
006B 120000      E     LCALL   _Read_Eflash_Byte
                                           ; SOURCE LINE # 1869
006E 120000      R     LCALL   L?0499
0071 120000      E     LCALL   _Write_Eflash_1Byte
                                           ; SOURCE LINE # 1870
0074         ?C0384:
                                           ; SOURCE LINE # 1872
0074 900000      E     MOV     DPTR,#eFlashA1
0077 E0                MOVX    A,@DPTR
0078 44AC              ORL     A,#0ACH
007A 120000      R     LCALL   L?0507
007D 120000      E     LCALL   _Read_Eflash_Byte
                                           ; SOURCE LINE # 1873
0080 120000      R     LCALL   L?0549
0083 6017              JZ      ?C0385
                                           ; SOURCE LINE # 1874
                                           ; SOURCE LINE # 1875
0085 900000      E     MOV     DPTR,#eFlashA1
0088 E0                MOVX    A,@DPTR
0089 44B4              ORL     A,#0B4H
008B 120000      R     LCALL   L?0507
008E 120000      E     LCALL   _Read_Eflash_Byte
                                           ; SOURCE LINE # 1876
0091 120000      R     LCALL   L?0513
0094 44A4              ORL     A,#0A4H
0096 120000      R     LCALL   L?0500
0099 120000      E     LCALL   _Write_Eflash_1Byte
                                           ; SOURCE LINE # 1877
009C         ?C0385:
                                           ; SOURCE LINE # 1878
                                           ; SOURCE LINE # 1879
009C 120000      R     LCALL   L?0520
009F 70B6              JNZ     ?C0383
                                           ; SOURCE LINE # 1880
00A1 120000      R     LCALL   L?0511
00A4 40AC              JC      ?C0378
00A6         ?C0379:
                                           ; SOURCE LINE # 1883
00A6 7DB0              MOV     R5,#0B0H
00A8 120000      R     LCALL   L?0542
                                           ; SOURCE LINE # 1884
C51 COMPILER V8.12   OEM_6064                                                              07/28/2018 12:03:51 PAGE 105 

00AB 7DB4              MOV     R5,#0B4H
00AD 120000      R     LCALL   L?0542
                                           ; SOURCE LINE # 1887
00B0 E4                CLR     A
00B1 900000      E     MOV     DPTR,#eFlashA1
00B4 F0                MOVX    @DPTR,A
00B5         ?C0386:
                                           ; SOURCE LINE # 1888
                                           ; SOURCE LINE # 1889
00B5 E4                CLR     A
00B6 900000      E     MOV     DPTR,#e256ByteCnt
00B9 F0                MOVX    @DPTR,A
00BA         ?C0391:
                                           ; SOURCE LINE # 1891
                                           ; SOURCE LINE # 1892
00BA 900000      E     MOV     DPTR,#eFlashA1
00BD E0                MOVX    A,@DPTR
00BE 44A0              ORL     A,#0A0H
00C0 120000      R     LCALL   L?0507
00C3 120000      E     LCALL   _Read_Eflash_Byte
                                           ; SOURCE LINE # 1893
00C6 120000      R     LCALL   L?0513
00C9 44B0              ORL     A,#0B0H
00CB 120000      R     LCALL   L?0500
00CE 120000      E     LCALL   _Write_Eflash_1Byte
                                           ; SOURCE LINE # 1895
00D1 900000      E     MOV     DPTR,#eFlashA1
00D4 E0                MOVX    A,@DPTR
00D5 44A4              ORL     A,#0A4H
00D7 120000      R     LCALL   L?0507
00DA 120000      E     LCALL   _Read_Eflash_Byte
                                           ; SOURCE LINE # 1896
00DD 120000      R     LCALL   L?0513
00E0 44B4              ORL     A,#0B4H
00E2 120000      R     LCALL   L?0500
00E5 120000      E     LCALL   _Write_Eflash_1Byte
                                           ; SOURCE LINE # 1898
                                           ; SOURCE LINE # 1900
00E8 120000      R     LCALL   L?0520
00EB 70CD              JNZ     ?C0391
                                           ; SOURCE LINE # 1901
00ED 120000      R     LCALL   L?0511
00F0 40C3              JC      ?C0386
00F2         ?C0387:
                                           ; SOURCE LINE # 1904
00F2 E4                CLR     A
00F3 FB                MOV     R3,A
00F4 7DA0              MOV     R5,#0A0H
00F6 7F01              MOV     R7,#01H
00F8 120000      E     LCALL   _Erase_Eflash_1K
                                           ; SOURCE LINE # 1907
00FB 900000      E     MOV     DPTR,#cSPIEEPROM
00FE E0                MOVX    A,@DPTR
00FF 54FB              ANL     A,#0FBH
0101 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1909
0102 120000      E     LCALL   EnableAllInterrupt
                                           ; SOURCE LINE # 1910
0105         ?C0374:
0105 22                RET     
0106         L?0542:
0106 E4                CLR     A
C51 COMPILER V8.12   OEM_6064                                                              07/28/2018 12:03:51 PAGE 106 

0107 FB                MOV     R3,A
0108 7F01              MOV     R7,#01H
010A 120000      E     LCALL   _Erase_Eflash_1K
010D 22                RET     
             ; FUNCTION Update_EEPROMB07 (END)

             ; FUNCTION Chk_pDevStus (BEGIN)
                                           ; SOURCE LINE # 1913
                                           ; SOURCE LINE # 1914
                                           ; SOURCE LINE # 1915
0000 900000      E     MOV     DPTR,#LENOVOPMFW_Temp
0003 E0                MOVX    A,@DPTR
0004 20E448            JB      ACC.4,?C0395
                                           ; SOURCE LINE # 1916
                                           ; SOURCE LINE # 1917
0007 120000      R     LCALL   L?0550
000A 7043              JNZ     ?C0395
000C 900000      E     MOV     DPTR,#eUpdateEEPROMCnt
000F E0                MOVX    A,@DPTR
0010 703D              JNZ     ?C0395
0012 120000      R     LCALL   L?0538
0015 6038              JZ      ?C0395
                                           ; SOURCE LINE # 1918
                                           ; SOURCE LINE # 1919
0017 7BE1              MOV     R3,#0E1H
0019 7DB7              MOV     R5,#0B7H
001B 7F01              MOV     R7,#01H
001D 120000      E     LCALL   _Read_Eflash_Byte
0020 900000      E     MOV     DPTR,#eEEPROMData
0023 EF                MOV     A,R7
0024 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1921
0025 900000      E     MOV     DPTR,#pDevStus
0028 E0                MOVX    A,@DPTR
0029 FF                MOV     R7,A
002A 900000      E     MOV     DPTR,#eEEPROMData
002D E0                MOVX    A,@DPTR
002E 6F                XRL     A,R7
002F 601E              JZ      ?C0395
                                           ; SOURCE LINE # 1922
                                           ; SOURCE LINE # 1923
0031 7FA1              MOV     R7,#0A1H
0033 120000      E     LCALL   _RamDebug
                                           ; SOURCE LINE # 1924
0036 900000      E     MOV     DPTR,#pDevStus
0039 E0                MOVX    A,@DPTR
003A FF                MOV     R7,A
003B 120000      E     LCALL   _RamDebug
                                           ; SOURCE LINE # 1926
                                           ; SOURCE LINE # 1927
                                           ; SOURCE LINE # 1928
003E 120000      R     LCALL   L?0526
0041 74E1              MOV     A,#0E1H
0043 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1929
0044 900000      E     MOV     DPTR,#pDevStus
0047 E0                MOVX    A,@DPTR
0048 900000      E     MOV     DPTR,#eEEPROMData
004B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1931
004C 120000      R     LCALL   Update_EEPROMMark
                                           ; SOURCE LINE # 1934
C51 COMPILER V8.12   OEM_6064                                                              07/28/2018 12:03:51 PAGE 107 

                                           ; SOURCE LINE # 1935
                                           ; SOURCE LINE # 1936
                                           ; SOURCE LINE # 1937
004F         ?C0395:
004F 22                RET     
             ; FUNCTION Chk_pDevStus (END)

             ; FUNCTION Chk_KB_Backlight (BEGIN)
                                           ; SOURCE LINE # 1939
                                           ; SOURCE LINE # 1940
                                           ; SOURCE LINE # 1941
0000 900000      E     MOV     DPTR,#LENOVOPMFW_Temp
0003 E0                MOVX    A,@DPTR
0004 20E45B            JB      ACC.4,?C0401
                                           ; SOURCE LINE # 1942
                                           ; SOURCE LINE # 1943
0007 120000      R     LCALL   L?0550
000A 7056              JNZ     ?C0401
000C 900000      E     MOV     DPTR,#eUpdateEEPROMCnt
000F E0                MOVX    A,@DPTR
0010 7050              JNZ     ?C0401
0012 120000      R     LCALL   L?0538
0015 604B              JZ      ?C0401
0017 900000      E     MOV     DPTR,#LED_KB_PWM_Count
001A E0                MOVX    A,@DPTR
001B 20E744            JB      ACC.7,?C0401
                                           ; SOURCE LINE # 1944
                                           ; SOURCE LINE # 1945
001E 900000      E     MOV     DPTR,#UpdateLEDBL_delay
0021 E0                MOVX    A,@DPTR
0022 603E              JZ      ?C0401
                                           ; SOURCE LINE # 1946
                                           ; SOURCE LINE # 1947
0024 E0                MOVX    A,@DPTR
0025 14                DEC     A
0026 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1948
0027 E0                MOVX    A,@DPTR
0028 7038              JNZ     ?C0401
                                           ; SOURCE LINE # 1949
                                           ; SOURCE LINE # 1950
002A 7BE2              MOV     R3,#0E2H
002C 7DB7              MOV     R5,#0B7H
002E 7F01              MOV     R7,#01H
0030 120000      E     LCALL   _Read_Eflash_Byte
0033 900000      E     MOV     DPTR,#eEEPROMData
0036 EF                MOV     A,R7
0037 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1951
0038 900000      E     MOV     DPTR,#LED_KB_PWM_Step
003B E0                MOVX    A,@DPTR
003C FF                MOV     R7,A
003D 900000      E     MOV     DPTR,#eEEPROMData
0040 E0                MOVX    A,@DPTR
0041 6F                XRL     A,R7
0042 601E              JZ      ?C0401
                                           ; SOURCE LINE # 1952
                                           ; SOURCE LINE # 1953
0044 7FBB              MOV     R7,#0BBH
0046 120000      E     LCALL   _RamDebug
                                           ; SOURCE LINE # 1954
0049 900000      E     MOV     DPTR,#LED_KB_PWM_Step
C51 COMPILER V8.12   OEM_6064                                                              07/28/2018 12:03:51 PAGE 108 

004C E0                MOVX    A,@DPTR
004D FF                MOV     R7,A
004E 120000      E     LCALL   _RamDebug
                                           ; SOURCE LINE # 1956
                                           ; SOURCE LINE # 1957
                                           ; SOURCE LINE # 1958
0051 120000      R     LCALL   L?0526
0054 74E2              MOV     A,#0E2H
0056 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1959
0057 900000      E     MOV     DPTR,#LED_KB_PWM_Step
005A E0                MOVX    A,@DPTR
005B 900000      E     MOV     DPTR,#eEEPROMData
005E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1960
005F 120000      R     LCALL   Update_EEPROMMark
                                           ; SOURCE LINE # 1963
                                           ; SOURCE LINE # 1964
                                           ; SOURCE LINE # 1965
                                           ; SOURCE LINE # 1966
                                           ; SOURCE LINE # 1967
                                           ; SOURCE LINE # 1968
0062         ?C0401:
0062 22                RET     
             ; FUNCTION Chk_KB_Backlight (END)

             ; FUNCTION Chk_UEFIStatus (BEGIN)
                                           ; SOURCE LINE # 1970
                                           ; SOURCE LINE # 1971
                                           ; SOURCE LINE # 1972
0000 900000      E     MOV     DPTR,#LENOVOPMFW_Temp
0003 E0                MOVX    A,@DPTR
0004 20E445            JB      ACC.4,?C0405
                                           ; SOURCE LINE # 1973
                                           ; SOURCE LINE # 1974
0007 120000      R     LCALL   L?0551
000A 7040              JNZ     ?C0405
000C 900000      E     MOV     DPTR,#eUpdateEEPROMCnt
000F E0                MOVX    A,@DPTR
0010 703A              JNZ     ?C0405
0012 120000      R     LCALL   L?0539
0015 6035              JZ      ?C0405
                                           ; SOURCE LINE # 1975
                                           ; SOURCE LINE # 1976
0017 7BF1              MOV     R3,#0F1H
0019 7DB0              MOV     R5,#0B0H
001B 7F01              MOV     R7,#01H
001D 120000      E     LCALL   _Read_Eflash_Byte
0020 900000      E     MOV     DPTR,#eEEPROMData
0023 EF                MOV     A,R7
0024 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1977
0025 900000      E     MOV     DPTR,#CURRENT_STATUS
0028 E0                MOVX    A,@DPTR
0029 54C0              ANL     A,#0C0H
002B FF                MOV     R7,A
002C F0                MOVX    @DPTR,A
002D 900000      E     MOV     DPTR,#eEEPROMData
0030 E0                MOVX    A,@DPTR
0031 54C0              ANL     A,#0C0H
0033 F0                MOVX    @DPTR,A
0034 6F                XRL     A,R7
C51 COMPILER V8.12   OEM_6064                                                              07/28/2018 12:03:51 PAGE 109 

0035 6015              JZ      ?C0405
                                           ; SOURCE LINE # 1978
                                           ; SOURCE LINE # 1980
0037 E4                CLR     A
                                           ; SOURCE LINE # 1981
0038 120000      R     LCALL   L?0527
003B 74F1              MOV     A,#0F1H
003D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1982
003E 900000      E     MOV     DPTR,#CURRENT_STATUS
0041 E0                MOVX    A,@DPTR
0042 54C0              ANL     A,#0C0H
0044 F0                MOVX    @DPTR,A
0045 900000      E     MOV     DPTR,#eEEPROMData
0048 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1983
0049 120000      R     LCALL   Update_EEPROMMark
                                           ; SOURCE LINE # 1986
                                           ; SOURCE LINE # 1987
                                           ; SOURCE LINE # 1988
                                           ; SOURCE LINE # 1989
004C         ?C0405:
004C 22                RET     
             ; FUNCTION Chk_UEFIStatus (END)

             ; FUNCTION Clr_UEFIStatus (BEGIN)
                                           ; SOURCE LINE # 1990
                                           ; SOURCE LINE # 1991
                                           ; SOURCE LINE # 1992
0000 900000      E     MOV     DPTR,#LENOVOPMFW_Temp
0003 E0                MOVX    A,@DPTR
0004 20E442            JB      ACC.4,?C0409
                                           ; SOURCE LINE # 1993
                                           ; SOURCE LINE # 1994
0007 900000      E     MOV     DPTR,#eUpdateEEPROMCnt
000A E0                MOVX    A,@DPTR
000B 703C              JNZ     ?C0409
000D 120000      R     LCALL   L?0539
0010 6037              JZ      ?C0409
                                           ; SOURCE LINE # 1995
                                           ; SOURCE LINE # 1996
0012 7BF1              MOV     R3,#0F1H
0014 7DB0              MOV     R5,#0B0H
0016 7F01              MOV     R7,#01H
0018 120000      E     LCALL   _Read_Eflash_Byte
001B 900000      E     MOV     DPTR,#eEEPROMData
001E EF                MOV     A,R7
001F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1997
                                           ; SOURCE LINE # 1998
0020 120000      R     LCALL   L?0536
0023 FF                MOV     R7,A
0024 900000      E     MOV     DPTR,#eEEPROMData
0027 E0                MOVX    A,@DPTR
0028 54C0              ANL     A,#0C0H
002A FE                MOV     R6,A
002B EF                MOV     A,R7
002C 4E                ORL     A,R6
002D 900000      E     MOV     DPTR,#CURRENT_STATUS
0030 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1999
0031 900000      E     MOV     DPTR,#eEEPROMData
C51 COMPILER V8.12   OEM_6064                                                              07/28/2018 12:03:51 PAGE 110 

0034 E0                MOVX    A,@DPTR
0035 64C0              XRL     A,#0C0H
0037 6010              JZ      ?C0409
                                           ; SOURCE LINE # 2000
                                           ; SOURCE LINE # 2002
0039 E4                CLR     A
                                           ; SOURCE LINE # 2003
003A 120000      R     LCALL   L?0527
003D 74F1              MOV     A,#0F1H
003F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2004
0040 900000      E     MOV     DPTR,#eEEPROMData
0043 74C0              MOV     A,#0C0H
0045 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2005
0046 120000      R     LCALL   Update_EEPROMMark
                                           ; SOURCE LINE # 2009
                                           ; SOURCE LINE # 2010
                                           ; SOURCE LINE # 2012
                                           ; SOURCE LINE # 2013
0049         ?C0409:
0049 22                RET     
             ; FUNCTION Clr_UEFIStatus (END)

             ; FUNCTION Update_16ByteEEPROM (BEGIN)
                                           ; SOURCE LINE # 2015
                                           ; SOURCE LINE # 2016
                                           ; SOURCE LINE # 2019
0000 7C00        E     MOV     R4,#HIGH _FSCEHighLevel
0002 7D00        E     MOV     R5,#LOW _FSCEHighLevel
0004 7F01              MOV     R7,#01H
0006 120000      E     LCALL   _CacheDma
                                           ; SOURCE LINE # 2020
0009 120000      E     LCALL   DisableAllInterrupt
                                           ; SOURCE LINE # 2022
000C 7BF0              MOV     R3,#0F0H
000E 7DBB              MOV     R5,#0BBH
0010 7F01              MOV     R7,#01H
0012 120000      E     LCALL   _Read_Eflash_Byte
0015 EF                MOV     A,R7
0016 F4                CPL     A
0017 6009              JZ      ?C0410
                                           ; SOURCE LINE # 2023
                                           ; SOURCE LINE # 2025
0019 E4                CLR     A
001A FB                MOV     R3,A
001B 7DB8              MOV     R5,#0B8H
001D 7F01              MOV     R7,#01H
001F 120000      E     LCALL   _Erase_Eflash_1K
                                           ; SOURCE LINE # 2026
0022         ?C0410:
                                           ; SOURCE LINE # 2028
0022 E4                CLR     A
0023 900000      R     MOV     DPTR,#i
0026 F0                MOVX    @DPTR,A
0027         ?C0411:
                                           ; SOURCE LINE # 2029
                                           ; SOURCE LINE # 2030
0027 E4                CLR     A
0028 900000      R     MOV     DPTR,#j
002B F0                MOVX    @DPTR,A
002C         ?C0414:
C51 COMPILER V8.12   OEM_6064                                                              07/28/2018 12:03:51 PAGE 111 

002C 900000      R     MOV     DPTR,#j
002F E0                MOVX    A,@DPTR
0030 FF                MOV     R7,A
0031 C3                CLR     C
0032 9410              SUBB    A,#010H
0034 501A              JNC     ?C0415
                                           ; SOURCE LINE # 2031
                                           ; SOURCE LINE # 2032
0036 900000      R     MOV     DPTR,#i
0039 120000      R     LCALL   L?0541
003C 120000      E     LCALL   _Read_Eflash_Byte
003F 900000      E     MOV     DPTR,#eEEPROMData
0042 EF                MOV     A,R7
0043 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2033
0044 E0                MOVX    A,@DPTR
0045 F4                CPL     A
0046 6008              JZ      ?C0415
                                           ; SOURCE LINE # 2034
                                           ; SOURCE LINE # 2035
0048         ?C0416:
0048 900000      R     MOV     DPTR,#j
004B E0                MOVX    A,@DPTR
004C 04                INC     A
004D F0                MOVX    @DPTR,A
004E 80DC              SJMP    ?C0414
0050         ?C0415:
                                           ; SOURCE LINE # 2036
0050 900000      E     MOV     DPTR,#eEEPROMData
0053 E0                MOVX    A,@DPTR
0054 F4                CPL     A
0055 600C              JZ      ?C0412
                                           ; SOURCE LINE # 2037
                                           ; SOURCE LINE # 2038
0057         ?C0413:
0057 900000      R     MOV     DPTR,#i
005A E0                MOVX    A,@DPTR
005B 04                INC     A
005C F0                MOVX    @DPTR,A
005D E0                MOVX    A,@DPTR
005E C3                CLR     C
005F 9404              SUBB    A,#04H
0061 40C4              JC      ?C0411
0063         ?C0412:
                                           ; SOURCE LINE # 2041
0063 900000      R     MOV     DPTR,#i
0066 E0                MOVX    A,@DPTR
0067 24B8              ADD     A,#0B8H
0069 FD                MOV     R5,A
006A A3                INC     DPTR
006B E0                MOVX    A,@DPTR
006C FF                MOV     R7,A
006D C4                SWAP    A
006E 54F0              ANL     A,#0F0H
0070 FB                MOV     R3,A
0071 EF                MOV     A,R7
0072 2450              ADD     A,#050H
0074 900000      E     MOV     DPTR,#?_Write_Eflash_1Byte?BYTE+03H
0077 F0                MOVX    @DPTR,A
0078 7F01              MOV     R7,#01H
                                           ; SOURCE LINE # 2043
007A 120000      R     LCALL   L?0504
C51 COMPILER V8.12   OEM_6064                                                              07/28/2018 12:03:51 PAGE 112 

007D 2404              ADD     A,#04H
007F FB                MOV     R3,A
0080 900000      E     MOV     DPTR,#pLastSID
0083 120000      R     LCALL   L?0503
                                           ; SOURCE LINE # 2045
0086 120000      R     LCALL   L?0504
0089 2406              ADD     A,#06H
008B FB                MOV     R3,A
008C 900000      E     MOV     DPTR,#TEMP_Buff_3
008F 120000      R     LCALL   L?0503
                                           ; SOURCE LINE # 2047
0092 120000      R     LCALL   L?0508
0095 2408              ADD     A,#08H
0097 FB                MOV     R3,A
0098 900000      E     MOV     DPTR,#VGA_TBuff3
009B 120000      R     LCALL   L?0503
009E 120000      E     LCALL   _Write_Eflash_1Byte
                                           ; SOURCE LINE # 2050
00A1 900000      E     MOV     DPTR,#pLastSID
00A4 E0                MOVX    A,@DPTR
00A5 6436              XRL     A,#036H
00A7 7039              JNZ     ?C0419
                                           ; SOURCE LINE # 2051
                                           ; SOURCE LINE # 2052
00A9 120000      R     LCALL   L?0515
00AC 240A              ADD     A,#0AH
00AE FB                MOV     R3,A
00AF 900000      E     MOV     DPTR,#PowerOVP_REG
00B2 120000      R     LCALL   L?0503
                                           ; SOURCE LINE # 2053
00B5 120000      R     LCALL   L?0508
00B8 240B              ADD     A,#0BH
00BA FB                MOV     R3,A
00BB 900000      E     MOV     DPTR,#PowerUVP_REG
00BE 120000      R     LCALL   L?0503
00C1 120000      E     LCALL   _Write_Eflash_1Byte
                                           ; SOURCE LINE # 2054
00C4 120000      R     LCALL   L?0515
00C7 240C              ADD     A,#0CH
00C9 FB                MOV     R3,A
00CA 900000      E     MOV     DPTR,#PowerOCP_REG
00CD 120000      R     LCALL   L?0503
00D0 120000      E     LCALL   _Write_Eflash_1Byte
                                           ; SOURCE LINE # 2056
00D3 120000      R     LCALL   L?0516
00D6 240D              ADD     A,#0DH
00D8 FB                MOV     R3,A
00D9 900000      E     MOV     DPTR,#PowerOTP_REG
00DC 120000      R     LCALL   L?0503
00DF 120000      E     LCALL   _Write_Eflash_1Byte
                                           ; SOURCE LINE # 2058
00E2         ?C0419:
                                           ; SOURCE LINE # 2059
00E2 020000      E     LJMP    EnableAllInterrupt
                                           ; SOURCE LINE # 2060
00E5         L?0504:
00E5 120000      E     LCALL   _Write_Eflash_1Byte
00E8 900000      R     MOV     DPTR,#i
00EB E0                MOVX    A,@DPTR
00EC 24B8              ADD     A,#0B8H
00EE FD                MOV     R5,A
00EF A3                INC     DPTR
C51 COMPILER V8.12   OEM_6064                                                              07/28/2018 12:03:51 PAGE 113 

00F0 E0                MOVX    A,@DPTR
00F1 C4                SWAP    A
00F2 54F0              ANL     A,#0F0H
00F4 22                RET     
00F5         L?0508:
00F5 120000      E     LCALL   _Write_Eflash_1Byte
00F8 900000      R     MOV     DPTR,#i
00FB E0                MOVX    A,@DPTR
00FC 24B8              ADD     A,#0B8H
00FE FD                MOV     R5,A
00FF A3                INC     DPTR
0100 E0                MOVX    A,@DPTR
0101 C4                SWAP    A
0102 54F0              ANL     A,#0F0H
0104 22                RET     
             ; FUNCTION Update_16ByteEEPROM (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   5362    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----      47
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
